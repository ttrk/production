
!!!!! WARNING: The BMTF Packer returns the entire detector information in one fed (# 1376), instead of the real BMTF which owns 2 feds (1376, 1377)  !!!!!

import FWCore.ParameterSet.Config as cms

process = cms.Process("HLT")

process.source = cms.Source("PoolSource",
    dropDescendantsOfDroppedBranches = cms.untracked.bool(False),
    fileNames = cms.untracked.vstring('file:step_GEN_SIM.root'),
    inputCommands = cms.untracked.vstring('keep *', 
        'drop *_genParticles_*_*', 
        'drop *_genParticlesForJets_*_*', 
        'drop *_kt4GenJets_*_*', 
        'drop *_kt6GenJets_*_*', 
        'drop *_iterativeCone5GenJets_*_*', 
        'drop *_ak4GenJets_*_*', 
        'drop *_ak7GenJets_*_*', 
        'drop *_ak8GenJets_*_*', 
        'drop *_ak4GenJetsNoNu_*_*', 
        'drop *_ak8GenJetsNoNu_*_*', 
        'drop *_genCandidatesForMET_*_*', 
        'drop *_genParticlesForMETAllVisible_*_*', 
        'drop *_genMetCalo_*_*', 
        'drop *_genMetCaloAndNonPrompt_*_*', 
        'drop *_genMetTrue_*_*', 
        'drop *_genMetIC5GenJs_*_*'),
    secondaryFileNames = cms.untracked.vstring()
)
process.AODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(31457280),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'keep ClusterSummary_clusterSummaryProducer_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*', 
        'keep *_castorreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep HcalUnpackerReport_castorDigis_*_*', 
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*', 
        'keep HcalUnpackerReport_hcalDigis_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep recoCaloClusters_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*', 
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*', 
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*', 
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*', 
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*', 
        'keep recoTracks_GsfGlobalElectronTest_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTracks_ctfPixelLess_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep *_generalTracks_MVAVals_*', 
        'keep *_ak4CaloJets_*_*', 
        'keep *_ak4PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHSSoftDrop_*_*', 
        'keep *_cmsTopTagPFJetsCHS_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetID_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRhoAll_*_*', 
        'keep *_fixedGridRhoFastjetAll_*_*', 
        'keep *_fixedGridRhoFastjetAllTmp_*_*', 
        'keep *_fixedGridRhoFastjetCentral_*_*', 
        'keep *_fixedGridRhoFastjetAllCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*', 
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*', 
        'drop doubles_*Jets_rhos_*', 
        'drop doubles_*Jets_sigmas_*', 
        'keep *_ak8PFJetsCHSSoftDropMass_*_*', 
        'keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'drop recoHcalNoiseRBXs_*_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep recoGlobalHaloData_GlobalHaloData_*_*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*', 
        'keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*', 
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*', 
        'keep recoPFTaus_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSum_*_*', 
        'keep *_hpsPFTauPUcorrPtSum_*_*', 
        'keep *_hpsPFTauChargedIsoPtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*', 
        'keep *_hpsPFTauFootprintCorrection_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*', 
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectrons_gedGsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep *_egmGedGsfElectronPFIsolation_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'drop *_egmGsfElectronIDs_*_*', 
        'drop *_egmPhotonIDs_*_*', 
        'keep recoPhotonCores_gedPhotonCore_*_*', 
        'keep recoPhotons_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'drop *_gedPhotons_valMapPFEgammaCandToPhoton_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_ootPhotonCore_*_*', 
        'keep recoPhotons_ootPhotons_*_*', 
        'keep recoConversions_conversions_*_*', 
        'keep recoConversions_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoConversions_allConversionsOldEG_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'drop *_pfElectronTranslator_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*', 
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_particleFlow_muons_*', 
        'keep recoCaloClusters_pfElectronTranslator_*_*', 
        'keep recoPreshowerClusters_pfElectronTranslator_*_*', 
        'keep recoSuperClusters_pfElectronTranslator_*_*', 
        'keep recoCaloClusters_pfPhotonTranslator_*_*', 
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*', 
        'keep recoSuperClusters_pfPhotonTranslator_*_*', 
        'keep recoPhotons_pfPhotonTranslator_*_*', 
        'keep recoPhotonCores_pfPhotonTranslator_*_*', 
        'keep recoConversions_pfPhotonTranslator_*_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_hlt*_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*', 
        'keep L1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep BeamSpotOnlines_scalersRawToDigi_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_tcdsDigis_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep *_pfIsolatedElectronsEI_*_*', 
        'keep *_pfIsolatedMuonsEI_*_*', 
        'keep recoPFJets_pfJetsEI_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*', 
        'keep recoPFTaus_pfTausEI_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*', 
        'keep TotemFEDInfos_totemRPRawToDigi_*_*', 
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*', 
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*', 
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*', 
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*', 
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*', 
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*', 
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*', 
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*', 
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*', 
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*' ) )
)

process.AODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(31457280),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'keep ClusterSummary_clusterSummaryProducer_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*', 
        'keep *_castorreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep HcalUnpackerReport_castorDigis_*_*', 
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*', 
        'keep HcalUnpackerReport_hcalDigis_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep recoCaloClusters_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*', 
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*', 
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*', 
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*', 
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*', 
        'keep recoTracks_GsfGlobalElectronTest_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTracks_ctfPixelLess_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep *_generalTracks_MVAVals_*', 
        'keep *_ak4CaloJets_*_*', 
        'keep *_ak4PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHSSoftDrop_*_*', 
        'keep *_cmsTopTagPFJetsCHS_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetID_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRhoAll_*_*', 
        'keep *_fixedGridRhoFastjetAll_*_*', 
        'keep *_fixedGridRhoFastjetAllTmp_*_*', 
        'keep *_fixedGridRhoFastjetCentral_*_*', 
        'keep *_fixedGridRhoFastjetAllCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*', 
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*', 
        'drop doubles_*Jets_rhos_*', 
        'drop doubles_*Jets_sigmas_*', 
        'keep *_ak8PFJetsCHSSoftDropMass_*_*', 
        'keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'drop recoHcalNoiseRBXs_*_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep recoGlobalHaloData_GlobalHaloData_*_*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*', 
        'keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*', 
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*', 
        'keep recoPFTaus_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSum_*_*', 
        'keep *_hpsPFTauPUcorrPtSum_*_*', 
        'keep *_hpsPFTauChargedIsoPtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*', 
        'keep *_hpsPFTauFootprintCorrection_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*', 
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectrons_gedGsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep *_egmGedGsfElectronPFIsolation_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'drop *_egmGsfElectronIDs_*_*', 
        'drop *_egmPhotonIDs_*_*', 
        'keep recoPhotonCores_gedPhotonCore_*_*', 
        'keep recoPhotons_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'drop *_gedPhotons_valMapPFEgammaCandToPhoton_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_ootPhotonCore_*_*', 
        'keep recoPhotons_ootPhotons_*_*', 
        'keep recoConversions_conversions_*_*', 
        'keep recoConversions_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoConversions_allConversionsOldEG_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'drop *_pfElectronTranslator_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*', 
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_particleFlow_muons_*', 
        'keep recoCaloClusters_pfElectronTranslator_*_*', 
        'keep recoPreshowerClusters_pfElectronTranslator_*_*', 
        'keep recoSuperClusters_pfElectronTranslator_*_*', 
        'keep recoCaloClusters_pfPhotonTranslator_*_*', 
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*', 
        'keep recoSuperClusters_pfPhotonTranslator_*_*', 
        'keep recoPhotons_pfPhotonTranslator_*_*', 
        'keep recoPhotonCores_pfPhotonTranslator_*_*', 
        'keep recoConversions_pfPhotonTranslator_*_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_hlt*_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*', 
        'keep L1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep BeamSpotOnlines_scalersRawToDigi_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_tcdsDigis_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep *_pfIsolatedElectronsEI_*_*', 
        'keep *_pfIsolatedMuonsEI_*_*', 
        'keep recoPFJets_pfJetsEI_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*', 
        'keep recoPFTaus_pfTausEI_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*', 
        'keep TotemFEDInfos_totemRPRawToDigi_*_*', 
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*', 
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*', 
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*', 
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*', 
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*', 
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*', 
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*', 
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*', 
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*', 
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep *_muonSimClassifier_*_*', 
        'keep *_ak4GenJets_*_*', 
        'keep *_ak8GenJets_*_*', 
        'keep *_ak4GenJetsNoNu_*_*', 
        'keep *_ak8GenJetsNoNu_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*' ) )
)

process.AnomalousCellParameters = cms.PSet(
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999)
)

process.BeamSpotAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.BeamSpotFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.BeamSpotRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.BtiParametersBlock = cms.PSet(
    BtiParameters = cms.PSet(
        AC1 = cms.int32(0),
        AC2 = cms.int32(3),
        ACH = cms.int32(1),
        ACL = cms.int32(2),
        CH = cms.int32(41),
        CL = cms.int32(22),
        DEAD = cms.int32(31),
        Debug = cms.untracked.int32(0),
        KACCTHETA = cms.int32(1),
        KMAX = cms.int32(64),
        LH = cms.int32(21),
        LL = cms.int32(2),
        LTS = cms.int32(3),
        PTMS0 = cms.int32(0),
        PTMS1 = cms.int32(0),
        PTMS10 = cms.int32(1),
        PTMS11 = cms.int32(1),
        PTMS12 = cms.int32(1),
        PTMS13 = cms.int32(1),
        PTMS14 = cms.int32(1),
        PTMS15 = cms.int32(1),
        PTMS16 = cms.int32(1),
        PTMS17 = cms.int32(1),
        PTMS18 = cms.int32(1),
        PTMS19 = cms.int32(1),
        PTMS2 = cms.int32(0),
        PTMS20 = cms.int32(1),
        PTMS21 = cms.int32(1),
        PTMS22 = cms.int32(1),
        PTMS23 = cms.int32(1),
        PTMS24 = cms.int32(1),
        PTMS25 = cms.int32(1),
        PTMS26 = cms.int32(1),
        PTMS27 = cms.int32(1),
        PTMS28 = cms.int32(1),
        PTMS29 = cms.int32(1),
        PTMS3 = cms.int32(0),
        PTMS30 = cms.int32(0),
        PTMS31 = cms.int32(0),
        PTMS4 = cms.int32(1),
        PTMS5 = cms.int32(1),
        PTMS6 = cms.int32(1),
        PTMS7 = cms.int32(1),
        PTMS8 = cms.int32(1),
        PTMS9 = cms.int32(1),
        RE43 = cms.int32(2),
        RH = cms.int32(61),
        RL = cms.int32(42),
        RON = cms.bool(True),
        SET = cms.int32(7),
        ST43 = cms.int32(42),
        WEN0 = cms.int32(1),
        WEN1 = cms.int32(1),
        WEN2 = cms.int32(1),
        WEN3 = cms.int32(1),
        WEN4 = cms.int32(1),
        WEN5 = cms.int32(1),
        WEN6 = cms.int32(1),
        WEN7 = cms.int32(1),
        WEN8 = cms.int32(1),
        XON = cms.bool(False)
    )
)

process.CSCCommonTrigger = cms.PSet(
    MaxBX = cms.int32(9),
    MinBX = cms.int32(3)
)

process.CommonEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_logErrorHarvester_*_*')
)

process.CondDB = cms.PSet(
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string(''),
        authenticationSystem = cms.untracked.int32(0),
        messageLevel = cms.untracked.int32(0),
        security = cms.untracked.string('')
    ),
    connect = cms.string('frontier://FrontierProd/CMS_CONDITIONS')
)

process.DATAMIXEREventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *', 
        'keep CSCDetIdCSCALCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCALCTDigi_*', 
        'keep CSCDetIdCSCCLCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCCLCTDigi_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_muonCSCDigis_MuonCSCComparatorDigi_*', 
        'keep CSCDetIdCSCCorrelatedLCTDigiMuonDigiCollection_csctfDigis_*_*', 
        'keep CSCDetIdCSCCorrelatedLCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCCorrelatedLCTDigi_*', 
        'keep CSCDetIdCSCRPCDigiMuonDigiCollection_muonCSCDigis_MuonCSCRPCDigi_*', 
        'keep CSCDetIdCSCStripDigiMuonDigiCollection_muonCSCDigis_MuonCSCStripDigi_*', 
        'keep CSCDetIdCSCWireDigiMuonDigiCollection_muonCSCDigis_MuonCSCWireDigi_*', 
        'keep DTLayerIdDTDigiMuonDigiCollection_muonDTDigis_*_*', 
        'keep PixelDigiedmDetSetVector_siPixelDigis_*_*', 
        'keep SiStripDigiedmDetSetVector_siStripDigis_*_*', 
        'keep RPCDetIdRPCDigiMuonDigiCollection_muonRPCDigis_*_*', 
        'keep HBHEDataFramesSorted_hcalDigis_*_*', 
        'keep HFDataFramesSorted_hcalDigis_*_*', 
        'keep HODataFramesSorted_hcalDigis_*_*', 
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_*_*', 
        'keep QIE11DataFrameHcalDataFrameContainer_hcalDigis_*_*', 
        'keep ZDCDataFramesSorted_hcalDigis_*_*', 
        'keep CastorDataFramesSorted_castorDigis_*_*', 
        'keep EBDigiCollection_ecalDigis_*_*', 
        'keep EEDigiCollection_ecalDigis_*_*', 
        'keep ESDigiCollection_ecalPreshowerDigis_*_*'),
    splitLevel = cms.untracked.int32(0)
)

process.DQMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_MEtoEDMConverter_*_*'),
    splitLevel = cms.untracked.int32(0)
)

process.DTTPGMapBlock = cms.PSet(
    DTTPGMap = cms.untracked.PSet(
    **dict(
        [
            ("wh0st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se3" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se4" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se3" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se4" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se3" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se4" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh0st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh0st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh0st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh0st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh0st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh0st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh0st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh1st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se3" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se4" , cms.untracked.vint32(50, 48, 50, 13) ),
            ("wh1st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se3" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se4" , cms.untracked.vint32(60, 48, 60, 15) ),
            ("wh1st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se3" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se4" , cms.untracked.vint32(72, 48, 72, 18) ),
            ("wh1st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh1st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh1st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh1st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh1st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh1st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh1st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh1st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh2st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se3" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se4" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se3" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se4" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se3" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se4" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh2st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh2st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh2st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh2st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh2st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh2st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh2st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("whm1st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se3" , cms.untracked.vint32(50, 48, 50, 13) ),
            ("whm1st1se4" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se3" , cms.untracked.vint32(60, 48, 60, 15) ),
            ("whm1st2se4" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se3" , cms.untracked.vint32(72, 48, 72, 18) ),
            ("whm1st3se4" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("whm1st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("whm1st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("whm1st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("whm1st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("whm1st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("whm1st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("whm1st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
        ] +
        [
            ("whm2st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se3" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se4" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se3" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se4" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se3" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se4" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("whm2st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("whm2st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("whm2st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("whm2st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("whm2st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("whm2st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("whm2st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
            ]
        )
    )
)

process.DTTPGParametersBlock = cms.PSet(
    DTTPGParameters = cms.PSet(
        Debug = cms.untracked.bool(False),
        SectCollParameters = cms.PSet(
            Debug = cms.untracked.bool(False),
            SCCSP1 = cms.int32(0),
            SCCSP2 = cms.int32(0),
            SCCSP3 = cms.int32(0),
            SCCSP4 = cms.int32(0),
            SCCSP5 = cms.int32(0),
            SCECF1 = cms.bool(False),
            SCECF2 = cms.bool(False),
            SCECF3 = cms.bool(False),
            SCECF4 = cms.bool(False)
        ),
        TUParameters = cms.PSet(
            BtiParameters = cms.PSet(
                AC1 = cms.int32(0),
                AC2 = cms.int32(3),
                ACH = cms.int32(1),
                ACL = cms.int32(2),
                CH = cms.int32(41),
                CL = cms.int32(22),
                DEAD = cms.int32(31),
                Debug = cms.untracked.int32(0),
                KACCTHETA = cms.int32(1),
                KMAX = cms.int32(64),
                LH = cms.int32(21),
                LL = cms.int32(2),
                LTS = cms.int32(3),
                PTMS0 = cms.int32(0),
                PTMS1 = cms.int32(0),
                PTMS10 = cms.int32(1),
                PTMS11 = cms.int32(1),
                PTMS12 = cms.int32(1),
                PTMS13 = cms.int32(1),
                PTMS14 = cms.int32(1),
                PTMS15 = cms.int32(1),
                PTMS16 = cms.int32(1),
                PTMS17 = cms.int32(1),
                PTMS18 = cms.int32(1),
                PTMS19 = cms.int32(1),
                PTMS2 = cms.int32(0),
                PTMS20 = cms.int32(1),
                PTMS21 = cms.int32(1),
                PTMS22 = cms.int32(1),
                PTMS23 = cms.int32(1),
                PTMS24 = cms.int32(1),
                PTMS25 = cms.int32(1),
                PTMS26 = cms.int32(1),
                PTMS27 = cms.int32(1),
                PTMS28 = cms.int32(1),
                PTMS29 = cms.int32(1),
                PTMS3 = cms.int32(0),
                PTMS30 = cms.int32(0),
                PTMS31 = cms.int32(0),
                PTMS4 = cms.int32(1),
                PTMS5 = cms.int32(1),
                PTMS6 = cms.int32(1),
                PTMS7 = cms.int32(1),
                PTMS8 = cms.int32(1),
                PTMS9 = cms.int32(1),
                RE43 = cms.int32(2),
                RH = cms.int32(61),
                RL = cms.int32(42),
                RON = cms.bool(True),
                SET = cms.int32(7),
                ST43 = cms.int32(42),
                WEN0 = cms.int32(1),
                WEN1 = cms.int32(1),
                WEN2 = cms.int32(1),
                WEN3 = cms.int32(1),
                WEN4 = cms.int32(1),
                WEN5 = cms.int32(1),
                WEN6 = cms.int32(1),
                WEN7 = cms.int32(1),
                WEN8 = cms.int32(1),
                XON = cms.bool(False)
            ),
            Debug = cms.untracked.bool(False),
            LutParameters = cms.PSet(
                BTIC = cms.untracked.int32(0),
                D = cms.untracked.double(0),
                Debug = cms.untracked.bool(False),
                WHEEL = cms.untracked.int32(-1),
                XCN = cms.untracked.double(0)
            ),
            TSPhiParameters = cms.PSet(
                Debug = cms.untracked.bool(False),
                TSMCCE1 = cms.bool(True),
                TSMCCE2 = cms.bool(False),
                TSMCCEC = cms.bool(False),
                TSMCGS1 = cms.bool(True),
                TSMCGS2 = cms.bool(True),
                TSMGS1 = cms.int32(1),
                TSMGS2 = cms.int32(1),
                TSMHSP = cms.int32(1),
                TSMHTE1 = cms.bool(True),
                TSMHTE2 = cms.bool(False),
                TSMHTEC = cms.bool(False),
                TSMMSK1 = cms.int32(312),
                TSMMSK2 = cms.int32(312),
                TSMNOE1 = cms.bool(True),
                TSMNOE2 = cms.bool(False),
                TSMNOEC = cms.bool(False),
                TSMWORD = cms.int32(255),
                TSSCCE1 = cms.bool(True),
                TSSCCE2 = cms.bool(False),
                TSSCCEC = cms.bool(False),
                TSSCGS1 = cms.bool(True),
                TSSCGS2 = cms.bool(True),
                TSSGS1 = cms.int32(1),
                TSSGS2 = cms.int32(1),
                TSSHTE1 = cms.bool(True),
                TSSHTE2 = cms.bool(False),
                TSSHTEC = cms.bool(False),
                TSSMSK1 = cms.int32(312),
                TSSMSK2 = cms.int32(312),
                TSSNOE1 = cms.bool(True),
                TSSNOE2 = cms.bool(False),
                TSSNOEC = cms.bool(False),
                TSTREN0 = cms.bool(True),
                TSTREN1 = cms.bool(True),
                TSTREN10 = cms.bool(True),
                TSTREN11 = cms.bool(True),
                TSTREN12 = cms.bool(True),
                TSTREN13 = cms.bool(True),
                TSTREN14 = cms.bool(True),
                TSTREN15 = cms.bool(True),
                TSTREN16 = cms.bool(True),
                TSTREN17 = cms.bool(True),
                TSTREN18 = cms.bool(True),
                TSTREN19 = cms.bool(True),
                TSTREN2 = cms.bool(True),
                TSTREN20 = cms.bool(True),
                TSTREN21 = cms.bool(True),
                TSTREN22 = cms.bool(True),
                TSTREN23 = cms.bool(True),
                TSTREN3 = cms.bool(True),
                TSTREN4 = cms.bool(True),
                TSTREN5 = cms.bool(True),
                TSTREN6 = cms.bool(True),
                TSTREN7 = cms.bool(True),
                TSTREN8 = cms.bool(True),
                TSTREN9 = cms.bool(True)
            ),
            TSThetaParameters = cms.PSet(
                Debug = cms.untracked.bool(False)
            ),
            TracoParameters = cms.PSet(
                BTIC = cms.int32(32),
                DD = cms.int32(18),
                Debug = cms.untracked.int32(0),
                FHISM = cms.int32(0),
                FHTMSK = cms.int32(0),
                FHTPRF = cms.int32(1),
                FLTMSK = cms.int32(1),
                FPRGCOMP = cms.int32(2),
                FSLMSK = cms.int32(0),
                IBTIOFF = cms.int32(0),
                KPRGCOM = cms.int32(255),
                KRAD = cms.int32(0),
                LTF = cms.int32(0),
                LTS = cms.int32(0),
                LVALIDIFH = cms.int32(0),
                REUSEI = cms.int32(1),
                REUSEO = cms.int32(1),
                SHISM = cms.int32(0),
                SHTMSK = cms.int32(0),
                SHTPRF = cms.int32(1),
                SLTMSK = cms.int32(1),
                SPRGCOMP = cms.int32(2),
                SSLMSK = cms.int32(0),
                TRGENB0 = cms.int32(1),
                TRGENB1 = cms.int32(1),
                TRGENB10 = cms.int32(1),
                TRGENB11 = cms.int32(1),
                TRGENB12 = cms.int32(1),
                TRGENB13 = cms.int32(1),
                TRGENB14 = cms.int32(1),
                TRGENB15 = cms.int32(1),
                TRGENB2 = cms.int32(1),
                TRGENB3 = cms.int32(1),
                TRGENB4 = cms.int32(1),
                TRGENB5 = cms.int32(1),
                TRGENB6 = cms.int32(1),
                TRGENB7 = cms.int32(1),
                TRGENB8 = cms.int32(1),
                TRGENB9 = cms.int32(1)
            )
        )
    )
)

process.DigiToRawFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*')
)

process.EITopPAGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_pfIsolatedElectronsEI_*_*', 
        'keep *_pfIsolatedMuonsEI_*_*', 
        'keep recoPFJets_pfJetsEI_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*', 
        'keep recoPFTaus_pfTausEI_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*', 
        'keep recoPFMETs_pfMetEI_*_*')
)

process.EvtScalersAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep L1AcceptBunchCrossings_scalersRawToDigi_*_*', 
        'keep L1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep BeamSpotOnlines_scalersRawToDigi_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.EvtScalersRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep L1AcceptBunchCrossings_scalersRawToDigi_*_*', 
        'keep L1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep BeamSpotOnlines_scalersRawToDigi_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*')
)

process.FASTPUEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_famosSimHits_*_*', 
        'keep *_MuonSimHits_*_*', 
        'drop *_famosSimHits_VertexTypes_*', 
        'keep *_generalTracksBeforeMixing_*_*', 
        'drop *_generalTracksBeforeMixing_MVAValues_*', 
        'drop *_generalTracksBeforeMixing_QualityMasks_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*')
)

process.FEVTDEBUGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep *_simHcalUnsuppressedDigis_*_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep ClusterSummary_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hbheprereco_*_*', 
        'keep *_hfprereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_hcalDigis_*_*', 
        'keep ZDCDataFramesSorted_castorDigis_*_*', 
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*', 
        'keep ZDCRecHitsSorted_zdcreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_castorDigis_*_*', 
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*', 
        'keep HcalUnpackerReport_hcalDigis_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep EBSrFlagsSorted_ecalDigis__*', 
        'keep EESrFlagsSorted_ecalDigis__*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep *_particleFlowSuperClusterECAL_*_*', 
        'keep *_particleFlowSuperClusterOOTECAL_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*', 
        'keep recoCaloClusters_islandBasicClusters_*_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep *_generalTracks_MVAVals_*', 
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*', 
        'keep uints_extraFromSeeds_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep recoTracks_cosmicDCTracks_*_*', 
        'keep recoTrackExtras_cosmicDCTracks_*_*', 
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*', 
        'keep *_ak4CaloJets_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_ak4PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHSSoftDrop_*_*', 
        'keep *_cmsTopTagPFJetsCHS_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*', 
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetID_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRhoAll_*_*', 
        'keep *_fixedGridRhoFastjetAll_*_*', 
        'keep *_fixedGridRhoFastjetAllTmp_*_*', 
        'keep *_fixedGridRhoFastjetAllCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentral_*_*', 
        'keep *_fixedGridRhoFastjetCentralCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*', 
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*', 
        'keep *_ak8PFJetsCHSSoftDropMass_*_*', 
        'keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoEcalHaloData_EcalHaloData_*_*', 
        'keep recoGlobalHaloData_GlobalHaloData_*_*', 
        'keep recoHcalHaloData_HcalHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_displacedMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_softPFMuonsTagInfos_*_*', 
        'keep *_softPFElectronsTagInfos_*_*', 
        'keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfImpactParameterTagInfos_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSecondaryVertexTagInfos_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackVertexTagInfos_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*', 
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*', 
        'keep recoPFTaus_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSum_*_*', 
        'keep *_hpsPFTauPUcorrPtSum_*_*', 
        'keep *_hpsPFTauChargedIsoPtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*', 
        'keep *_hpsPFTauFootprintCorrection_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*', 
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectrons_gedGsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep *_egmGedGsfElectronPFIsolation_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'drop *_egmGsfElectronIDs_*_*', 
        'drop *_egmPhotonIDs_*_*', 
        'keep *_gedPhotonCore_*_*', 
        'keep *_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'keep recoPhotons_mustachePhotons_*_*', 
        'keep recoPhotonCores_mustachePhotonCore_*_*', 
        'keep recoPhotons_ootPhotons_*_*', 
        'keep recoPhotonCores_ootPhotonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'keep recoConversions_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoConversions_allConversionsOldEG_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterHF_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_particleFlow_muons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_hlt*_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep *_ak4GenJets_*_*', 
        'keep *_ak8GenJets_*_*', 
        'keep *_ak4GenJetsNoNu_*_*', 
        'keep *_ak8GenJetsNoNu_*_*', 
        'keep *_genParticle_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_muonSimClassifier_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*', 
        'keep L1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep BeamSpotOnlines_scalersRawToDigi_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep *_pfIsolatedElectronsEI_*_*', 
        'keep *_pfIsolatedMuonsEI_*_*', 
        'keep recoPFJets_pfJetsEI_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*', 
        'keep recoPFTaus_pfTausEI_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep *_tcdsDigis_*_*', 
        'keep *_simCscTriggerPrimitiveDigis_*_*', 
        'keep *_simDtTriggerPrimitiveDigis_*_*', 
        'keep *_simRpcTriggerDigis_*_*', 
        'keep *_simRctDigis_*_*', 
        'keep *_simCsctfDigis_*_*', 
        'keep *_simCsctfTrackDigis_*_*', 
        'keep *_simDttfDigis_*_*', 
        'keep *_simGctDigis_*_*', 
        'keep *_simCaloStage1Digis_*_*', 
        'keep *_simCaloStage1FinalDigis_*_*', 
        'keep *_simCaloStage2Layer1Digis_*_*', 
        'keep *_simCaloStage2Digis_*_*', 
        'keep *_simGmtDigis_*_*', 
        'keep *_simBmtfDigis_*_*', 
        'keep *_simOmtfDigis_*_*', 
        'keep *_simEmtfDigis_*_*', 
        'keep *_simGmtStage2Digis_*_*', 
        'keep *_simGtDigis_*_*', 
        'keep *_simGtStage2Digis_*_*', 
        'keep *_cscTriggerPrimitiveDigis_*_*', 
        'keep *_dtTriggerPrimitiveDigis_*_*', 
        'keep *_rpcTriggerDigis_*_*', 
        'keep *_rctDigis_*_*', 
        'keep *_csctfDigis_*_*', 
        'keep *_csctfTrackDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gctDigis_*_*', 
        'keep *_gmtDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_gtEvmDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_trackingtruthprod_*_*', 
        'drop *_electrontruth_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep *_simSiPixelDigis_*_*', 
        'keep *_simSiStripDigis_*_*', 
        'drop *_mix_simSiPixelDigis*_*', 
        'drop *_mix_simSiStripDigis*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep *_trackingParticleRecoTrackAsssociation_*_*', 
        'keep *_assoc2secStepTk_*_*', 
        'keep *_assoc2thStepTk_*_*', 
        'keep *_assoc2GsfTracks_*_*', 
        'keep *_assocOutInConversionTracks_*_*', 
        'keep *_assocInOutConversionTracks_*_*', 
        'keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonDTDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*', 
        'keep *_simMuonGEMDigis_*_*', 
        'keep *_simMuonGEMPadDigis_*_*', 
        'keep *_simMuonGEMPadDigiClusters_*_*', 
        'keep *_simEcalDigis_*_*', 
        'keep *_simEcalPreshowerDigis_*_*', 
        'keep *_simEcalTriggerPrimitiveDigis_*_*', 
        'keep *_simEcalEBTriggerPrimitiveDigis_*_*', 
        'keep *_simHcalDigis_*_*', 
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*', 
        'drop ZDCDataFramesSorted_mix_simHcalUnsuppressedDigis*_*', 
        'keep *_simHcalTriggerPrimitiveDigis_*_*', 
        'keep *_mix_HcalSamples_*', 
        'keep *_mixData_HcalSamples_*', 
        'keep *_mix_HcalHits_*', 
        'keep *_mixData_HcalHits_*', 
        'keep *_DMHcalTriggerPrimitiveDigis_*_*', 
        'keep *_simHcalUnsuppressedDigis_*_*' ) ),
    splitLevel = cms.untracked.int32(0)
)

process.FEVTDEBUGHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep *_simHcalUnsuppressedDigis_*_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep ClusterSummary_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hbheprereco_*_*', 
        'keep *_hfprereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_hcalDigis_*_*', 
        'keep ZDCDataFramesSorted_castorDigis_*_*', 
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*', 
        'keep ZDCRecHitsSorted_zdcreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_castorDigis_*_*', 
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*', 
        'keep HcalUnpackerReport_hcalDigis_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep EBSrFlagsSorted_ecalDigis__*', 
        'keep EESrFlagsSorted_ecalDigis__*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep *_particleFlowSuperClusterECAL_*_*', 
        'keep *_particleFlowSuperClusterOOTECAL_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*', 
        'keep recoCaloClusters_islandBasicClusters_*_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep *_generalTracks_MVAVals_*', 
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*', 
        'keep uints_extraFromSeeds_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep recoTracks_cosmicDCTracks_*_*', 
        'keep recoTrackExtras_cosmicDCTracks_*_*', 
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*', 
        'keep *_ak4CaloJets_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_ak4PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHSSoftDrop_*_*', 
        'keep *_cmsTopTagPFJetsCHS_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*', 
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetID_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRhoAll_*_*', 
        'keep *_fixedGridRhoFastjetAll_*_*', 
        'keep *_fixedGridRhoFastjetAllTmp_*_*', 
        'keep *_fixedGridRhoFastjetAllCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentral_*_*', 
        'keep *_fixedGridRhoFastjetCentralCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*', 
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*', 
        'keep *_ak8PFJetsCHSSoftDropMass_*_*', 
        'keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoEcalHaloData_EcalHaloData_*_*', 
        'keep recoGlobalHaloData_GlobalHaloData_*_*', 
        'keep recoHcalHaloData_HcalHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_displacedMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_softPFMuonsTagInfos_*_*', 
        'keep *_softPFElectronsTagInfos_*_*', 
        'keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfImpactParameterTagInfos_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSecondaryVertexTagInfos_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackVertexTagInfos_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*', 
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*', 
        'keep recoPFTaus_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSum_*_*', 
        'keep *_hpsPFTauPUcorrPtSum_*_*', 
        'keep *_hpsPFTauChargedIsoPtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*', 
        'keep *_hpsPFTauFootprintCorrection_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*', 
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectrons_gedGsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep *_egmGedGsfElectronPFIsolation_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'drop *_egmGsfElectronIDs_*_*', 
        'drop *_egmPhotonIDs_*_*', 
        'keep *_gedPhotonCore_*_*', 
        'keep *_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'keep recoPhotons_mustachePhotons_*_*', 
        'keep recoPhotonCores_mustachePhotonCore_*_*', 
        'keep recoPhotons_ootPhotons_*_*', 
        'keep recoPhotonCores_ootPhotonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'keep recoConversions_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoConversions_allConversionsOldEG_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterHF_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_particleFlow_muons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_hlt*_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep *_ak4GenJets_*_*', 
        'keep *_ak8GenJets_*_*', 
        'keep *_ak4GenJetsNoNu_*_*', 
        'keep *_ak8GenJetsNoNu_*_*', 
        'keep *_genParticle_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_muonSimClassifier_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*', 
        'keep L1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep BeamSpotOnlines_scalersRawToDigi_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep *_pfIsolatedElectronsEI_*_*', 
        'keep *_pfIsolatedMuonsEI_*_*', 
        'keep recoPFJets_pfJetsEI_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*', 
        'keep recoPFTaus_pfTausEI_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep *_tcdsDigis_*_*', 
        'keep *_simCscTriggerPrimitiveDigis_*_*', 
        'keep *_simDtTriggerPrimitiveDigis_*_*', 
        'keep *_simRpcTriggerDigis_*_*', 
        'keep *_simRctDigis_*_*', 
        'keep *_simCsctfDigis_*_*', 
        'keep *_simCsctfTrackDigis_*_*', 
        'keep *_simDttfDigis_*_*', 
        'keep *_simGctDigis_*_*', 
        'keep *_simCaloStage1Digis_*_*', 
        'keep *_simCaloStage1FinalDigis_*_*', 
        'keep *_simCaloStage2Layer1Digis_*_*', 
        'keep *_simCaloStage2Digis_*_*', 
        'keep *_simGmtDigis_*_*', 
        'keep *_simBmtfDigis_*_*', 
        'keep *_simOmtfDigis_*_*', 
        'keep *_simEmtfDigis_*_*', 
        'keep *_simGmtStage2Digis_*_*', 
        'keep *_simGtDigis_*_*', 
        'keep *_simGtStage2Digis_*_*', 
        'keep *_cscTriggerPrimitiveDigis_*_*', 
        'keep *_dtTriggerPrimitiveDigis_*_*', 
        'keep *_rpcTriggerDigis_*_*', 
        'keep *_rctDigis_*_*', 
        'keep *_csctfDigis_*_*', 
        'keep *_csctfTrackDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gctDigis_*_*', 
        'keep *_gmtDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_gtEvmDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_trackingtruthprod_*_*', 
        'drop *_electrontruth_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep *_simSiPixelDigis_*_*', 
        'keep *_simSiStripDigis_*_*', 
        'drop *_mix_simSiPixelDigis*_*', 
        'drop *_mix_simSiStripDigis*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep *_trackingParticleRecoTrackAsssociation_*_*', 
        'keep *_assoc2secStepTk_*_*', 
        'keep *_assoc2thStepTk_*_*', 
        'keep *_assoc2GsfTracks_*_*', 
        'keep *_assocOutInConversionTracks_*_*', 
        'keep *_assocInOutConversionTracks_*_*', 
        'keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonDTDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*', 
        'keep *_simMuonGEMDigis_*_*', 
        'keep *_simMuonGEMPadDigis_*_*', 
        'keep *_simMuonGEMPadDigiClusters_*_*', 
        'keep *_simEcalDigis_*_*', 
        'keep *_simEcalPreshowerDigis_*_*', 
        'keep *_simEcalTriggerPrimitiveDigis_*_*', 
        'keep *_simEcalEBTriggerPrimitiveDigis_*_*', 
        'keep *_simHcalDigis_*_*', 
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*', 
        'drop ZDCDataFramesSorted_mix_simHcalUnsuppressedDigis*_*', 
        'keep *_simHcalTriggerPrimitiveDigis_*_*', 
        'keep *_mix_HcalSamples_*', 
        'keep *_mixData_HcalSamples_*', 
        'keep *_mix_HcalHits_*', 
        'keep *_mixData_HcalHits_*', 
        'keep *_DMHcalTriggerPrimitiveDigis_*_*', 
        'keep *_simHcalUnsuppressedDigis_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*', 
        'keep *_hltAK4CaloJetsIDPassed_*_*', 
        'keep *_hltAK4CaloJets_*_*', 
        'keep *_hltAK4PFJetsCorrected_*_*', 
        'keep *_hltAK4PFJetsForTaus_*_*', 
        'keep *_hltAK4PFJets_*_*', 
        'keep *_hltAlCaEtaEBRechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*', 
        'keep *_hltAlCaEtaEERechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaEtaEERechitsToDigis_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegionalLowPU_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilter_*_*', 
        'keep *_hltAlCaPhiSymStream_*_*', 
        'keep *_hltAlCaPi0EBRechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*', 
        'keep *_hltAlCaPi0EERechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaPi0EERechitsToDigis_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegionalLowPU_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilter_*_*', 
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonMu5L3_*_*', 
        'keep *_hltCSVJetTagSingleTopEle27_*_*', 
        'keep *_hltCSVJetTagSingleTopIsoMu24_*_*', 
        'keep *_hltCaloJetCorrectedRegional_*_*', 
        'keep *_hltCaloJetCorrected_*_*', 
        'keep *_hltCaloJetL1FastJetCorrected_*_*', 
        'keep *_hltCaloStage2Digis_*_*', 
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCombinedSecondaryVertexBJetTagsCalo_*_*', 
        'keep *_hltCombinedSecondaryVertexBJetTagsPF_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 
        'keep *_hltConvPFTausTightIso_*_*', 
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 
        'keep *_hltConvPFTausTrackFinding_*_*', 
        'keep *_hltConvPFTaus_*_*', 
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltCsc2DRecHits_*_*', 
        'keep *_hltCscSegments_*_*', 
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltDoublePFTau25TrackPt5_*_*', 
        'keep *_hltDoublePFTau25_*_*', 
        'keep *_hltDoublePFTauTightIso45Track5_*_*', 
        'keep *_hltDoublePFTauTightIso45Track_*_*', 
        'keep *_hltDt4DSegments_*_*', 
        'keep *_hltEcalPhiSymFilter_*_*', 
        'keep *_hltEcalRecHitAll_*_*', 
        'keep *_hltEcalRecHit_*_*', 
        'keep *_hltEgammaCandidates_*_*', 
        'keep *_hltEgammaGsfElectrons_*_*', 
        'keep *_hltEgammaGsfTracks_*_*', 
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*', 
        'keep *_hltEle27WP85PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltElectronsVertex_*_*', 
        'keep *_hltFEDSelectorLumiPixels_*_*', 
        'keep *_hltFastPVPixelTracksMerger_*_*', 
        'keep *_hltFastPVPixelTracksRecover_*_*', 
        'keep *_hltFastPVPixelTracks_*_*', 
        'keep *_hltFastPVPixelVertices3D_*_*', 
        'keep *_hltFastPVPixelVertices_*_*', 
        'keep *_hltFastPixelBLifetimeL3TagInfos_*_*', 
        'keep *_hltFastPrimaryVertex_*_*', 
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*', 
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltGmtStage2Digis_*_*', 
        'keep *_hltGoodOnlinePVs_*_*', 
        'keep *_hltGtStage2Digis_*_*', 
        'keep *_hltHICaloJetCorrected_*_*', 
        'keep *_hltHICaloJetIDPassed_*_*', 
        'keep *_hltHIGoodLooseTracks_*_*', 
        'keep *_hltHIPixel3PrimTracks_*_*', 
        'keep *_hltHISelectedVertex_*_*', 
        'keep *_hltHISiPixelClusters_*_*', 
        'keep *_hltHITIPTCorrectorHB_*_*', 
        'keep *_hltHITIPTCorrectorHE_*_*', 
        'keep *_hltHbhereco_*_*', 
        'keep *_hltHfreco_*_*', 
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltHiIslandSuperClustersHI_*_*', 
        'keep *_hltHoreco_*_*', 
        'keep *_hltIsolPixelTrackProdHB_*_*', 
        'keep *_hltIsolPixelTrackProdHE_*_*', 
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*', 
        'keep *_hltIter0HighPtTkMuPixelTracks_*_*', 
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*', 
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter1Merged_*_*', 
        'keep *_hltIter1PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter2HighPtTkMuMerged_*_*', 
        'keep *_hltIter2HighPtTkMuTrackSelectionHighPurity_*_*', 
        'keep *_hltIter2MergedForBTag_*_*', 
        'keep *_hltIter2MergedForElectrons_*_*', 
        'keep *_hltIter2Merged_*_*', 
        'keep *_hltIter2PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter3Merged_*_*', 
        'keep *_hltIter4Merged_*_*', 
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*', 
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*', 
        'keep *_hltL1IsoElectronTrackIsol_*_*', 
        'keep *_hltL1NonIsoElectronTrackIsol_*_*', 
        'keep *_hltL1SeededRecoEcalCandidate_*_*', 
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*', 
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*', 
        'keep *_hltL1sL1EG18er_*_*', 
        'keep *_hltL1sL1ETM36ORETM40_*_*', 
        'keep *_hltL1sL1Jet52ETM30_*_*', 
        'keep *_hltL1sL1SingleEG12_*_*', 
        'keep *_hltL1sL1SingleEG15_*_*', 
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltL1sL1SingleMu10_*_*', 
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*', 
        'keep *_hltL1sMu16Eta2p1_*_*', 
        'keep *_hltL2MuonCandidatesNoVtx_*_*', 
        'keep *_hltL2MuonCandidates_*_*', 
        'keep *_hltL2MuonSeeds_*_*', 
        'keep *_hltL2Muons_*_*', 
        'keep *_hltL2TauJets_*_*', 
        'keep *_hltL3MuonCandidates_*_*', 
        'keep *_hltL3MuonsIOHit_*_*', 
        'keep *_hltL3MuonsLinksCombination_*_*', 
        'keep *_hltL3MuonsOIHit_*_*', 
        'keep *_hltL3MuonsOIState_*_*', 
        'keep *_hltL3Muons_*_*', 
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*', 
        'keep *_hltL3NoFiltersNoVtxMuons_*_*', 
        'keep *_hltL3SecondaryVertexTagInfos_*_*', 
        'keep *_hltL3TkFromL2OICombination_*_*', 
        'keep *_hltL3TkTracksFromL2IOHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIState_*_*', 
        'keep *_hltL3TkTracksFromL2_*_*', 
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIState_*_*', 
        'keep *_hltL3TrajSeedIOHit_*_*', 
        'keep *_hltL3TrajSeedOIHit_*_*', 
        'keep *_hltL3TrajSeedOIState_*_*', 
        'keep *_hltL3TrajectorySeed_*_*', 
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*', 
        'keep *_hltLeadingCentralJets30SingleTopEle27_*_*', 
        'keep *_hltLeadingCentralJets30SingleTopIsoMu24_*_*', 
        'keep *_hltMergedTracks_*_*', 
        'keep *_hltMet_*_*', 
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*', 
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 
        'keep *_hltMuonCSCDigis_*_*', 
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*', 
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*', 
        'keep *_hltMuonDTDigis_*_*', 
        'keep *_hltMuonRPCDigis_*_*', 
        'keep *_hltOnlineBeamSpot_*_*', 
        'keep *_hltOnlinePrimaryVertices_*_*', 
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*', 
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*', 
        'keep *_hltPFJetForBtag_*_*', 
        'keep *_hltPFMuonMerging_*_*', 
        'keep *_hltPFTau15TrackLooseIso_*_*', 
        'keep *_hltPFTau15Track_*_*', 
        'keep *_hltPFTau15_*_*', 
        'keep *_hltPFTau20IsoMuVertex_*_*', 
        'keep *_hltPFTau20TrackLooseIso_*_*', 
        'keep *_hltPFTau20Track_*_*', 
        'keep *_hltPFTau20_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltPFTau25TrackPt5_*_*', 
        'keep *_hltPFTau25_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIso_*_*', 
        'keep *_hltPFTau35TrackPt20_*_*', 
        'keep *_hltPFTau35Track_*_*', 
        'keep *_hltPFTau35_*_*', 
        'keep *_hltPFTauEleVertex20_*_*', 
        'keep *_hltPFTauJetTracksAssociator_*_*', 
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*', 
        'keep *_hltPFTauMediumIso20Track_*_*', 
        'keep *_hltPFTauMediumIso20_*_*', 
        'keep *_hltPFTauMediumIso35Track_*_*', 
        'keep *_hltPFTauMediumIso35_*_*', 
        'keep *_hltPFTauTagInfo_*_*', 
        'keep *_hltPFTauTightIso20TrackTightIso_*_*', 
        'keep *_hltPFTauTightIso20Track_*_*', 
        'keep *_hltPFTauTightIso20_*_*', 
        'keep *_hltPFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltParticleFlowForTaus_*_*', 
        'keep *_hltParticleFlow_*_*', 
        'keep *_hltPixelMatch3HitElectronsActivity_*_*', 
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchElectronsActivity_*_*', 
        'keep *_hltPixelMatchElectronsL1Iso_*_*', 
        'keep *_hltPixelMatchElectronsL1NonIso_*_*', 
        'keep *_hltPixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltPixelTracksElectrons_*_*', 
        'keep *_hltPixelTracksMerged_*_*', 
        'keep *_hltPixelTracks_*_*', 
        'keep *_hltPixelVertices3DbbPhi_*_*', 
        'keep *_hltPixelVertices_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*', 
        'keep *_hltRpcRecHits_*_*', 
        'keep *_hltSelector4CentralJetsL1FastJet_*_*', 
        'keep *_hltSelector8CentralJetsL1FastJet_*_*', 
        'keep *_hltSelectorJets20L1FastJet_*_*', 
        'keep *_hltSiPixelCluster_*_*', 
        'keep *_hltSiPixelClusters_*_*', 
        'keep *_hltSiStripClusters_*_*', 
        'keep *_hltSiStripRawToClustersFacility_*_*', 
        'keep *_hltSingleMu15L3Filtered15_*_*', 
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*', 
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*', 
        'keep *_hltTowerMakerForAll_*_*', 
        'keep *_hltTowerMakerForMuons_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'keep *_hltTriggerSummaryRAW_*_*', 
        'keep *_hltTrimmedPixelVertices_*_*', 
        'keep *_hltVerticesL3_*_*', 
        'keep *_hltVerticesPFFilter_*_*', 
        'keep *_hltVerticesPFSelector_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*', 
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*', 
        'keep LumiScalerss_hltScalersRawToDigi_*_*', 
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*', 
        'keep TrackingRecHitsOwned_hltL3Muons_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep recoCaloJets_*_*_*', 
        'keep recoCaloMETs_*_*_*', 
        'keep recoCaloMETs_hltMet_*_*', 
        'keep recoCompositeCandidates_*_*_*', 
        'keep recoElectrons_*_*_*', 
        'keep recoIsolatedPixelTrackCandidates_*_*_*', 
        'keep recoMETs_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoPFTaus_*_*_*', 
        'keep recoRecoChargedCandidates_*_*_*', 
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*', 
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidates_*_*_*', 
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3MuonsOIHit_*_*', 
        'keep recoTracks_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3Muons_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*', 
        'keep triggerTriggerEventWithRefs_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep triggerTriggerFilterObjectWithRefs_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep *_*_MergedTrackTruth_*', 
        'keep *_*_StripDigiSimLink_*', 
        'keep *_*_PixelDigiSimLink_*', 
        'keep *_*_MuonCSCStripDigiSimLinks_*', 
        'keep *_*_MuonCSCWireDigiSimLinks_*', 
        'keep *_*_RPCDigiSimLink_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_*_*_*' ) ),
    splitLevel = cms.untracked.int32(0)
)

process.FEVTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep ClusterSummary_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hbheprereco_*_*', 
        'keep *_hfprereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_hcalDigis_*_*', 
        'keep ZDCDataFramesSorted_castorDigis_*_*', 
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*', 
        'keep ZDCRecHitsSorted_zdcreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_castorDigis_*_*', 
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*', 
        'keep HcalUnpackerReport_hcalDigis_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep EBSrFlagsSorted_ecalDigis__*', 
        'keep EESrFlagsSorted_ecalDigis__*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep *_particleFlowSuperClusterECAL_*_*', 
        'keep *_particleFlowSuperClusterOOTECAL_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*', 
        'keep recoCaloClusters_islandBasicClusters_*_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep *_generalTracks_MVAVals_*', 
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*', 
        'keep uints_extraFromSeeds_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep recoTracks_cosmicDCTracks_*_*', 
        'keep recoTrackExtras_cosmicDCTracks_*_*', 
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*', 
        'keep *_ak4CaloJets_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_ak4PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHSSoftDrop_*_*', 
        'keep *_cmsTopTagPFJetsCHS_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*', 
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetID_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRhoAll_*_*', 
        'keep *_fixedGridRhoFastjetAll_*_*', 
        'keep *_fixedGridRhoFastjetAllTmp_*_*', 
        'keep *_fixedGridRhoFastjetAllCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentral_*_*', 
        'keep *_fixedGridRhoFastjetCentralCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*', 
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*', 
        'keep *_ak8PFJetsCHSSoftDropMass_*_*', 
        'keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoEcalHaloData_EcalHaloData_*_*', 
        'keep recoGlobalHaloData_GlobalHaloData_*_*', 
        'keep recoHcalHaloData_HcalHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_displacedMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_softPFMuonsTagInfos_*_*', 
        'keep *_softPFElectronsTagInfos_*_*', 
        'keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfImpactParameterTagInfos_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSecondaryVertexTagInfos_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackVertexTagInfos_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*', 
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*', 
        'keep recoPFTaus_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSum_*_*', 
        'keep *_hpsPFTauPUcorrPtSum_*_*', 
        'keep *_hpsPFTauChargedIsoPtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*', 
        'keep *_hpsPFTauFootprintCorrection_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*', 
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectrons_gedGsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep *_egmGedGsfElectronPFIsolation_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'drop *_egmGsfElectronIDs_*_*', 
        'drop *_egmPhotonIDs_*_*', 
        'keep *_gedPhotonCore_*_*', 
        'keep *_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'keep recoPhotons_mustachePhotons_*_*', 
        'keep recoPhotonCores_mustachePhotonCore_*_*', 
        'keep recoPhotons_ootPhotons_*_*', 
        'keep recoPhotonCores_ootPhotonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'keep recoConversions_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoConversions_allConversionsOldEG_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterHF_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_particleFlow_muons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_hlt*_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*', 
        'keep L1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep BeamSpotOnlines_scalersRawToDigi_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep *_tcdsDigis_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep *_pfIsolatedElectronsEI_*_*', 
        'keep *_pfIsolatedMuonsEI_*_*', 
        'keep recoPFJets_pfJetsEI_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*', 
        'keep recoPFTaus_pfTausEI_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*', 
        'keep TotemFEDInfos_totemRPRawToDigi_*_*', 
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*', 
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*', 
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*', 
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*', 
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*', 
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*', 
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*', 
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*', 
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*', 
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*' ) ),
    splitLevel = cms.untracked.int32(0)
)

process.FEVTHLTALLEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep ClusterSummary_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hbheprereco_*_*', 
        'keep *_hfprereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_hcalDigis_*_*', 
        'keep ZDCDataFramesSorted_castorDigis_*_*', 
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*', 
        'keep ZDCRecHitsSorted_zdcreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_castorDigis_*_*', 
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*', 
        'keep HcalUnpackerReport_hcalDigis_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep EBSrFlagsSorted_ecalDigis__*', 
        'keep EESrFlagsSorted_ecalDigis__*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep *_particleFlowSuperClusterECAL_*_*', 
        'keep *_particleFlowSuperClusterOOTECAL_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*', 
        'keep recoCaloClusters_islandBasicClusters_*_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep *_generalTracks_MVAVals_*', 
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*', 
        'keep uints_extraFromSeeds_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep recoTracks_cosmicDCTracks_*_*', 
        'keep recoTrackExtras_cosmicDCTracks_*_*', 
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*', 
        'keep *_ak4CaloJets_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_ak4PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHSSoftDrop_*_*', 
        'keep *_cmsTopTagPFJetsCHS_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*', 
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetID_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRhoAll_*_*', 
        'keep *_fixedGridRhoFastjetAll_*_*', 
        'keep *_fixedGridRhoFastjetAllTmp_*_*', 
        'keep *_fixedGridRhoFastjetAllCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentral_*_*', 
        'keep *_fixedGridRhoFastjetCentralCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*', 
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*', 
        'keep *_ak8PFJetsCHSSoftDropMass_*_*', 
        'keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoEcalHaloData_EcalHaloData_*_*', 
        'keep recoGlobalHaloData_GlobalHaloData_*_*', 
        'keep recoHcalHaloData_HcalHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_displacedMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_softPFMuonsTagInfos_*_*', 
        'keep *_softPFElectronsTagInfos_*_*', 
        'keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfImpactParameterTagInfos_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSecondaryVertexTagInfos_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackVertexTagInfos_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*', 
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*', 
        'keep recoPFTaus_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSum_*_*', 
        'keep *_hpsPFTauPUcorrPtSum_*_*', 
        'keep *_hpsPFTauChargedIsoPtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*', 
        'keep *_hpsPFTauFootprintCorrection_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*', 
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectrons_gedGsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep *_egmGedGsfElectronPFIsolation_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'drop *_egmGsfElectronIDs_*_*', 
        'drop *_egmPhotonIDs_*_*', 
        'keep *_gedPhotonCore_*_*', 
        'keep *_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'keep recoPhotons_mustachePhotons_*_*', 
        'keep recoPhotonCores_mustachePhotonCore_*_*', 
        'keep recoPhotons_ootPhotons_*_*', 
        'keep recoPhotonCores_ootPhotonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'keep recoConversions_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoConversions_allConversionsOldEG_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterHF_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_particleFlow_muons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_hlt*_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*', 
        'keep L1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep BeamSpotOnlines_scalersRawToDigi_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep *_tcdsDigis_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep *_pfIsolatedElectronsEI_*_*', 
        'keep *_pfIsolatedMuonsEI_*_*', 
        'keep recoPFJets_pfJetsEI_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*', 
        'keep recoPFTaus_pfTausEI_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*', 
        'keep TotemFEDInfos_totemRPRawToDigi_*_*', 
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*', 
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*', 
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*', 
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*', 
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*', 
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*', 
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*', 
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*', 
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*', 
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*', 
        'keep *_*_*_HLT' ) ),
    splitLevel = cms.untracked.int32(0)
)

process.FEVTSIMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep *_simHcalUnsuppressedDigis_*_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep ClusterSummary_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hbheprereco_*_*', 
        'keep *_hfprereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_hcalDigis_*_*', 
        'keep ZDCDataFramesSorted_castorDigis_*_*', 
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*', 
        'keep ZDCRecHitsSorted_zdcreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_castorDigis_*_*', 
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*', 
        'keep HcalUnpackerReport_hcalDigis_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep EBSrFlagsSorted_ecalDigis__*', 
        'keep EESrFlagsSorted_ecalDigis__*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep *_particleFlowSuperClusterECAL_*_*', 
        'keep *_particleFlowSuperClusterOOTECAL_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*', 
        'keep recoCaloClusters_islandBasicClusters_*_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep *_generalTracks_MVAVals_*', 
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*', 
        'keep uints_extraFromSeeds_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep recoTracks_cosmicDCTracks_*_*', 
        'keep recoTrackExtras_cosmicDCTracks_*_*', 
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*', 
        'keep *_ak4CaloJets_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_ak4PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHSSoftDrop_*_*', 
        'keep *_cmsTopTagPFJetsCHS_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*', 
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetID_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRhoAll_*_*', 
        'keep *_fixedGridRhoFastjetAll_*_*', 
        'keep *_fixedGridRhoFastjetAllTmp_*_*', 
        'keep *_fixedGridRhoFastjetAllCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentral_*_*', 
        'keep *_fixedGridRhoFastjetCentralCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*', 
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*', 
        'keep *_ak8PFJetsCHSSoftDropMass_*_*', 
        'keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoEcalHaloData_EcalHaloData_*_*', 
        'keep recoGlobalHaloData_GlobalHaloData_*_*', 
        'keep recoHcalHaloData_HcalHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_displacedMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_softPFMuonsTagInfos_*_*', 
        'keep *_softPFElectronsTagInfos_*_*', 
        'keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfImpactParameterTagInfos_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSecondaryVertexTagInfos_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackVertexTagInfos_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*', 
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*', 
        'keep recoPFTaus_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSum_*_*', 
        'keep *_hpsPFTauPUcorrPtSum_*_*', 
        'keep *_hpsPFTauChargedIsoPtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*', 
        'keep *_hpsPFTauFootprintCorrection_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*', 
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectrons_gedGsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep *_egmGedGsfElectronPFIsolation_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'drop *_egmGsfElectronIDs_*_*', 
        'drop *_egmPhotonIDs_*_*', 
        'keep *_gedPhotonCore_*_*', 
        'keep *_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'keep recoPhotons_mustachePhotons_*_*', 
        'keep recoPhotonCores_mustachePhotonCore_*_*', 
        'keep recoPhotons_ootPhotons_*_*', 
        'keep recoPhotonCores_ootPhotonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'keep recoConversions_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoConversions_allConversionsOldEG_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterHF_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_particleFlow_muons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_hlt*_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep *_ak4GenJets_*_*', 
        'keep *_ak8GenJets_*_*', 
        'keep *_ak4GenJetsNoNu_*_*', 
        'keep *_ak8GenJetsNoNu_*_*', 
        'keep *_genParticle_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_muonSimClassifier_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*', 
        'keep L1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep BeamSpotOnlines_scalersRawToDigi_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep *_pfIsolatedElectronsEI_*_*', 
        'keep *_pfIsolatedMuonsEI_*_*', 
        'keep recoPFJets_pfJetsEI_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*', 
        'keep recoPFTaus_pfTausEI_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep *_tcdsDigis_*_*' ) ),
    splitLevel = cms.untracked.int32(0)
)

process.GENRAWEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_muonSimClassifier_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_logErrorHarvester_*_*'),
    splitLevel = cms.untracked.int32(0)
)

process.GenJetParameters = cms.PSet(
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)

process.GeneratorInterfaceAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*')
)

process.GeneratorInterfaceLHE = cms.PSet(
    outputCommands = cms.untracked.vstring('keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep *_externalLHEProducer_LHEScriptOutput_*')
)

process.GeneratorInterfaceRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*')
)

process.GeneratorInterfaceRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*')
)

process.HFRecalParameterBlock = cms.PSet(
    HFdepthOneParameterA = cms.vdouble(0.004123, 0.00602, 0.008201, 0.010489, 0.013379, 
        0.016997, 0.021464, 0.027371, 0.034195, 0.044807, 
        0.058939, 0.125497),
    HFdepthOneParameterB = cms.vdouble(-4e-06, -2e-06, 0.0, 4e-06, 1.5e-05, 
        2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107, 
        0.000425, 0.000209),
    HFdepthTwoParameterA = cms.vdouble(0.002861, 0.004168, 0.0064, 0.008388, 0.011601, 
        0.014425, 0.018633, 0.023232, 0.028274, 0.035447, 
        0.051579, 0.086593),
    HFdepthTwoParameterB = cms.vdouble(-2e-06, -0.0, -7e-06, -6e-06, -2e-06, 
        1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05, 
        0.000157, -3e-06)
)

process.HLTConfigVersion = cms.PSet(
    tableName = cms.string('/dev/CMSSW_9_2_0/PRef/V167')
)

process.HLTDEBUGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( ('drop *', 
        'keep *_logErrorHarvester_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*', 
        'keep *_hltAK4CaloJetsIDPassed_*_*', 
        'keep *_hltAK4CaloJets_*_*', 
        'keep *_hltAK4PFJetsCorrected_*_*', 
        'keep *_hltAK4PFJetsForTaus_*_*', 
        'keep *_hltAK4PFJets_*_*', 
        'keep *_hltAlCaEtaEBRechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*', 
        'keep *_hltAlCaEtaEERechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaEtaEERechitsToDigis_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegionalLowPU_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilter_*_*', 
        'keep *_hltAlCaPhiSymStream_*_*', 
        'keep *_hltAlCaPi0EBRechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*', 
        'keep *_hltAlCaPi0EERechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaPi0EERechitsToDigis_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegionalLowPU_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilter_*_*', 
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonMu5L3_*_*', 
        'keep *_hltCSVJetTagSingleTopEle27_*_*', 
        'keep *_hltCSVJetTagSingleTopIsoMu24_*_*', 
        'keep *_hltCaloJetCorrectedRegional_*_*', 
        'keep *_hltCaloJetCorrected_*_*', 
        'keep *_hltCaloJetL1FastJetCorrected_*_*', 
        'keep *_hltCaloStage2Digis_*_*', 
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCombinedSecondaryVertexBJetTagsCalo_*_*', 
        'keep *_hltCombinedSecondaryVertexBJetTagsPF_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 
        'keep *_hltConvPFTausTightIso_*_*', 
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 
        'keep *_hltConvPFTausTrackFinding_*_*', 
        'keep *_hltConvPFTaus_*_*', 
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltCsc2DRecHits_*_*', 
        'keep *_hltCscSegments_*_*', 
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltDoublePFTau25TrackPt5_*_*', 
        'keep *_hltDoublePFTau25_*_*', 
        'keep *_hltDoublePFTauTightIso45Track5_*_*', 
        'keep *_hltDoublePFTauTightIso45Track_*_*', 
        'keep *_hltDt4DSegments_*_*', 
        'keep *_hltEcalPhiSymFilter_*_*', 
        'keep *_hltEcalRecHitAll_*_*', 
        'keep *_hltEcalRecHit_*_*', 
        'keep *_hltEgammaCandidates_*_*', 
        'keep *_hltEgammaGsfElectrons_*_*', 
        'keep *_hltEgammaGsfTracks_*_*', 
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*', 
        'keep *_hltEle27WP85PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltElectronsVertex_*_*', 
        'keep *_hltFEDSelectorLumiPixels_*_*', 
        'keep *_hltFastPVPixelTracksMerger_*_*', 
        'keep *_hltFastPVPixelTracksRecover_*_*', 
        'keep *_hltFastPVPixelTracks_*_*', 
        'keep *_hltFastPVPixelVertices3D_*_*', 
        'keep *_hltFastPVPixelVertices_*_*', 
        'keep *_hltFastPixelBLifetimeL3TagInfos_*_*', 
        'keep *_hltFastPrimaryVertex_*_*', 
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*', 
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltGmtStage2Digis_*_*', 
        'keep *_hltGoodOnlinePVs_*_*', 
        'keep *_hltGtStage2Digis_*_*', 
        'keep *_hltHICaloJetCorrected_*_*', 
        'keep *_hltHICaloJetIDPassed_*_*', 
        'keep *_hltHIGoodLooseTracks_*_*', 
        'keep *_hltHIPixel3PrimTracks_*_*', 
        'keep *_hltHISelectedVertex_*_*', 
        'keep *_hltHISiPixelClusters_*_*', 
        'keep *_hltHITIPTCorrectorHB_*_*', 
        'keep *_hltHITIPTCorrectorHE_*_*', 
        'keep *_hltHbhereco_*_*', 
        'keep *_hltHfreco_*_*', 
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltHiIslandSuperClustersHI_*_*', 
        'keep *_hltHoreco_*_*', 
        'keep *_hltIsolPixelTrackProdHB_*_*', 
        'keep *_hltIsolPixelTrackProdHE_*_*', 
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*', 
        'keep *_hltIter0HighPtTkMuPixelTracks_*_*', 
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*', 
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter1Merged_*_*', 
        'keep *_hltIter1PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter2HighPtTkMuMerged_*_*', 
        'keep *_hltIter2HighPtTkMuTrackSelectionHighPurity_*_*', 
        'keep *_hltIter2MergedForBTag_*_*', 
        'keep *_hltIter2MergedForElectrons_*_*', 
        'keep *_hltIter2Merged_*_*', 
        'keep *_hltIter2PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter3Merged_*_*', 
        'keep *_hltIter4Merged_*_*', 
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*', 
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*', 
        'keep *_hltL1IsoElectronTrackIsol_*_*', 
        'keep *_hltL1NonIsoElectronTrackIsol_*_*', 
        'keep *_hltL1SeededRecoEcalCandidate_*_*', 
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*', 
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*', 
        'keep *_hltL1sL1EG18er_*_*', 
        'keep *_hltL1sL1ETM36ORETM40_*_*', 
        'keep *_hltL1sL1Jet52ETM30_*_*', 
        'keep *_hltL1sL1SingleEG12_*_*', 
        'keep *_hltL1sL1SingleEG15_*_*', 
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltL1sL1SingleMu10_*_*', 
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*', 
        'keep *_hltL1sMu16Eta2p1_*_*', 
        'keep *_hltL2MuonCandidatesNoVtx_*_*', 
        'keep *_hltL2MuonCandidates_*_*', 
        'keep *_hltL2MuonSeeds_*_*', 
        'keep *_hltL2Muons_*_*', 
        'keep *_hltL2TauJets_*_*', 
        'keep *_hltL3MuonCandidates_*_*', 
        'keep *_hltL3MuonsIOHit_*_*', 
        'keep *_hltL3MuonsLinksCombination_*_*', 
        'keep *_hltL3MuonsOIHit_*_*', 
        'keep *_hltL3MuonsOIState_*_*', 
        'keep *_hltL3Muons_*_*', 
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*', 
        'keep *_hltL3NoFiltersNoVtxMuons_*_*', 
        'keep *_hltL3SecondaryVertexTagInfos_*_*', 
        'keep *_hltL3TkFromL2OICombination_*_*', 
        'keep *_hltL3TkTracksFromL2IOHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIState_*_*', 
        'keep *_hltL3TkTracksFromL2_*_*', 
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIState_*_*', 
        'keep *_hltL3TrajSeedIOHit_*_*', 
        'keep *_hltL3TrajSeedOIHit_*_*', 
        'keep *_hltL3TrajSeedOIState_*_*', 
        'keep *_hltL3TrajectorySeed_*_*', 
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*', 
        'keep *_hltLeadingCentralJets30SingleTopEle27_*_*', 
        'keep *_hltLeadingCentralJets30SingleTopIsoMu24_*_*', 
        'keep *_hltMergedTracks_*_*', 
        'keep *_hltMet_*_*', 
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*', 
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 
        'keep *_hltMuonCSCDigis_*_*', 
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*', 
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*', 
        'keep *_hltMuonDTDigis_*_*', 
        'keep *_hltMuonRPCDigis_*_*', 
        'keep *_hltOnlineBeamSpot_*_*', 
        'keep *_hltOnlinePrimaryVertices_*_*', 
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*', 
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*', 
        'keep *_hltPFJetForBtag_*_*', 
        'keep *_hltPFMuonMerging_*_*', 
        'keep *_hltPFTau15TrackLooseIso_*_*', 
        'keep *_hltPFTau15Track_*_*', 
        'keep *_hltPFTau15_*_*', 
        'keep *_hltPFTau20IsoMuVertex_*_*', 
        'keep *_hltPFTau20TrackLooseIso_*_*', 
        'keep *_hltPFTau20Track_*_*', 
        'keep *_hltPFTau20_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltPFTau25TrackPt5_*_*', 
        'keep *_hltPFTau25_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIso_*_*', 
        'keep *_hltPFTau35TrackPt20_*_*', 
        'keep *_hltPFTau35Track_*_*', 
        'keep *_hltPFTau35_*_*', 
        'keep *_hltPFTauEleVertex20_*_*', 
        'keep *_hltPFTauJetTracksAssociator_*_*', 
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*', 
        'keep *_hltPFTauMediumIso20Track_*_*', 
        'keep *_hltPFTauMediumIso20_*_*', 
        'keep *_hltPFTauMediumIso35Track_*_*', 
        'keep *_hltPFTauMediumIso35_*_*', 
        'keep *_hltPFTauTagInfo_*_*', 
        'keep *_hltPFTauTightIso20TrackTightIso_*_*', 
        'keep *_hltPFTauTightIso20Track_*_*', 
        'keep *_hltPFTauTightIso20_*_*', 
        'keep *_hltPFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltParticleFlowForTaus_*_*', 
        'keep *_hltParticleFlow_*_*', 
        'keep *_hltPixelMatch3HitElectronsActivity_*_*', 
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchElectronsActivity_*_*', 
        'keep *_hltPixelMatchElectronsL1Iso_*_*', 
        'keep *_hltPixelMatchElectronsL1NonIso_*_*', 
        'keep *_hltPixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltPixelTracksElectrons_*_*', 
        'keep *_hltPixelTracksMerged_*_*', 
        'keep *_hltPixelTracks_*_*', 
        'keep *_hltPixelVertices3DbbPhi_*_*', 
        'keep *_hltPixelVertices_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*', 
        'keep *_hltRpcRecHits_*_*', 
        'keep *_hltSelector4CentralJetsL1FastJet_*_*', 
        'keep *_hltSelector8CentralJetsL1FastJet_*_*', 
        'keep *_hltSelectorJets20L1FastJet_*_*', 
        'keep *_hltSiPixelCluster_*_*', 
        'keep *_hltSiPixelClusters_*_*', 
        'keep *_hltSiStripClusters_*_*', 
        'keep *_hltSiStripRawToClustersFacility_*_*', 
        'keep *_hltSingleMu15L3Filtered15_*_*', 
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*', 
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*', 
        'keep *_hltTowerMakerForAll_*_*', 
        'keep *_hltTowerMakerForMuons_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'keep *_hltTriggerSummaryRAW_*_*', 
        'keep *_hltTrimmedPixelVertices_*_*', 
        'keep *_hltVerticesL3_*_*', 
        'keep *_hltVerticesPFFilter_*_*', 
        'keep *_hltVerticesPFSelector_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*', 
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*', 
        'keep LumiScalerss_hltScalersRawToDigi_*_*', 
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*', 
        'keep TrackingRecHitsOwned_hltL3Muons_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep recoCaloJets_*_*_*', 
        'keep recoCaloMETs_*_*_*', 
        'keep recoCaloMETs_hltMet_*_*', 
        'keep recoCompositeCandidates_*_*_*', 
        'keep recoElectrons_*_*_*', 
        'keep recoIsolatedPixelTrackCandidates_*_*_*', 
        'keep recoMETs_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoPFTaus_*_*_*', 
        'keep recoRecoChargedCandidates_*_*_*', 
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*', 
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidates_*_*_*', 
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3MuonsOIHit_*_*', 
        'keep recoTracks_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3Muons_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*', 
        'keep triggerTriggerEventWithRefs_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep triggerTriggerFilterObjectWithRefs_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*' ) ),
    splitLevel = cms.untracked.int32(0)
)

process.HLTDebugFEVT = cms.PSet(
    outputCommands = cms.vstring( ('drop *_hlt*_*_*', 
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*', 
        'keep *_hltAK4CaloJetsIDPassed_*_*', 
        'keep *_hltAK4CaloJets_*_*', 
        'keep *_hltAK4PFJetsCorrected_*_*', 
        'keep *_hltAK4PFJetsForTaus_*_*', 
        'keep *_hltAK4PFJets_*_*', 
        'keep *_hltAlCaEtaEBRechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*', 
        'keep *_hltAlCaEtaEERechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaEtaEERechitsToDigis_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegionalLowPU_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilter_*_*', 
        'keep *_hltAlCaPhiSymStream_*_*', 
        'keep *_hltAlCaPi0EBRechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*', 
        'keep *_hltAlCaPi0EERechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaPi0EERechitsToDigis_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegionalLowPU_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilter_*_*', 
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonMu5L3_*_*', 
        'keep *_hltCSVJetTagSingleTopEle27_*_*', 
        'keep *_hltCSVJetTagSingleTopIsoMu24_*_*', 
        'keep *_hltCaloJetCorrectedRegional_*_*', 
        'keep *_hltCaloJetCorrected_*_*', 
        'keep *_hltCaloJetL1FastJetCorrected_*_*', 
        'keep *_hltCaloStage2Digis_*_*', 
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCombinedSecondaryVertexBJetTagsCalo_*_*', 
        'keep *_hltCombinedSecondaryVertexBJetTagsPF_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 
        'keep *_hltConvPFTausTightIso_*_*', 
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 
        'keep *_hltConvPFTausTrackFinding_*_*', 
        'keep *_hltConvPFTaus_*_*', 
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltCsc2DRecHits_*_*', 
        'keep *_hltCscSegments_*_*', 
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltDoublePFTau25TrackPt5_*_*', 
        'keep *_hltDoublePFTau25_*_*', 
        'keep *_hltDoublePFTauTightIso45Track5_*_*', 
        'keep *_hltDoublePFTauTightIso45Track_*_*', 
        'keep *_hltDt4DSegments_*_*', 
        'keep *_hltEcalPhiSymFilter_*_*', 
        'keep *_hltEcalRecHitAll_*_*', 
        'keep *_hltEcalRecHit_*_*', 
        'keep *_hltEgammaCandidates_*_*', 
        'keep *_hltEgammaGsfElectrons_*_*', 
        'keep *_hltEgammaGsfTracks_*_*', 
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*', 
        'keep *_hltEle27WP85PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltElectronsVertex_*_*', 
        'keep *_hltFEDSelectorLumiPixels_*_*', 
        'keep *_hltFastPVPixelTracksMerger_*_*', 
        'keep *_hltFastPVPixelTracksRecover_*_*', 
        'keep *_hltFastPVPixelTracks_*_*', 
        'keep *_hltFastPVPixelVertices3D_*_*', 
        'keep *_hltFastPVPixelVertices_*_*', 
        'keep *_hltFastPixelBLifetimeL3TagInfos_*_*', 
        'keep *_hltFastPrimaryVertex_*_*', 
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*', 
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltGmtStage2Digis_*_*', 
        'keep *_hltGoodOnlinePVs_*_*', 
        'keep *_hltGtStage2Digis_*_*', 
        'keep *_hltHICaloJetCorrected_*_*', 
        'keep *_hltHICaloJetIDPassed_*_*', 
        'keep *_hltHIGoodLooseTracks_*_*', 
        'keep *_hltHIPixel3PrimTracks_*_*', 
        'keep *_hltHISelectedVertex_*_*', 
        'keep *_hltHISiPixelClusters_*_*', 
        'keep *_hltHITIPTCorrectorHB_*_*', 
        'keep *_hltHITIPTCorrectorHE_*_*', 
        'keep *_hltHbhereco_*_*', 
        'keep *_hltHfreco_*_*', 
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltHiIslandSuperClustersHI_*_*', 
        'keep *_hltHoreco_*_*', 
        'keep *_hltIsolPixelTrackProdHB_*_*', 
        'keep *_hltIsolPixelTrackProdHE_*_*', 
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*', 
        'keep *_hltIter0HighPtTkMuPixelTracks_*_*', 
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*', 
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter1Merged_*_*', 
        'keep *_hltIter1PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter2HighPtTkMuMerged_*_*', 
        'keep *_hltIter2HighPtTkMuTrackSelectionHighPurity_*_*', 
        'keep *_hltIter2MergedForBTag_*_*', 
        'keep *_hltIter2MergedForElectrons_*_*', 
        'keep *_hltIter2Merged_*_*', 
        'keep *_hltIter2PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter3Merged_*_*', 
        'keep *_hltIter4Merged_*_*', 
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*', 
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*', 
        'keep *_hltL1IsoElectronTrackIsol_*_*', 
        'keep *_hltL1NonIsoElectronTrackIsol_*_*', 
        'keep *_hltL1SeededRecoEcalCandidate_*_*', 
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*', 
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*', 
        'keep *_hltL1sL1EG18er_*_*', 
        'keep *_hltL1sL1ETM36ORETM40_*_*', 
        'keep *_hltL1sL1Jet52ETM30_*_*', 
        'keep *_hltL1sL1SingleEG12_*_*', 
        'keep *_hltL1sL1SingleEG15_*_*', 
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltL1sL1SingleMu10_*_*', 
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*', 
        'keep *_hltL1sMu16Eta2p1_*_*', 
        'keep *_hltL2MuonCandidatesNoVtx_*_*', 
        'keep *_hltL2MuonCandidates_*_*', 
        'keep *_hltL2MuonSeeds_*_*', 
        'keep *_hltL2Muons_*_*', 
        'keep *_hltL2TauJets_*_*', 
        'keep *_hltL3MuonCandidates_*_*', 
        'keep *_hltL3MuonsIOHit_*_*', 
        'keep *_hltL3MuonsLinksCombination_*_*', 
        'keep *_hltL3MuonsOIHit_*_*', 
        'keep *_hltL3MuonsOIState_*_*', 
        'keep *_hltL3Muons_*_*', 
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*', 
        'keep *_hltL3NoFiltersNoVtxMuons_*_*', 
        'keep *_hltL3SecondaryVertexTagInfos_*_*', 
        'keep *_hltL3TkFromL2OICombination_*_*', 
        'keep *_hltL3TkTracksFromL2IOHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIState_*_*', 
        'keep *_hltL3TkTracksFromL2_*_*', 
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIState_*_*', 
        'keep *_hltL3TrajSeedIOHit_*_*', 
        'keep *_hltL3TrajSeedOIHit_*_*', 
        'keep *_hltL3TrajSeedOIState_*_*', 
        'keep *_hltL3TrajectorySeed_*_*', 
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*', 
        'keep *_hltLeadingCentralJets30SingleTopEle27_*_*', 
        'keep *_hltLeadingCentralJets30SingleTopIsoMu24_*_*', 
        'keep *_hltMergedTracks_*_*', 
        'keep *_hltMet_*_*', 
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*', 
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 
        'keep *_hltMuonCSCDigis_*_*', 
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*', 
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*', 
        'keep *_hltMuonDTDigis_*_*', 
        'keep *_hltMuonRPCDigis_*_*', 
        'keep *_hltOnlineBeamSpot_*_*', 
        'keep *_hltOnlinePrimaryVertices_*_*', 
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*', 
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*', 
        'keep *_hltPFJetForBtag_*_*', 
        'keep *_hltPFMuonMerging_*_*', 
        'keep *_hltPFTau15TrackLooseIso_*_*', 
        'keep *_hltPFTau15Track_*_*', 
        'keep *_hltPFTau15_*_*', 
        'keep *_hltPFTau20IsoMuVertex_*_*', 
        'keep *_hltPFTau20TrackLooseIso_*_*', 
        'keep *_hltPFTau20Track_*_*', 
        'keep *_hltPFTau20_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltPFTau25TrackPt5_*_*', 
        'keep *_hltPFTau25_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIso_*_*', 
        'keep *_hltPFTau35TrackPt20_*_*', 
        'keep *_hltPFTau35Track_*_*', 
        'keep *_hltPFTau35_*_*', 
        'keep *_hltPFTauEleVertex20_*_*', 
        'keep *_hltPFTauJetTracksAssociator_*_*', 
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*', 
        'keep *_hltPFTauMediumIso20Track_*_*', 
        'keep *_hltPFTauMediumIso20_*_*', 
        'keep *_hltPFTauMediumIso35Track_*_*', 
        'keep *_hltPFTauMediumIso35_*_*', 
        'keep *_hltPFTauTagInfo_*_*', 
        'keep *_hltPFTauTightIso20TrackTightIso_*_*', 
        'keep *_hltPFTauTightIso20Track_*_*', 
        'keep *_hltPFTauTightIso20_*_*', 
        'keep *_hltPFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltParticleFlowForTaus_*_*', 
        'keep *_hltParticleFlow_*_*', 
        'keep *_hltPixelMatch3HitElectronsActivity_*_*', 
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchElectronsActivity_*_*', 
        'keep *_hltPixelMatchElectronsL1Iso_*_*', 
        'keep *_hltPixelMatchElectronsL1NonIso_*_*', 
        'keep *_hltPixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltPixelTracksElectrons_*_*', 
        'keep *_hltPixelTracksMerged_*_*', 
        'keep *_hltPixelTracks_*_*', 
        'keep *_hltPixelVertices3DbbPhi_*_*', 
        'keep *_hltPixelVertices_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*', 
        'keep *_hltRpcRecHits_*_*', 
        'keep *_hltSelector4CentralJetsL1FastJet_*_*', 
        'keep *_hltSelector8CentralJetsL1FastJet_*_*', 
        'keep *_hltSelectorJets20L1FastJet_*_*', 
        'keep *_hltSiPixelCluster_*_*', 
        'keep *_hltSiPixelClusters_*_*', 
        'keep *_hltSiStripClusters_*_*', 
        'keep *_hltSiStripRawToClustersFacility_*_*', 
        'keep *_hltSingleMu15L3Filtered15_*_*', 
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*', 
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*', 
        'keep *_hltTowerMakerForAll_*_*', 
        'keep *_hltTowerMakerForMuons_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'keep *_hltTriggerSummaryRAW_*_*', 
        'keep *_hltTrimmedPixelVertices_*_*', 
        'keep *_hltVerticesL3_*_*', 
        'keep *_hltVerticesPFFilter_*_*', 
        'keep *_hltVerticesPFSelector_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*', 
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*', 
        'keep LumiScalerss_hltScalersRawToDigi_*_*', 
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*', 
        'keep TrackingRecHitsOwned_hltL3Muons_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep recoCaloJets_*_*_*', 
        'keep recoCaloMETs_*_*_*', 
        'keep recoCaloMETs_hltMet_*_*', 
        'keep recoCompositeCandidates_*_*_*', 
        'keep recoElectrons_*_*_*', 
        'keep recoIsolatedPixelTrackCandidates_*_*_*', 
        'keep recoMETs_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoPFTaus_*_*_*', 
        'keep recoRecoChargedCandidates_*_*_*', 
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*', 
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidates_*_*_*', 
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3MuonsOIHit_*_*', 
        'keep recoTracks_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3Muons_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*', 
        'keep triggerTriggerEventWithRefs_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep triggerTriggerFilterObjectWithRefs_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*' ) )
)

process.HLTDebugRAW = cms.PSet(
    outputCommands = cms.vstring( ('drop *_hlt*_*_*', 
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*', 
        'keep *_hltAK4CaloJetsIDPassed_*_*', 
        'keep *_hltAK4CaloJets_*_*', 
        'keep *_hltAK4PFJetsCorrected_*_*', 
        'keep *_hltAK4PFJetsForTaus_*_*', 
        'keep *_hltAK4PFJets_*_*', 
        'keep *_hltAlCaEtaEBRechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*', 
        'keep *_hltAlCaEtaEERechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaEtaEERechitsToDigis_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegionalLowPU_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilter_*_*', 
        'keep *_hltAlCaPhiSymStream_*_*', 
        'keep *_hltAlCaPi0EBRechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*', 
        'keep *_hltAlCaPi0EERechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaPi0EERechitsToDigis_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegionalLowPU_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilter_*_*', 
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonMu5L3_*_*', 
        'keep *_hltCSVJetTagSingleTopEle27_*_*', 
        'keep *_hltCSVJetTagSingleTopIsoMu24_*_*', 
        'keep *_hltCaloJetCorrectedRegional_*_*', 
        'keep *_hltCaloJetCorrected_*_*', 
        'keep *_hltCaloJetL1FastJetCorrected_*_*', 
        'keep *_hltCaloStage2Digis_*_*', 
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCombinedSecondaryVertexBJetTagsCalo_*_*', 
        'keep *_hltCombinedSecondaryVertexBJetTagsPF_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 
        'keep *_hltConvPFTausTightIso_*_*', 
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 
        'keep *_hltConvPFTausTrackFinding_*_*', 
        'keep *_hltConvPFTaus_*_*', 
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltCsc2DRecHits_*_*', 
        'keep *_hltCscSegments_*_*', 
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltDoublePFTau25TrackPt5_*_*', 
        'keep *_hltDoublePFTau25_*_*', 
        'keep *_hltDoublePFTauTightIso45Track5_*_*', 
        'keep *_hltDoublePFTauTightIso45Track_*_*', 
        'keep *_hltDt4DSegments_*_*', 
        'keep *_hltEcalPhiSymFilter_*_*', 
        'keep *_hltEcalRecHitAll_*_*', 
        'keep *_hltEcalRecHit_*_*', 
        'keep *_hltEgammaCandidates_*_*', 
        'keep *_hltEgammaGsfElectrons_*_*', 
        'keep *_hltEgammaGsfTracks_*_*', 
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*', 
        'keep *_hltEle27WP85PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltElectronsVertex_*_*', 
        'keep *_hltFEDSelectorLumiPixels_*_*', 
        'keep *_hltFastPVPixelTracksMerger_*_*', 
        'keep *_hltFastPVPixelTracksRecover_*_*', 
        'keep *_hltFastPVPixelTracks_*_*', 
        'keep *_hltFastPVPixelVertices3D_*_*', 
        'keep *_hltFastPVPixelVertices_*_*', 
        'keep *_hltFastPixelBLifetimeL3TagInfos_*_*', 
        'keep *_hltFastPrimaryVertex_*_*', 
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*', 
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltGmtStage2Digis_*_*', 
        'keep *_hltGoodOnlinePVs_*_*', 
        'keep *_hltGtStage2Digis_*_*', 
        'keep *_hltHICaloJetCorrected_*_*', 
        'keep *_hltHICaloJetIDPassed_*_*', 
        'keep *_hltHIGoodLooseTracks_*_*', 
        'keep *_hltHIPixel3PrimTracks_*_*', 
        'keep *_hltHISelectedVertex_*_*', 
        'keep *_hltHISiPixelClusters_*_*', 
        'keep *_hltHITIPTCorrectorHB_*_*', 
        'keep *_hltHITIPTCorrectorHE_*_*', 
        'keep *_hltHbhereco_*_*', 
        'keep *_hltHfreco_*_*', 
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltHiIslandSuperClustersHI_*_*', 
        'keep *_hltHoreco_*_*', 
        'keep *_hltIsolPixelTrackProdHB_*_*', 
        'keep *_hltIsolPixelTrackProdHE_*_*', 
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*', 
        'keep *_hltIter0HighPtTkMuPixelTracks_*_*', 
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*', 
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter1Merged_*_*', 
        'keep *_hltIter1PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter2HighPtTkMuMerged_*_*', 
        'keep *_hltIter2HighPtTkMuTrackSelectionHighPurity_*_*', 
        'keep *_hltIter2MergedForBTag_*_*', 
        'keep *_hltIter2MergedForElectrons_*_*', 
        'keep *_hltIter2Merged_*_*', 
        'keep *_hltIter2PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter3Merged_*_*', 
        'keep *_hltIter4Merged_*_*', 
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*', 
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*', 
        'keep *_hltL1IsoElectronTrackIsol_*_*', 
        'keep *_hltL1NonIsoElectronTrackIsol_*_*', 
        'keep *_hltL1SeededRecoEcalCandidate_*_*', 
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*', 
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*', 
        'keep *_hltL1sL1EG18er_*_*', 
        'keep *_hltL1sL1ETM36ORETM40_*_*', 
        'keep *_hltL1sL1Jet52ETM30_*_*', 
        'keep *_hltL1sL1SingleEG12_*_*', 
        'keep *_hltL1sL1SingleEG15_*_*', 
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltL1sL1SingleMu10_*_*', 
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*', 
        'keep *_hltL1sMu16Eta2p1_*_*', 
        'keep *_hltL2MuonCandidatesNoVtx_*_*', 
        'keep *_hltL2MuonCandidates_*_*', 
        'keep *_hltL2MuonSeeds_*_*', 
        'keep *_hltL2Muons_*_*', 
        'keep *_hltL2TauJets_*_*', 
        'keep *_hltL3MuonCandidates_*_*', 
        'keep *_hltL3MuonsIOHit_*_*', 
        'keep *_hltL3MuonsLinksCombination_*_*', 
        'keep *_hltL3MuonsOIHit_*_*', 
        'keep *_hltL3MuonsOIState_*_*', 
        'keep *_hltL3Muons_*_*', 
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*', 
        'keep *_hltL3NoFiltersNoVtxMuons_*_*', 
        'keep *_hltL3SecondaryVertexTagInfos_*_*', 
        'keep *_hltL3TkFromL2OICombination_*_*', 
        'keep *_hltL3TkTracksFromL2IOHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIState_*_*', 
        'keep *_hltL3TkTracksFromL2_*_*', 
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIState_*_*', 
        'keep *_hltL3TrajSeedIOHit_*_*', 
        'keep *_hltL3TrajSeedOIHit_*_*', 
        'keep *_hltL3TrajSeedOIState_*_*', 
        'keep *_hltL3TrajectorySeed_*_*', 
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*', 
        'keep *_hltLeadingCentralJets30SingleTopEle27_*_*', 
        'keep *_hltLeadingCentralJets30SingleTopIsoMu24_*_*', 
        'keep *_hltMergedTracks_*_*', 
        'keep *_hltMet_*_*', 
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*', 
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 
        'keep *_hltMuonCSCDigis_*_*', 
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*', 
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*', 
        'keep *_hltMuonDTDigis_*_*', 
        'keep *_hltMuonRPCDigis_*_*', 
        'keep *_hltOnlineBeamSpot_*_*', 
        'keep *_hltOnlinePrimaryVertices_*_*', 
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*', 
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*', 
        'keep *_hltPFJetForBtag_*_*', 
        'keep *_hltPFMuonMerging_*_*', 
        'keep *_hltPFTau15TrackLooseIso_*_*', 
        'keep *_hltPFTau15Track_*_*', 
        'keep *_hltPFTau15_*_*', 
        'keep *_hltPFTau20IsoMuVertex_*_*', 
        'keep *_hltPFTau20TrackLooseIso_*_*', 
        'keep *_hltPFTau20Track_*_*', 
        'keep *_hltPFTau20_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltPFTau25TrackPt5_*_*', 
        'keep *_hltPFTau25_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIso_*_*', 
        'keep *_hltPFTau35TrackPt20_*_*', 
        'keep *_hltPFTau35Track_*_*', 
        'keep *_hltPFTau35_*_*', 
        'keep *_hltPFTauEleVertex20_*_*', 
        'keep *_hltPFTauJetTracksAssociator_*_*', 
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*', 
        'keep *_hltPFTauMediumIso20Track_*_*', 
        'keep *_hltPFTauMediumIso20_*_*', 
        'keep *_hltPFTauMediumIso35Track_*_*', 
        'keep *_hltPFTauMediumIso35_*_*', 
        'keep *_hltPFTauTagInfo_*_*', 
        'keep *_hltPFTauTightIso20TrackTightIso_*_*', 
        'keep *_hltPFTauTightIso20Track_*_*', 
        'keep *_hltPFTauTightIso20_*_*', 
        'keep *_hltPFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltParticleFlowForTaus_*_*', 
        'keep *_hltParticleFlow_*_*', 
        'keep *_hltPixelMatch3HitElectronsActivity_*_*', 
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchElectronsActivity_*_*', 
        'keep *_hltPixelMatchElectronsL1Iso_*_*', 
        'keep *_hltPixelMatchElectronsL1NonIso_*_*', 
        'keep *_hltPixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltPixelTracksElectrons_*_*', 
        'keep *_hltPixelTracksMerged_*_*', 
        'keep *_hltPixelTracks_*_*', 
        'keep *_hltPixelVertices3DbbPhi_*_*', 
        'keep *_hltPixelVertices_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*', 
        'keep *_hltRpcRecHits_*_*', 
        'keep *_hltSelector4CentralJetsL1FastJet_*_*', 
        'keep *_hltSelector8CentralJetsL1FastJet_*_*', 
        'keep *_hltSelectorJets20L1FastJet_*_*', 
        'keep *_hltSiPixelCluster_*_*', 
        'keep *_hltSiPixelClusters_*_*', 
        'keep *_hltSiStripClusters_*_*', 
        'keep *_hltSiStripRawToClustersFacility_*_*', 
        'keep *_hltSingleMu15L3Filtered15_*_*', 
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*', 
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*', 
        'keep *_hltTowerMakerForAll_*_*', 
        'keep *_hltTowerMakerForMuons_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'keep *_hltTriggerSummaryRAW_*_*', 
        'keep *_hltTrimmedPixelVertices_*_*', 
        'keep *_hltVerticesL3_*_*', 
        'keep *_hltVerticesPFFilter_*_*', 
        'keep *_hltVerticesPFSelector_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*', 
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*', 
        'keep LumiScalerss_hltScalersRawToDigi_*_*', 
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*', 
        'keep TrackingRecHitsOwned_hltL3Muons_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep recoCaloJets_*_*_*', 
        'keep recoCaloMETs_*_*_*', 
        'keep recoCaloMETs_hltMet_*_*', 
        'keep recoCompositeCandidates_*_*_*', 
        'keep recoElectrons_*_*_*', 
        'keep recoIsolatedPixelTrackCandidates_*_*_*', 
        'keep recoMETs_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoPFTaus_*_*_*', 
        'keep recoRecoChargedCandidates_*_*_*', 
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*', 
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidates_*_*_*', 
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3MuonsOIHit_*_*', 
        'keep recoTracks_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3Muons_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*', 
        'keep triggerTriggerEventWithRefs_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep triggerTriggerFilterObjectWithRefs_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*' ) )
)

process.HLTIter0GroupedCkfTrajectoryBuilderIT = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(False),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator9'),
    foundHitBonus = cms.double(5.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter0PSetTrajectoryFilterIT')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter0PSetTrajectoryFilterIT')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useHitsSplitting = cms.bool(False),
    useSameTrajFilter = cms.bool(True)
)

process.HLTIter0HighPtTkMuPSetTrajectoryBuilderIT = cms.PSet(
    ComponentType = cms.string('CkfTrajectoryBuilder'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator30'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(4),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter0HighPtTkMuPSetTrajectoryFilterIT')
    ),
    updator = cms.string('hltESPKFUpdator')
)

process.HLTIter0HighPtTkMuPSetTrajectoryFilterIT = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.3),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(10.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.9),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTIter0IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator30'),
    foundHitBonus = cms.double(1000.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(True),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(1.0),
    maxCand = cms.int32(5),
    minNrOfHitsForRebuild = cms.int32(2),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(10.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.9),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTIter0IterL3MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator30'),
    foundHitBonus = cms.double(1000.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(True),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(1.0),
    maxCand = cms.int32(5),
    minNrOfHitsForRebuild = cms.int32(2),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTIter0PSetTrajectoryBuilderIT = cms.PSet(
    ComponentType = cms.string('CkfTrajectoryBuilder'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator9'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter0PSetTrajectoryFilterIT')
    ),
    updator = cms.string('hltESPKFUpdator')
)

process.HLTIter0PSetTrajectoryFilterIT = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(4),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.3),
    minimumNumberOfHits = cms.int32(4),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTIter1GroupedCkfTrajectoryBuilderIT = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltIter1ESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator16'),
    foundHitBonus = cms.double(5.0),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter1PSetTrajectoryFilterIT')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTIter1PSetTrajectoryBuilderIT = cms.PSet(
    ComponentType = cms.string('CkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltIter1ESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator16'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter1PSetTrajectoryFilterIT')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTIter1PSetTrajectoryFilterIT = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.2),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTIter2GroupedCkfTrajectoryBuilderIT = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(False),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator16'),
    foundHitBonus = cms.double(5.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter2PSetTrajectoryFilterIT')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter2PSetTrajectoryFilterIT')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useHitsSplitting = cms.bool(False),
    useSameTrajFilter = cms.bool(True)
)

process.HLTIter2HighPtTkMuPSetTrajectoryBuilderIT = cms.PSet(
    ComponentType = cms.string('CkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltIter2HighPtTkMuESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator30'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter2HighPtTkMuPSetTrajectoryFilterIT')
    ),
    updator = cms.string('hltESPKFUpdator')
)

process.HLTIter2HighPtTkMuPSetTrajectoryFilterIT = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(3),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.3),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTIter2IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltIter2HighPtTkMuESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator30'),
    foundHitBonus = cms.double(1000.0),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(False),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter2IterL3FromL1MuonPSetTrajectoryFilterIT')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTIter2IterL3FromL1MuonPSetTrajectoryFilterIT = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(3),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.3),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTIter2IterL3MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltIter2HighPtTkMuESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator30'),
    foundHitBonus = cms.double(1000.0),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(False),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter2IterL3MuonPSetTrajectoryFilterIT')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTIter2IterL3MuonPSetTrajectoryFilterIT = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(3),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.3),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTIter2PSetTrajectoryBuilderIT = cms.PSet(
    ComponentType = cms.string('CkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltIter2ESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator16'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter2PSetTrajectoryFilterIT')
    ),
    updator = cms.string('hltESPKFUpdator')
)

process.HLTIter2PSetTrajectoryFilterIT = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.3),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(1),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTIter3PSetTrajectoryBuilderIT = cms.PSet(
    ComponentType = cms.string('CkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltIter3ESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator16'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(1),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter3PSetTrajectoryFilterIT')
    ),
    updator = cms.string('hltESPKFUpdator')
)

process.HLTIter3PSetTrajectoryFilterIT = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(0),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.3),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTIter4PSetTrajectoryBuilderIT = cms.PSet(
    ComponentType = cms.string('CkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltIter4ESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator16'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(1),
    minNrOfHitsForRebuild = cms.untracked.int32(4),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTIter4PSetTrajectoryFilterIT')
    ),
    updator = cms.string('hltESPKFUpdator')
)

process.HLTIter4PSetTrajectoryFilterIT = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(0),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.3),
    minimumNumberOfHits = cms.int32(6),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetCkf3HitTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(-1),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.9),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetCkfTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(-1),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.9),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetCkfTrajectoryFilterIterL3OI = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(10.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(-1),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(3.0),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetDetachedCkfTrajectoryBuilderForHI = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPChi2MeasurementEstimator9'),
    foundHitBonus = cms.double(5.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetDetachedCkfTrajectoryFilterForHI')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    maxDPhiForLooperReconstruction = cms.double(0.0),
    maxPtForLooperReconstruction = cms.double(0.0),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialForHI'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOppositeForHI'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetDetachedCkfTrajectoryFilterForHI')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTPSetDetachedCkfTrajectoryBuilderForHIGlobalPt8 = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPChi2MeasurementEstimator9'),
    foundHitBonus = cms.double(5.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetDetachedCkfTrajectoryFilterForHIGlobalPt8')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    maxDPhiForLooperReconstruction = cms.double(0.0),
    maxPtForLooperReconstruction = cms.double(0.0),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialForHI'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOppositeForHI'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetDetachedCkfTrajectoryFilterForHIGlobalPt8')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTPSetDetachedCkfTrajectoryFilterForHI = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(0.701),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.3),
    minimumNumberOfHits = cms.int32(6),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetDetachedCkfTrajectoryFilterForHIGlobalPt8 = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(0.701),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(8.0),
    minimumNumberOfHits = cms.int32(6),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetDetachedQuadStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetDetachedQuadStepTrajectoryFilter')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetDetachedQuadStepTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTPSetDetachedQuadStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.075),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetDetachedStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator9'),
    foundHitBonus = cms.double(5.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetDetachedStepTrajectoryFilter')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetDetachedStepTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTPSetDetachedStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CompositeTrajectoryFilter'),
    filters = cms.VPSet(cms.PSet(
        refToPSet_ = cms.string('HLTPSetDetachedStepTrajectoryFilterBase')
    ))
)

process.HLTPSetDetachedStepTrajectoryFilterBase = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(2),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.075),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetDetachedTripletStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetDetachedTripletStepTrajectoryFilter')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetDetachedTripletStepTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTPSetDetachedTripletStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.075),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetGroupedCkfTrajectoryBuilderIterL3ForOI = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltSiStripClusters'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    deltaEta = cms.double(-1.0),
    deltaPhi = cms.double(-1.0),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator30'),
    foundHitBonus = cms.double(1000.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetCkfTrajectoryFilterIterL3OI')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(5),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    propagatorProximity = cms.string('SteppingHelixPropagatorAny'),
    requireSeedHitsInRebuild = cms.bool(False),
    rescaleErrorIfFail = cms.double(1.0),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetCkfTrajectoryFilterIterL3OI')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True),
    useSeedLayer = cms.bool(False)
)

process.HLTPSetHighPtTripletStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetHighPtTripletStepTrajectoryFilter')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetHighPtTripletStepTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTPSetHighPtTripletStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.2),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(5),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetInitialCkfTrajectoryBuilderForHI = cms.PSet(
    ComponentType = cms.string('CkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    intermediateCleaning = cms.bool(False),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialForHI'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOppositeForHI'),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetInitialCkfTrajectoryFilterForHI')
    ),
    updator = cms.string('hltESPKFUpdator')
)

process.HLTPSetInitialCkfTrajectoryFilterForHI = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.9),
    minimumNumberOfHits = cms.int32(6),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetInitialStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPInitialStepChi2ChargeMeasurementEstimator30'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetInitialStepTrajectoryFilter')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(True),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(1),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetInitialStepTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTPSetInitialStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.2),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetInitialStepTrajectoryFilterBase = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(2),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.2),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetJetCoreStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    foundHitBonus = cms.double(5.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetJetCoreStepTrajectoryFilter')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(50),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetJetCoreStepTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTPSetJetCoreStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.1),
    minimumNumberOfHits = cms.int32(4),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetLowPtQuadStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetLowPtQuadStepTrajectoryFilter')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(4),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetLowPtQuadStepTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTPSetLowPtQuadStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.075),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetLowPtStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator9'),
    foundHitBonus = cms.double(5.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetLowPtStepTrajectoryFilter')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(4),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetLowPtStepTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTPSetLowPtStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(1),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.075),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetLowPtTripletStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetLowPtTripletStepTrajectoryFilter')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(4),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetLowPtTripletStepTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTPSetLowPtTripletStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.075),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetMixedStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPChi2ChargeTightMeasurementEstimator16'),
    foundHitBonus = cms.double(5.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetMixedStepTrajectoryFilter')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialForMixedStep'),
    propagatorOpposite = cms.string('PropagatorWithMaterialForMixedStepOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetMixedStepTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTPSetMixedStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.4),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.1),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetMixedStepTrajectoryFilterBase = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(0),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.05),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetMixedTripletStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPMixedTripletStepChi2ChargeMeasurementEstimator16'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetMixedTripletStepTrajectoryFilter')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialForMixedStep'),
    propagatorOpposite = cms.string('PropagatorWithMaterialForMixedStepOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetMixedTripletStepTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTPSetMixedTripletStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.4),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.1),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetMuTrackJpsiEffTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('CkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator30'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(1),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetMuTrackJpsiEffTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator')
)

process.HLTPSetMuTrackJpsiEffTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(9),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(1.0),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetMuTrackJpsiTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('CkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator30'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(1),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetMuTrackJpsiTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator')
)

process.HLTPSetMuTrackJpsiTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(8),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(10.0),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetMuonCkfTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('MuonCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    deltaEta = cms.double(-1.0),
    deltaPhi = cms.double(-1.0),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator30'),
    intermediateCleaning = cms.bool(False),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    propagatorProximity = cms.string('SteppingHelixPropagatorAny'),
    rescaleErrorIfFail = cms.double(1.0),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetMuonCkfTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSeedLayer = cms.bool(False)
)

process.HLTPSetMuonCkfTrajectoryBuilderSeedHit = cms.PSet(
    ComponentType = cms.string('MuonCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    deltaEta = cms.double(-1.0),
    deltaPhi = cms.double(-1.0),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator30'),
    intermediateCleaning = cms.bool(False),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    propagatorProximity = cms.string('SteppingHelixPropagatorAny'),
    rescaleErrorIfFail = cms.double(1.0),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetMuonCkfTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSeedLayer = cms.bool(True)
)

process.HLTPSetMuonCkfTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(-1),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.9),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetMuonTrackingRegionBuilder8356 = cms.PSet(
    DeltaEta = cms.double(0.2),
    DeltaPhi = cms.double(0.2),
    DeltaR = cms.double(0.2),
    DeltaZ = cms.double(15.9),
    EtaR_UpperLimit_Par1 = cms.double(0.25),
    EtaR_UpperLimit_Par2 = cms.double(0.15),
    Eta_fixed = cms.bool(False),
    Eta_min = cms.double(0.1),
    MeasurementTrackerName = cms.InputTag("hltESPMeasurementTracker"),
    OnDemand = cms.int32(-1),
    PhiR_UpperLimit_Par1 = cms.double(0.6),
    PhiR_UpperLimit_Par2 = cms.double(0.2),
    Phi_fixed = cms.bool(False),
    Phi_min = cms.double(0.1),
    Pt_fixed = cms.bool(False),
    Pt_min = cms.double(1.5),
    Rescale_Dz = cms.double(3.0),
    Rescale_eta = cms.double(3.0),
    Rescale_phi = cms.double(3.0),
    UseVertex = cms.bool(False),
    Z_fixed = cms.bool(True),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    input = cms.InputTag("hltL2Muons","UpdatedAtVtx"),
    maxRegions = cms.int32(2),
    precise = cms.bool(True),
    vertexCollection = cms.InputTag("pixelVertices")
)

process.HLTPSetPixelLessStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPPixelLessStepChi2ChargeMeasurementEstimator16'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPixelLessStepTrajectoryFilter')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(4),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPixelLessStepTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTPSetPixelLessStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(0),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.1),
    minimumNumberOfHits = cms.int32(4),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(1),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetPixelLessStepTrajectoryFilterBase = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(0),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.05),
    minimumNumberOfHits = cms.int32(4),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetPixelPairCkfTrajectoryBuilderForHI = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator9ForHI'),
    foundHitBonus = cms.double(5.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPixelPairCkfTrajectoryFilterForHI')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialForHI'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOppositeForHI'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPixelPairCkfTrajectoryFilterForHI')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTPSetPixelPairCkfTrajectoryBuilderForHIGlobalPt8 = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator9ForHI'),
    foundHitBonus = cms.double(5.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPixelPairCkfTrajectoryFilterForHIGlobalPt8')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialForHI'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOppositeForHI'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPixelPairCkfTrajectoryFilterForHIGlobalPt8')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HLTPSetPixelPairCkfTrajectoryFilterForHI = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(100),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(1.0),
    minimumNumberOfHits = cms.int32(6),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetPixelPairCkfTrajectoryFilterForHIGlobalPt8 = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(100),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(8.0),
    minimumNumberOfHits = cms.int32(6),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetPixelPairStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPPixelPairStepChi2ChargeMeasurementEstimator9'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPixelPairStepTrajectoryFilterInOut')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPixelPairStepTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(False)
)

process.HLTPSetPixelPairStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.1),
    minimumNumberOfHits = cms.int32(4),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetPixelPairStepTrajectoryFilterBase = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(2),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.1),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetPixelPairStepTrajectoryFilterInOut = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.1),
    minimumNumberOfHits = cms.int32(4),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(1),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetPvClusterComparer = cms.PSet(
    track_chi2_max = cms.double(9999999.0),
    track_prob_min = cms.double(-1.0),
    track_pt_max = cms.double(10.0),
    track_pt_min = cms.double(2.5)
)

process.HLTPSetPvClusterComparerForBTag = cms.PSet(
    track_chi2_max = cms.double(20.0),
    track_prob_min = cms.double(-1.0),
    track_pt_max = cms.double(20.0),
    track_pt_min = cms.double(0.1)
)

process.HLTPSetPvClusterComparerForIT = cms.PSet(
    track_chi2_max = cms.double(20.0),
    track_prob_min = cms.double(-1.0),
    track_pt_max = cms.double(20.0),
    track_pt_min = cms.double(1.0)
)

process.HLTPSetTobTecStepInOutTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(0),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.1),
    minimumNumberOfHits = cms.int32(4),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(1),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetTobTecStepInOutTrajectoryFilterBase = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(0),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.1),
    minimumNumberOfHits = cms.int32(4),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(1),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetTobTecStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hltESPTobTecStepChi2ChargeMeasurementEstimator16'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetTobTecStepInOutTrajectoryFilter')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(4),
    propagatorAlong = cms.string('PropagatorWithMaterialParabolicMf'),
    propagatorOpposite = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetTobTecStepTrajectoryFilter')
    ),
    updator = cms.string('hltESPKFUpdator'),
    useSameTrajFilter = cms.bool(False)
)

process.HLTPSetTobTecStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(0),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.1),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(1),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetTobTecStepTrajectoryFilterBase = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(0),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.1),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(1),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetTrajectoryBuilderForElectrons = cms.PSet(
    ComponentType = cms.string('CkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator30'),
    intermediateCleaning = cms.bool(False),
    lostHitPenalty = cms.double(90.0),
    maxCand = cms.int32(5),
    propagatorAlong = cms.string('hltESPFwdElectronPropagator'),
    propagatorOpposite = cms.string('hltESPBwdElectronPropagator'),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetTrajectoryFilterForElectrons')
    ),
    updator = cms.string('hltESPKFUpdator')
)

process.HLTPSetTrajectoryBuilderForGsfElectrons = cms.PSet(
    ComponentType = cms.string('CkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string('hltESPMeasurementTracker'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    estimator = cms.string('hltESPChi2ChargeMeasurementEstimator2000'),
    intermediateCleaning = cms.bool(False),
    lostHitPenalty = cms.double(90.0),
    maxCand = cms.int32(5),
    propagatorAlong = cms.string('hltESPFwdElectronPropagator'),
    propagatorOpposite = cms.string('hltESPBwdElectronPropagator'),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('HLTPSetTrajectoryFilterForElectrons')
    ),
    updator = cms.string('hltESPKFUpdator')
)

process.HLTPSetTrajectoryFilterForElectrons = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(-1),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(-1),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(2.0),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetTrajectoryFilterIT = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.3),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetTrajectoryFilterL3 = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(1000000000),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.5),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTPSetbJetRegionalTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(999.0),
    maxNumberOfHits = cms.int32(8),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(1.0),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.HLTScouting = cms.PSet(
    outputCommands = cms.vstring('keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*')
)

process.HLTSeedFromConsecutiveHitsCreator = cms.PSet(
    ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string(''),
    propagator = cms.string('PropagatorWithMaterial')
)

process.HLTSeedFromConsecutiveHitsCreatorIT = cms.PSet(
    ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf')
)

process.HLTSeedFromConsecutiveHitsTripletOnlyCreator = cms.PSet(
    ComponentName = cms.string('SeedFromConsecutiveHitsTripletOnlyCreator'),
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf')
)

process.HLTSeedFromProtoTracks = cms.PSet(
    ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf')
)

process.HLTSiStripClusterChargeCutForHI = cms.PSet(
    value = cms.double(2069.0)
)

process.HLTSiStripClusterChargeCutLoose = cms.PSet(
    value = cms.double(1620.0)
)

process.HLTSiStripClusterChargeCutNone = cms.PSet(
    value = cms.double(-1.0)
)

process.HLTSiStripClusterChargeCutTight = cms.PSet(
    value = cms.double(1945.0)
)

process.HLTSiStripClusterChargeCutTiny = cms.PSet(
    value = cms.double(800.0)
)

process.HLTriggerAOD = cms.PSet(
    outputCommands = cms.vstring('drop *_hlt*_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*')
)

process.HLTriggerRAW = cms.PSet(
    outputCommands = cms.vstring('drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*')
)

process.HLTriggerRECO = cms.PSet(
    outputCommands = cms.vstring('drop *_hlt*_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*')
)

process.IOMCRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_randomEngineStateProducer_*_*')
)

process.L1TriggerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*')
)

process.L1TriggerFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_simCscTriggerPrimitiveDigis_*_*', 
        'keep *_simDtTriggerPrimitiveDigis_*_*', 
        'keep *_simRpcTriggerDigis_*_*', 
        'keep *_simRctDigis_*_*', 
        'keep *_simCsctfDigis_*_*', 
        'keep *_simCsctfTrackDigis_*_*', 
        'keep *_simDttfDigis_*_*', 
        'keep *_simGctDigis_*_*', 
        'keep *_simCaloStage1Digis_*_*', 
        'keep *_simCaloStage1FinalDigis_*_*', 
        'keep *_simCaloStage2Layer1Digis_*_*', 
        'keep *_simCaloStage2Digis_*_*', 
        'keep *_simGmtDigis_*_*', 
        'keep *_simBmtfDigis_*_*', 
        'keep *_simOmtfDigis_*_*', 
        'keep *_simEmtfDigis_*_*', 
        'keep *_simGmtStage2Digis_*_*', 
        'keep *_simGtDigis_*_*', 
        'keep *_simGtStage2Digis_*_*', 
        'keep *_cscTriggerPrimitiveDigis_*_*', 
        'keep *_dtTriggerPrimitiveDigis_*_*', 
        'keep *_rpcTriggerDigis_*_*', 
        'keep *_rctDigis_*_*', 
        'keep *_csctfDigis_*_*', 
        'keep *_csctfTrackDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gctDigis_*_*', 
        'keep *_gmtDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_gtEvmDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*')
)

process.L1TriggerRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*')
)

process.L1TriggerRAWDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*')
)

process.L1TriggerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*')
)

process.LHEEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep *_externalLHEProducer_LHEScriptOutput_*'),
    splitLevel = cms.untracked.int32(0)
)

process.LSParameter = cms.untracked.PSet(
    HcalFeatureHFEMBit = cms.bool(False),
    Long_Short_Offset = cms.double(10.1),
    Long_vrs_Short_Slope = cms.double(100.2),
    Min_Long_Energy = cms.double(10),
    Min_Short_Energy = cms.double(10)
)

process.LutParametersBlock = cms.PSet(
    LutParameters = cms.PSet(
        BTIC = cms.untracked.int32(0),
        D = cms.untracked.double(0),
        Debug = cms.untracked.bool(False),
        WHEEL = cms.untracked.int32(-1),
        XCN = cms.untracked.double(0)
    )
)

process.ME0SegAlgoRU = cms.PSet(
    algo_name = cms.string('ME0SegAlgoRU'),
    algo_pset = cms.PSet(
        allowWideSegments = cms.bool(True),
        doCollisions = cms.bool(True),
        maxChi2Additional = cms.double(100.0),
        maxChi2GoodSeg = cms.double(50),
        maxChi2Prune = cms.double(50),
        maxETASeeds = cms.double(0.1),
        maxPhiAdditional = cms.double(0.001096605744),
        maxPhiSeeds = cms.double(0.001096605744),
        maxTOFDiff = cms.double(25),
        minNumberOfHits = cms.uint32(4),
        requireCentralBX = cms.bool(True)
    )
)

process.ME0SegmentAlgorithm = cms.PSet(
    algo_name = cms.string('ME0SegmentAlgorithm'),
    algo_pset = cms.PSet(
        ME0Debug = cms.untracked.bool(True),
        dEtaChainBoxMax = cms.double(0.05),
        dPhiChainBoxMax = cms.double(0.02),
        dTimeChainBoxMax = cms.double(15.0),
        dXclusBoxMax = cms.double(1.0),
        dYclusBoxMax = cms.double(5.0),
        maxRecHitsInCluster = cms.int32(6),
        minHitsPerSegment = cms.uint32(3),
        preClustering = cms.bool(True),
        preClusteringUseChaining = cms.bool(True)
    )
)

process.MEtoEDMConverterAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.MEtoEDMConverterFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_MEtoEDMConverter_*_*')
)

process.MEtoEDMConverterRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.MINIAODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(-900),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'keep *_slimmedPhotons_*_*', 
        'keep *_slimmedOOTPhotons_*_*', 
        'keep *_slimmedElectrons_*_*', 
        'keep *_slimmedMuons_*_*', 
        'keep *_slimmedTaus_*_*', 
        'keep *_slimmedTausBoosted_*_*', 
        'keep *_slimmedCaloJets_*_*', 
        'keep *_slimmedJets_*_*', 
        'drop recoBaseTagInfosOwned_slimmedJets_*_*', 
        'keep *_slimmedJetsAK8_*_*', 
        'keep *_slimmedJetsPuppi_*_*', 
        'keep *_slimmedMETs_*_*', 
        'keep *_slimmedMETsNoHF_*_*', 
        'keep *_slimmedMETsPuppi_*_*', 
        'keep *_slimmedSecondaryVertices_*_*', 
        'keep *_slimmedLambdaVertices_*_*', 
        'keep *_slimmedKshortVertices_*_*', 
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*', 
        'keep recoPhotonCores_reducedEgamma_*_*', 
        'keep recoGsfElectronCores_reducedEgamma_*_*', 
        'keep recoConversions_reducedEgamma_*_*', 
        'keep recoSuperClusters_reducedEgamma_*_*', 
        'keep recoCaloClusters_reducedEgamma_*_*', 
        'keep EcalRecHitsSorted_reducedEgamma_*_*', 
        'keep recoGsfTracks_reducedEgamma_*_*', 
        'drop *_*_caloTowers_*', 
        'drop *_*_pfCandidates_*', 
        'drop *_*_genJets_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep *_offlineSlimmedPrimaryVertices_*_*', 
        'keep patPackedCandidates_packedPFCandidates_*_*', 
        'keep *_isolatedTracks_*_*', 
        'keep *_oniaPhotonCandidates_*_*', 
        'keep *_bunchSpacingProducer_*_*', 
        'keep double_fixedGridRhoAll__*', 
        'keep double_fixedGridRhoFastjetAll__*', 
        'keep double_fixedGridRhoFastjetAllCalo__*', 
        'keep double_fixedGridRhoFastjetCentral_*_*', 
        'keep double_fixedGridRhoFastjetCentralCalo__*', 
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*', 
        'keep double_fixedGridRhoFastjetCentralNeutral__*', 
        'keep *_slimmedPatTrigger_*_*', 
        'keep patPackedTriggerPrescales_patTrigger__*', 
        'keep patPackedTriggerPrescales_patTrigger_l1max_*', 
        'keep patPackedTriggerPrescales_patTrigger_l1min_*', 
        'keep *_l1extraParticles_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_gtStage2Digis__*', 
        'keep *_gmtStage2Digis_Muon_*', 
        'keep *_caloStage2Digis_Jet_*', 
        'keep *_caloStage2Digis_Tau_*', 
        'keep *_caloStage2Digis_EGamma_*', 
        'keep *_caloStage2Digis_EtSum_*', 
        'keep *_TriggerResults_*_HLT', 
        'keep *_TriggerResults_*_*', 
        'keep patPackedCandidates_lostTracks_*_*', 
        'keep HcalNoiseSummary_hcalnoise__*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*')
)

process.MINIAODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(-900),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'keep *_slimmedPhotons_*_*', 
        'keep *_slimmedOOTPhotons_*_*', 
        'keep *_slimmedElectrons_*_*', 
        'keep *_slimmedMuons_*_*', 
        'keep *_slimmedTaus_*_*', 
        'keep *_slimmedTausBoosted_*_*', 
        'keep *_slimmedCaloJets_*_*', 
        'keep *_slimmedJets_*_*', 
        'drop recoBaseTagInfosOwned_slimmedJets_*_*', 
        'keep *_slimmedJetsAK8_*_*', 
        'keep *_slimmedJetsPuppi_*_*', 
        'keep *_slimmedMETs_*_*', 
        'keep *_slimmedMETsNoHF_*_*', 
        'keep *_slimmedMETsPuppi_*_*', 
        'keep *_slimmedSecondaryVertices_*_*', 
        'keep *_slimmedLambdaVertices_*_*', 
        'keep *_slimmedKshortVertices_*_*', 
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*', 
        'keep recoPhotonCores_reducedEgamma_*_*', 
        'keep recoGsfElectronCores_reducedEgamma_*_*', 
        'keep recoConversions_reducedEgamma_*_*', 
        'keep recoSuperClusters_reducedEgamma_*_*', 
        'keep recoCaloClusters_reducedEgamma_*_*', 
        'keep EcalRecHitsSorted_reducedEgamma_*_*', 
        'keep recoGsfTracks_reducedEgamma_*_*', 
        'drop *_*_caloTowers_*', 
        'drop *_*_pfCandidates_*', 
        'drop *_*_genJets_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep *_offlineSlimmedPrimaryVertices_*_*', 
        'keep patPackedCandidates_packedPFCandidates_*_*', 
        'keep *_isolatedTracks_*_*', 
        'keep *_oniaPhotonCandidates_*_*', 
        'keep *_bunchSpacingProducer_*_*', 
        'keep double_fixedGridRhoAll__*', 
        'keep double_fixedGridRhoFastjetAll__*', 
        'keep double_fixedGridRhoFastjetAllCalo__*', 
        'keep double_fixedGridRhoFastjetCentral_*_*', 
        'keep double_fixedGridRhoFastjetCentralCalo__*', 
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*', 
        'keep double_fixedGridRhoFastjetCentralNeutral__*', 
        'keep *_slimmedPatTrigger_*_*', 
        'keep patPackedTriggerPrescales_patTrigger__*', 
        'keep patPackedTriggerPrescales_patTrigger_l1max_*', 
        'keep patPackedTriggerPrescales_patTrigger_l1min_*', 
        'keep *_l1extraParticles_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_gtStage2Digis__*', 
        'keep *_gmtStage2Digis_Muon_*', 
        'keep *_caloStage2Digis_Jet_*', 
        'keep *_caloStage2Digis_Tau_*', 
        'keep *_caloStage2Digis_EGamma_*', 
        'keep *_caloStage2Digis_EtSum_*', 
        'keep *_TriggerResults_*_HLT', 
        'keep *_TriggerResults_*_*', 
        'keep patPackedCandidates_lostTracks_*_*', 
        'keep HcalNoiseSummary_hcalnoise__*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*', 
        'keep patPackedGenParticles_packedGenParticles_*_*', 
        'keep recoGenParticles_prunedGenParticles_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_*_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep recoGenParticles_genPUProtons_*_*', 
        'keep *_slimmedGenJetsFlavourInfos_*_*', 
        'keep *_slimmedGenJets__*', 
        'keep *_slimmedGenJetsAK8__*', 
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*', 
        'keep *_genMetTrue_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep GenRunInfoProduct_*_*_*', 
        'keep *_genParticles_xyz0_*', 
        'keep *_genParticles_t0_*', 
        'keep PileupSummaryInfos_slimmedAddPileupInfo_*_*', 
        'keep L1GtTriggerMenuLite_l1GtTriggerMenuLite__*')
)

process.MINIGENEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(15728640),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep patPackedGenParticles_packedGenParticles_*_*', 
        'keep recoGenParticles_prunedGenParticles_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_*_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep recoGenParticles_genPUProtons_*_*', 
        'keep *_slimmedGenJetsFlavourInfos_*_*', 
        'keep *_slimmedGenJets__*', 
        'keep *_slimmedGenJetsAK8__*', 
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*', 
        'keep *_genMetTrue_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep GenRunInfoProduct_*_*_*', 
        'keep *_genParticles_xyz0_*', 
        'keep *_genParticles_t0_*')
)

process.MIXINGMODULEEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_cfWriter_*_*'),
    splitLevel = cms.untracked.int32(0)
)

process.MicroEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_slimmedPhotons_*_*', 
        'keep *_slimmedOOTPhotons_*_*', 
        'keep *_slimmedElectrons_*_*', 
        'keep *_slimmedMuons_*_*', 
        'keep *_slimmedTaus_*_*', 
        'keep *_slimmedTausBoosted_*_*', 
        'keep *_slimmedCaloJets_*_*', 
        'keep *_slimmedJets_*_*', 
        'drop recoBaseTagInfosOwned_slimmedJets_*_*', 
        'keep *_slimmedJetsAK8_*_*', 
        'keep *_slimmedJetsPuppi_*_*', 
        'keep *_slimmedMETs_*_*', 
        'keep *_slimmedMETsNoHF_*_*', 
        'keep *_slimmedMETsPuppi_*_*', 
        'keep *_slimmedSecondaryVertices_*_*', 
        'keep *_slimmedLambdaVertices_*_*', 
        'keep *_slimmedKshortVertices_*_*', 
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*', 
        'keep recoPhotonCores_reducedEgamma_*_*', 
        'keep recoGsfElectronCores_reducedEgamma_*_*', 
        'keep recoConversions_reducedEgamma_*_*', 
        'keep recoSuperClusters_reducedEgamma_*_*', 
        'keep recoCaloClusters_reducedEgamma_*_*', 
        'keep EcalRecHitsSorted_reducedEgamma_*_*', 
        'keep recoGsfTracks_reducedEgamma_*_*', 
        'drop *_*_caloTowers_*', 
        'drop *_*_pfCandidates_*', 
        'drop *_*_genJets_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep *_offlineSlimmedPrimaryVertices_*_*', 
        'keep patPackedCandidates_packedPFCandidates_*_*', 
        'keep *_isolatedTracks_*_*', 
        'keep *_oniaPhotonCandidates_*_*', 
        'keep *_bunchSpacingProducer_*_*', 
        'keep double_fixedGridRhoAll__*', 
        'keep double_fixedGridRhoFastjetAll__*', 
        'keep double_fixedGridRhoFastjetAllCalo__*', 
        'keep double_fixedGridRhoFastjetCentral_*_*', 
        'keep double_fixedGridRhoFastjetCentralCalo__*', 
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*', 
        'keep double_fixedGridRhoFastjetCentralNeutral__*', 
        'keep *_slimmedPatTrigger_*_*', 
        'keep patPackedTriggerPrescales_patTrigger__*', 
        'keep patPackedTriggerPrescales_patTrigger_l1max_*', 
        'keep patPackedTriggerPrescales_patTrigger_l1min_*', 
        'keep *_l1extraParticles_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_gtStage2Digis__*', 
        'keep *_gmtStage2Digis_Muon_*', 
        'keep *_caloStage2Digis_Jet_*', 
        'keep *_caloStage2Digis_Tau_*', 
        'keep *_caloStage2Digis_EGamma_*', 
        'keep *_caloStage2Digis_EtSum_*', 
        'keep *_TriggerResults_*_HLT', 
        'keep *_TriggerResults_*_*', 
        'keep patPackedCandidates_lostTracks_*_*', 
        'keep HcalNoiseSummary_hcalnoise__*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*')
)

process.MicroEventContentGEN = cms.PSet(
    outputCommands = cms.untracked.vstring('keep patPackedGenParticles_packedGenParticles_*_*', 
        'keep recoGenParticles_prunedGenParticles_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_*_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep recoGenParticles_genPUProtons_*_*', 
        'keep *_slimmedGenJetsFlavourInfos_*_*', 
        'keep *_slimmedGenJets__*', 
        'keep *_slimmedGenJetsAK8__*', 
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*', 
        'keep *_genMetTrue_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep GenRunInfoProduct_*_*_*', 
        'keep *_genParticles_xyz0_*', 
        'keep *_genParticles_t0_*')
)

process.MicroEventContentMC = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_slimmedPhotons_*_*', 
        'keep *_slimmedOOTPhotons_*_*', 
        'keep *_slimmedElectrons_*_*', 
        'keep *_slimmedMuons_*_*', 
        'keep *_slimmedTaus_*_*', 
        'keep *_slimmedTausBoosted_*_*', 
        'keep *_slimmedCaloJets_*_*', 
        'keep *_slimmedJets_*_*', 
        'drop recoBaseTagInfosOwned_slimmedJets_*_*', 
        'keep *_slimmedJetsAK8_*_*', 
        'keep *_slimmedJetsPuppi_*_*', 
        'keep *_slimmedMETs_*_*', 
        'keep *_slimmedMETsNoHF_*_*', 
        'keep *_slimmedMETsPuppi_*_*', 
        'keep *_slimmedSecondaryVertices_*_*', 
        'keep *_slimmedLambdaVertices_*_*', 
        'keep *_slimmedKshortVertices_*_*', 
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*', 
        'keep recoPhotonCores_reducedEgamma_*_*', 
        'keep recoGsfElectronCores_reducedEgamma_*_*', 
        'keep recoConversions_reducedEgamma_*_*', 
        'keep recoSuperClusters_reducedEgamma_*_*', 
        'keep recoCaloClusters_reducedEgamma_*_*', 
        'keep EcalRecHitsSorted_reducedEgamma_*_*', 
        'keep recoGsfTracks_reducedEgamma_*_*', 
        'drop *_*_caloTowers_*', 
        'drop *_*_pfCandidates_*', 
        'drop *_*_genJets_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep *_offlineSlimmedPrimaryVertices_*_*', 
        'keep patPackedCandidates_packedPFCandidates_*_*', 
        'keep *_isolatedTracks_*_*', 
        'keep *_oniaPhotonCandidates_*_*', 
        'keep *_bunchSpacingProducer_*_*', 
        'keep double_fixedGridRhoAll__*', 
        'keep double_fixedGridRhoFastjetAll__*', 
        'keep double_fixedGridRhoFastjetAllCalo__*', 
        'keep double_fixedGridRhoFastjetCentral_*_*', 
        'keep double_fixedGridRhoFastjetCentralCalo__*', 
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*', 
        'keep double_fixedGridRhoFastjetCentralNeutral__*', 
        'keep *_slimmedPatTrigger_*_*', 
        'keep patPackedTriggerPrescales_patTrigger__*', 
        'keep patPackedTriggerPrescales_patTrigger_l1max_*', 
        'keep patPackedTriggerPrescales_patTrigger_l1min_*', 
        'keep *_l1extraParticles_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_gtStage2Digis__*', 
        'keep *_gmtStage2Digis_Muon_*', 
        'keep *_caloStage2Digis_Jet_*', 
        'keep *_caloStage2Digis_Tau_*', 
        'keep *_caloStage2Digis_EGamma_*', 
        'keep *_caloStage2Digis_EtSum_*', 
        'keep *_TriggerResults_*_HLT', 
        'keep *_TriggerResults_*_*', 
        'keep patPackedCandidates_lostTracks_*_*', 
        'keep HcalNoiseSummary_hcalnoise__*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*', 
        'keep patPackedGenParticles_packedGenParticles_*_*', 
        'keep recoGenParticles_prunedGenParticles_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_*_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep recoGenParticles_genPUProtons_*_*', 
        'keep *_slimmedGenJetsFlavourInfos_*_*', 
        'keep *_slimmedGenJets__*', 
        'keep *_slimmedGenJetsAK8__*', 
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*', 
        'keep *_genMetTrue_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep GenRunInfoProduct_*_*_*', 
        'keep *_genParticles_xyz0_*', 
        'keep *_genParticles_t0_*', 
        'keep PileupSummaryInfos_slimmedAddPileupInfo_*_*', 
        'keep L1GtTriggerMenuLite_l1GtTriggerMenuLite__*')
)

process.NANOAODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(9),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep nanoaodFlatTable_*Table_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep nanoaodMergeableCounterTable_*Table_*_*', 
        'keep nanoaodUniqueString_nanoMetadata_*_*')
)

process.NANOAODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(9),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep nanoaodFlatTable_*Table_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep nanoaodMergeableCounterTable_*Table_*_*', 
        'keep nanoaodUniqueString_nanoMetadata_*_*')
)

process.NanoAODEDMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *', 
        'keep nanoaodFlatTable_*Table_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep nanoaodMergeableCounterTable_*Table_*_*', 
        'keep nanoaodUniqueString_nanoMetadata_*_*')
)

process.PREMIXEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep recoGenMETs_*_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep RPCDetIdRPCDigiMuonDigiCollection_simMuonRPCDigis_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*', 
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_*_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_*_*_*'),
    splitLevel = cms.untracked.int32(0)
)

process.PREMIXRAWEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep *_simHcalUnsuppressedDigis_*_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'drop CrossingFramePlaybackInfoNew_mix_*_*', 
        'keep *_*_MergedTrackTruth_*', 
        'keep *_*_StripDigiSimLink_*', 
        'keep *_*_PixelDigiSimLink_*', 
        'keep *_*_MuonCSCStripDigiSimLinks_*', 
        'keep *_*_MuonCSCWireDigiSimLinks_*', 
        'keep *_*_RPCDigiSimLink_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_*_*_*'),
    splitLevel = cms.untracked.int32(0)
)

process.RAWAODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'keep ClusterSummary_clusterSummaryProducer_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*', 
        'keep *_castorreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep HcalUnpackerReport_castorDigis_*_*', 
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*', 
        'keep HcalUnpackerReport_hcalDigis_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep recoCaloClusters_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*', 
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*', 
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*', 
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*', 
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*', 
        'keep recoTracks_GsfGlobalElectronTest_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTracks_ctfPixelLess_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep *_generalTracks_MVAVals_*', 
        'keep *_ak4CaloJets_*_*', 
        'keep *_ak4PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHSSoftDrop_*_*', 
        'keep *_cmsTopTagPFJetsCHS_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetID_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRhoAll_*_*', 
        'keep *_fixedGridRhoFastjetAll_*_*', 
        'keep *_fixedGridRhoFastjetAllTmp_*_*', 
        'keep *_fixedGridRhoFastjetCentral_*_*', 
        'keep *_fixedGridRhoFastjetAllCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*', 
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*', 
        'drop doubles_*Jets_rhos_*', 
        'drop doubles_*Jets_sigmas_*', 
        'keep *_ak8PFJetsCHSSoftDropMass_*_*', 
        'keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'drop recoHcalNoiseRBXs_*_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep recoGlobalHaloData_GlobalHaloData_*_*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*', 
        'keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*', 
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*', 
        'keep recoPFTaus_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSum_*_*', 
        'keep *_hpsPFTauPUcorrPtSum_*_*', 
        'keep *_hpsPFTauChargedIsoPtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*', 
        'keep *_hpsPFTauFootprintCorrection_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*', 
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectrons_gedGsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep *_egmGedGsfElectronPFIsolation_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'drop *_egmGsfElectronIDs_*_*', 
        'drop *_egmPhotonIDs_*_*', 
        'keep recoPhotonCores_gedPhotonCore_*_*', 
        'keep recoPhotons_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'drop *_gedPhotons_valMapPFEgammaCandToPhoton_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_ootPhotonCore_*_*', 
        'keep recoPhotons_ootPhotons_*_*', 
        'keep recoConversions_conversions_*_*', 
        'keep recoConversions_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoConversions_allConversionsOldEG_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'drop *_pfElectronTranslator_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*', 
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_particleFlow_muons_*', 
        'keep recoCaloClusters_pfElectronTranslator_*_*', 
        'keep recoPreshowerClusters_pfElectronTranslator_*_*', 
        'keep recoSuperClusters_pfElectronTranslator_*_*', 
        'keep recoCaloClusters_pfPhotonTranslator_*_*', 
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*', 
        'keep recoSuperClusters_pfPhotonTranslator_*_*', 
        'keep recoPhotons_pfPhotonTranslator_*_*', 
        'keep recoPhotonCores_pfPhotonTranslator_*_*', 
        'keep recoConversions_pfPhotonTranslator_*_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_hlt*_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*', 
        'keep L1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep BeamSpotOnlines_scalersRawToDigi_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_tcdsDigis_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep *_pfIsolatedElectronsEI_*_*', 
        'keep *_pfIsolatedMuonsEI_*_*', 
        'keep recoPFJets_pfJetsEI_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*', 
        'keep recoPFTaus_pfTausEI_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*', 
        'keep TotemFEDInfos_totemRPRawToDigi_*_*', 
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*', 
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*', 
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*', 
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*', 
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*', 
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*', 
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*', 
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*', 
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*', 
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep *_muonSimClassifier_*_*', 
        'keep *_ak4GenJets_*_*', 
        'keep *_ak8GenJets_*_*', 
        'keep *_ak4GenJetsNoNu_*_*', 
        'keep *_ak8GenJetsNoNu_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep SimVertexs_g4SimHits_*_*' ) )
)

process.RAWDEBUGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep *_simHcalUnsuppressedDigis_*_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*', 
        'drop *_mix_simSiPixelDigis*_*', 
        'drop *_mix_simSiStripDigis*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'drop *_trackingtruthprod_*_*', 
        'drop *_electrontruth_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*'),
    splitLevel = cms.untracked.int32(0)
)

process.RAWDEBUGHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep *_simHcalUnsuppressedDigis_*_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*', 
        'drop *_mix_simSiPixelDigis*_*', 
        'drop *_mix_simSiStripDigis*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'drop *_trackingtruthprod_*_*', 
        'drop *_electrontruth_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*', 
        'keep *_hltAK4CaloJetsIDPassed_*_*', 
        'keep *_hltAK4CaloJets_*_*', 
        'keep *_hltAK4PFJetsCorrected_*_*', 
        'keep *_hltAK4PFJetsForTaus_*_*', 
        'keep *_hltAK4PFJets_*_*', 
        'keep *_hltAlCaEtaEBRechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*', 
        'keep *_hltAlCaEtaEERechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaEtaEERechitsToDigis_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegionalLowPU_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilter_*_*', 
        'keep *_hltAlCaPhiSymStream_*_*', 
        'keep *_hltAlCaPi0EBRechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*', 
        'keep *_hltAlCaPi0EERechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaPi0EERechitsToDigis_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegionalLowPU_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilter_*_*', 
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonMu5L3_*_*', 
        'keep *_hltCSVJetTagSingleTopEle27_*_*', 
        'keep *_hltCSVJetTagSingleTopIsoMu24_*_*', 
        'keep *_hltCaloJetCorrectedRegional_*_*', 
        'keep *_hltCaloJetCorrected_*_*', 
        'keep *_hltCaloJetL1FastJetCorrected_*_*', 
        'keep *_hltCaloStage2Digis_*_*', 
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCombinedSecondaryVertexBJetTagsCalo_*_*', 
        'keep *_hltCombinedSecondaryVertexBJetTagsPF_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 
        'keep *_hltConvPFTausTightIso_*_*', 
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 
        'keep *_hltConvPFTausTrackFinding_*_*', 
        'keep *_hltConvPFTaus_*_*', 
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltCsc2DRecHits_*_*', 
        'keep *_hltCscSegments_*_*', 
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltDoublePFTau25TrackPt5_*_*', 
        'keep *_hltDoublePFTau25_*_*', 
        'keep *_hltDoublePFTauTightIso45Track5_*_*', 
        'keep *_hltDoublePFTauTightIso45Track_*_*', 
        'keep *_hltDt4DSegments_*_*', 
        'keep *_hltEcalPhiSymFilter_*_*', 
        'keep *_hltEcalRecHitAll_*_*', 
        'keep *_hltEcalRecHit_*_*', 
        'keep *_hltEgammaCandidates_*_*', 
        'keep *_hltEgammaGsfElectrons_*_*', 
        'keep *_hltEgammaGsfTracks_*_*', 
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*', 
        'keep *_hltEle27WP85PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltElectronsVertex_*_*', 
        'keep *_hltFEDSelectorLumiPixels_*_*', 
        'keep *_hltFastPVPixelTracksMerger_*_*', 
        'keep *_hltFastPVPixelTracksRecover_*_*', 
        'keep *_hltFastPVPixelTracks_*_*', 
        'keep *_hltFastPVPixelVertices3D_*_*', 
        'keep *_hltFastPVPixelVertices_*_*', 
        'keep *_hltFastPixelBLifetimeL3TagInfos_*_*', 
        'keep *_hltFastPrimaryVertex_*_*', 
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*', 
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltGmtStage2Digis_*_*', 
        'keep *_hltGoodOnlinePVs_*_*', 
        'keep *_hltGtStage2Digis_*_*', 
        'keep *_hltHICaloJetCorrected_*_*', 
        'keep *_hltHICaloJetIDPassed_*_*', 
        'keep *_hltHIGoodLooseTracks_*_*', 
        'keep *_hltHIPixel3PrimTracks_*_*', 
        'keep *_hltHISelectedVertex_*_*', 
        'keep *_hltHISiPixelClusters_*_*', 
        'keep *_hltHITIPTCorrectorHB_*_*', 
        'keep *_hltHITIPTCorrectorHE_*_*', 
        'keep *_hltHbhereco_*_*', 
        'keep *_hltHfreco_*_*', 
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltHiIslandSuperClustersHI_*_*', 
        'keep *_hltHoreco_*_*', 
        'keep *_hltIsolPixelTrackProdHB_*_*', 
        'keep *_hltIsolPixelTrackProdHE_*_*', 
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*', 
        'keep *_hltIter0HighPtTkMuPixelTracks_*_*', 
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*', 
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter1Merged_*_*', 
        'keep *_hltIter1PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter2HighPtTkMuMerged_*_*', 
        'keep *_hltIter2HighPtTkMuTrackSelectionHighPurity_*_*', 
        'keep *_hltIter2MergedForBTag_*_*', 
        'keep *_hltIter2MergedForElectrons_*_*', 
        'keep *_hltIter2Merged_*_*', 
        'keep *_hltIter2PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter3Merged_*_*', 
        'keep *_hltIter4Merged_*_*', 
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*', 
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*', 
        'keep *_hltL1IsoElectronTrackIsol_*_*', 
        'keep *_hltL1NonIsoElectronTrackIsol_*_*', 
        'keep *_hltL1SeededRecoEcalCandidate_*_*', 
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*', 
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*', 
        'keep *_hltL1sL1EG18er_*_*', 
        'keep *_hltL1sL1ETM36ORETM40_*_*', 
        'keep *_hltL1sL1Jet52ETM30_*_*', 
        'keep *_hltL1sL1SingleEG12_*_*', 
        'keep *_hltL1sL1SingleEG15_*_*', 
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltL1sL1SingleMu10_*_*', 
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*', 
        'keep *_hltL1sMu16Eta2p1_*_*', 
        'keep *_hltL2MuonCandidatesNoVtx_*_*', 
        'keep *_hltL2MuonCandidates_*_*', 
        'keep *_hltL2MuonSeeds_*_*', 
        'keep *_hltL2Muons_*_*', 
        'keep *_hltL2TauJets_*_*', 
        'keep *_hltL3MuonCandidates_*_*', 
        'keep *_hltL3MuonsIOHit_*_*', 
        'keep *_hltL3MuonsLinksCombination_*_*', 
        'keep *_hltL3MuonsOIHit_*_*', 
        'keep *_hltL3MuonsOIState_*_*', 
        'keep *_hltL3Muons_*_*', 
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*', 
        'keep *_hltL3NoFiltersNoVtxMuons_*_*', 
        'keep *_hltL3SecondaryVertexTagInfos_*_*', 
        'keep *_hltL3TkFromL2OICombination_*_*', 
        'keep *_hltL3TkTracksFromL2IOHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIState_*_*', 
        'keep *_hltL3TkTracksFromL2_*_*', 
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIState_*_*', 
        'keep *_hltL3TrajSeedIOHit_*_*', 
        'keep *_hltL3TrajSeedOIHit_*_*', 
        'keep *_hltL3TrajSeedOIState_*_*', 
        'keep *_hltL3TrajectorySeed_*_*', 
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*', 
        'keep *_hltLeadingCentralJets30SingleTopEle27_*_*', 
        'keep *_hltLeadingCentralJets30SingleTopIsoMu24_*_*', 
        'keep *_hltMergedTracks_*_*', 
        'keep *_hltMet_*_*', 
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*', 
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 
        'keep *_hltMuonCSCDigis_*_*', 
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*', 
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*', 
        'keep *_hltMuonDTDigis_*_*', 
        'keep *_hltMuonRPCDigis_*_*', 
        'keep *_hltOnlineBeamSpot_*_*', 
        'keep *_hltOnlinePrimaryVertices_*_*', 
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*', 
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*', 
        'keep *_hltPFJetForBtag_*_*', 
        'keep *_hltPFMuonMerging_*_*', 
        'keep *_hltPFTau15TrackLooseIso_*_*', 
        'keep *_hltPFTau15Track_*_*', 
        'keep *_hltPFTau15_*_*', 
        'keep *_hltPFTau20IsoMuVertex_*_*', 
        'keep *_hltPFTau20TrackLooseIso_*_*', 
        'keep *_hltPFTau20Track_*_*', 
        'keep *_hltPFTau20_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltPFTau25TrackPt5_*_*', 
        'keep *_hltPFTau25_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIso_*_*', 
        'keep *_hltPFTau35TrackPt20_*_*', 
        'keep *_hltPFTau35Track_*_*', 
        'keep *_hltPFTau35_*_*', 
        'keep *_hltPFTauEleVertex20_*_*', 
        'keep *_hltPFTauJetTracksAssociator_*_*', 
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*', 
        'keep *_hltPFTauMediumIso20Track_*_*', 
        'keep *_hltPFTauMediumIso20_*_*', 
        'keep *_hltPFTauMediumIso35Track_*_*', 
        'keep *_hltPFTauMediumIso35_*_*', 
        'keep *_hltPFTauTagInfo_*_*', 
        'keep *_hltPFTauTightIso20TrackTightIso_*_*', 
        'keep *_hltPFTauTightIso20Track_*_*', 
        'keep *_hltPFTauTightIso20_*_*', 
        'keep *_hltPFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltParticleFlowForTaus_*_*', 
        'keep *_hltParticleFlow_*_*', 
        'keep *_hltPixelMatch3HitElectronsActivity_*_*', 
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchElectronsActivity_*_*', 
        'keep *_hltPixelMatchElectronsL1Iso_*_*', 
        'keep *_hltPixelMatchElectronsL1NonIso_*_*', 
        'keep *_hltPixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltPixelTracksElectrons_*_*', 
        'keep *_hltPixelTracksMerged_*_*', 
        'keep *_hltPixelTracks_*_*', 
        'keep *_hltPixelVertices3DbbPhi_*_*', 
        'keep *_hltPixelVertices_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*', 
        'keep *_hltRpcRecHits_*_*', 
        'keep *_hltSelector4CentralJetsL1FastJet_*_*', 
        'keep *_hltSelector8CentralJetsL1FastJet_*_*', 
        'keep *_hltSelectorJets20L1FastJet_*_*', 
        'keep *_hltSiPixelCluster_*_*', 
        'keep *_hltSiPixelClusters_*_*', 
        'keep *_hltSiStripClusters_*_*', 
        'keep *_hltSiStripRawToClustersFacility_*_*', 
        'keep *_hltSingleMu15L3Filtered15_*_*', 
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*', 
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*', 
        'keep *_hltTowerMakerForAll_*_*', 
        'keep *_hltTowerMakerForMuons_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'keep *_hltTriggerSummaryRAW_*_*', 
        'keep *_hltTrimmedPixelVertices_*_*', 
        'keep *_hltVerticesL3_*_*', 
        'keep *_hltVerticesPFFilter_*_*', 
        'keep *_hltVerticesPFSelector_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*', 
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*', 
        'keep LumiScalerss_hltScalersRawToDigi_*_*', 
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*', 
        'keep TrackingRecHitsOwned_hltL3Muons_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep recoCaloJets_*_*_*', 
        'keep recoCaloMETs_*_*_*', 
        'keep recoCaloMETs_hltMet_*_*', 
        'keep recoCompositeCandidates_*_*_*', 
        'keep recoElectrons_*_*_*', 
        'keep recoIsolatedPixelTrackCandidates_*_*_*', 
        'keep recoMETs_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoPFTaus_*_*_*', 
        'keep recoRecoChargedCandidates_*_*_*', 
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*', 
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidates_*_*_*', 
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3MuonsOIHit_*_*', 
        'keep recoTracks_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3Muons_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*', 
        'keep triggerTriggerEventWithRefs_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep triggerTriggerFilterObjectWithRefs_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*' ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*'),
    splitLevel = cms.untracked.int32(0)
)

process.RAWMINIAODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'keep *_slimmedPhotons_*_*', 
        'keep *_slimmedOOTPhotons_*_*', 
        'keep *_slimmedElectrons_*_*', 
        'keep *_slimmedMuons_*_*', 
        'keep *_slimmedTaus_*_*', 
        'keep *_slimmedTausBoosted_*_*', 
        'keep *_slimmedCaloJets_*_*', 
        'keep *_slimmedJets_*_*', 
        'drop recoBaseTagInfosOwned_slimmedJets_*_*', 
        'keep *_slimmedJetsAK8_*_*', 
        'keep *_slimmedJetsPuppi_*_*', 
        'keep *_slimmedMETs_*_*', 
        'keep *_slimmedMETsNoHF_*_*', 
        'keep *_slimmedMETsPuppi_*_*', 
        'keep *_slimmedSecondaryVertices_*_*', 
        'keep *_slimmedLambdaVertices_*_*', 
        'keep *_slimmedKshortVertices_*_*', 
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*', 
        'keep recoPhotonCores_reducedEgamma_*_*', 
        'keep recoGsfElectronCores_reducedEgamma_*_*', 
        'keep recoConversions_reducedEgamma_*_*', 
        'keep recoSuperClusters_reducedEgamma_*_*', 
        'keep recoCaloClusters_reducedEgamma_*_*', 
        'keep EcalRecHitsSorted_reducedEgamma_*_*', 
        'keep recoGsfTracks_reducedEgamma_*_*', 
        'drop *_*_caloTowers_*', 
        'drop *_*_pfCandidates_*', 
        'drop *_*_genJets_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep *_offlineSlimmedPrimaryVertices_*_*', 
        'keep patPackedCandidates_packedPFCandidates_*_*', 
        'keep *_isolatedTracks_*_*', 
        'keep *_oniaPhotonCandidates_*_*', 
        'keep *_bunchSpacingProducer_*_*', 
        'keep double_fixedGridRhoAll__*', 
        'keep double_fixedGridRhoFastjetAll__*', 
        'keep double_fixedGridRhoFastjetAllCalo__*', 
        'keep double_fixedGridRhoFastjetCentral_*_*', 
        'keep double_fixedGridRhoFastjetCentralCalo__*', 
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*', 
        'keep double_fixedGridRhoFastjetCentralNeutral__*', 
        'keep *_slimmedPatTrigger_*_*', 
        'keep patPackedTriggerPrescales_patTrigger__*', 
        'keep patPackedTriggerPrescales_patTrigger_l1max_*', 
        'keep patPackedTriggerPrescales_patTrigger_l1min_*', 
        'keep *_l1extraParticles_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_gtStage2Digis__*', 
        'keep *_gmtStage2Digis_Muon_*', 
        'keep *_caloStage2Digis_Jet_*', 
        'keep *_caloStage2Digis_Tau_*', 
        'keep *_caloStage2Digis_EGamma_*', 
        'keep *_caloStage2Digis_EtSum_*', 
        'keep *_TriggerResults_*_HLT', 
        'keep *_TriggerResults_*_*', 
        'keep patPackedCandidates_lostTracks_*_*', 
        'keep HcalNoiseSummary_hcalnoise__*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*')
)

process.RAWMINIAODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'keep *_slimmedPhotons_*_*', 
        'keep *_slimmedOOTPhotons_*_*', 
        'keep *_slimmedElectrons_*_*', 
        'keep *_slimmedMuons_*_*', 
        'keep *_slimmedTaus_*_*', 
        'keep *_slimmedTausBoosted_*_*', 
        'keep *_slimmedCaloJets_*_*', 
        'keep *_slimmedJets_*_*', 
        'drop recoBaseTagInfosOwned_slimmedJets_*_*', 
        'keep *_slimmedJetsAK8_*_*', 
        'keep *_slimmedJetsPuppi_*_*', 
        'keep *_slimmedMETs_*_*', 
        'keep *_slimmedMETsNoHF_*_*', 
        'keep *_slimmedMETsPuppi_*_*', 
        'keep *_slimmedSecondaryVertices_*_*', 
        'keep *_slimmedLambdaVertices_*_*', 
        'keep *_slimmedKshortVertices_*_*', 
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*', 
        'keep recoPhotonCores_reducedEgamma_*_*', 
        'keep recoGsfElectronCores_reducedEgamma_*_*', 
        'keep recoConversions_reducedEgamma_*_*', 
        'keep recoSuperClusters_reducedEgamma_*_*', 
        'keep recoCaloClusters_reducedEgamma_*_*', 
        'keep EcalRecHitsSorted_reducedEgamma_*_*', 
        'keep recoGsfTracks_reducedEgamma_*_*', 
        'drop *_*_caloTowers_*', 
        'drop *_*_pfCandidates_*', 
        'drop *_*_genJets_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep *_offlineSlimmedPrimaryVertices_*_*', 
        'keep patPackedCandidates_packedPFCandidates_*_*', 
        'keep *_isolatedTracks_*_*', 
        'keep *_oniaPhotonCandidates_*_*', 
        'keep *_bunchSpacingProducer_*_*', 
        'keep double_fixedGridRhoAll__*', 
        'keep double_fixedGridRhoFastjetAll__*', 
        'keep double_fixedGridRhoFastjetAllCalo__*', 
        'keep double_fixedGridRhoFastjetCentral_*_*', 
        'keep double_fixedGridRhoFastjetCentralCalo__*', 
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*', 
        'keep double_fixedGridRhoFastjetCentralNeutral__*', 
        'keep *_slimmedPatTrigger_*_*', 
        'keep patPackedTriggerPrescales_patTrigger__*', 
        'keep patPackedTriggerPrescales_patTrigger_l1max_*', 
        'keep patPackedTriggerPrescales_patTrigger_l1min_*', 
        'keep *_l1extraParticles_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_gtStage2Digis__*', 
        'keep *_gmtStage2Digis_Muon_*', 
        'keep *_caloStage2Digis_Jet_*', 
        'keep *_caloStage2Digis_Tau_*', 
        'keep *_caloStage2Digis_EGamma_*', 
        'keep *_caloStage2Digis_EtSum_*', 
        'keep *_TriggerResults_*_HLT', 
        'keep *_TriggerResults_*_*', 
        'keep patPackedCandidates_lostTracks_*_*', 
        'keep HcalNoiseSummary_hcalnoise__*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*', 
        'keep patPackedGenParticles_packedGenParticles_*_*', 
        'keep recoGenParticles_prunedGenParticles_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_*_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep recoGenParticles_genPUProtons_*_*', 
        'keep *_slimmedGenJetsFlavourInfos_*_*', 
        'keep *_slimmedGenJets__*', 
        'keep *_slimmedGenJetsAK8__*', 
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*', 
        'keep *_genMetTrue_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep GenRunInfoProduct_*_*_*', 
        'keep *_genParticles_xyz0_*', 
        'keep *_genParticles_t0_*', 
        'keep PileupSummaryInfos_slimmedAddPileupInfo_*_*', 
        'keep L1GtTriggerMenuLite_l1GtTriggerMenuLite__*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*')
)

process.RAWRECODEBUGHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'drop *', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep ClusterSummary_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hbheprereco_*_*', 
        'keep *_hfprereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_hcalDigis_*_*', 
        'keep ZDCDataFramesSorted_castorDigis_*_*', 
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*', 
        'keep ZDCRecHitsSorted_zdcreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_castorDigis_*_*', 
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*', 
        'keep HcalUnpackerReport_hcalDigis_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep EBSrFlagsSorted_ecalDigis__*', 
        'keep EESrFlagsSorted_ecalDigis__*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep *_particleFlowSuperClusterECAL_*_*', 
        'keep *_particleFlowSuperClusterOOTECAL_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*', 
        'keep recoCaloClusters_islandBasicClusters_*_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep *_generalTracks_MVAVals_*', 
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*', 
        'keep uints_extraFromSeeds_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep recoTracks_cosmicDCTracks_*_*', 
        'keep recoTrackExtras_cosmicDCTracks_*_*', 
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*', 
        'keep *_ak4CaloJets_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_ak4PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHSSoftDrop_*_*', 
        'keep *_cmsTopTagPFJetsCHS_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*', 
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetID_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRhoAll_*_*', 
        'keep *_fixedGridRhoFastjetAll_*_*', 
        'keep *_fixedGridRhoFastjetAllTmp_*_*', 
        'keep *_fixedGridRhoFastjetAllCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentral_*_*', 
        'keep *_fixedGridRhoFastjetCentralCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*', 
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*', 
        'keep *_ak8PFJetsCHSSoftDropMass_*_*', 
        'keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoEcalHaloData_EcalHaloData_*_*', 
        'keep recoGlobalHaloData_GlobalHaloData_*_*', 
        'keep recoHcalHaloData_HcalHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_displacedMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_softPFMuonsTagInfos_*_*', 
        'keep *_softPFElectronsTagInfos_*_*', 
        'keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfImpactParameterTagInfos_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSecondaryVertexTagInfos_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackVertexTagInfos_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*', 
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*', 
        'keep recoPFTaus_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSum_*_*', 
        'keep *_hpsPFTauPUcorrPtSum_*_*', 
        'keep *_hpsPFTauChargedIsoPtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*', 
        'keep *_hpsPFTauFootprintCorrection_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*', 
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectrons_gedGsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep *_egmGedGsfElectronPFIsolation_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'drop *_egmGsfElectronIDs_*_*', 
        'drop *_egmPhotonIDs_*_*', 
        'keep *_gedPhotonCore_*_*', 
        'keep *_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'keep recoPhotons_mustachePhotons_*_*', 
        'keep recoPhotonCores_mustachePhotonCore_*_*', 
        'keep recoPhotons_ootPhotons_*_*', 
        'keep recoPhotonCores_ootPhotonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'keep recoConversions_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoConversions_allConversionsOldEG_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterHF_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_particleFlow_muons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_hlt*_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*', 
        'keep L1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep BeamSpotOnlines_scalersRawToDigi_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep *_tcdsDigis_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep *_pfIsolatedElectronsEI_*_*', 
        'keep *_pfIsolatedMuonsEI_*_*', 
        'keep recoPFJets_pfJetsEI_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*', 
        'keep recoPFTaus_pfTausEI_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*', 
        'keep TotemFEDInfos_totemRPRawToDigi_*_*', 
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*', 
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*', 
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*', 
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*', 
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*', 
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*', 
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*', 
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*', 
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*', 
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep *_ak4GenJets_*_*', 
        'keep *_ak8GenJets_*_*', 
        'keep *_ak4GenJetsNoNu_*_*', 
        'keep *_ak8GenJetsNoNu_*_*', 
        'keep *_genParticle_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_muonSimClassifier_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*', 
        'keep *_hltAK4CaloJetsIDPassed_*_*', 
        'keep *_hltAK4CaloJets_*_*', 
        'keep *_hltAK4PFJetsCorrected_*_*', 
        'keep *_hltAK4PFJetsForTaus_*_*', 
        'keep *_hltAK4PFJets_*_*', 
        'keep *_hltAlCaEtaEBRechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*', 
        'keep *_hltAlCaEtaEERechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaEtaEERechitsToDigis_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegionalLowPU_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilter_*_*', 
        'keep *_hltAlCaPhiSymStream_*_*', 
        'keep *_hltAlCaPi0EBRechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*', 
        'keep *_hltAlCaPi0EERechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaPi0EERechitsToDigis_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegionalLowPU_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilter_*_*', 
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonMu5L3_*_*', 
        'keep *_hltCSVJetTagSingleTopEle27_*_*', 
        'keep *_hltCSVJetTagSingleTopIsoMu24_*_*', 
        'keep *_hltCaloJetCorrectedRegional_*_*', 
        'keep *_hltCaloJetCorrected_*_*', 
        'keep *_hltCaloJetL1FastJetCorrected_*_*', 
        'keep *_hltCaloStage2Digis_*_*', 
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCombinedSecondaryVertexBJetTagsCalo_*_*', 
        'keep *_hltCombinedSecondaryVertexBJetTagsPF_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 
        'keep *_hltConvPFTausTightIso_*_*', 
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 
        'keep *_hltConvPFTausTrackFinding_*_*', 
        'keep *_hltConvPFTaus_*_*', 
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltCsc2DRecHits_*_*', 
        'keep *_hltCscSegments_*_*', 
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltDoublePFTau25TrackPt5_*_*', 
        'keep *_hltDoublePFTau25_*_*', 
        'keep *_hltDoublePFTauTightIso45Track5_*_*', 
        'keep *_hltDoublePFTauTightIso45Track_*_*', 
        'keep *_hltDt4DSegments_*_*', 
        'keep *_hltEcalPhiSymFilter_*_*', 
        'keep *_hltEcalRecHitAll_*_*', 
        'keep *_hltEcalRecHit_*_*', 
        'keep *_hltEgammaCandidates_*_*', 
        'keep *_hltEgammaGsfElectrons_*_*', 
        'keep *_hltEgammaGsfTracks_*_*', 
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*', 
        'keep *_hltEle27WP85PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltElectronsVertex_*_*', 
        'keep *_hltFEDSelectorLumiPixels_*_*', 
        'keep *_hltFastPVPixelTracksMerger_*_*', 
        'keep *_hltFastPVPixelTracksRecover_*_*', 
        'keep *_hltFastPVPixelTracks_*_*', 
        'keep *_hltFastPVPixelVertices3D_*_*', 
        'keep *_hltFastPVPixelVertices_*_*', 
        'keep *_hltFastPixelBLifetimeL3TagInfos_*_*', 
        'keep *_hltFastPrimaryVertex_*_*', 
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*', 
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltGmtStage2Digis_*_*', 
        'keep *_hltGoodOnlinePVs_*_*', 
        'keep *_hltGtStage2Digis_*_*', 
        'keep *_hltHICaloJetCorrected_*_*', 
        'keep *_hltHICaloJetIDPassed_*_*', 
        'keep *_hltHIGoodLooseTracks_*_*', 
        'keep *_hltHIPixel3PrimTracks_*_*', 
        'keep *_hltHISelectedVertex_*_*', 
        'keep *_hltHISiPixelClusters_*_*', 
        'keep *_hltHITIPTCorrectorHB_*_*', 
        'keep *_hltHITIPTCorrectorHE_*_*', 
        'keep *_hltHbhereco_*_*', 
        'keep *_hltHfreco_*_*', 
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltHiIslandSuperClustersHI_*_*', 
        'keep *_hltHoreco_*_*', 
        'keep *_hltIsolPixelTrackProdHB_*_*', 
        'keep *_hltIsolPixelTrackProdHE_*_*', 
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*', 
        'keep *_hltIter0HighPtTkMuPixelTracks_*_*', 
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*', 
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter1Merged_*_*', 
        'keep *_hltIter1PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter2HighPtTkMuMerged_*_*', 
        'keep *_hltIter2HighPtTkMuTrackSelectionHighPurity_*_*', 
        'keep *_hltIter2MergedForBTag_*_*', 
        'keep *_hltIter2MergedForElectrons_*_*', 
        'keep *_hltIter2Merged_*_*', 
        'keep *_hltIter2PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter3Merged_*_*', 
        'keep *_hltIter4Merged_*_*', 
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*', 
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*', 
        'keep *_hltL1IsoElectronTrackIsol_*_*', 
        'keep *_hltL1NonIsoElectronTrackIsol_*_*', 
        'keep *_hltL1SeededRecoEcalCandidate_*_*', 
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*', 
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*', 
        'keep *_hltL1sL1EG18er_*_*', 
        'keep *_hltL1sL1ETM36ORETM40_*_*', 
        'keep *_hltL1sL1Jet52ETM30_*_*', 
        'keep *_hltL1sL1SingleEG12_*_*', 
        'keep *_hltL1sL1SingleEG15_*_*', 
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltL1sL1SingleMu10_*_*', 
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*', 
        'keep *_hltL1sMu16Eta2p1_*_*', 
        'keep *_hltL2MuonCandidatesNoVtx_*_*', 
        'keep *_hltL2MuonCandidates_*_*', 
        'keep *_hltL2MuonSeeds_*_*', 
        'keep *_hltL2Muons_*_*', 
        'keep *_hltL2TauJets_*_*', 
        'keep *_hltL3MuonCandidates_*_*', 
        'keep *_hltL3MuonsIOHit_*_*', 
        'keep *_hltL3MuonsLinksCombination_*_*', 
        'keep *_hltL3MuonsOIHit_*_*', 
        'keep *_hltL3MuonsOIState_*_*', 
        'keep *_hltL3Muons_*_*', 
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*', 
        'keep *_hltL3NoFiltersNoVtxMuons_*_*', 
        'keep *_hltL3SecondaryVertexTagInfos_*_*', 
        'keep *_hltL3TkFromL2OICombination_*_*', 
        'keep *_hltL3TkTracksFromL2IOHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIState_*_*', 
        'keep *_hltL3TkTracksFromL2_*_*', 
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIState_*_*', 
        'keep *_hltL3TrajSeedIOHit_*_*', 
        'keep *_hltL3TrajSeedOIHit_*_*', 
        'keep *_hltL3TrajSeedOIState_*_*', 
        'keep *_hltL3TrajectorySeed_*_*', 
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*', 
        'keep *_hltLeadingCentralJets30SingleTopEle27_*_*', 
        'keep *_hltLeadingCentralJets30SingleTopIsoMu24_*_*', 
        'keep *_hltMergedTracks_*_*', 
        'keep *_hltMet_*_*', 
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*', 
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 
        'keep *_hltMuonCSCDigis_*_*', 
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*', 
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*', 
        'keep *_hltMuonDTDigis_*_*', 
        'keep *_hltMuonRPCDigis_*_*', 
        'keep *_hltOnlineBeamSpot_*_*', 
        'keep *_hltOnlinePrimaryVertices_*_*', 
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*', 
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*', 
        'keep *_hltPFJetForBtag_*_*', 
        'keep *_hltPFMuonMerging_*_*', 
        'keep *_hltPFTau15TrackLooseIso_*_*', 
        'keep *_hltPFTau15Track_*_*', 
        'keep *_hltPFTau15_*_*', 
        'keep *_hltPFTau20IsoMuVertex_*_*', 
        'keep *_hltPFTau20TrackLooseIso_*_*', 
        'keep *_hltPFTau20Track_*_*', 
        'keep *_hltPFTau20_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltPFTau25TrackPt5_*_*', 
        'keep *_hltPFTau25_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIso_*_*', 
        'keep *_hltPFTau35TrackPt20_*_*', 
        'keep *_hltPFTau35Track_*_*', 
        'keep *_hltPFTau35_*_*', 
        'keep *_hltPFTauEleVertex20_*_*', 
        'keep *_hltPFTauJetTracksAssociator_*_*', 
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*', 
        'keep *_hltPFTauMediumIso20Track_*_*', 
        'keep *_hltPFTauMediumIso20_*_*', 
        'keep *_hltPFTauMediumIso35Track_*_*', 
        'keep *_hltPFTauMediumIso35_*_*', 
        'keep *_hltPFTauTagInfo_*_*', 
        'keep *_hltPFTauTightIso20TrackTightIso_*_*', 
        'keep *_hltPFTauTightIso20Track_*_*', 
        'keep *_hltPFTauTightIso20_*_*', 
        'keep *_hltPFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltParticleFlowForTaus_*_*', 
        'keep *_hltParticleFlow_*_*', 
        'keep *_hltPixelMatch3HitElectronsActivity_*_*', 
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchElectronsActivity_*_*', 
        'keep *_hltPixelMatchElectronsL1Iso_*_*', 
        'keep *_hltPixelMatchElectronsL1NonIso_*_*', 
        'keep *_hltPixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltPixelTracksElectrons_*_*', 
        'keep *_hltPixelTracksMerged_*_*', 
        'keep *_hltPixelTracks_*_*', 
        'keep *_hltPixelVertices3DbbPhi_*_*', 
        'keep *_hltPixelVertices_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*', 
        'keep *_hltRpcRecHits_*_*', 
        'keep *_hltSelector4CentralJetsL1FastJet_*_*', 
        'keep *_hltSelector8CentralJetsL1FastJet_*_*', 
        'keep *_hltSelectorJets20L1FastJet_*_*', 
        'keep *_hltSiPixelCluster_*_*', 
        'keep *_hltSiPixelClusters_*_*', 
        'keep *_hltSiStripClusters_*_*', 
        'keep *_hltSiStripRawToClustersFacility_*_*', 
        'keep *_hltSingleMu15L3Filtered15_*_*', 
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*', 
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*', 
        'keep *_hltTowerMakerForAll_*_*', 
        'keep *_hltTowerMakerForMuons_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'keep *_hltTriggerSummaryRAW_*_*', 
        'keep *_hltTrimmedPixelVertices_*_*', 
        'keep *_hltVerticesL3_*_*', 
        'keep *_hltVerticesPFFilter_*_*', 
        'keep *_hltVerticesPFSelector_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*', 
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*', 
        'keep LumiScalerss_hltScalersRawToDigi_*_*', 
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*', 
        'keep TrackingRecHitsOwned_hltL3Muons_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep recoCaloJets_*_*_*', 
        'keep recoCaloMETs_*_*_*', 
        'keep recoCaloMETs_hltMet_*_*', 
        'keep recoCompositeCandidates_*_*_*', 
        'keep recoElectrons_*_*_*', 
        'keep recoIsolatedPixelTrackCandidates_*_*_*', 
        'keep recoMETs_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoPFTaus_*_*_*', 
        'keep recoRecoChargedCandidates_*_*_*', 
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*', 
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidates_*_*_*', 
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3MuonsOIHit_*_*', 
        'keep recoTracks_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3Muons_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*', 
        'keep triggerTriggerEventWithRefs_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep triggerTriggerFilterObjectWithRefs_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'drop *_trackingtruthprod_*_*', 
        'drop *_electrontruth_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*', 
        'drop *_mix_simSiPixelDigis*_*', 
        'drop *_mix_simSiStripDigis*_*', 
        'keep *_allTrackMCMatch_*_*' ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWRECOEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep ClusterSummary_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hbheprereco_*_*', 
        'keep *_hfprereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_hcalDigis_*_*', 
        'keep ZDCDataFramesSorted_castorDigis_*_*', 
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*', 
        'keep ZDCRecHitsSorted_zdcreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_castorDigis_*_*', 
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*', 
        'keep HcalUnpackerReport_hcalDigis_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep EBSrFlagsSorted_ecalDigis__*', 
        'keep EESrFlagsSorted_ecalDigis__*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep *_particleFlowSuperClusterECAL_*_*', 
        'keep *_particleFlowSuperClusterOOTECAL_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*', 
        'keep recoCaloClusters_islandBasicClusters_*_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep *_generalTracks_MVAVals_*', 
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*', 
        'keep uints_extraFromSeeds_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep recoTracks_cosmicDCTracks_*_*', 
        'keep recoTrackExtras_cosmicDCTracks_*_*', 
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*', 
        'keep *_ak4CaloJets_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_ak4PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHSSoftDrop_*_*', 
        'keep *_cmsTopTagPFJetsCHS_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*', 
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetID_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRhoAll_*_*', 
        'keep *_fixedGridRhoFastjetAll_*_*', 
        'keep *_fixedGridRhoFastjetAllTmp_*_*', 
        'keep *_fixedGridRhoFastjetAllCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentral_*_*', 
        'keep *_fixedGridRhoFastjetCentralCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*', 
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*', 
        'keep *_ak8PFJetsCHSSoftDropMass_*_*', 
        'keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoEcalHaloData_EcalHaloData_*_*', 
        'keep recoGlobalHaloData_GlobalHaloData_*_*', 
        'keep recoHcalHaloData_HcalHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_displacedMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_softPFMuonsTagInfos_*_*', 
        'keep *_softPFElectronsTagInfos_*_*', 
        'keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfImpactParameterTagInfos_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSecondaryVertexTagInfos_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackVertexTagInfos_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*', 
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*', 
        'keep recoPFTaus_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSum_*_*', 
        'keep *_hpsPFTauPUcorrPtSum_*_*', 
        'keep *_hpsPFTauChargedIsoPtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*', 
        'keep *_hpsPFTauFootprintCorrection_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*', 
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectrons_gedGsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep *_egmGedGsfElectronPFIsolation_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'drop *_egmGsfElectronIDs_*_*', 
        'drop *_egmPhotonIDs_*_*', 
        'keep *_gedPhotonCore_*_*', 
        'keep *_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'keep recoPhotons_mustachePhotons_*_*', 
        'keep recoPhotonCores_mustachePhotonCore_*_*', 
        'keep recoPhotons_ootPhotons_*_*', 
        'keep recoPhotonCores_ootPhotonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'keep recoConversions_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoConversions_allConversionsOldEG_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterHF_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_particleFlow_muons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_hlt*_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*', 
        'keep L1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep BeamSpotOnlines_scalersRawToDigi_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep *_tcdsDigis_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep *_pfIsolatedElectronsEI_*_*', 
        'keep *_pfIsolatedMuonsEI_*_*', 
        'keep recoPFJets_pfJetsEI_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*', 
        'keep recoPFTaus_pfTausEI_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*', 
        'keep TotemFEDInfos_totemRPRawToDigi_*_*', 
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*', 
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*', 
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*', 
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*', 
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*', 
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*', 
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*', 
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*', 
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*', 
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*' ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWRECOSIMHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep ClusterSummary_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hbheprereco_*_*', 
        'keep *_hfprereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_hcalDigis_*_*', 
        'keep ZDCDataFramesSorted_castorDigis_*_*', 
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*', 
        'keep ZDCRecHitsSorted_zdcreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_castorDigis_*_*', 
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*', 
        'keep HcalUnpackerReport_hcalDigis_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep EBSrFlagsSorted_ecalDigis__*', 
        'keep EESrFlagsSorted_ecalDigis__*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep *_particleFlowSuperClusterECAL_*_*', 
        'keep *_particleFlowSuperClusterOOTECAL_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*', 
        'keep recoCaloClusters_islandBasicClusters_*_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep *_generalTracks_MVAVals_*', 
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*', 
        'keep uints_extraFromSeeds_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep recoTracks_cosmicDCTracks_*_*', 
        'keep recoTrackExtras_cosmicDCTracks_*_*', 
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*', 
        'keep *_ak4CaloJets_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_ak4PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHSSoftDrop_*_*', 
        'keep *_cmsTopTagPFJetsCHS_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*', 
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetID_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRhoAll_*_*', 
        'keep *_fixedGridRhoFastjetAll_*_*', 
        'keep *_fixedGridRhoFastjetAllTmp_*_*', 
        'keep *_fixedGridRhoFastjetAllCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentral_*_*', 
        'keep *_fixedGridRhoFastjetCentralCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*', 
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*', 
        'keep *_ak8PFJetsCHSSoftDropMass_*_*', 
        'keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoEcalHaloData_EcalHaloData_*_*', 
        'keep recoGlobalHaloData_GlobalHaloData_*_*', 
        'keep recoHcalHaloData_HcalHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_displacedMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_softPFMuonsTagInfos_*_*', 
        'keep *_softPFElectronsTagInfos_*_*', 
        'keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfImpactParameterTagInfos_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSecondaryVertexTagInfos_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackVertexTagInfos_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*', 
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*', 
        'keep recoPFTaus_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSum_*_*', 
        'keep *_hpsPFTauPUcorrPtSum_*_*', 
        'keep *_hpsPFTauChargedIsoPtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*', 
        'keep *_hpsPFTauFootprintCorrection_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*', 
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectrons_gedGsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep *_egmGedGsfElectronPFIsolation_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'drop *_egmGsfElectronIDs_*_*', 
        'drop *_egmPhotonIDs_*_*', 
        'keep *_gedPhotonCore_*_*', 
        'keep *_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'keep recoPhotons_mustachePhotons_*_*', 
        'keep recoPhotonCores_mustachePhotonCore_*_*', 
        'keep recoPhotons_ootPhotons_*_*', 
        'keep recoPhotonCores_ootPhotonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'keep recoConversions_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoConversions_allConversionsOldEG_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterHF_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_particleFlow_muons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_hlt*_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*', 
        'keep L1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep BeamSpotOnlines_scalersRawToDigi_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep *_tcdsDigis_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep *_pfIsolatedElectronsEI_*_*', 
        'keep *_pfIsolatedMuonsEI_*_*', 
        'keep recoPFJets_pfJetsEI_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*', 
        'keep recoPFTaus_pfTausEI_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*', 
        'keep TotemFEDInfos_totemRPRawToDigi_*_*', 
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*', 
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*', 
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*', 
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*', 
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*', 
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*', 
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*', 
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*', 
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*', 
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep *_ak4GenJets_*_*', 
        'keep *_ak8GenJets_*_*', 
        'keep *_ak4GenJetsNoNu_*_*', 
        'keep *_ak8GenJetsNoNu_*_*', 
        'keep *_genParticle_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_muonSimClassifier_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*', 
        'keep *_hltAK4CaloJetsIDPassed_*_*', 
        'keep *_hltAK4CaloJets_*_*', 
        'keep *_hltAK4PFJetsCorrected_*_*', 
        'keep *_hltAK4PFJetsForTaus_*_*', 
        'keep *_hltAK4PFJets_*_*', 
        'keep *_hltAlCaEtaEBRechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*', 
        'keep *_hltAlCaEtaEERechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaEtaEERechitsToDigis_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegionalLowPU_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilter_*_*', 
        'keep *_hltAlCaPhiSymStream_*_*', 
        'keep *_hltAlCaPi0EBRechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*', 
        'keep *_hltAlCaPi0EERechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaPi0EERechitsToDigis_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegionalLowPU_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilter_*_*', 
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonMu5L3_*_*', 
        'keep *_hltCSVJetTagSingleTopEle27_*_*', 
        'keep *_hltCSVJetTagSingleTopIsoMu24_*_*', 
        'keep *_hltCaloJetCorrectedRegional_*_*', 
        'keep *_hltCaloJetCorrected_*_*', 
        'keep *_hltCaloJetL1FastJetCorrected_*_*', 
        'keep *_hltCaloStage2Digis_*_*', 
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCombinedSecondaryVertexBJetTagsCalo_*_*', 
        'keep *_hltCombinedSecondaryVertexBJetTagsPF_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 
        'keep *_hltConvPFTausTightIso_*_*', 
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 
        'keep *_hltConvPFTausTrackFinding_*_*', 
        'keep *_hltConvPFTaus_*_*', 
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltCsc2DRecHits_*_*', 
        'keep *_hltCscSegments_*_*', 
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltDoublePFTau25TrackPt5_*_*', 
        'keep *_hltDoublePFTau25_*_*', 
        'keep *_hltDoublePFTauTightIso45Track5_*_*', 
        'keep *_hltDoublePFTauTightIso45Track_*_*', 
        'keep *_hltDt4DSegments_*_*', 
        'keep *_hltEcalPhiSymFilter_*_*', 
        'keep *_hltEcalRecHitAll_*_*', 
        'keep *_hltEcalRecHit_*_*', 
        'keep *_hltEgammaCandidates_*_*', 
        'keep *_hltEgammaGsfElectrons_*_*', 
        'keep *_hltEgammaGsfTracks_*_*', 
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*', 
        'keep *_hltEle27WP85PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltElectronsVertex_*_*', 
        'keep *_hltFEDSelectorLumiPixels_*_*', 
        'keep *_hltFastPVPixelTracksMerger_*_*', 
        'keep *_hltFastPVPixelTracksRecover_*_*', 
        'keep *_hltFastPVPixelTracks_*_*', 
        'keep *_hltFastPVPixelVertices3D_*_*', 
        'keep *_hltFastPVPixelVertices_*_*', 
        'keep *_hltFastPixelBLifetimeL3TagInfos_*_*', 
        'keep *_hltFastPrimaryVertex_*_*', 
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*', 
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltGmtStage2Digis_*_*', 
        'keep *_hltGoodOnlinePVs_*_*', 
        'keep *_hltGtStage2Digis_*_*', 
        'keep *_hltHICaloJetCorrected_*_*', 
        'keep *_hltHICaloJetIDPassed_*_*', 
        'keep *_hltHIGoodLooseTracks_*_*', 
        'keep *_hltHIPixel3PrimTracks_*_*', 
        'keep *_hltHISelectedVertex_*_*', 
        'keep *_hltHISiPixelClusters_*_*', 
        'keep *_hltHITIPTCorrectorHB_*_*', 
        'keep *_hltHITIPTCorrectorHE_*_*', 
        'keep *_hltHbhereco_*_*', 
        'keep *_hltHfreco_*_*', 
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltHiIslandSuperClustersHI_*_*', 
        'keep *_hltHoreco_*_*', 
        'keep *_hltIsolPixelTrackProdHB_*_*', 
        'keep *_hltIsolPixelTrackProdHE_*_*', 
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*', 
        'keep *_hltIter0HighPtTkMuPixelTracks_*_*', 
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*', 
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter1Merged_*_*', 
        'keep *_hltIter1PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter2HighPtTkMuMerged_*_*', 
        'keep *_hltIter2HighPtTkMuTrackSelectionHighPurity_*_*', 
        'keep *_hltIter2MergedForBTag_*_*', 
        'keep *_hltIter2MergedForElectrons_*_*', 
        'keep *_hltIter2Merged_*_*', 
        'keep *_hltIter2PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter3Merged_*_*', 
        'keep *_hltIter4Merged_*_*', 
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*', 
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*', 
        'keep *_hltL1IsoElectronTrackIsol_*_*', 
        'keep *_hltL1NonIsoElectronTrackIsol_*_*', 
        'keep *_hltL1SeededRecoEcalCandidate_*_*', 
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*', 
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*', 
        'keep *_hltL1sL1EG18er_*_*', 
        'keep *_hltL1sL1ETM36ORETM40_*_*', 
        'keep *_hltL1sL1Jet52ETM30_*_*', 
        'keep *_hltL1sL1SingleEG12_*_*', 
        'keep *_hltL1sL1SingleEG15_*_*', 
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltL1sL1SingleMu10_*_*', 
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*', 
        'keep *_hltL1sMu16Eta2p1_*_*', 
        'keep *_hltL2MuonCandidatesNoVtx_*_*', 
        'keep *_hltL2MuonCandidates_*_*', 
        'keep *_hltL2MuonSeeds_*_*', 
        'keep *_hltL2Muons_*_*', 
        'keep *_hltL2TauJets_*_*', 
        'keep *_hltL3MuonCandidates_*_*', 
        'keep *_hltL3MuonsIOHit_*_*', 
        'keep *_hltL3MuonsLinksCombination_*_*', 
        'keep *_hltL3MuonsOIHit_*_*', 
        'keep *_hltL3MuonsOIState_*_*', 
        'keep *_hltL3Muons_*_*', 
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*', 
        'keep *_hltL3NoFiltersNoVtxMuons_*_*', 
        'keep *_hltL3SecondaryVertexTagInfos_*_*', 
        'keep *_hltL3TkFromL2OICombination_*_*', 
        'keep *_hltL3TkTracksFromL2IOHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIState_*_*', 
        'keep *_hltL3TkTracksFromL2_*_*', 
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIState_*_*', 
        'keep *_hltL3TrajSeedIOHit_*_*', 
        'keep *_hltL3TrajSeedOIHit_*_*', 
        'keep *_hltL3TrajSeedOIState_*_*', 
        'keep *_hltL3TrajectorySeed_*_*', 
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*', 
        'keep *_hltLeadingCentralJets30SingleTopEle27_*_*', 
        'keep *_hltLeadingCentralJets30SingleTopIsoMu24_*_*', 
        'keep *_hltMergedTracks_*_*', 
        'keep *_hltMet_*_*', 
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*', 
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 
        'keep *_hltMuonCSCDigis_*_*', 
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*', 
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*', 
        'keep *_hltMuonDTDigis_*_*', 
        'keep *_hltMuonRPCDigis_*_*', 
        'keep *_hltOnlineBeamSpot_*_*', 
        'keep *_hltOnlinePrimaryVertices_*_*', 
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*', 
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*', 
        'keep *_hltPFJetForBtag_*_*', 
        'keep *_hltPFMuonMerging_*_*', 
        'keep *_hltPFTau15TrackLooseIso_*_*', 
        'keep *_hltPFTau15Track_*_*', 
        'keep *_hltPFTau15_*_*', 
        'keep *_hltPFTau20IsoMuVertex_*_*', 
        'keep *_hltPFTau20TrackLooseIso_*_*', 
        'keep *_hltPFTau20Track_*_*', 
        'keep *_hltPFTau20_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltPFTau25TrackPt5_*_*', 
        'keep *_hltPFTau25_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIso_*_*', 
        'keep *_hltPFTau35TrackPt20_*_*', 
        'keep *_hltPFTau35Track_*_*', 
        'keep *_hltPFTau35_*_*', 
        'keep *_hltPFTauEleVertex20_*_*', 
        'keep *_hltPFTauJetTracksAssociator_*_*', 
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*', 
        'keep *_hltPFTauMediumIso20Track_*_*', 
        'keep *_hltPFTauMediumIso20_*_*', 
        'keep *_hltPFTauMediumIso35Track_*_*', 
        'keep *_hltPFTauMediumIso35_*_*', 
        'keep *_hltPFTauTagInfo_*_*', 
        'keep *_hltPFTauTightIso20TrackTightIso_*_*', 
        'keep *_hltPFTauTightIso20Track_*_*', 
        'keep *_hltPFTauTightIso20_*_*', 
        'keep *_hltPFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltParticleFlowForTaus_*_*', 
        'keep *_hltParticleFlow_*_*', 
        'keep *_hltPixelMatch3HitElectronsActivity_*_*', 
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchElectronsActivity_*_*', 
        'keep *_hltPixelMatchElectronsL1Iso_*_*', 
        'keep *_hltPixelMatchElectronsL1NonIso_*_*', 
        'keep *_hltPixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltPixelTracksElectrons_*_*', 
        'keep *_hltPixelTracksMerged_*_*', 
        'keep *_hltPixelTracks_*_*', 
        'keep *_hltPixelVertices3DbbPhi_*_*', 
        'keep *_hltPixelVertices_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*', 
        'keep *_hltRpcRecHits_*_*', 
        'keep *_hltSelector4CentralJetsL1FastJet_*_*', 
        'keep *_hltSelector8CentralJetsL1FastJet_*_*', 
        'keep *_hltSelectorJets20L1FastJet_*_*', 
        'keep *_hltSiPixelCluster_*_*', 
        'keep *_hltSiPixelClusters_*_*', 
        'keep *_hltSiStripClusters_*_*', 
        'keep *_hltSiStripRawToClustersFacility_*_*', 
        'keep *_hltSingleMu15L3Filtered15_*_*', 
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*', 
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*', 
        'keep *_hltTowerMakerForAll_*_*', 
        'keep *_hltTowerMakerForMuons_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'keep *_hltTriggerSummaryRAW_*_*', 
        'keep *_hltTrimmedPixelVertices_*_*', 
        'keep *_hltVerticesL3_*_*', 
        'keep *_hltVerticesPFFilter_*_*', 
        'keep *_hltVerticesPFSelector_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*', 
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*', 
        'keep LumiScalerss_hltScalersRawToDigi_*_*', 
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*', 
        'keep TrackingRecHitsOwned_hltL3Muons_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep recoCaloJets_*_*_*', 
        'keep recoCaloMETs_*_*_*', 
        'keep recoCaloMETs_hltMet_*_*', 
        'keep recoCompositeCandidates_*_*_*', 
        'keep recoElectrons_*_*_*', 
        'keep recoIsolatedPixelTrackCandidates_*_*_*', 
        'keep recoMETs_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoPFTaus_*_*_*', 
        'keep recoRecoChargedCandidates_*_*_*', 
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*', 
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidates_*_*_*', 
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3MuonsOIHit_*_*', 
        'keep recoTracks_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3Muons_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*', 
        'keep triggerTriggerEventWithRefs_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep triggerTriggerFilterObjectWithRefs_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*' ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(9),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep *_simHcalUnsuppressedDigis_*_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep *_logErrorHarvester_*_*'),
    splitLevel = cms.untracked.int32(0)
)

process.RAWSIMHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep *_simHcalUnsuppressedDigis_*_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*', 
        'keep *_hltAK4CaloJetsIDPassed_*_*', 
        'keep *_hltAK4CaloJets_*_*', 
        'keep *_hltAK4PFJetsCorrected_*_*', 
        'keep *_hltAK4PFJetsForTaus_*_*', 
        'keep *_hltAK4PFJets_*_*', 
        'keep *_hltAlCaEtaEBRechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*', 
        'keep *_hltAlCaEtaEERechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaEtaEERechitsToDigis_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegionalLowPU_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilter_*_*', 
        'keep *_hltAlCaPhiSymStream_*_*', 
        'keep *_hltAlCaPi0EBRechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*', 
        'keep *_hltAlCaPi0EERechitsToDigisLowPU_*_*', 
        'keep *_hltAlCaPi0EERechitsToDigis_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegionalLowPU_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilter_*_*', 
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonMu5L3_*_*', 
        'keep *_hltCSVJetTagSingleTopEle27_*_*', 
        'keep *_hltCSVJetTagSingleTopIsoMu24_*_*', 
        'keep *_hltCaloJetCorrectedRegional_*_*', 
        'keep *_hltCaloJetCorrected_*_*', 
        'keep *_hltCaloJetL1FastJetCorrected_*_*', 
        'keep *_hltCaloStage2Digis_*_*', 
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCombinedSecondaryVertexBJetTagsCalo_*_*', 
        'keep *_hltCombinedSecondaryVertexBJetTagsPF_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 
        'keep *_hltConvPFTausTightIso_*_*', 
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 
        'keep *_hltConvPFTausTrackFinding_*_*', 
        'keep *_hltConvPFTaus_*_*', 
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltCsc2DRecHits_*_*', 
        'keep *_hltCscSegments_*_*', 
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltDoublePFTau25TrackPt5_*_*', 
        'keep *_hltDoublePFTau25_*_*', 
        'keep *_hltDoublePFTauTightIso45Track5_*_*', 
        'keep *_hltDoublePFTauTightIso45Track_*_*', 
        'keep *_hltDt4DSegments_*_*', 
        'keep *_hltEcalPhiSymFilter_*_*', 
        'keep *_hltEcalRecHitAll_*_*', 
        'keep *_hltEcalRecHit_*_*', 
        'keep *_hltEgammaCandidates_*_*', 
        'keep *_hltEgammaGsfElectrons_*_*', 
        'keep *_hltEgammaGsfTracks_*_*', 
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*', 
        'keep *_hltEle27WP85PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltElectronsVertex_*_*', 
        'keep *_hltFEDSelectorLumiPixels_*_*', 
        'keep *_hltFastPVPixelTracksMerger_*_*', 
        'keep *_hltFastPVPixelTracksRecover_*_*', 
        'keep *_hltFastPVPixelTracks_*_*', 
        'keep *_hltFastPVPixelVertices3D_*_*', 
        'keep *_hltFastPVPixelVertices_*_*', 
        'keep *_hltFastPixelBLifetimeL3TagInfos_*_*', 
        'keep *_hltFastPrimaryVertex_*_*', 
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*', 
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltGmtStage2Digis_*_*', 
        'keep *_hltGoodOnlinePVs_*_*', 
        'keep *_hltGtStage2Digis_*_*', 
        'keep *_hltHICaloJetCorrected_*_*', 
        'keep *_hltHICaloJetIDPassed_*_*', 
        'keep *_hltHIGoodLooseTracks_*_*', 
        'keep *_hltHIPixel3PrimTracks_*_*', 
        'keep *_hltHISelectedVertex_*_*', 
        'keep *_hltHISiPixelClusters_*_*', 
        'keep *_hltHITIPTCorrectorHB_*_*', 
        'keep *_hltHITIPTCorrectorHE_*_*', 
        'keep *_hltHbhereco_*_*', 
        'keep *_hltHfreco_*_*', 
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltHiIslandSuperClustersHI_*_*', 
        'keep *_hltHoreco_*_*', 
        'keep *_hltIsolPixelTrackProdHB_*_*', 
        'keep *_hltIsolPixelTrackProdHE_*_*', 
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*', 
        'keep *_hltIter0HighPtTkMuPixelTracks_*_*', 
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*', 
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter1Merged_*_*', 
        'keep *_hltIter1PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter2HighPtTkMuMerged_*_*', 
        'keep *_hltIter2HighPtTkMuTrackSelectionHighPurity_*_*', 
        'keep *_hltIter2MergedForBTag_*_*', 
        'keep *_hltIter2MergedForElectrons_*_*', 
        'keep *_hltIter2Merged_*_*', 
        'keep *_hltIter2PFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltIter3Merged_*_*', 
        'keep *_hltIter4Merged_*_*', 
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*', 
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*', 
        'keep *_hltL1IsoElectronTrackIsol_*_*', 
        'keep *_hltL1NonIsoElectronTrackIsol_*_*', 
        'keep *_hltL1SeededRecoEcalCandidate_*_*', 
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*', 
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*', 
        'keep *_hltL1sL1EG18er_*_*', 
        'keep *_hltL1sL1ETM36ORETM40_*_*', 
        'keep *_hltL1sL1Jet52ETM30_*_*', 
        'keep *_hltL1sL1SingleEG12_*_*', 
        'keep *_hltL1sL1SingleEG15_*_*', 
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltL1sL1SingleMu10_*_*', 
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*', 
        'keep *_hltL1sMu16Eta2p1_*_*', 
        'keep *_hltL2MuonCandidatesNoVtx_*_*', 
        'keep *_hltL2MuonCandidates_*_*', 
        'keep *_hltL2MuonSeeds_*_*', 
        'keep *_hltL2Muons_*_*', 
        'keep *_hltL2TauJets_*_*', 
        'keep *_hltL3MuonCandidates_*_*', 
        'keep *_hltL3MuonsIOHit_*_*', 
        'keep *_hltL3MuonsLinksCombination_*_*', 
        'keep *_hltL3MuonsOIHit_*_*', 
        'keep *_hltL3MuonsOIState_*_*', 
        'keep *_hltL3Muons_*_*', 
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*', 
        'keep *_hltL3NoFiltersNoVtxMuons_*_*', 
        'keep *_hltL3SecondaryVertexTagInfos_*_*', 
        'keep *_hltL3TkFromL2OICombination_*_*', 
        'keep *_hltL3TkTracksFromL2IOHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIState_*_*', 
        'keep *_hltL3TkTracksFromL2_*_*', 
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIState_*_*', 
        'keep *_hltL3TrajSeedIOHit_*_*', 
        'keep *_hltL3TrajSeedOIHit_*_*', 
        'keep *_hltL3TrajSeedOIState_*_*', 
        'keep *_hltL3TrajectorySeed_*_*', 
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*', 
        'keep *_hltLeadingCentralJets30SingleTopEle27_*_*', 
        'keep *_hltLeadingCentralJets30SingleTopIsoMu24_*_*', 
        'keep *_hltMergedTracks_*_*', 
        'keep *_hltMet_*_*', 
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*', 
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 
        'keep *_hltMuonCSCDigis_*_*', 
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*', 
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*', 
        'keep *_hltMuonDTDigis_*_*', 
        'keep *_hltMuonRPCDigis_*_*', 
        'keep *_hltOnlineBeamSpot_*_*', 
        'keep *_hltOnlinePrimaryVertices_*_*', 
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*', 
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*', 
        'keep *_hltPFJetForBtag_*_*', 
        'keep *_hltPFMuonMerging_*_*', 
        'keep *_hltPFTau15TrackLooseIso_*_*', 
        'keep *_hltPFTau15Track_*_*', 
        'keep *_hltPFTau15_*_*', 
        'keep *_hltPFTau20IsoMuVertex_*_*', 
        'keep *_hltPFTau20TrackLooseIso_*_*', 
        'keep *_hltPFTau20Track_*_*', 
        'keep *_hltPFTau20_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltPFTau25TrackPt5_*_*', 
        'keep *_hltPFTau25_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIso_*_*', 
        'keep *_hltPFTau35TrackPt20_*_*', 
        'keep *_hltPFTau35Track_*_*', 
        'keep *_hltPFTau35_*_*', 
        'keep *_hltPFTauEleVertex20_*_*', 
        'keep *_hltPFTauJetTracksAssociator_*_*', 
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*', 
        'keep *_hltPFTauMediumIso20Track_*_*', 
        'keep *_hltPFTauMediumIso20_*_*', 
        'keep *_hltPFTauMediumIso35Track_*_*', 
        'keep *_hltPFTauMediumIso35_*_*', 
        'keep *_hltPFTauTagInfo_*_*', 
        'keep *_hltPFTauTightIso20TrackTightIso_*_*', 
        'keep *_hltPFTauTightIso20Track_*_*', 
        'keep *_hltPFTauTightIso20_*_*', 
        'keep *_hltPFlowTrackSelectionHighPurity_*_*', 
        'keep *_hltParticleFlowForTaus_*_*', 
        'keep *_hltParticleFlow_*_*', 
        'keep *_hltPixelMatch3HitElectronsActivity_*_*', 
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchElectronsActivity_*_*', 
        'keep *_hltPixelMatchElectronsL1Iso_*_*', 
        'keep *_hltPixelMatchElectronsL1NonIso_*_*', 
        'keep *_hltPixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltPixelTracksElectrons_*_*', 
        'keep *_hltPixelTracksMerged_*_*', 
        'keep *_hltPixelTracks_*_*', 
        'keep *_hltPixelVertices3DbbPhi_*_*', 
        'keep *_hltPixelVertices_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*', 
        'keep *_hltRpcRecHits_*_*', 
        'keep *_hltSelector4CentralJetsL1FastJet_*_*', 
        'keep *_hltSelector8CentralJetsL1FastJet_*_*', 
        'keep *_hltSelectorJets20L1FastJet_*_*', 
        'keep *_hltSiPixelCluster_*_*', 
        'keep *_hltSiPixelClusters_*_*', 
        'keep *_hltSiStripClusters_*_*', 
        'keep *_hltSiStripRawToClustersFacility_*_*', 
        'keep *_hltSingleMu15L3Filtered15_*_*', 
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*', 
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*', 
        'keep *_hltTowerMakerForAll_*_*', 
        'keep *_hltTowerMakerForMuons_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'keep *_hltTriggerSummaryRAW_*_*', 
        'keep *_hltTrimmedPixelVertices_*_*', 
        'keep *_hltVerticesL3_*_*', 
        'keep *_hltVerticesPFFilter_*_*', 
        'keep *_hltVerticesPFSelector_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*', 
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*', 
        'keep LumiScalerss_hltScalersRawToDigi_*_*', 
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*', 
        'keep TrackingRecHitsOwned_hltL3Muons_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep recoCaloJets_*_*_*', 
        'keep recoCaloMETs_*_*_*', 
        'keep recoCaloMETs_hltMet_*_*', 
        'keep recoCompositeCandidates_*_*_*', 
        'keep recoElectrons_*_*_*', 
        'keep recoIsolatedPixelTrackCandidates_*_*_*', 
        'keep recoMETs_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoPFTaus_*_*_*', 
        'keep recoRecoChargedCandidates_*_*_*', 
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*', 
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidates_*_*_*', 
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3MuonsOIHit_*_*', 
        'keep recoTracks_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3Muons_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*', 
        'keep triggerTriggerEventWithRefs_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep triggerTriggerFilterObjectWithRefs_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*' ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RECODEBUGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep ClusterSummary_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hbheprereco_*_*', 
        'keep *_hfprereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_hcalDigis_*_*', 
        'keep ZDCDataFramesSorted_castorDigis_*_*', 
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*', 
        'keep ZDCRecHitsSorted_zdcreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_castorDigis_*_*', 
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*', 
        'keep HcalUnpackerReport_hcalDigis_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep EBSrFlagsSorted_ecalDigis__*', 
        'keep EESrFlagsSorted_ecalDigis__*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep *_particleFlowSuperClusterECAL_*_*', 
        'keep *_particleFlowSuperClusterOOTECAL_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*', 
        'keep recoCaloClusters_islandBasicClusters_*_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep *_generalTracks_MVAVals_*', 
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*', 
        'keep uints_extraFromSeeds_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep recoTracks_cosmicDCTracks_*_*', 
        'keep recoTrackExtras_cosmicDCTracks_*_*', 
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*', 
        'keep *_ak4CaloJets_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_ak4PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHSSoftDrop_*_*', 
        'keep *_cmsTopTagPFJetsCHS_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*', 
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetID_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRhoAll_*_*', 
        'keep *_fixedGridRhoFastjetAll_*_*', 
        'keep *_fixedGridRhoFastjetAllTmp_*_*', 
        'keep *_fixedGridRhoFastjetAllCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentral_*_*', 
        'keep *_fixedGridRhoFastjetCentralCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*', 
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*', 
        'keep *_ak8PFJetsCHSSoftDropMass_*_*', 
        'keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoEcalHaloData_EcalHaloData_*_*', 
        'keep recoGlobalHaloData_GlobalHaloData_*_*', 
        'keep recoHcalHaloData_HcalHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_displacedMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_softPFMuonsTagInfos_*_*', 
        'keep *_softPFElectronsTagInfos_*_*', 
        'keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfImpactParameterTagInfos_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSecondaryVertexTagInfos_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackVertexTagInfos_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*', 
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*', 
        'keep recoPFTaus_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSum_*_*', 
        'keep *_hpsPFTauPUcorrPtSum_*_*', 
        'keep *_hpsPFTauChargedIsoPtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*', 
        'keep *_hpsPFTauFootprintCorrection_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*', 
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectrons_gedGsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep *_egmGedGsfElectronPFIsolation_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'drop *_egmGsfElectronIDs_*_*', 
        'drop *_egmPhotonIDs_*_*', 
        'keep *_gedPhotonCore_*_*', 
        'keep *_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'keep recoPhotons_mustachePhotons_*_*', 
        'keep recoPhotonCores_mustachePhotonCore_*_*', 
        'keep recoPhotons_ootPhotons_*_*', 
        'keep recoPhotonCores_ootPhotonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'keep recoConversions_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoConversions_allConversionsOldEG_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterHF_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_particleFlow_muons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_hlt*_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*', 
        'keep L1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep BeamSpotOnlines_scalersRawToDigi_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep *_tcdsDigis_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep *_pfIsolatedElectronsEI_*_*', 
        'keep *_pfIsolatedMuonsEI_*_*', 
        'keep recoPFJets_pfJetsEI_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*', 
        'keep recoPFTaus_pfTausEI_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*', 
        'keep TotemFEDInfos_totemRPRawToDigi_*_*', 
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*', 
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*', 
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*', 
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*', 
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*', 
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*', 
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*', 
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*', 
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*', 
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep *_ak4GenJets_*_*', 
        'keep *_ak8GenJets_*_*', 
        'keep *_ak4GenJetsNoNu_*_*', 
        'keep *_ak8GenJetsNoNu_*_*', 
        'keep *_genParticle_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_muonSimClassifier_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'drop *_trackingtruthprod_*_*', 
        'drop *_electrontruth_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*', 
        'drop *_mix_simSiPixelDigis*_*', 
        'drop *_mix_simSiStripDigis*_*', 
        'keep *_allTrackMCMatch_*_*' ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RECOEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( ('drop *', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep ClusterSummary_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hbheprereco_*_*', 
        'keep *_hfprereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_hcalDigis_*_*', 
        'keep ZDCDataFramesSorted_castorDigis_*_*', 
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*', 
        'keep ZDCRecHitsSorted_zdcreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_castorDigis_*_*', 
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*', 
        'keep HcalUnpackerReport_hcalDigis_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep EBSrFlagsSorted_ecalDigis__*', 
        'keep EESrFlagsSorted_ecalDigis__*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep *_particleFlowSuperClusterECAL_*_*', 
        'keep *_particleFlowSuperClusterOOTECAL_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*', 
        'keep recoCaloClusters_islandBasicClusters_*_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep *_generalTracks_MVAVals_*', 
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*', 
        'keep uints_extraFromSeeds_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep recoTracks_cosmicDCTracks_*_*', 
        'keep recoTrackExtras_cosmicDCTracks_*_*', 
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*', 
        'keep *_ak4CaloJets_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_ak4PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHSSoftDrop_*_*', 
        'keep *_cmsTopTagPFJetsCHS_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*', 
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetID_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRhoAll_*_*', 
        'keep *_fixedGridRhoFastjetAll_*_*', 
        'keep *_fixedGridRhoFastjetAllTmp_*_*', 
        'keep *_fixedGridRhoFastjetAllCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentral_*_*', 
        'keep *_fixedGridRhoFastjetCentralCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*', 
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*', 
        'keep *_ak8PFJetsCHSSoftDropMass_*_*', 
        'keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoEcalHaloData_EcalHaloData_*_*', 
        'keep recoGlobalHaloData_GlobalHaloData_*_*', 
        'keep recoHcalHaloData_HcalHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_displacedMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_softPFMuonsTagInfos_*_*', 
        'keep *_softPFElectronsTagInfos_*_*', 
        'keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfImpactParameterTagInfos_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSecondaryVertexTagInfos_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackVertexTagInfos_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*', 
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*', 
        'keep recoPFTaus_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSum_*_*', 
        'keep *_hpsPFTauPUcorrPtSum_*_*', 
        'keep *_hpsPFTauChargedIsoPtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*', 
        'keep *_hpsPFTauFootprintCorrection_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*', 
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectrons_gedGsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep *_egmGedGsfElectronPFIsolation_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'drop *_egmGsfElectronIDs_*_*', 
        'drop *_egmPhotonIDs_*_*', 
        'keep *_gedPhotonCore_*_*', 
        'keep *_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'keep recoPhotons_mustachePhotons_*_*', 
        'keep recoPhotonCores_mustachePhotonCore_*_*', 
        'keep recoPhotons_ootPhotons_*_*', 
        'keep recoPhotonCores_ootPhotonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'keep recoConversions_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoConversions_allConversionsOldEG_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterHF_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_particleFlow_muons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_hlt*_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*', 
        'keep L1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep BeamSpotOnlines_scalersRawToDigi_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep *_tcdsDigis_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep *_pfIsolatedElectronsEI_*_*', 
        'keep *_pfIsolatedMuonsEI_*_*', 
        'keep recoPFJets_pfJetsEI_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*', 
        'keep recoPFTaus_pfTausEI_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*', 
        'keep TotemFEDInfos_totemRPRawToDigi_*_*', 
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*', 
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*', 
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*', 
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*', 
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*', 
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*', 
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*', 
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*', 
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*', 
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*' ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RECOSIMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep ClusterSummary_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hbheprereco_*_*', 
        'keep *_hfprereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_hcalDigis_*_*', 
        'keep ZDCDataFramesSorted_castorDigis_*_*', 
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*', 
        'keep ZDCRecHitsSorted_zdcreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_castorDigis_*_*', 
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*', 
        'keep HcalUnpackerReport_hcalDigis_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep EBSrFlagsSorted_ecalDigis__*', 
        'keep EESrFlagsSorted_ecalDigis__*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep *_particleFlowSuperClusterECAL_*_*', 
        'keep *_particleFlowSuperClusterOOTECAL_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*', 
        'keep recoCaloClusters_islandBasicClusters_*_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep *_generalTracks_MVAVals_*', 
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*', 
        'keep uints_extraFromSeeds_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep recoTracks_cosmicDCTracks_*_*', 
        'keep recoTrackExtras_cosmicDCTracks_*_*', 
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*', 
        'keep *_ak4CaloJets_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_ak4PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHSSoftDrop_*_*', 
        'keep *_cmsTopTagPFJetsCHS_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*', 
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetID_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRhoAll_*_*', 
        'keep *_fixedGridRhoFastjetAll_*_*', 
        'keep *_fixedGridRhoFastjetAllTmp_*_*', 
        'keep *_fixedGridRhoFastjetAllCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentral_*_*', 
        'keep *_fixedGridRhoFastjetCentralCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*', 
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*', 
        'keep *_ak8PFJetsCHSSoftDropMass_*_*', 
        'keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoEcalHaloData_EcalHaloData_*_*', 
        'keep recoGlobalHaloData_GlobalHaloData_*_*', 
        'keep recoHcalHaloData_HcalHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_displacedMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_softPFMuonsTagInfos_*_*', 
        'keep *_softPFElectronsTagInfos_*_*', 
        'keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfImpactParameterTagInfos_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSecondaryVertexTagInfos_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackVertexTagInfos_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*', 
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*', 
        'keep recoPFTaus_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSum_*_*', 
        'keep *_hpsPFTauPUcorrPtSum_*_*', 
        'keep *_hpsPFTauChargedIsoPtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*', 
        'keep *_hpsPFTauFootprintCorrection_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*', 
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectrons_gedGsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep *_egmGedGsfElectronPFIsolation_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'drop *_egmGsfElectronIDs_*_*', 
        'drop *_egmPhotonIDs_*_*', 
        'keep *_gedPhotonCore_*_*', 
        'keep *_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'keep recoPhotons_mustachePhotons_*_*', 
        'keep recoPhotonCores_mustachePhotonCore_*_*', 
        'keep recoPhotons_ootPhotons_*_*', 
        'keep recoPhotonCores_ootPhotonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'keep recoConversions_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoConversions_allConversionsOldEG_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterHF_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_particleFlow_muons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'keep *_gtStage2Digis_*_*', 
        'keep *_gmtStage2Digis_*_*', 
        'keep *_caloStage2Digis_*_*', 
        'drop *_hlt*_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*', 
        'keep L1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*', 
        'keep LumiScalerss_scalersRawToDigi_*_*', 
        'keep BeamSpotOnlines_scalersRawToDigi_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep *_tcdsDigis_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep *_pfIsolatedElectronsEI_*_*', 
        'keep *_pfIsolatedMuonsEI_*_*', 
        'keep recoPFJets_pfJetsEI_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*', 
        'keep recoPFTaus_pfTausEI_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*', 
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*', 
        'keep TotemFEDInfos_totemRPRawToDigi_*_*', 
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*', 
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*', 
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*', 
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*', 
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*', 
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*', 
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*', 
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*', 
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*', 
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep *_ak4GenJets_*_*', 
        'keep *_ak8GenJets_*_*', 
        'keep *_ak4GenJetsNoNu_*_*', 
        'keep *_ak8GenJetsNoNu_*_*', 
        'keep *_genParticle_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_muonSimClassifier_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*' ) ),
    splitLevel = cms.untracked.int32(0)
)

process.REDIGIEventContent = cms.PSet(
    inputCommands = cms.untracked.vstring('drop *', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'drop *_randomEngineStateProducer_*_*')
)

process.REGENEventContent = cms.PSet(
    inputCommands = cms.untracked.vstring('keep *', 
        'drop *_genParticles_*_*', 
        'drop *_genParticlesForJets_*_*', 
        'drop *_kt4GenJets_*_*', 
        'drop *_kt6GenJets_*_*', 
        'drop *_iterativeCone5GenJets_*_*', 
        'drop *_ak4GenJets_*_*', 
        'drop *_ak7GenJets_*_*', 
        'drop *_ak8GenJets_*_*', 
        'drop *_ak4GenJetsNoNu_*_*', 
        'drop *_ak8GenJetsNoNu_*_*', 
        'drop *_genCandidatesForMET_*_*', 
        'drop *_genParticlesForMETAllVisible_*_*', 
        'drop *_genMetCalo_*_*', 
        'drop *_genMetCaloAndNonPrompt_*_*', 
        'drop *_genMetTrue_*_*', 
        'drop *_genMetIC5GenJs_*_*')
)

process.REPACKRAWEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *', 
        'drop FEDRawDataCollection_*_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'drop FEDRawDataCollection_source_*_*', 
        'drop FEDRawDataCollection_rawDataCollector_*_*'),
    splitLevel = cms.untracked.int32(0)
)

process.REPACKRAWSIMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *', 
        'drop FEDRawDataCollection_*_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep *_simHcalUnsuppressedDigis_*_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'drop FEDRawDataCollection_source_*_*', 
        'drop FEDRawDataCollection_rawDataCollector_*_*'),
    splitLevel = cms.untracked.int32(0)
)

process.RESIMEventContent = cms.PSet(
    inputCommands = cms.untracked.vstring('drop *', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*')
)

process.RU_ME0 = cms.PSet(
    allowWideSegments = cms.bool(True),
    doCollisions = cms.bool(True),
    maxChi2Additional = cms.double(100.0),
    maxChi2GoodSeg = cms.double(50),
    maxChi2Prune = cms.double(50),
    maxETASeeds = cms.double(0.1),
    maxPhiAdditional = cms.double(0.001096605744),
    maxPhiSeeds = cms.double(0.001096605744),
    maxTOFDiff = cms.double(25),
    minNumberOfHits = cms.uint32(4),
    requireCentralBX = cms.bool(True)
)

process.RecoBTagAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*')
)

process.RecoBTagFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_softPFMuonsTagInfos_*_*', 
        'keep *_softPFElectronsTagInfos_*_*', 
        'keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfImpactParameterTagInfos_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSecondaryVertexTagInfos_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackVertexTagInfos_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*')
)

process.RecoBTagRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_softPFMuonsTagInfos_*_*', 
        'keep *_softPFElectronsTagInfos_*_*', 
        'keep *_softPFElectronBJetTags_*_*', 
        'keep *_softPFMuonBJetTags_*_*', 
        'keep *_pfImpactParameterTagInfos_*_*', 
        'keep *_pfTrackCountingHighEffBJetTags_*_*', 
        'keep *_pfJetProbabilityBJetTags_*_*', 
        'keep *_pfJetBProbabilityBJetTags_*_*', 
        'keep *_pfSecondaryVertexTagInfos_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*', 
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*', 
        'keep *_pfGhostTrackVertexTagInfos_*_*', 
        'keep *_pfGhostTrackBJetTags_*_*', 
        'keep *_pfCombinedMVAV2BJetTags_*_*', 
        'keep *_inclusiveCandidateSecondaryVertices_*_*', 
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*', 
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*', 
        'keep *_pfCombinedCvsLJetTags_*_*', 
        'keep *_pfCombinedCvsBJetTags_*_*', 
        'keep *_pfChargeBJetTags_*_*', 
        'keep *_pfDeepCSVJetTags_*_*', 
        'keep *_pfDeepCMVAJetTags_*_*')
)

process.RecoBTauAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoBTauFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoBTauRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoCTPPSAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep TotemTriggerCounters_totemTriggerRawToDigi_*_*', 
        'keep TotemFEDInfos_totemRPRawToDigi_*_*', 
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*', 
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*', 
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*', 
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*', 
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*', 
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*', 
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*', 
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*', 
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*', 
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*')
)

process.RecoCTPPSFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep TotemTriggerCounters_totemTriggerRawToDigi_*_*', 
        'keep TotemFEDInfos_totemRPRawToDigi_*_*', 
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*', 
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*', 
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*', 
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*', 
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*', 
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*', 
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*', 
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*', 
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*', 
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*')
)

process.RecoCTPPSRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep TotemTriggerCounters_totemTriggerRawToDigi_*_*', 
        'keep TotemFEDInfos_totemRPRawToDigi_*_*', 
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*', 
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*', 
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*', 
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*', 
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*', 
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*', 
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*', 
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*', 
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*', 
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*', 
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*', 
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*', 
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*')
)

process.RecoEcalAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep recoCaloClusters_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*', 
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*', 
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*', 
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*', 
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*')
)

process.RecoEcalFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_selectDigi_*_*', 
        'keep *_reducedEcalRecHitsEB_*_*', 
        'keep *_reducedEcalRecHitsEE_*_*', 
        'keep *_reducedEcalRecHitsES_*_*', 
        'keep *_interestingEcalDetId*_*_*', 
        'keep *_ecalWeightUncalibRecHit_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep *_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5*_*_*', 
        'keep *_correctedMulti5x5*_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep *_particleFlowSuperClusterECAL_*_*', 
        'keep *_particleFlowSuperClusterOOTECAL_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*', 
        'keep recoCaloClusters_islandBasicClusters_*_*')
)

process.RecoEcalRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep *_particleFlowSuperClusterECAL_*_*', 
        'keep *_particleFlowSuperClusterOOTECAL_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*', 
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*', 
        'keep recoCaloClusters_islandBasicClusters_*_*')
)

process.RecoEgammaAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectrons_gedGsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep *_egmGedGsfElectronPFIsolation_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'drop *_egmGsfElectronIDs_*_*', 
        'drop *_egmPhotonIDs_*_*', 
        'keep recoPhotonCores_gedPhotonCore_*_*', 
        'keep recoPhotons_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'drop *_gedPhotons_valMapPFEgammaCandToPhoton_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_ootPhotonCore_*_*', 
        'keep recoPhotons_ootPhotons_*_*', 
        'keep recoConversions_conversions_*_*', 
        'keep recoConversions_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoConversions_allConversionsOldEG_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*')
)

process.RecoEgammaFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_gsfElectronCores_*_*', 
        'keep *_gsfElectrons_*_*', 
        'keep *_uncleanedOnlyGsfElectronCores_*_*', 
        'keep *_uncleanedOnlyGsfElectrons_*_*', 
        'keep *_eidRobustLoose_*_*', 
        'keep *_eidRobustTight_*_*', 
        'keep *_eidRobustHighEnergy_*_*', 
        'keep *_eidLoose_*_*', 
        'keep *_eidTight_*_*', 
        'keep *_egmGedGsfElectronPF*Isolation_*_*', 
        'keep *_egmGsfElectronIDs_*_*', 
        'keep *_egmPhotonIDs_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'keep *_conversions_*_*', 
        'keep *_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep *_gedPhotonCore_*_*', 
        'keep *_gedPhotonsTmp_*_*', 
        'keep *_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'keep *_photonCore_*_*', 
        'keep *_photons_*_*', 
        'keep *_mustachePhotonCore_*_*', 
        'keep *_mustachePhotons_*_*', 
        'keep *_ootPhotonCore_*_*', 
        'keep *_ootPhotons_*_*', 
        'keep *_allConversions_*_*', 
        'keep *_allConversionsOldEG_*_*', 
        'keep *_ckfOutInTracksFrom*Conversions_*_*', 
        'keep *_ckfInOutTracksFrom*Conversions_*_*', 
        'keep *_uncleanedOnlyAllConversions_*_*', 
        'keep *_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep *_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*')
)

process.RecoEgammaRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectrons_gedGsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep *_egmGedGsfElectronPFIsolation_*_*', 
        'keep *_photonEcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonEcalPFClusterIsolationProducer_*_*', 
        'keep *_electronEcalPFClusterIsolationProducer_*_*', 
        'keep *_photonHcalPFClusterIsolationProducer_*_*', 
        'keep *_ootPhotonHcalPFClusterIsolationProducer_*_*', 
        'keep *_electronHcalPFClusterIsolationProducer_*_*', 
        'drop *_egmGsfElectronIDs_*_*', 
        'drop *_egmPhotonIDs_*_*', 
        'keep *_gedPhotonCore_*_*', 
        'keep *_gedPhotons_*_*', 
        'keep *_particleBasedIsolation_*_*', 
        'keep recoPhotons_mustachePhotons_*_*', 
        'keep recoPhotonCores_mustachePhotonCore_*_*', 
        'keep recoPhotons_ootPhotons_*_*', 
        'keep recoPhotonCores_ootPhotonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'keep recoConversions_mustacheConversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoConversions_allConversionsOldEG_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_PhotonIDProdGED_*_*', 
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_gedGsfElectronCores_*_*', 
        'keep *_gedGsfElectrons_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppGED_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerpp_*_*', 
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerppIsland_*_*', 
        'keep recoPhotonCores_islandPhotonCore_*_*', 
        'keep recoPhotons_islandPhotons_*_*')
)

process.RecoGenJetsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ak4GenJets_*_*', 
        'keep *_ak8GenJets_*_*', 
        'keep *_ak4GenJetsNoNu_*_*', 
        'keep *_ak8GenJetsNoNu_*_*', 
        'keep *_genParticle_*_*')
)

process.RecoGenJetsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*')
)

process.RecoGenJetsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ak4GenJets_*_*', 
        'keep *_ak8GenJets_*_*', 
        'keep *_ak4GenJetsNoNu_*_*', 
        'keep *_ak8GenJetsNoNu_*_*', 
        'keep *_genParticle_*_*')
)

process.RecoGenMETAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoGenMETFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoGenMETRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoHcalNoiseAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('drop recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*')
)

process.RecoHcalNoiseFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*')
)

process.RecoHcalNoiseRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*')
)

process.RecoJetsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ak4CaloJets_*_*', 
        'keep *_ak4PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHSSoftDrop_*_*', 
        'keep *_cmsTopTagPFJetsCHS_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetID_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRhoAll_*_*', 
        'keep *_fixedGridRhoFastjetAll_*_*', 
        'keep *_fixedGridRhoFastjetAllTmp_*_*', 
        'keep *_fixedGridRhoFastjetCentral_*_*', 
        'keep *_fixedGridRhoFastjetAllCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*', 
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*', 
        'drop doubles_*Jets_rhos_*', 
        'drop doubles_*Jets_sigmas_*', 
        'keep *_ak8PFJetsCHSSoftDropMass_*_*')
)

process.RecoJetsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoCaloJets_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoTrackJets_*_*_*', 
        'keep recoJPTJets_*_*_*', 
        'keep recoBasicJets_*_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_kt4JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex*_*_*', 
        'keep *_ak4JetTracksAssociatorAtCaloFace*_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex*_*_*', 
        'keep *_ak7JetTracksAssociatorAtCaloFace*_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_*JetID_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak4CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep *_kt4TrackJets_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRho*_*_*', 
        'keep *_ca*Mass_*_*', 
        'keep *_ak*Mass_*_*')
)

process.RecoJetsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ak4CaloJets_*_*', 
        'keep *_ak4PFJets_*_*', 
        'keep *_ak4PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHS_*_*', 
        'keep *_ak8PFJetsCHSSoftDrop_*_*', 
        'keep *_cmsTopTagPFJetsCHS_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*', 
        'keep *_ak4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*', 
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak4JetTracksAssociatorExplicit_*_*', 
        'keep *_ak4JetExtender_*_*', 
        'keep *_ak4JetID_*_*', 
        'keep *_ak5CastorJets_*_*', 
        'keep *_ak5CastorJetID_*_*', 
        'keep *_ak7CastorJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRhoAll_*_*', 
        'keep *_fixedGridRhoFastjetAll_*_*', 
        'keep *_fixedGridRhoFastjetAllTmp_*_*', 
        'keep *_fixedGridRhoFastjetAllCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentral_*_*', 
        'keep *_fixedGridRhoFastjetCentralCalo_*_*', 
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*', 
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*', 
        'keep *_ak8PFJetsCHSSoftDropMass_*_*')
)

process.RecoLocalCaloAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_castorreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep HcalUnpackerReport_castorDigis_*_*', 
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*', 
        'keep HcalUnpackerReport_hcalDigis_*_*')
)

process.RecoLocalCaloFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_hbhereco_*_*', 
        'keep *_hbheprereco_*_*', 
        'keep *_hfprereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HBHERecHitsSorted_hbheprerecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_*Digis_*_*', 
        'keep ZDCRecHitsSorted_*_*_*', 
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_*_*_*', 
        'keep *_ecalMultiFitUncalibRecHit_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep EBSrFlagsSorted_ecalDigis__*', 
        'keep EESrFlagsSorted_ecalDigis__*')
)

process.RecoLocalCaloRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_hbhereco_*_*', 
        'keep *_hbheprereco_*_*', 
        'keep *_hfprereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_hcalDigis_*_*', 
        'keep ZDCDataFramesSorted_castorDigis_*_*', 
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*', 
        'keep ZDCRecHitsSorted_zdcreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_castorDigis_*_*', 
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*', 
        'keep HcalUnpackerReport_hcalDigis_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep EBSrFlagsSorted_ecalDigis__*', 
        'keep EESrFlagsSorted_ecalDigis__*')
)

process.RecoLocalFastTimeAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoLocalFastTimeFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ftlUncalibratedRecHits_*_*', 
        'keep *_ftlRecHits_*_*')
)

process.RecoLocalFastTimeRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ftlRecHits_*_*')
)

process.RecoLocalMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_dt4DSegments_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*')
)

process.RecoLocalMuonFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*')
)

process.RecoLocalMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_gemRecHits_*_*', 
        'keep *_gemSegments_*_*')
)

process.RecoLocalTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep ClusterSummary_clusterSummaryProducer_*_*')
)

process.RecoLocalTrackerFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_clusterSummaryProducer_*_*')
)

process.RecoLocalTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep ClusterSummary_clusterSummaryProducer_*_*')
)

process.RecoMETAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'drop recoHcalNoiseRBXs_*_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep recoGlobalHaloData_GlobalHaloData_*_*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*')
)

process.RecoMETFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *HaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*')
)

process.RecoMETRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoCaloMETs_caloMet_*_*', 
        'keep recoCaloMETs_caloMetBE_*_*', 
        'keep recoCaloMETs_caloMetBEFO_*_*', 
        'keep recoCaloMETs_caloMetM_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoPFMETs_pfChMet_*_*', 
        'keep recoPFMETs_pfMetEI_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep recoCSCHaloData_CSCHaloData_*_*', 
        'keep recoEcalHaloData_EcalHaloData_*_*', 
        'keep recoGlobalHaloData_GlobalHaloData_*_*', 
        'keep recoHcalHaloData_HcalHaloData_*_*', 
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*')
)

process.RecoMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*')
)

process.RecoMuonFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_displacedMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*')
)

process.RecoMuonIsolationAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoMuonIsolationFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*')
)

process.RecoMuonIsolationParamGlobal = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muParamGlobalIsoDepositGsTk_*_*', 
        'keep *_muParamGlobalIsoDepositCalEcal_*_*', 
        'keep *_muParamGlobalIsoDepositCalHcal_*_*', 
        'keep *_muParamGlobalIsoDepositCtfTk_*_*', 
        'keep *_muParamGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muParamGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muParamGlobalIsoDepositJets_*_*')
)

process.RecoMuonIsolationRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*')
)

process.RecoMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_displacedMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_muons_*_*', 
        'keep *_particleFlow_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'drop recoIsoDepositedmValueMap_muons_*_*', 
        'drop doubleedmValueMap_muons_muPFIso*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_displacedTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_displacedGlobalMuons_*_*', 
        'keep recoTrackExtras_displacedGlobalMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep recoTracks_displacedStandAloneMuons__*', 
        'keep recoTrackExtras_displacedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*')
)

process.RecoParticleFlowAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('drop CaloTowersSorted_towerMakerPF_*_*', 
        'drop *_pfElectronTranslator_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*', 
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_particleFlow_muons_*', 
        'keep recoCaloClusters_pfElectronTranslator_*_*', 
        'keep recoPreshowerClusters_pfElectronTranslator_*_*', 
        'keep recoSuperClusters_pfElectronTranslator_*_*', 
        'keep recoCaloClusters_pfPhotonTranslator_*_*', 
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*', 
        'keep recoSuperClusters_pfPhotonTranslator_*_*', 
        'keep recoPhotons_pfPhotonTranslator_*_*', 
        'keep recoPhotonCores_pfPhotonTranslator_*_*', 
        'keep recoConversions_pfPhotonTranslator_*_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*')
)

process.RecoParticleFlowFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterHF_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*')
)

process.RecoParticleFlowRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterHF_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlowEGamma_*_*', 
        'keep recoCaloClusters_particleFlowEGamma_*_*', 
        'keep recoSuperClusters_particleFlowEGamma_*_*', 
        'keep recoConversions_particleFlowEGamma_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_particleFlow_muons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_particleFlowPtrs_*_*', 
        'keep *_particleFlowTmpPtrs_*_*', 
        'keep *_chargedHadronPFTrackIsolation_*_*')
)

process.RecoPixelVertexingFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*')
)

process.RecoPixelVertexingRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*')
)

process.RecoTauTagAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*', 
        'keep recoPFTaus_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSum_*_*', 
        'keep *_hpsPFTauPUcorrPtSum_*_*', 
        'keep *_hpsPFTauChargedIsoPtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*', 
        'keep *_hpsPFTauFootprintCorrection_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*', 
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*')
)

process.RecoTauTagFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ak4PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_hpsPFTau*PtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*')
)

process.RecoTauTagRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*', 
        'keep recoPFTaus_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*', 
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*', 
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*', 
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSum_*_*', 
        'keep *_hpsPFTauPUcorrPtSum_*_*', 
        'keep *_hpsPFTauChargedIsoPtSum_*_*', 
        'keep *_hpsPFTauTransverseImpactParameters_*_*', 
        'keep *_hpsPFTauFootprintCorrection_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*', 
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*', 
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*', 
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*', 
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*', 
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*', 
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*')
)

process.RecoTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTracks_ctfPixelLess_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep *_generalTracks_MVAVals_*')
)

process.RecoTrackerFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*', 
        'keep uints_extraFromSeeds_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep recoTracks_cosmicDCTracks_*_*', 
        'keep recoTrackExtras_cosmicDCTracks_*_*', 
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*')
)

process.RecoTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep *_generalTracks_MVAValues_*', 
        'keep *_generalTracks_MVAVals_*', 
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*', 
        'keep uints_extraFromSeeds_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxHitInfo_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxPixelHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep recoTracks_cosmicDCTracks_*_*', 
        'keep recoTrackExtras_cosmicDCTracks_*_*', 
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*')
)

process.RecoVertexAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*')
)

process.RecoVertexFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*')
)

process.RecoVertexRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep  *_offlinePrimaryVertices__*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep *_inclusiveSecondaryVertices_*_*')
)

process.SectCollParametersBlock = cms.PSet(
    SectCollParameters = cms.PSet(
        Debug = cms.untracked.bool(False),
        SCCSP1 = cms.int32(0),
        SCCSP2 = cms.int32(0),
        SCCSP3 = cms.int32(0),
        SCCSP4 = cms.int32(0),
        SCCSP5 = cms.int32(0),
        SCECF1 = cms.bool(False),
        SCECF2 = cms.bool(False),
        SCECF3 = cms.bool(False),
        SCECF4 = cms.bool(False)
    )
)

process.SiPixelSimBlock = cms.PSet(
    AdcFullScale = cms.int32(255),
    AdcFullScaleStack = cms.int32(255),
    AddNoise = cms.bool(True),
    AddNoisyPixels = cms.bool(True),
    AddPixelInefficiency = cms.bool(True),
    AddThresholdSmearing = cms.bool(True),
    Alpha2Order = cms.bool(True),
    BPix_SignalResponse_p0 = cms.double(0.00171),
    BPix_SignalResponse_p1 = cms.double(0.711),
    BPix_SignalResponse_p2 = cms.double(203.0),
    BPix_SignalResponse_p3 = cms.double(148.0),
    ChargeVCALSmearing = cms.bool(True),
    DeadModules_DB = cms.bool(True),
    DoPixelAging = cms.bool(False),
    ElectronPerAdc = cms.double(135.0),
    ElectronsPerVcal = cms.double(47),
    ElectronsPerVcal_L1 = cms.double(50),
    ElectronsPerVcal_L1_Offset = cms.double(-670),
    ElectronsPerVcal_Offset = cms.double(-60),
    FPix_SignalResponse_p0 = cms.double(0.00171),
    FPix_SignalResponse_p1 = cms.double(0.711),
    FPix_SignalResponse_p2 = cms.double(203.0),
    FPix_SignalResponse_p3 = cms.double(148.0),
    FirstStackLayer = cms.int32(5),
    GainSmearing = cms.double(0.0),
    LorentzAngle_DB = cms.bool(True),
    MissCalibrate = cms.bool(True),
    NoiseInElectrons = cms.double(175.0),
    NumPixelBarrel = cms.int32(4),
    NumPixelEndcap = cms.int32(3),
    OffsetSmearing = cms.double(0.0),
    PixGeometryType = cms.string('idealForDigi'),
    ReadoutNoiseInElec = cms.double(350.0),
    RoutList = cms.vstring('TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    TanLorentzAnglePerTesla_BPix = cms.double(0.106),
    TanLorentzAnglePerTesla_FPix = cms.double(0.106),
    ThresholdInElectrons_BPix = cms.double(2000.0),
    ThresholdInElectrons_BPix_L1 = cms.double(3000.0),
    ThresholdInElectrons_BPix_L2 = cms.double(2600.0),
    ThresholdInElectrons_FPix = cms.double(2000.0),
    ThresholdSmearing_BPix = cms.double(245.0),
    ThresholdSmearing_BPix_L1 = cms.double(245.0),
    ThresholdSmearing_BPix_L2 = cms.double(245.0),
    ThresholdSmearing_FPix = cms.double(210.0),
    TofLowerCut = cms.double(-12.5),
    TofUpperCut = cms.double(12.5),
    deltaProductionCut = cms.double(0.03),
    killModules = cms.bool(True),
    useDB = cms.bool(False)
)

process.SiStripSimBlock = cms.PSet(
    APVProbabilityFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVProbaList.txt'),
    APVSaturationFromHIP = cms.bool(False),
    APVSaturationProbScaling = cms.double(1.0),
    APVpeakmode = cms.bool(False),
    AppliedVoltage = cms.double(300.0),
    BaselineShift = cms.bool(True),
    ChargeDistributionRMS = cms.double(6.5e-10),
    ChargeMobility = cms.double(310.0),
    CommonModeNoise = cms.bool(True),
    CosmicDelayShift = cms.untracked.double(0.0),
    CouplingConstantDecIB1 = cms.vdouble(0.7748, 0.0962, 0.0165),
    CouplingConstantDecIB2 = cms.vdouble(0.83, 0.0756, 0.0094),
    CouplingConstantDecOB1 = cms.vdouble(0.6871, 0.1222, 0.0342),
    CouplingConstantDecOB2 = cms.vdouble(0.725, 0.1102, 0.0273),
    CouplingConstantDecW1a = cms.vdouble(0.786, 0.093, 0.014),
    CouplingConstantDecW1b = cms.vdouble(0.822, 0.08, 0.009),
    CouplingConstantDecW2a = cms.vdouble(0.7962, 0.0914, 0.0104),
    CouplingConstantDecW2b = cms.vdouble(0.888, 0.05, 0.006),
    CouplingConstantDecW3a = cms.vdouble(0.8164, 0.09, 0.0018),
    CouplingConstantDecW3b = cms.vdouble(0.848, 0.06, 0.016),
    CouplingConstantDecW4 = cms.vdouble(0.876, 0.06, 0.002),
    CouplingConstantDecW5 = cms.vdouble(0.7565, 0.0913, 0.0304),
    CouplingConstantDecW6 = cms.vdouble(0.758, 0.093, 0.026),
    CouplingConstantDecW7 = cms.vdouble(0.7828, 0.0862, 0.0224),
    CouplingConstantPeakIB1 = cms.vdouble(0.9006, 0.0497),
    CouplingConstantPeakIB2 = cms.vdouble(0.9342, 0.0328),
    CouplingConstantPeakOB1 = cms.vdouble(0.8542, 0.0729),
    CouplingConstantPeakOB2 = cms.vdouble(0.8719, 0.064),
    CouplingConstantPeakW1a = cms.vdouble(0.996, 0.002),
    CouplingConstantPeakW1b = cms.vdouble(0.976, 0.012),
    CouplingConstantPeakW2a = cms.vdouble(1.0, 0.0),
    CouplingConstantPeakW2b = cms.vdouble(0.998, 0.001),
    CouplingConstantPeakW3a = cms.vdouble(0.996, 0.002),
    CouplingConstantPeakW3b = cms.vdouble(0.992, 0.004),
    CouplingConstantPeakW4 = cms.vdouble(0.992, 0.004),
    CouplingConstantPeakW5 = cms.vdouble(0.968, 0.016),
    CouplingConstantPeakW6 = cms.vdouble(0.972, 0.014),
    CouplingConstantPeakW7 = cms.vdouble(0.964, 0.018),
    DeltaProductionCut = cms.double(0.120425),
    DepletionVoltage = cms.double(170.0),
    DigiModeList = cms.PSet(
        PRDigi = cms.string('ProcessedRaw'),
        SCDigi = cms.string('ScopeMode'),
        VRDigi = cms.string('VirginRaw'),
        ZSDigi = cms.string('ZeroSuppressed')
    ),
    FedAlgorithm = cms.int32(4),
    FedAlgorithm_PM = cms.int32(4),
    Gain = cms.string(''),
    GeometryType = cms.string('idealForDigi'),
    GevPerElectron = cms.double(3.61e-09),
    Inefficiency = cms.double(0.0),
    LandauFluctuations = cms.bool(True),
    LorentzAngle = cms.string(''),
    Noise = cms.bool(True),
    NoiseSigmaThreshold = cms.double(2.0),
    PedestalsOffset = cms.double(128),
    PreMixingMode = cms.bool(False),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof'),
    RealPedestals = cms.bool(True),
    SingleStripNoise = cms.bool(True),
    TOFCutForDeconvolution = cms.double(50.0),
    TOFCutForPeak = cms.double(100.0),
    Temperature = cms.double(273.0),
    TrackerConfigurationFromDB = cms.bool(False),
    ZeroSuppression = cms.bool(True),
    chargeDivisionsPerStrip = cms.int32(10),
    cmnRMStec = cms.double(2.44),
    cmnRMStib = cms.double(5.92),
    cmnRMStid = cms.double(3.08),
    cmnRMStob = cms.double(1.08),
    electronPerAdcDec = cms.double(247.0),
    electronPerAdcPeak = cms.double(262.0),
    noDiffusion = cms.bool(False)
)

process.SimCalorimetryAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimCalorimetryFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_simEcalDigis_*_*', 
        'keep *_simEcalPreshowerDigis_*_*', 
        'keep *_simEcalTriggerPrimitiveDigis_*_*', 
        'keep *_simEcalEBTriggerPrimitiveDigis_*_*', 
        'keep *_simHcalDigis_*_*', 
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*', 
        'drop ZDCDataFramesSorted_mix_simHcalUnsuppressedDigis*_*', 
        'keep *_simHcalTriggerPrimitiveDigis_*_*', 
        'keep *_mix_HcalSamples_*', 
        'keep *_mixData_HcalSamples_*', 
        'keep *_mix_HcalHits_*', 
        'keep *_mixData_HcalHits_*', 
        'keep *_DMHcalTriggerPrimitiveDigis_*_*', 
        'keep *_simHcalUnsuppressedDigis_*_*')
)

process.SimCalorimetryRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep *_simHcalUnsuppressedDigis_*_*')
)

process.SimCalorimetryRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimG4CoreAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimG4CoreHLTAODSIM = cms.PSet(
    outputCommands = cms.untracked.vstring('keep SimVertexs_g4SimHits_*_*')
)

process.SimG4CoreRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*')
)

process.SimG4CoreRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*')
)

process.SimGeneralAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep PileupSummaryInfos_*_*_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*')
)

process.SimGeneralFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *_trackingtruthprod_*_*', 
        'drop *_electrontruth_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*')
)

process.SimGeneralRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep *_mix_MergedTrackTruth_*')
)

process.SimGeneralRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep PileupSummaryInfos_*_*_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*')
)

process.SimMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muonSimClassifier_*_*')
)

process.SimMuonFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonDTDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*', 
        'keep *_simMuonGEMDigis_*_*', 
        'keep *_simMuonGEMPadDigis_*_*', 
        'keep *_simMuonGEMPadDigiClusters_*_*')
)

process.SimMuonRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*')
)

process.SimMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_muonSimClassifier_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*')
)

process.SimTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_allTrackMCMatch_*_*')
)

process.SimTrackerDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*', 
        'drop *_mix_simSiPixelDigis*_*', 
        'drop *_mix_simSiStripDigis*_*', 
        'keep *_allTrackMCMatch_*_*')
)

process.SimTrackerFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_simSiPixelDigis_*_*', 
        'keep *_simSiStripDigis_*_*', 
        'drop *_mix_simSiPixelDigis*_*', 
        'drop *_mix_simSiStripDigis*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep *_trackingParticleRecoTrackAsssociation_*_*', 
        'keep *_assoc2secStepTk_*_*', 
        'keep *_assoc2thStepTk_*_*', 
        'keep *_assoc2GsfTracks_*_*', 
        'keep *_assocOutInConversionTracks_*_*', 
        'keep *_assocInOutConversionTracks_*_*')
)

process.SimTrackerRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_allTrackMCMatch_*_*')
)

process.SimTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_allTrackMCMatch_*_*')
)

process.TSPhiParametersBlock = cms.PSet(
    TSPhiParameters = cms.PSet(
        Debug = cms.untracked.bool(False),
        TSMCCE1 = cms.bool(True),
        TSMCCE2 = cms.bool(False),
        TSMCCEC = cms.bool(False),
        TSMCGS1 = cms.bool(True),
        TSMCGS2 = cms.bool(True),
        TSMGS1 = cms.int32(1),
        TSMGS2 = cms.int32(1),
        TSMHSP = cms.int32(1),
        TSMHTE1 = cms.bool(True),
        TSMHTE2 = cms.bool(False),
        TSMHTEC = cms.bool(False),
        TSMMSK1 = cms.int32(312),
        TSMMSK2 = cms.int32(312),
        TSMNOE1 = cms.bool(True),
        TSMNOE2 = cms.bool(False),
        TSMNOEC = cms.bool(False),
        TSMWORD = cms.int32(255),
        TSSCCE1 = cms.bool(True),
        TSSCCE2 = cms.bool(False),
        TSSCCEC = cms.bool(False),
        TSSCGS1 = cms.bool(True),
        TSSCGS2 = cms.bool(True),
        TSSGS1 = cms.int32(1),
        TSSGS2 = cms.int32(1),
        TSSHTE1 = cms.bool(True),
        TSSHTE2 = cms.bool(False),
        TSSHTEC = cms.bool(False),
        TSSMSK1 = cms.int32(312),
        TSSMSK2 = cms.int32(312),
        TSSNOE1 = cms.bool(True),
        TSSNOE2 = cms.bool(False),
        TSSNOEC = cms.bool(False),
        TSTREN0 = cms.bool(True),
        TSTREN1 = cms.bool(True),
        TSTREN10 = cms.bool(True),
        TSTREN11 = cms.bool(True),
        TSTREN12 = cms.bool(True),
        TSTREN13 = cms.bool(True),
        TSTREN14 = cms.bool(True),
        TSTREN15 = cms.bool(True),
        TSTREN16 = cms.bool(True),
        TSTREN17 = cms.bool(True),
        TSTREN18 = cms.bool(True),
        TSTREN19 = cms.bool(True),
        TSTREN2 = cms.bool(True),
        TSTREN20 = cms.bool(True),
        TSTREN21 = cms.bool(True),
        TSTREN22 = cms.bool(True),
        TSTREN23 = cms.bool(True),
        TSTREN3 = cms.bool(True),
        TSTREN4 = cms.bool(True),
        TSTREN5 = cms.bool(True),
        TSTREN6 = cms.bool(True),
        TSTREN7 = cms.bool(True),
        TSTREN8 = cms.bool(True),
        TSTREN9 = cms.bool(True)
    )
)

process.TSThetaParametersBlock = cms.PSet(
    TSThetaParameters = cms.PSet(
        Debug = cms.untracked.bool(False)
    )
)

process.TUParamsBlock = cms.PSet(
    Debug = cms.untracked.bool(False)
)

process.TcdsEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_tcdsDigis_*_*')
)

process.TrackingToolsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoTracks_GsfGlobalElectronTest_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*')
)

process.TrackingToolsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep *_electronGsfTracks_*_*')
)

process.TrackingToolsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*')
)

process.TracoParametersBlock = cms.PSet(
    TracoParameters = cms.PSet(
        BTIC = cms.int32(32),
        DD = cms.int32(18),
        Debug = cms.untracked.int32(0),
        FHISM = cms.int32(0),
        FHTMSK = cms.int32(0),
        FHTPRF = cms.int32(1),
        FLTMSK = cms.int32(1),
        FPRGCOMP = cms.int32(2),
        FSLMSK = cms.int32(0),
        IBTIOFF = cms.int32(0),
        KPRGCOM = cms.int32(255),
        KRAD = cms.int32(0),
        LTF = cms.int32(0),
        LTS = cms.int32(0),
        LVALIDIFH = cms.int32(0),
        REUSEI = cms.int32(1),
        REUSEO = cms.int32(1),
        SHISM = cms.int32(0),
        SHTMSK = cms.int32(0),
        SHTPRF = cms.int32(1),
        SLTMSK = cms.int32(1),
        SPRGCOMP = cms.int32(2),
        SSLMSK = cms.int32(0),
        TRGENB0 = cms.int32(1),
        TRGENB1 = cms.int32(1),
        TRGENB10 = cms.int32(1),
        TRGENB11 = cms.int32(1),
        TRGENB12 = cms.int32(1),
        TRGENB13 = cms.int32(1),
        TRGENB14 = cms.int32(1),
        TRGENB15 = cms.int32(1),
        TRGENB2 = cms.int32(1),
        TRGENB3 = cms.int32(1),
        TRGENB4 = cms.int32(1),
        TRGENB5 = cms.int32(1),
        TRGENB6 = cms.int32(1),
        TRGENB7 = cms.int32(1),
        TRGENB8 = cms.int32(1),
        TRGENB9 = cms.int32(1)
    )
)

process.apd_sim_parameters = cms.PSet(
    apdAddToBarrel = cms.bool(False),
    apdDigiTag = cms.string('APD'),
    apdDoPEStats = cms.bool(True),
    apdNonlParms = cms.vdouble(1.48, -3.75, 1.81, 1.26, 2.0, 
        45, 1.0),
    apdSeparateDigi = cms.bool(True),
    apdShapeTau = cms.double(40.5),
    apdShapeTstart = cms.double(74.5),
    apdSimToPEHigh = cms.double(88200000.0),
    apdSimToPELow = cms.double(2450000.0),
    apdTimeOffWidth = cms.double(0.8),
    apdTimeOffset = cms.double(-13.5)
)

process.caloParticles = cms.PSet(
    HepMCProductLabel = cms.InputTag("generatorSmeared"),
    MaxPseudoRapidity = cms.double(5.0),
    MinEnergy = cms.double(0.5),
    accumulatorType = cms.string('CaloTruthAccumulator'),
    allowDifferentSimHitProcesses = cms.bool(False),
    genParticleCollection = cms.InputTag("genParticles"),
    maximumPreviousBunchCrossing = cms.uint32(0),
    maximumSubsequentBunchCrossing = cms.uint32(0),
    simHitCollections = cms.PSet(
        hgc = cms.VInputTag(cms.InputTag("g4SimHits","HGCHitsEE"), cms.InputTag("g4SimHits","HGCHitsHEfront"), cms.InputTag("g4SimHits","HcalHits"))
    ),
    simTrackCollection = cms.InputTag("g4SimHits"),
    simVertexCollection = cms.InputTag("g4SimHits")
)

process.castorDigitizer = cms.PSet(
    accumulatorType = cms.string('CastorDigiProducer'),
    castor = cms.PSet(
        binOfMaximum = cms.int32(5),
        doPhotoStatistics = cms.bool(True),
        photoelectronsToAnalog = cms.double(4.009),
        readoutFrameSize = cms.int32(6),
        samplingFactor = cms.double(0.062577),
        simHitToPhotoelectrons = cms.double(1000.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(-4.0)
    ),
    doNoise = cms.bool(True),
    doTimeSlew = cms.bool(True),
    hitsProducer = cms.InputTag("g4SimHits","CastorFI"),
    makeDigiSimLinks = cms.untracked.bool(False)
)

process.configurationMetadata = cms.untracked.PSet(
    annotation = cms.untracked.string('step1 nevts:100'),
    name = cms.untracked.string('Applications'),
    version = cms.untracked.string('$Revision: 1.19 $')
)

process.datasets = cms.PSet(
    AlCaLumiPixels = cms.vstring('AlCa_LumiPixels_Random_v4', 
        'AlCa_LumiPixels_ZeroBias_v8'),
    AlCaP0 = cms.vstring('AlCa_HIEcalEtaEBonly_v1', 
        'AlCa_HIEcalEtaEEonly_v1', 
        'AlCa_HIEcalPi0EBonly_v1', 
        'AlCa_HIEcalPi0EEonly_v1'),
    AlCaPhiSym = cms.vstring('AlCa_EcalPhiSym_v8'),
    DQMOnlineBeamspot = cms.vstring('HLT_HIHT80_Beamspot_ppRef5TeV_v1', 
        'HLT_ZeroBias_Beamspot_v2'),
    DoubleMuon = cms.vstring('HLT_HIDimuon0_Jpsi_NoVertexing_v1', 
        'HLT_HIDimuon0_Jpsi_v1', 
        'HLT_HIDimuon0_Upsilon_NoVertexing_v1', 
        'HLT_HIL1DoubleMu0_HighQ_v1', 
        'HLT_HIL1DoubleMu0_v1', 
        'HLT_HIL1DoubleMu10_v1', 
        'HLT_HIL1DoubleMuOpen_OS_v1', 
        'HLT_HIL1DoubleMuOpen_SS_v1', 
        'HLT_HIL1DoubleMuOpen_v1', 
        'HLT_HIL2DoubleMu0_v1', 
        'HLT_HIL2DoubleMu10_v1', 
        'HLT_HIL3DoubleMu0_v1', 
        'HLT_HIL3DoubleMu10_v1'),
    EcalLaser = cms.vstring('HLT_EcalCalibration_v4'),
    EmptyBX = cms.vstring('HLT_HIL1NotBptxOR_v1', 
        'HLT_HIL1UnpairedBunchBptxMinus_v1', 
        'HLT_HIL1UnpairedBunchBptxPlus_v1'),
    ExpressAlignment = cms.vstring('HLT_HIHT80_Beamspot_ppRef5TeV_v1', 
        'HLT_ZeroBias_Beamspot_v2'),
    ExpressPhysics = cms.vstring('HLT_HIEle15_Ele8_CaloIdL_TrackIdL_IsoVL_v1', 
        'HLT_HIL3DoubleMu10_v1', 
        'HLT_HIL3Mu20_v1', 
        'HLT_Physics_v7', 
        'HLT_Random_v3', 
        'HLT_ZeroBias_FirstCollisionAfterAbortGap_v5', 
        'HLT_ZeroBias_v6'),
    FSQJet1 = cms.vstring('HLT_HIDiPFJet15_NoCaloMatched_v1', 
        'HLT_HIDiPFJet25_NoCaloMatched_v1'),
    FSQJet2 = cms.vstring('HLT_HIDiPFJet15_FBEta3_NoCaloMatched_v1', 
        'HLT_HIDiPFJet25_FBEta3_NoCaloMatched_v1', 
        'HLT_HIDiPFJetAve15_HFJEC_v1', 
        'HLT_HIDiPFJetAve25_HFJEC_v1', 
        'HLT_HIDiPFJetAve35_HFJEC_v1'),
    HIZeroBias1 = cms.vstring('HLT_HIZeroBias_part0_v6'),
    HIZeroBias10 = cms.vstring('HLT_HIZeroBias_part9_v6'),
    HIZeroBias11 = cms.vstring('HLT_HIZeroBias_part10_v6'),
    HIZeroBias12 = cms.vstring('HLT_HIZeroBias_part11_v6'),
    HIZeroBias2 = cms.vstring('HLT_HIZeroBias_part1_v6'),
    HIZeroBias3 = cms.vstring('HLT_HIZeroBias_part2_v6'),
    HIZeroBias4 = cms.vstring('HLT_HIZeroBias_part3_v6'),
    HIZeroBias5 = cms.vstring('HLT_HIZeroBias_part4_v6'),
    HIZeroBias6 = cms.vstring('HLT_HIZeroBias_part5_v6'),
    HIZeroBias7 = cms.vstring('HLT_HIZeroBias_part6_v6'),
    HIZeroBias8 = cms.vstring('HLT_HIZeroBias_part7_v6'),
    HIZeroBias9 = cms.vstring('HLT_HIZeroBias_part8_v6'),
    HLTPhysics = cms.vstring('HLT_Physics_v7'),
    HeavyFlavor = cms.vstring('HLT_HIDijet16And12_MidEta2p7_Dpt10_v1', 
        'HLT_HIDijet16And8_MidEta2p7_Dpt8_v1', 
        'HLT_HIDijet20And12_MidEta2p7_Dpt10_v1', 
        'HLT_HIDijet20And8_MidEta2p7_Dpt8_v1', 
        'HLT_HIDijet28And16_MidEta2p7_Dpt15_v1', 
        'HLT_HIDmesonPPTrackingGlobal_Dpt15_v1', 
        'HLT_HIDmesonPPTrackingGlobal_Dpt30_v1', 
        'HLT_HIDmesonPPTrackingGlobal_Dpt40_v1', 
        'HLT_HIDmesonPPTrackingGlobal_Dpt50_v1', 
        'HLT_HIDmesonPPTrackingGlobal_Dpt60_v1', 
        'HLT_HIDmesonPPTrackingGlobal_Dpt8_v1'),
    HighEGJet = cms.vstring('HLT_HIAK4CaloJet100_v1', 
        'HLT_HIAK4CaloJet120_v1', 
        'HLT_HIAK4CaloJet80FWD_v1', 
        'HLT_HIAK4CaloJet80_v1', 
        'HLT_HIAK4PFJet100_v1', 
        'HLT_HIAK4PFJet120_v1', 
        'HLT_HIAK4PFJet30_bTag_v1', 
        'HLT_HIAK4PFJet40_bTag_v1', 
        'HLT_HIAK4PFJet60_bTag_v1', 
        'HLT_HIAK4PFJet80FWD_v1', 
        'HLT_HIAK4PFJet80_bTag_v1', 
        'HLT_HIAK4PFJet80_v1', 
        'HLT_HIAK8PFJet140_v1', 
        'HLT_HIAK8PFJet80_v1', 
        'HLT_HIAK8PFJetFwd140_v1', 
        'HLT_HIAK8PFJetFwd80_v1', 
        'HLT_HIDoublePhoton15_Eta3p1ForPPRef_Mass50to1000_v8', 
        'HLT_HIEle10_WPLoose_Gsf_v1', 
        'HLT_HIEle15_CaloIdL_TrackIdL_IsoVL_PFJet30_v1', 
        'HLT_HIEle15_Ele8_CaloIdL_TrackIdL_IsoVL_v1', 
        'HLT_HIEle15_WPLoose_Gsf_v1', 
        'HLT_HIEle17_WPLoose_Gsf_v1', 
        'HLT_HIEle20_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v1', 
        'HLT_HIEle20_WPLoose_Gsf_v1', 
        'HLT_HIEle20_eta2p1_WPTight_Gsf_CentralPFJet15_EleCleaned_v1', 
        'HLT_HIEle30_WPLoose_Gsf_v1', 
        'HLT_HIEle40_WPLoose_Gsf_v1', 
        'HLT_HIL3Mu5_AK4PFJet30_v1', 
        'HLT_HIL3Mu5_AK4PFJet40_v1', 
        'HLT_HIL3Mu5_AK4PFJet60_v1', 
        'HLT_HIPFJet140_v1', 
        'HLT_HIPFJetFwd140_v1', 
        'HLT_HIPhoton40_HoverELoose_v1', 
        'HLT_HIPhoton50_HoverELoose_v1', 
        'HLT_HIPhoton60_HoverELoose_v1', 
        'HLT_HISinglePhoton40_Eta1p5ForPPRef_v8', 
        'HLT_HISinglePhoton40_Eta3p1ForPPRef_v8', 
        'HLT_HISinglePhoton50_Eta1p5ForPPRef_v8', 
        'HLT_HISinglePhoton50_Eta3p1ForPPRef_v8', 
        'HLT_HISinglePhoton60_Eta1p5ForPPRef_v8', 
        'HLT_HISinglePhoton60_Eta3p1ForPPRef_v8'),
    L1Accept = cms.vstring('DST_Physics_v7'),
    LowEGJet = cms.vstring('HLT_HIAK4CaloJet15_v1', 
        'HLT_HIAK4CaloJet30FWD_v1', 
        'HLT_HIAK4CaloJet30_v1', 
        'HLT_HIAK4CaloJet40FWD_v1', 
        'HLT_HIAK4CaloJet40_v1', 
        'HLT_HIAK4CaloJet60FWD_v1', 
        'HLT_HIAK4CaloJet60_v1', 
        'HLT_HIAK4PFJet15_v1', 
        'HLT_HIAK4PFJet30FWD_v1', 
        'HLT_HIAK4PFJet30_v1', 
        'HLT_HIAK4PFJet40FWD_v1', 
        'HLT_HIAK4PFJet40_v1', 
        'HLT_HIAK4PFJet60FWD_v1', 
        'HLT_HIAK4PFJet60_v1', 
        'HLT_HIAK8PFJet15_v1', 
        'HLT_HIAK8PFJet25_v1', 
        'HLT_HIAK8PFJet40_v1', 
        'HLT_HIAK8PFJet60_v1', 
        'HLT_HIAK8PFJetFwd15_v1', 
        'HLT_HIAK8PFJetFwd25_v1', 
        'HLT_HIAK8PFJetFwd40_v1', 
        'HLT_HIAK8PFJetFwd60_v1', 
        'HLT_HIPFJet25_v1', 
        'HLT_HIPFJetFwd15_v1', 
        'HLT_HIPFJetFwd25_v1', 
        'HLT_HIPhoton20_HoverELoose_v1', 
        'HLT_HIPhoton30_HoverELoose_v1', 
        'HLT_HISinglePhoton10_Eta1p5ForPPRef_v8', 
        'HLT_HISinglePhoton10_Eta3p1ForPPRef_v8', 
        'HLT_HISinglePhoton15_Eta1p5ForPPRef_v8', 
        'HLT_HISinglePhoton15_Eta3p1ForPPRef_v8', 
        'HLT_HISinglePhoton20_Eta1p5ForPPRef_v8', 
        'HLT_HISinglePhoton20_Eta3p1ForPPRef_v8', 
        'HLT_HISinglePhoton30_Eta1p5ForPPRef_v8', 
        'HLT_HISinglePhoton30_Eta3p1ForPPRef_v8'),
    OnlineMonitor = cms.vstring('HLT_HIAK4CaloJet100_v1', 
        'HLT_HIAK4CaloJet120_v1', 
        'HLT_HIAK4CaloJet15_v1', 
        'HLT_HIAK4CaloJet30FWD_v1', 
        'HLT_HIAK4CaloJet30_v1', 
        'HLT_HIAK4CaloJet40FWD_v1', 
        'HLT_HIAK4CaloJet40_v1', 
        'HLT_HIAK4CaloJet60FWD_v1', 
        'HLT_HIAK4CaloJet60_v1', 
        'HLT_HIAK4CaloJet80FWD_v1', 
        'HLT_HIAK4CaloJet80_v1', 
        'HLT_HIAK4PFJet100_v1', 
        'HLT_HIAK4PFJet120_v1', 
        'HLT_HIAK4PFJet15_v1', 
        'HLT_HIAK4PFJet30FWD_v1', 
        'HLT_HIAK4PFJet30_bTag_v1', 
        'HLT_HIAK4PFJet30_v1', 
        'HLT_HIAK4PFJet40FWD_v1', 
        'HLT_HIAK4PFJet40_bTag_v1', 
        'HLT_HIAK4PFJet40_v1', 
        'HLT_HIAK4PFJet60FWD_v1', 
        'HLT_HIAK4PFJet60_bTag_v1', 
        'HLT_HIAK4PFJet60_v1', 
        'HLT_HIAK4PFJet80FWD_v1', 
        'HLT_HIAK4PFJet80_bTag_v1', 
        'HLT_HIAK4PFJet80_v1', 
        'HLT_HIAK8PFJet140_v1', 
        'HLT_HIAK8PFJet15_v1', 
        'HLT_HIAK8PFJet25_v1', 
        'HLT_HIAK8PFJet40_v1', 
        'HLT_HIAK8PFJet60_v1', 
        'HLT_HIAK8PFJet80_v1', 
        'HLT_HIAK8PFJetFwd140_v1', 
        'HLT_HIAK8PFJetFwd15_v1', 
        'HLT_HIAK8PFJetFwd25_v1', 
        'HLT_HIAK8PFJetFwd40_v1', 
        'HLT_HIAK8PFJetFwd60_v1', 
        'HLT_HIAK8PFJetFwd80_v1', 
        'HLT_HIDiPFJet15_FBEta3_NoCaloMatched_v1', 
        'HLT_HIDiPFJet15_NoCaloMatched_v1', 
        'HLT_HIDiPFJet25_FBEta3_NoCaloMatched_v1', 
        'HLT_HIDiPFJet25_NoCaloMatched_v1', 
        'HLT_HIDiPFJetAve15_HFJEC_v1', 
        'HLT_HIDiPFJetAve25_HFJEC_v1', 
        'HLT_HIDiPFJetAve35_HFJEC_v1', 
        'HLT_HIDijet16And12_MidEta2p7_Dpt10_v1', 
        'HLT_HIDijet16And8_MidEta2p7_Dpt8_v1', 
        'HLT_HIDijet20And12_MidEta2p7_Dpt10_v1', 
        'HLT_HIDijet20And8_MidEta2p7_Dpt8_v1', 
        'HLT_HIDijet28And16_MidEta2p7_Dpt15_v1', 
        'HLT_HIDimuon0_Jpsi_NoVertexing_v1', 
        'HLT_HIDimuon0_Jpsi_v1', 
        'HLT_HIDimuon0_Upsilon_NoVertexing_v1', 
        'HLT_HIDmesonPPTrackingGlobal_Dpt15_v1', 
        'HLT_HIDmesonPPTrackingGlobal_Dpt30_v1', 
        'HLT_HIDmesonPPTrackingGlobal_Dpt40_v1', 
        'HLT_HIDmesonPPTrackingGlobal_Dpt50_v1', 
        'HLT_HIDmesonPPTrackingGlobal_Dpt60_v1', 
        'HLT_HIDmesonPPTrackingGlobal_Dpt8_v1', 
        'HLT_HIDoublePhoton15_Eta3p1ForPPRef_Mass50to1000_v8', 
        'HLT_HIEle10_WPLoose_Gsf_v1', 
        'HLT_HIEle15_CaloIdL_TrackIdL_IsoVL_PFJet30_v1', 
        'HLT_HIEle15_Ele8_CaloIdL_TrackIdL_IsoVL_v1', 
        'HLT_HIEle15_WPLoose_Gsf_v1', 
        'HLT_HIEle17_WPLoose_Gsf_v1', 
        'HLT_HIEle20_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v1', 
        'HLT_HIEle20_WPLoose_Gsf_v1', 
        'HLT_HIEle20_eta2p1_WPTight_Gsf_CentralPFJet15_EleCleaned_v1', 
        'HLT_HIEle30_WPLoose_Gsf_v1', 
        'HLT_HIEle40_WPLoose_Gsf_v1', 
        'HLT_HIFullTracks_HighPt18_v1', 
        'HLT_HIFullTracks_HighPt24_v1', 
        'HLT_HIFullTracks_HighPt34_v1', 
        'HLT_HIFullTracks_HighPt45_v1', 
        'HLT_HIL1DoubleMu0_HighQ_v1', 
        'HLT_HIL1DoubleMu0_v1', 
        'HLT_HIL1DoubleMu10_v1', 
        'HLT_HIL1DoubleMuOpen_OS_v1', 
        'HLT_HIL1DoubleMuOpen_SS_v1', 
        'HLT_HIL1DoubleMuOpen_v1', 
        'HLT_HIL1Mu12_v1', 
        'HLT_HIL1Mu16_v1', 
        'HLT_HIL1NotBptxOR_v1', 
        'HLT_HIL1UnpairedBunchBptxMinus_v1', 
        'HLT_HIL1UnpairedBunchBptxPlus_v1', 
        'HLT_HIL2DoubleMu0_v1', 
        'HLT_HIL2DoubleMu10_v1', 
        'HLT_HIL2Mu12_v1', 
        'HLT_HIL2Mu15_v1', 
        'HLT_HIL2Mu20_v1', 
        'HLT_HIL2Mu3_NHitQ10_v1', 
        'HLT_HIL2Mu5_NHitQ10_v1', 
        'HLT_HIL2Mu7_v1', 
        'HLT_HIL3DoubleMu0_v1', 
        'HLT_HIL3DoubleMu10_v1', 
        'HLT_HIL3Mu12_v1', 
        'HLT_HIL3Mu15_v1', 
        'HLT_HIL3Mu20_v1', 
        'HLT_HIL3Mu3_NHitQ10_v1', 
        'HLT_HIL3Mu3_Track1_Jpsi_v1', 
        'HLT_HIL3Mu3_Track1_v1', 
        'HLT_HIL3Mu3_v1', 
        'HLT_HIL3Mu5_AK4PFJet30_v1', 
        'HLT_HIL3Mu5_AK4PFJet40_v1', 
        'HLT_HIL3Mu5_AK4PFJet60_v1', 
        'HLT_HIL3Mu5_NHitQ10_v1', 
        'HLT_HIL3Mu5_Track1_Jpsi_v1', 
        'HLT_HIL3Mu5_Track1_v1', 
        'HLT_HIL3Mu5_v1', 
        'HLT_HIL3Mu7_v1', 
        'HLT_HIMu12_v1', 
        'HLT_HIMu15_v1', 
        'HLT_HIMu17_v1', 
        'HLT_HIMu7p5_L2Mu2_Jpsi_v1', 
        'HLT_HIMu7p5_L2Mu2_Upsilon_v1', 
        'HLT_HIMu7p5_Track2_Jpsi_v1', 
        'HLT_HIMu7p5_Track2_Upsilon_v1', 
        'HLT_HIPFJet140_v1', 
        'HLT_HIPFJet25_v1', 
        'HLT_HIPFJetFwd140_v1', 
        'HLT_HIPFJetFwd15_v1', 
        'HLT_HIPFJetFwd25_v1', 
        'HLT_HIPhoton20_HoverELoose_v1', 
        'HLT_HIPhoton30_HoverELoose_v1', 
        'HLT_HIPhoton40_HoverELoose_v1', 
        'HLT_HIPhoton50_HoverELoose_v1', 
        'HLT_HIPhoton60_HoverELoose_v1', 
        'HLT_HISinglePhoton10_Eta1p5ForPPRef_v8', 
        'HLT_HISinglePhoton10_Eta3p1ForPPRef_v8', 
        'HLT_HISinglePhoton15_Eta1p5ForPPRef_v8', 
        'HLT_HISinglePhoton15_Eta3p1ForPPRef_v8', 
        'HLT_HISinglePhoton20_Eta1p5ForPPRef_v8', 
        'HLT_HISinglePhoton20_Eta3p1ForPPRef_v8', 
        'HLT_HISinglePhoton30_Eta1p5ForPPRef_v8', 
        'HLT_HISinglePhoton30_Eta3p1ForPPRef_v8', 
        'HLT_HISinglePhoton40_Eta1p5ForPPRef_v8', 
        'HLT_HISinglePhoton40_Eta3p1ForPPRef_v8', 
        'HLT_HISinglePhoton50_Eta1p5ForPPRef_v8', 
        'HLT_HISinglePhoton50_Eta3p1ForPPRef_v8', 
        'HLT_HISinglePhoton60_Eta1p5ForPPRef_v8', 
        'HLT_HISinglePhoton60_Eta3p1ForPPRef_v8', 
        'HLT_HIZeroBias_part0_v6', 
        'HLT_HIZeroBias_part10_v6', 
        'HLT_HIZeroBias_part11_v6', 
        'HLT_HIZeroBias_part1_v6', 
        'HLT_HIZeroBias_part2_v6', 
        'HLT_HIZeroBias_part3_v6', 
        'HLT_HIZeroBias_part4_v6', 
        'HLT_HIZeroBias_part5_v6', 
        'HLT_HIZeroBias_part6_v6', 
        'HLT_HIZeroBias_part7_v6', 
        'HLT_HIZeroBias_part8_v6', 
        'HLT_HIZeroBias_part9_v6', 
        'HLT_Physics_v7', 
        'HLT_Random_v3', 
        'HLT_ZeroBias_FirstCollisionAfterAbortGap_v5', 
        'HLT_ZeroBias_v6'),
    RPCMonitor = cms.vstring('AlCa_HIRPCMuonNormalisation_v1'),
    SingleMuon = cms.vstring('HLT_HIL1Mu12_v1', 
        'HLT_HIL1Mu16_v1', 
        'HLT_HIL2Mu12_v1', 
        'HLT_HIL2Mu15_v1', 
        'HLT_HIL2Mu20_v1', 
        'HLT_HIL2Mu3_NHitQ10_v1', 
        'HLT_HIL2Mu5_NHitQ10_v1', 
        'HLT_HIL2Mu7_v1', 
        'HLT_HIL3Mu12_v1', 
        'HLT_HIL3Mu15_v1', 
        'HLT_HIL3Mu20_v1', 
        'HLT_HIL3Mu3_NHitQ10_v1', 
        'HLT_HIL3Mu3_Track1_Jpsi_v1', 
        'HLT_HIL3Mu3_Track1_v1', 
        'HLT_HIL3Mu3_v1', 
        'HLT_HIL3Mu5_NHitQ10_v1', 
        'HLT_HIL3Mu5_Track1_Jpsi_v1', 
        'HLT_HIL3Mu5_Track1_v1', 
        'HLT_HIL3Mu5_v1', 
        'HLT_HIL3Mu7_v1', 
        'HLT_HIMu12_v1', 
        'HLT_HIMu15_v1', 
        'HLT_HIMu17_v1', 
        'HLT_HIMu7p5_L2Mu2_Jpsi_v1', 
        'HLT_HIMu7p5_L2Mu2_Upsilon_v1', 
        'HLT_HIMu7p5_Track2_Jpsi_v1', 
        'HLT_HIMu7p5_Track2_Upsilon_v1'),
    SingleTrack = cms.vstring('HLT_HIFullTracks_HighPt18_v1', 
        'HLT_HIFullTracks_HighPt24_v1', 
        'HLT_HIFullTracks_HighPt34_v1', 
        'HLT_HIFullTracks_HighPt45_v1'),
    TestEnablesEcalHcal = cms.vstring('HLT_EcalCalibration_v4', 
        'HLT_HcalCalibration_v5'),
    TestEnablesEcalHcalDQM = cms.vstring('HLT_EcalCalibration_v4', 
        'HLT_HcalCalibration_v5'),
    ZeroBias = cms.vstring('HLT_Random_v3', 
        'HLT_ZeroBias_FirstCollisionAfterAbortGap_v5', 
        'HLT_ZeroBias_v6')
)

process.ecalDigitizer = cms.PSet(
    ConstantTerm = cms.double(0.003),
    EBCorrNoiseMatrixG01 = cms.vdouble(1.0, 0.73354, 0.64442, 0.58851, 0.55425, 
        0.53082, 0.51916, 0.51097, 0.50732, 0.50409),
    EBCorrNoiseMatrixG06 = cms.vdouble(1.0, 0.70946, 0.58021, 0.49846, 0.45006, 
        0.41366, 0.39699, 0.38478, 0.37847, 0.37055),
    EBCorrNoiseMatrixG12 = cms.vdouble(1.0, 0.71073, 0.55721, 0.46089, 0.40449, 
        0.35931, 0.33924, 0.32439, 0.31581, 0.30481),
    EBdigiCollection = cms.string(''),
    EBs25notContainment = cms.double(0.9675),
    EECorrNoiseMatrixG01 = cms.vdouble(1.0, 0.72698, 0.62048, 0.55691, 0.51848, 
        0.49147, 0.47813, 0.47007, 0.46621, 0.46265),
    EECorrNoiseMatrixG06 = cms.vdouble(1.0, 0.71217, 0.47464, 0.34056, 0.26282, 
        0.20287, 0.17734, 0.16256, 0.15618, 0.14443),
    EECorrNoiseMatrixG12 = cms.vdouble(1.0, 0.71373, 0.44825, 0.30152, 0.21609, 
        0.14786, 0.11772, 0.10165, 0.09465, 0.08098),
    EEdigiCollection = cms.string(''),
    EEs25notContainment = cms.double(0.968),
    ESdigiCollection = cms.string(''),
    EcalPreMixStage1 = cms.bool(False),
    EcalPreMixStage2 = cms.bool(False),
    UseLCcorrection = cms.untracked.bool(True),
    accumulatorType = cms.string('EcalDigiProducer'),
    apdAddToBarrel = cms.bool(False),
    apdDigiTag = cms.string('APD'),
    apdDoPEStats = cms.bool(True),
    apdNonlParms = cms.vdouble(1.48, -3.75, 1.81, 1.26, 2.0, 
        45, 1.0),
    apdSeparateDigi = cms.bool(True),
    apdShapeTau = cms.double(40.5),
    apdShapeTstart = cms.double(74.5),
    apdSimToPEHigh = cms.double(88200000.0),
    apdSimToPELow = cms.double(2450000.0),
    apdTimeOffWidth = cms.double(0.8),
    apdTimeOffset = cms.double(-13.5),
    applyConstantTerm = cms.bool(True),
    binOfMaximum = cms.int32(6),
    cosmicsPhase = cms.bool(False),
    cosmicsShift = cms.double(0.0),
    doEB = cms.bool(True),
    doEE = cms.bool(True),
    doENoise = cms.bool(True),
    doES = cms.bool(True),
    doESNoise = cms.bool(True),
    doFast = cms.bool(True),
    doPhotostatistics = cms.bool(True),
    hitsProducer = cms.string('g4SimHits'),
    makeDigiSimLinks = cms.untracked.bool(False),
    photoelectronsToAnalogBarrel = cms.double(0.000444444),
    photoelectronsToAnalogEndcap = cms.double(0.000555555),
    readoutFrameSize = cms.int32(10),
    samplingFactor = cms.double(1.0),
    simHitToPhotoelectronsBarrel = cms.double(2250.0),
    simHitToPhotoelectronsEndcap = cms.double(1800.0),
    syncPhase = cms.bool(True),
    timePhase = cms.double(0.0)
)

process.ecalLocalRecoAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.ecalLocalRecoFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ecalMultiFitUncalibRecHit_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep EBSrFlagsSorted_ecalDigis__*', 
        'keep EESrFlagsSorted_ecalDigis__*')
)

process.ecalLocalRecoRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep EBSrFlagsSorted_ecalDigis__*', 
        'keep EESrFlagsSorted_ecalDigis__*')
)

process.ecalTimeDigitizer = cms.PSet(
    EBtimeDigiCollection = cms.string('EBTimeDigi'),
    EEtimeDigiCollection = cms.string('EETimeDigi'),
    accumulatorType = cms.string('EcalTimeDigiProducer'),
    hitsProducerEB = cms.InputTag("g4SimHits","EcalHitsEB"),
    hitsProducerEE = cms.InputTag("g4SimHits","EcalHitsEE"),
    timeLayerBarrel = cms.int32(7),
    timeLayerEndcap = cms.int32(3)
)

process.ecal_cosmics_sim = cms.PSet(
    cosmicsPhase = cms.bool(False),
    cosmicsShift = cms.double(0.0)
)

process.ecal_digi_parameters = cms.PSet(
    EBCorrNoiseMatrixG01 = cms.vdouble(1.0, 0.73354, 0.64442, 0.58851, 0.55425, 
        0.53082, 0.51916, 0.51097, 0.50732, 0.50409),
    EBCorrNoiseMatrixG06 = cms.vdouble(1.0, 0.70946, 0.58021, 0.49846, 0.45006, 
        0.41366, 0.39699, 0.38478, 0.37847, 0.37055),
    EBCorrNoiseMatrixG12 = cms.vdouble(1.0, 0.71073, 0.55721, 0.46089, 0.40449, 
        0.35931, 0.33924, 0.32439, 0.31581, 0.30481),
    EBdigiCollection = cms.string(''),
    EECorrNoiseMatrixG01 = cms.vdouble(1.0, 0.72698, 0.62048, 0.55691, 0.51848, 
        0.49147, 0.47813, 0.47007, 0.46621, 0.46265),
    EECorrNoiseMatrixG06 = cms.vdouble(1.0, 0.71217, 0.47464, 0.34056, 0.26282, 
        0.20287, 0.17734, 0.16256, 0.15618, 0.14443),
    EECorrNoiseMatrixG12 = cms.vdouble(1.0, 0.71373, 0.44825, 0.30152, 0.21609, 
        0.14786, 0.11772, 0.10165, 0.09465, 0.08098),
    EEdigiCollection = cms.string(''),
    ESdigiCollection = cms.string(''),
    EcalPreMixStage1 = cms.bool(False),
    EcalPreMixStage2 = cms.bool(False),
    UseLCcorrection = cms.untracked.bool(True)
)

process.ecal_electronics_sim = cms.PSet(
    ConstantTerm = cms.double(0.003),
    applyConstantTerm = cms.bool(True),
    doENoise = cms.bool(True)
)

process.ecal_notCont_sim = cms.PSet(
    EBs25notContainment = cms.double(0.9675),
    EEs25notContainment = cms.double(0.968)
)

process.ecal_sim_parameter_map = cms.PSet(
    binOfMaximum = cms.int32(6),
    doPhotostatistics = cms.bool(True),
    photoelectronsToAnalogBarrel = cms.double(0.000444444),
    photoelectronsToAnalogEndcap = cms.double(0.000555555),
    readoutFrameSize = cms.int32(10),
    samplingFactor = cms.double(1.0),
    simHitToPhotoelectronsBarrel = cms.double(2250.0),
    simHitToPhotoelectronsEndcap = cms.double(1800.0),
    syncPhase = cms.bool(True),
    timePhase = cms.double(0.0)
)

process.es_electronics_sim = cms.PSet(
    doESNoise = cms.bool(True),
    doFast = cms.bool(True)
)

process.fastTimeDigitizer = cms.PSet(
    accumulatorType = cms.string('FTLDigiProducer'),
    barrelDigitizer = cms.PSet(
        DeviceSimulation = cms.PSet(
            meVPerMIP = cms.double(3.438)
        ),
        ElectronicsSimulation = cms.PSet(
            adcNbits = cms.uint32(12),
            adcSaturation_MIP = cms.double(102),
            adcThreshold_MIP = cms.double(0.025),
            tdcNbits = cms.uint32(12),
            toaLSB_ns = cms.double(0.005)
        ),
        bxTime = cms.double(25),
        digiCollectionTag = cms.string('FTLBarrel'),
        digitizerName = cms.string('SimpleFTLDigitizerInMIPs'),
        inputSimHits = cms.InputTag("g4SimHits","FastTimerHitsBarrel"),
        maxSimHitsAccTime = cms.uint32(100),
        tofDelay = cms.double(1)
    ),
    doTimeSamples = cms.bool(True),
    endcapDigitizer = cms.PSet(
        DeviceSimulation = cms.PSet(
            meVPerMIP = cms.double(0.085)
        ),
        ElectronicsSimulation = cms.PSet(
            adcNbits = cms.uint32(12),
            adcSaturation_MIP = cms.double(102),
            adcThreshold_MIP = cms.double(0.025),
            tdcNbits = cms.uint32(12),
            toaLSB_ns = cms.double(0.005)
        ),
        bxTime = cms.double(25),
        digiCollectionTag = cms.string('FTLEndcap'),
        digitizerName = cms.string('SimpleFTLDigitizerInMIPs'),
        inputSimHits = cms.InputTag("g4SimHits","FastTimerHitsEndcap"),
        maxSimHitsAccTime = cms.uint32(100),
        tofDelay = cms.double(1)
    ),
    makeDigiSimLinks = cms.bool(False),
    verbosity = cms.untracked.uint32(0)
)

process.gemDigiCommonParameters = cms.PSet(
    GE11ElecBkgParam0 = cms.double(406.249),
    GE11ElecBkgParam1 = cms.double(-2.90939),
    GE11ElecBkgParam2 = cms.double(0.00548191),
    GE11ModNeuBkgParam0 = cms.double(5710.23),
    GE11ModNeuBkgParam1 = cms.double(-43.3928),
    GE11ModNeuBkgParam2 = cms.double(0.0863681),
    GE21ElecBkgParam0 = cms.double(97.0505),
    GE21ElecBkgParam1 = cms.double(-0.452612),
    GE21ElecBkgParam2 = cms.double(0.000550599),
    GE21ModNeuBkgParam0 = cms.double(1440.44),
    GE21ModNeuBkgParam1 = cms.double(-7.48607),
    GE21ModNeuBkgParam2 = cms.double(0.0103078),
    averageEfficiency = cms.double(0.98),
    averageNoiseRate = cms.double(0.001),
    averageShapingTime = cms.double(50.0),
    bxwidth = cms.int32(25),
    digiModelString = cms.string('Simple'),
    digitizeOnlyMuons = cms.bool(False),
    doBkgNoise = cms.bool(False),
    doNoiseCLS = cms.bool(True),
    fixedRollRadius = cms.bool(True),
    inputCollection = cms.string('g4SimHitsMuonGEMHits'),
    instLumi = cms.double(7.5),
    maxBunch = cms.int32(3),
    minBunch = cms.int32(-5),
    mixLabel = cms.string('mix'),
    rateFact = cms.double(1.0),
    referenceInstLumi = cms.double(5.0),
    signalPropagationSpeed = cms.double(0.66),
    simulateElectronBkg = cms.bool(True),
    simulateIntrinsicNoise = cms.bool(False),
    timeJitter = cms.double(1.0),
    timeResolution = cms.double(5)
)

process.hcalDigitizer = cms.PSet(
    DelivLuminosity = cms.double(0),
    HBDarkening = cms.bool(False),
    HEDarkening = cms.bool(False),
    HFDarkening = cms.bool(False),
    HFRecalParameterBlock = cms.PSet(
        HFdepthOneParameterA = cms.vdouble(0.004123, 0.00602, 0.008201, 0.010489, 0.013379, 
            0.016997, 0.021464, 0.027371, 0.034195, 0.044807, 
            0.058939, 0.125497),
        HFdepthOneParameterB = cms.vdouble(-4e-06, -2e-06, 0.0, 4e-06, 1.5e-05, 
            2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107, 
            0.000425, 0.000209),
        HFdepthTwoParameterA = cms.vdouble(0.002861, 0.004168, 0.0064, 0.008388, 0.011601, 
            0.014425, 0.018633, 0.023232, 0.028274, 0.035447, 
            0.051579, 0.086593),
        HFdepthTwoParameterB = cms.vdouble(-2e-06, -0.0, -7e-06, -6e-06, -2e-06, 
            1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05, 
            0.000157, -3e-06)
    ),
    HcalPreMixStage1 = cms.bool(False),
    HcalPreMixStage2 = cms.bool(False),
    TestNumbering = cms.bool(True),
    accumulatorType = cms.string('HcalDigiProducer'),
    debugCaloSamples = cms.bool(False),
    doEmpty = cms.bool(True),
    doHFWindow = cms.bool(False),
    doIonFeedback = cms.bool(True),
    doNeutralDensityFilter = cms.bool(True),
    doNoise = cms.bool(True),
    doThermalNoise = cms.bool(True),
    doTimeSlew = cms.bool(True),
    hb = cms.PSet(
        binOfMaximum = cms.int32(5),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(125.44, 125.54, 125.32, 125.13, 124.46, 
            125.01, 125.22, 125.48, 124.45, 125.9, 
            125.83, 127.01, 126.82, 129.73, 131.83, 
            143.52),
        simHitToPhotoelectrons = cms.double(2000.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(6.0),
        timeSmearing = cms.bool(True)
    ),
    he = cms.PSet(
        binOfMaximum = cms.int32(5),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(True),
        firstRing = cms.int32(16),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(210.55, 197.93, 186.12, 189.64, 189.63, 
            190.28, 189.61, 189.6, 190.12, 191.22, 
            190.9, 193.06, 188.42, 188.42),
        simHitToPhotoelectrons = cms.double(2000.0),
        sipmTau = cms.double(10.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(6.0),
        timeSmearing = cms.bool(True)
    ),
    hf1 = cms.PSet(
        binOfMaximum = cms.int32(2),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(2.79),
        readoutFrameSize = cms.int32(3),
        samplingFactor = cms.double(0.67),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(14.0)
    ),
    hf2 = cms.PSet(
        binOfMaximum = cms.int32(2),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(1.843),
        readoutFrameSize = cms.int32(3),
        samplingFactor = cms.double(0.67),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(13.0)
    ),
    hitsProducer = cms.string('g4SimHits'),
    ho = cms.PSet(
        binOfMaximum = cms.int32(5),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(231.0, 231.0, 231.0, 231.0, 360.0, 
            360.0, 360.0, 360.0, 360.0, 360.0, 
            360.0, 360.0, 360.0, 360.0, 360.0),
        siPMCode = cms.int32(1),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    hoHamamatsu = cms.PSet(
        binOfMaximum = cms.int32(5),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(231.0, 231.0, 231.0, 231.0, 360.0, 
            360.0, 360.0, 360.0, 360.0, 360.0, 
            360.0, 360.0, 360.0, 360.0, 360.0),
        siPMCode = cms.int32(2),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    hoZecotek = cms.PSet(
        binOfMaximum = cms.int32(5),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(231.0, 231.0, 231.0, 231.0, 360.0, 
            360.0, 360.0, 360.0, 360.0, 360.0, 
            360.0, 360.0, 360.0, 360.0, 360.0),
        siPMCode = cms.int32(2),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    ignoreGeantTime = cms.bool(False),
    injectTestHits = cms.bool(False),
    injectTestHitsCells = cms.vint32(),
    injectTestHitsEnergy = cms.vdouble(),
    injectTestHitsTime = cms.vdouble(),
    killHE = cms.bool(False),
    makeDigiSimLinks = cms.untracked.bool(False),
    minFCToDelay = cms.double(5.0),
    zdc = cms.PSet(
        binOfMaximum = cms.int32(5),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(1.843),
        readoutFrameSize = cms.int32(10),
        samplingFactor = cms.double(1.0),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(-4.0)
    )
)

process.hcalSimBlock = cms.PSet(
    DelivLuminosity = cms.double(0),
    HBDarkening = cms.bool(False),
    HEDarkening = cms.bool(False),
    HFDarkening = cms.bool(False),
    HFRecalParameterBlock = cms.PSet(
        HFdepthOneParameterA = cms.vdouble(0.004123, 0.00602, 0.008201, 0.010489, 0.013379, 
            0.016997, 0.021464, 0.027371, 0.034195, 0.044807, 
            0.058939, 0.125497),
        HFdepthOneParameterB = cms.vdouble(-4e-06, -2e-06, 0.0, 4e-06, 1.5e-05, 
            2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107, 
            0.000425, 0.000209),
        HFdepthTwoParameterA = cms.vdouble(0.002861, 0.004168, 0.0064, 0.008388, 0.011601, 
            0.014425, 0.018633, 0.023232, 0.028274, 0.035447, 
            0.051579, 0.086593),
        HFdepthTwoParameterB = cms.vdouble(-2e-06, -0.0, -7e-06, -6e-06, -2e-06, 
            1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05, 
            0.000157, -3e-06)
    ),
    HcalPreMixStage1 = cms.bool(False),
    HcalPreMixStage2 = cms.bool(False),
    TestNumbering = cms.bool(True),
    debugCaloSamples = cms.bool(False),
    doEmpty = cms.bool(True),
    doHFWindow = cms.bool(False),
    doIonFeedback = cms.bool(True),
    doNeutralDensityFilter = cms.bool(True),
    doNoise = cms.bool(True),
    doThermalNoise = cms.bool(True),
    doTimeSlew = cms.bool(True),
    hb = cms.PSet(
        binOfMaximum = cms.int32(5),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(125.44, 125.54, 125.32, 125.13, 124.46, 
            125.01, 125.22, 125.48, 124.45, 125.9, 
            125.83, 127.01, 126.82, 129.73, 131.83, 
            143.52),
        simHitToPhotoelectrons = cms.double(2000.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(6.0),
        timeSmearing = cms.bool(True)
    ),
    he = cms.PSet(
        binOfMaximum = cms.int32(5),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(True),
        firstRing = cms.int32(16),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(210.55, 197.93, 186.12, 189.64, 189.63, 
            190.28, 189.61, 189.6, 190.12, 191.22, 
            190.9, 193.06, 188.42, 188.42),
        simHitToPhotoelectrons = cms.double(2000.0),
        sipmTau = cms.double(10.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(6.0),
        timeSmearing = cms.bool(True)
    ),
    hf1 = cms.PSet(
        binOfMaximum = cms.int32(2),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(2.79),
        readoutFrameSize = cms.int32(3),
        samplingFactor = cms.double(0.67),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(14.0)
    ),
    hf2 = cms.PSet(
        binOfMaximum = cms.int32(2),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(1.843),
        readoutFrameSize = cms.int32(3),
        samplingFactor = cms.double(0.67),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(13.0)
    ),
    hitsProducer = cms.string('g4SimHits'),
    ho = cms.PSet(
        binOfMaximum = cms.int32(5),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(231.0, 231.0, 231.0, 231.0, 360.0, 
            360.0, 360.0, 360.0, 360.0, 360.0, 
            360.0, 360.0, 360.0, 360.0, 360.0),
        siPMCode = cms.int32(1),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    hoHamamatsu = cms.PSet(
        binOfMaximum = cms.int32(5),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(231.0, 231.0, 231.0, 231.0, 360.0, 
            360.0, 360.0, 360.0, 360.0, 360.0, 
            360.0, 360.0, 360.0, 360.0, 360.0),
        siPMCode = cms.int32(2),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    hoZecotek = cms.PSet(
        binOfMaximum = cms.int32(5),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(231.0, 231.0, 231.0, 231.0, 360.0, 
            360.0, 360.0, 360.0, 360.0, 360.0, 
            360.0, 360.0, 360.0, 360.0, 360.0),
        siPMCode = cms.int32(2),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    ignoreGeantTime = cms.bool(False),
    injectTestHits = cms.bool(False),
    injectTestHitsCells = cms.vint32(),
    injectTestHitsEnergy = cms.vdouble(),
    injectTestHitsTime = cms.vdouble(),
    killHE = cms.bool(False),
    minFCToDelay = cms.double(5.0),
    zdc = cms.PSet(
        binOfMaximum = cms.int32(5),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(1.843),
        readoutFrameSize = cms.int32(10),
        samplingFactor = cms.double(1.0),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(-4.0)
    )
)

process.hfTPScaleShift = cms.PSet(
    NCT = cms.int32(2),
    RCT = cms.int32(3)
)

process.hgceeDigitizer = cms.PSet(
    accumulatorType = cms.string('HGCDigiProducer'),
    bxTime = cms.double(25),
    digiCfg = cms.PSet(
        chargeCollectionEfficiency = cms.vdouble(1.0, 1.0, 1.0),
        doTimeSamples = cms.bool(False),
        feCfg = cms.PSet(
            adcNbits = cms.uint32(10),
            adcPulse = cms.vdouble(0.0, 0.017, 0.817, 0.163, 0.003, 
                0.0),
            adcSaturation_fC = cms.double(100),
            adcThreshold_fC = cms.double(0.672),
            fwVersion = cms.uint32(2),
            jitterConstant_ns = cms.vdouble(0.0, 0.0, 0.0),
            jitterNoise_ns = cms.vdouble(0.0, 0.0, 0.0),
            pulseAvgT = cms.vdouble(0.0, 23.42298, 13.16733, 6.41062, 5.03946, 
                4.532),
            tdcChargeDrainParameterisation = cms.vdouble(-919.13, 365.36, -14.1, 0.2, -21.85, 
                49.39, 22.21, 0.8, -0.28, 27.14, 
                43.95, 3.89048),
            tdcForToAOnset_fC = cms.vdouble(60.0, 60.0, 60.0),
            tdcNbits = cms.uint32(12),
            tdcOnset_fC = cms.double(60),
            tdcResolutionInPs = cms.double(0.001),
            tdcSaturation_fC = cms.double(10000),
            thresholdFollowsMIP = cms.bool(False),
            toaLSB_ns = cms.double(0.005),
            toaMode = cms.uint32(1)
        ),
        keV2fC = cms.double(0.044259),
        noise_fC = cms.vdouble(0.336430626, 0.336430626, 0.256328096)
    ),
    digiCollection = cms.string('HGCDigisEE'),
    digitizationType = cms.uint32(0),
    eVPerEleHolePair = cms.double(3.62),
    hitCollection = cms.string('HGCHitsEE'),
    makeDigiSimLinks = cms.bool(False),
    maxSimHitsAccTime = cms.uint32(100),
    tofDelay = cms.double(1),
    useAllChannels = cms.bool(True),
    verbosity = cms.untracked.uint32(0)
)

process.hgchebackDigitizer = cms.PSet(
    accumulatorType = cms.string('HGCDigiProducer'),
    bxTime = cms.double(25),
    digiCfg = cms.PSet(
        doTimeSamples = cms.bool(False),
        feCfg = cms.PSet(
            adcNbits = cms.uint32(12),
            adcSaturation_fC = cms.double(1024.0),
            adcThreshold_fC = cms.double(0.5),
            fwVersion = cms.uint32(0),
            thresholdFollowsMIP = cms.bool(False)
        ),
        keV2MIP = cms.double(0.00162337662338),
        nPEperMIP = cms.double(11.0),
        nTotalPE = cms.double(1156),
        noise_MIP = cms.double(0.142857142857),
        sdPixels = cms.double(1e-06),
        xTalk = cms.double(0.25)
    ),
    digiCollection = cms.string('HGCDigisHEback'),
    digitizationType = cms.uint32(1),
    hitCollection = cms.string('HcalHits'),
    makeDigiSimLinks = cms.bool(False),
    maxSimHitsAccTime = cms.uint32(100),
    tofDelay = cms.double(1),
    useAllChannels = cms.bool(True),
    verbosity = cms.untracked.uint32(0)
)

process.hgchefrontDigitizer = cms.PSet(
    accumulatorType = cms.string('HGCDigiProducer'),
    bxTime = cms.double(25),
    digiCfg = cms.PSet(
        chargeCollectionEfficiency = cms.vdouble(1.0, 1.0, 1.0),
        doTimeSamples = cms.bool(False),
        feCfg = cms.PSet(
            adcNbits = cms.uint32(10),
            adcPulse = cms.vdouble(0.0, 0.017, 0.817, 0.163, 0.003, 
                0.0),
            adcSaturation_fC = cms.double(100),
            adcThreshold_fC = cms.double(0.672),
            fwVersion = cms.uint32(2),
            jitterConstant_ns = cms.vdouble(0.0, 0.0, 0.0),
            jitterNoise_ns = cms.vdouble(0.0, 0.0, 0.0),
            pulseAvgT = cms.vdouble(0.0, 23.42298, 13.16733, 6.41062, 5.03946, 
                4.532),
            tdcChargeDrainParameterisation = cms.vdouble(-919.13, 365.36, -14.1, 0.2, -21.85, 
                49.39, 22.21, 0.8, -0.28, 27.14, 
                43.95, 3.89048),
            tdcForToAOnset_fC = cms.vdouble(60.0, 60.0, 60.0),
            tdcNbits = cms.uint32(12),
            tdcOnset_fC = cms.double(60),
            tdcResolutionInPs = cms.double(0.001),
            tdcSaturation_fC = cms.double(10000),
            thresholdFollowsMIP = cms.bool(False),
            toaLSB_ns = cms.double(0.005),
            toaMode = cms.uint32(1)
        ),
        keV2fC = cms.double(0.044259),
        noise_fC = cms.vdouble(0.336430626, 0.336430626, 0.256328096)
    ),
    digiCollection = cms.string('HGCDigisHEfront'),
    digitizationType = cms.uint32(0),
    hitCollection = cms.string('HGCHitsHEfront'),
    makeDigiSimLinks = cms.bool(False),
    maxSimHitsAccTime = cms.uint32(100),
    tofDelay = cms.double(1),
    useAllChannels = cms.bool(True),
    verbosity = cms.untracked.uint32(0)
)

process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(100)
)

process.me0DigiCommonParameters = cms.PSet(
    ME0ElecBkgParam0 = cms.double(0.00171409),
    ME0ElecBkgParam1 = cms.double(4900.56),
    ME0ElecBkgParam2 = cms.double(710909),
    ME0ElecBkgParam3 = cms.double(-4327.25),
    ME0NeuBkgParam0 = cms.double(0.00386257),
    ME0NeuBkgParam1 = cms.double(6344.65),
    ME0NeuBkgParam2 = cms.double(16627700),
    ME0NeuBkgParam3 = cms.double(-102098),
    averageEfficiency = cms.double(0.98),
    averageNoiseRate = cms.double(0.001),
    averageShapingTime = cms.double(50.0),
    bxwidth = cms.int32(25),
    digiModelString = cms.string('Simple'),
    digitizeOnlyMuons = cms.bool(False),
    doBkgNoise = cms.bool(False),
    doNoiseCLS = cms.bool(True),
    fixedRollRadius = cms.bool(True),
    inputCollection = cms.string('g4SimHitsMuonME0Hits'),
    instLumi = cms.double(7.5),
    maxBunch = cms.int32(3),
    minBunch = cms.int32(-5),
    mixLabel = cms.string('mix'),
    rateFact = cms.double(1.0),
    referenceInstLumi = cms.double(5.0),
    signalPropagationSpeed = cms.double(0.66),
    simulateElectronBkg = cms.bool(True),
    simulateIntrinsicNoise = cms.bool(False),
    timeJitter = cms.double(1.0),
    timeResolution = cms.double(5)
)

process.me0PseudoDigiCommonParameters = cms.PSet(
    averageEfficiency = cms.double(0.98),
    constantPhiSpatialResolution = cms.bool(True),
    digiPreRecoModelString = cms.string('PreRecoGaussian'),
    digitizeOnlyMuons = cms.bool(False),
    etaError = cms.double(0.001),
    etaResolution = cms.double(0.0),
    gaussianSmearing = cms.bool(True),
    inputCollection = cms.string('g4SimHitsMuonME0Hits'),
    instLumi = cms.double(7.5),
    maxBunch = cms.int32(3),
    minBunch = cms.int32(-5),
    mixLabel = cms.string('mix'),
    phiError = cms.double(0.001),
    phiResolution = cms.double(0.0),
    rateFact = cms.double(1.0),
    referenceInstLumi = cms.double(5.0),
    simulateElectronBkg = cms.bool(False),
    simulateNeutralBkg = cms.bool(False),
    timeResolution = cms.double(0.0),
    useCorrelation = cms.bool(False),
    useEtaProjectiveGEO = cms.bool(False)
)

process.options = cms.untracked.PSet(
    canDeleteEarly = cms.untracked.vstring('IntermediateHitDoublets_hltIter1ElectronsPixelHitDoublets__HLT', 
        'RegionsSeedingHitSets_hltPixelTracksHitTripletsElectrons__HLT', 
        'IntermediateHitDoublets_hltIterL3MuonPixelTracksHitDoublets__HLT', 
        'RegionsSeedingHitSets_hltIter2IterL3FromL1MuonPixelHitTriplets__HLT', 
        'RegionsSeedingHitSets_hltIterL3FromL1MuonPixelTracksHitQuadruplets__HLT', 
        'RegionsSeedingHitSets_hltElePixelHitDoublets__HLT', 
        'IntermediateHitDoublets_hltFullIter10JetCoreHitDoubletsForRefPP__HLT', 
        'IntermediateHitDoublets_hltIter2L3MuonPixelHitDoublets__HLT', 
        'RegionsSeedingHitSets_hltFullIter7MixedHitTripletsBForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter0PixelHitDoubletsPreSplittingForRefPP__HLT', 
        'RegionsSeedingHitSets_hltFullIter6PixelHitDoubletsBForRefPP__HLT', 
        'IntermediateHitDoublets_hltElePixelHitDoubletsForTriplets__HLT', 
        'RegionsSeedingHitSets_hltIter2ElectronsPixelHitDoublets__HLT', 
        'RegionsSeedingHitSets_hltPixelTracksHitQuadrupletsForSeedsL3Muon__HLT', 
        'IntermediateHitDoublets_hltIter2IterL3FromL1MuonPixelHitDoublets__HLT', 
        'RegionsSeedingHitSets_hltFullIter4PixelHitQuadrupletsForRefPP__HLT', 
        'RegionsSeedingHitSets_hltElePixelHitDoubletsForTriplets__HLT', 
        'RegionsSeedingHitSets_hltFullIter2PixelHitTripletsForRefPP__HLT', 
        'RegionsSeedingHitSets_hltFullIter0PixelHitQuadrupletsForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter8PixelLessHitDoubletsForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter0PixelHitDoubletsForRefPP__HLT', 
        'RegionsSeedingHitSets_hltFullIter3PixelHitDoubletsForRefPP__HLT', 
        'RegionsSeedingHitSets_hltFullIter5PixelHitDoubletsForRefPP__HLT', 
        'RegionsSeedingHitSets_hltFullIter4PixelHitDoubletsForRefPP__HLT', 
        'RegionsSeedingHitSets_hltIterL3MuonPixelTracksHitQuadruplets__HLT', 
        'IntermediateHitDoublets_hltPixelTracksHitDoublets__HLT', 
        'RegionsSeedingHitSets_hltTripletRecoveryPFlowPixelHitTriplets__HLT', 
        'IntermediateHitDoublets_hltFullIter2PixelHitDoubletsForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter9TobTecHitDoubletsPairForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter3PixelHitDoubletsForRefPP__HLT', 
        'RegionsSeedingHitSets_hltFullIter0PixelHitQuadrupletsPreSplittingForRefPP__HLT', 
        'RegionsSeedingHitSets_hltIter2PFlowPixelHitTriplets__HLT', 
        'IntermediateHitDoublets_hltFullIter1PixelHitDoubletsForRefPP__HLT', 
        'RegionsSeedingHitSets_hltPixelTracksHitTriplets__HLT', 
        'RegionsSeedingHitSets_hltFullIter2PixelHitDoubletsForRefPP__HLT', 
        'RegionsSeedingHitSets_hltIter1PFlowPixelHitQuadruplets__HLT', 
        'RegionsSeedingHitSets_hltIter1L3MuonPixelHitQuadruplets__HLT', 
        'IntermediateHitDoublets_hltPixelTracksHitDoubletsL3Muon__HLT', 
        'BaseTrackerRecHitsOwned_hltFullIter9TobTecHitTripletsTriplForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter7MixedHitDoubletsAForRefPP__HLT', 
        'RegionsSeedingHitSets_hltFullIter9TobTecHitDoubletsPairForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter6PixelHitDoubletsAForRefPP__HLT', 
        'RegionsSeedingHitSets_hltFullIter9TobTecHitTripletsTriplForRefPP__HLT', 
        'BaseTrackerRecHitsOwned_hltFullIter8PixelLessHitTripletsForRefPP__HLT', 
        'RegionsSeedingHitSets_hltDoubletRecoveryPFlowPixelHitDoublets__HLT', 
        'RegionsSeedingHitSets_hltFullIter3PixelHitTripletsForRefPP__HLT', 
        'RegionsSeedingHitSets_hltFullIter7MixedHitDoubletsBForRefPP__HLT', 
        'RegionsSeedingHitSets_hltFullIter10JetCoreHitDoubletsForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter5PixelHitDoubletsForRefPP__HLT', 
        'IntermediateHitDoublets_hltIter1PFlowPixelHitDoublets__HLT', 
        'IntermediateHitDoublets_hltIter2PFlowPixelHitDoublets__HLT', 
        'RegionsSeedingHitSets_hltFullIter7MixedHitTripletsAForRefPP__HLT', 
        'RegionsSeedingHitSets_hltFullIter8PixelLessHitTripletsForRefPP__HLT', 
        'IntermediateHitDoublets_hltElePixelHitDoublets__HLT', 
        'IntermediateHitDoublets_hltFullIter4PixelHitDoubletsForRefPP__HLT', 
        'RegionsSeedingHitSets_hltFullIter7MixedHitDoubletsAForRefPP__HLT', 
        'IntermediateHitDoublets_hltIter2IterL3MuonPixelHitDoublets__HLT', 
        'RegionsSeedingHitSets_hltIter2L3MuonPixelHitTriplets__HLT', 
        'IntermediateHitDoublets_hltTripletRecoveryPFlowPixelHitDoublets__HLT', 
        'IntermediateHitDoublets_hltFullIter9TobTecHitDoubletsTriplForRefPP__HLT', 
        'RegionsSeedingHitSets_hltFullIter1PixelHitQuadrupletsForRefPP__HLT', 
        'IntermediateHitDoublets_hltPixelTracksHitDoubletsForSeedsL3Muon__HLT', 
        'IntermediateHitDoublets_hltIterL3FromL1MuonPixelTracksHitDoublets__HLT', 
        'RegionsSeedingHitSets_hltElePixelHitTriplets__HLT', 
        'RegionsSeedingHitSets_hltPixelTracksHitQuadrupletsL3Muon__HLT', 
        'RegionsSeedingHitSets_hltIter1ElectronsPixelHitTriplets__HLT', 
        'RegionsSeedingHitSets_hltFullIter5PixelHitTripletsForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter6PixelHitDoubletsBForRefPP__HLT', 
        'RegionsSeedingHitSets_hltFullIter6PixelHitDoubletsAForRefPP__HLT', 
        'IntermediateHitDoublets_hltIter1L3MuonPixelHitDoublets__HLT', 
        'RegionsSeedingHitSets_hltIter2IterL3MuonPixelHitTriplets__HLT', 
        'IntermediateHitDoublets_hltFullIter7MixedHitDoubletsBForRefPP__HLT', 
        'IntermediateHitDoublets_hltPixelTracksHitDoubletsForTriplets__HLT', 
        'IntermediateHitDoublets_hltPixelTracksHitDoubletsElectrons__HLT', 
        'RegionsSeedingHitSets_hltPixelTracksHitQuadruplets__HLT'),
    numberOfStreams = cms.untracked.uint32(0),
    numberOfThreads = cms.untracked.uint32(8)
)

process.pileupVtxDigitizer = cms.PSet(
    accumulatorType = cms.string('PileupVertexAccumulator'),
    hitsProducer = cms.string('generator'),
    makeDigiSimLinks = cms.untracked.bool(False),
    saveVtxTimes = cms.bool(False),
    vtxFallbackTag = cms.InputTag("generator"),
    vtxTag = cms.InputTag("generatorSmeared")
)

process.pixelDigitizer = cms.PSet(
    AdcFullScale = cms.int32(255),
    AdcFullScaleStack = cms.int32(255),
    AddNoise = cms.bool(True),
    AddNoisyPixels = cms.bool(True),
    AddPixelInefficiency = cms.bool(True),
    AddThresholdSmearing = cms.bool(True),
    Alpha2Order = cms.bool(True),
    BPix_SignalResponse_p0 = cms.double(0.00171),
    BPix_SignalResponse_p1 = cms.double(0.711),
    BPix_SignalResponse_p2 = cms.double(203.0),
    BPix_SignalResponse_p3 = cms.double(148.0),
    ChargeVCALSmearing = cms.bool(True),
    DeadModules_DB = cms.bool(True),
    DoPixelAging = cms.bool(False),
    ElectronPerAdc = cms.double(135.0),
    ElectronsPerVcal = cms.double(47),
    ElectronsPerVcal_L1 = cms.double(50),
    ElectronsPerVcal_L1_Offset = cms.double(-670),
    ElectronsPerVcal_Offset = cms.double(-60),
    FPix_SignalResponse_p0 = cms.double(0.00171),
    FPix_SignalResponse_p1 = cms.double(0.711),
    FPix_SignalResponse_p2 = cms.double(203.0),
    FPix_SignalResponse_p3 = cms.double(148.0),
    FirstStackLayer = cms.int32(5),
    GainSmearing = cms.double(0.0),
    LorentzAngle_DB = cms.bool(True),
    MissCalibrate = cms.bool(True),
    NoiseInElectrons = cms.double(175.0),
    NumPixelBarrel = cms.int32(4),
    NumPixelEndcap = cms.int32(3),
    OffsetSmearing = cms.double(0.0),
    PixGeometryType = cms.string('idealForDigi'),
    ReadoutNoiseInElec = cms.double(350.0),
    RoutList = cms.vstring('TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    TanLorentzAnglePerTesla_BPix = cms.double(0.106),
    TanLorentzAnglePerTesla_FPix = cms.double(0.106),
    ThresholdInElectrons_BPix = cms.double(2000.0),
    ThresholdInElectrons_BPix_L1 = cms.double(3000.0),
    ThresholdInElectrons_BPix_L2 = cms.double(2600.0),
    ThresholdInElectrons_FPix = cms.double(2000.0),
    ThresholdSmearing_BPix = cms.double(245.0),
    ThresholdSmearing_BPix_L1 = cms.double(245.0),
    ThresholdSmearing_BPix_L2 = cms.double(245.0),
    ThresholdSmearing_FPix = cms.double(210.0),
    TofLowerCut = cms.double(-12.5),
    TofUpperCut = cms.double(12.5),
    accumulatorType = cms.string('SiPixelDigitizer'),
    deltaProductionCut = cms.double(0.03),
    hitsProducer = cms.string('g4SimHits'),
    killModules = cms.bool(True),
    makeDigiSimLinks = cms.untracked.bool(True),
    useDB = cms.bool(False)
)

process.recoTrackAccumulator = cms.PSet(
    accumulatorType = cms.string('RecoTrackAccumulator'),
    makeDigiSimLinks = cms.untracked.bool(False),
    outputLabel = cms.string('generalTracks'),
    pileUpTracks = cms.InputTag("generalTracksBeforeMixing"),
    signalTracks = cms.InputTag("generalTracksBeforeMixing")
)

process.streams = cms.PSet(
    ALCALUMIPIXELS = cms.vstring('AlCaLumiPixels'),
    ALCAP0 = cms.vstring('AlCaP0'),
    ALCAPHISYM = cms.vstring('AlCaPhiSym'),
    Calibration = cms.vstring('TestEnablesEcalHcal'),
    DQM = cms.vstring('OnlineMonitor'),
    DQMCalibration = cms.vstring('TestEnablesEcalHcalDQM'),
    DQMOnlineBeamspot = cms.vstring('DQMOnlineBeamspot'),
    EcalCalibration = cms.vstring('EcalLaser'),
    Express = cms.vstring('ExpressPhysics'),
    ExpressAlignment = cms.vstring('ExpressAlignment'),
    NanoDST = cms.vstring('L1Accept'),
    PhysicsCommissioning = cms.vstring('HLTPhysics', 
        'HighEGJet', 
        'LowEGJet', 
        'ZeroBias'),
    PhysicsEndOfFill = cms.vstring('EmptyBX', 
        'FSQJet1', 
        'FSQJet2'),
    PhysicsHIZeroBias1 = cms.vstring('HIZeroBias1', 
        'HIZeroBias2'),
    PhysicsHIZeroBias2 = cms.vstring('HIZeroBias3', 
        'HIZeroBias4'),
    PhysicsHIZeroBias3 = cms.vstring('HIZeroBias5', 
        'HIZeroBias6'),
    PhysicsHIZeroBias4 = cms.vstring('HIZeroBias7', 
        'HIZeroBias8'),
    PhysicsHIZeroBias5 = cms.vstring('HIZeroBias10', 
        'HIZeroBias9'),
    PhysicsHIZeroBias6 = cms.vstring('HIZeroBias11', 
        'HIZeroBias12'),
    PhysicsHadronsTaus = cms.vstring('HeavyFlavor'),
    PhysicsMuons = cms.vstring('DoubleMuon', 
        'SingleMuon'),
    PhysicsTracks = cms.vstring('SingleTrack'),
    RPCMON = cms.vstring('RPCMonitor')
)

process.stripDigitizer = cms.PSet(
    APVProbabilityFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVProbaList.txt'),
    APVSaturationFromHIP = cms.bool(False),
    APVSaturationProbScaling = cms.double(1.0),
    APVpeakmode = cms.bool(False),
    AppliedVoltage = cms.double(300.0),
    BaselineShift = cms.bool(True),
    ChargeDistributionRMS = cms.double(6.5e-10),
    ChargeMobility = cms.double(310.0),
    CommonModeNoise = cms.bool(True),
    CosmicDelayShift = cms.untracked.double(0.0),
    CouplingConstantDecIB1 = cms.vdouble(0.7748, 0.0962, 0.0165),
    CouplingConstantDecIB2 = cms.vdouble(0.83, 0.0756, 0.0094),
    CouplingConstantDecOB1 = cms.vdouble(0.6871, 0.1222, 0.0342),
    CouplingConstantDecOB2 = cms.vdouble(0.725, 0.1102, 0.0273),
    CouplingConstantDecW1a = cms.vdouble(0.786, 0.093, 0.014),
    CouplingConstantDecW1b = cms.vdouble(0.822, 0.08, 0.009),
    CouplingConstantDecW2a = cms.vdouble(0.7962, 0.0914, 0.0104),
    CouplingConstantDecW2b = cms.vdouble(0.888, 0.05, 0.006),
    CouplingConstantDecW3a = cms.vdouble(0.8164, 0.09, 0.0018),
    CouplingConstantDecW3b = cms.vdouble(0.848, 0.06, 0.016),
    CouplingConstantDecW4 = cms.vdouble(0.876, 0.06, 0.002),
    CouplingConstantDecW5 = cms.vdouble(0.7565, 0.0913, 0.0304),
    CouplingConstantDecW6 = cms.vdouble(0.758, 0.093, 0.026),
    CouplingConstantDecW7 = cms.vdouble(0.7828, 0.0862, 0.0224),
    CouplingConstantPeakIB1 = cms.vdouble(0.9006, 0.0497),
    CouplingConstantPeakIB2 = cms.vdouble(0.9342, 0.0328),
    CouplingConstantPeakOB1 = cms.vdouble(0.8542, 0.0729),
    CouplingConstantPeakOB2 = cms.vdouble(0.8719, 0.064),
    CouplingConstantPeakW1a = cms.vdouble(0.996, 0.002),
    CouplingConstantPeakW1b = cms.vdouble(0.976, 0.012),
    CouplingConstantPeakW2a = cms.vdouble(1.0, 0.0),
    CouplingConstantPeakW2b = cms.vdouble(0.998, 0.001),
    CouplingConstantPeakW3a = cms.vdouble(0.996, 0.002),
    CouplingConstantPeakW3b = cms.vdouble(0.992, 0.004),
    CouplingConstantPeakW4 = cms.vdouble(0.992, 0.004),
    CouplingConstantPeakW5 = cms.vdouble(0.968, 0.016),
    CouplingConstantPeakW6 = cms.vdouble(0.972, 0.014),
    CouplingConstantPeakW7 = cms.vdouble(0.964, 0.018),
    DeltaProductionCut = cms.double(0.120425),
    DepletionVoltage = cms.double(170.0),
    DigiModeList = cms.PSet(
        PRDigi = cms.string('ProcessedRaw'),
        SCDigi = cms.string('ScopeMode'),
        VRDigi = cms.string('VirginRaw'),
        ZSDigi = cms.string('ZeroSuppressed')
    ),
    FedAlgorithm = cms.int32(4),
    FedAlgorithm_PM = cms.int32(4),
    Gain = cms.string(''),
    GeometryType = cms.string('idealForDigi'),
    GevPerElectron = cms.double(3.61e-09),
    Inefficiency = cms.double(0.0),
    LandauFluctuations = cms.bool(True),
    LorentzAngle = cms.string(''),
    Noise = cms.bool(True),
    NoiseSigmaThreshold = cms.double(2.0),
    PedestalsOffset = cms.double(128),
    PreMixingMode = cms.bool(False),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof'),
    RealPedestals = cms.bool(True),
    SingleStripNoise = cms.bool(True),
    TOFCutForDeconvolution = cms.double(50.0),
    TOFCutForPeak = cms.double(100.0),
    Temperature = cms.double(273.0),
    TrackerConfigurationFromDB = cms.bool(False),
    ZeroSuppression = cms.bool(True),
    accumulatorType = cms.string('SiStripDigitizer'),
    chargeDivisionsPerStrip = cms.int32(10),
    cmnRMStec = cms.double(2.44),
    cmnRMStib = cms.double(5.92),
    cmnRMStid = cms.double(3.08),
    cmnRMStob = cms.double(1.08),
    electronPerAdcDec = cms.double(247.0),
    electronPerAdcPeak = cms.double(262.0),
    hitsProducer = cms.string('g4SimHits'),
    makeDigiSimLinks = cms.untracked.bool(True),
    noDiffusion = cms.bool(False)
)

process.theDigitizers = cms.PSet(
    castor = cms.PSet(
        accumulatorType = cms.string('CastorDigiProducer'),
        castor = cms.PSet(
            binOfMaximum = cms.int32(5),
            doPhotoStatistics = cms.bool(True),
            photoelectronsToAnalog = cms.double(4.009),
            readoutFrameSize = cms.int32(6),
            samplingFactor = cms.double(0.062577),
            simHitToPhotoelectrons = cms.double(1000.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(-4.0)
        ),
        doNoise = cms.bool(True),
        doTimeSlew = cms.bool(True),
        hitsProducer = cms.InputTag("g4SimHits","CastorFI"),
        makeDigiSimLinks = cms.untracked.bool(False)
    ),
    ecal = cms.PSet(
        ConstantTerm = cms.double(0.003),
        EBCorrNoiseMatrixG01 = cms.vdouble(1.0, 0.73354, 0.64442, 0.58851, 0.55425, 
            0.53082, 0.51916, 0.51097, 0.50732, 0.50409),
        EBCorrNoiseMatrixG06 = cms.vdouble(1.0, 0.70946, 0.58021, 0.49846, 0.45006, 
            0.41366, 0.39699, 0.38478, 0.37847, 0.37055),
        EBCorrNoiseMatrixG12 = cms.vdouble(1.0, 0.71073, 0.55721, 0.46089, 0.40449, 
            0.35931, 0.33924, 0.32439, 0.31581, 0.30481),
        EBdigiCollection = cms.string(''),
        EBs25notContainment = cms.double(0.9675),
        EECorrNoiseMatrixG01 = cms.vdouble(1.0, 0.72698, 0.62048, 0.55691, 0.51848, 
            0.49147, 0.47813, 0.47007, 0.46621, 0.46265),
        EECorrNoiseMatrixG06 = cms.vdouble(1.0, 0.71217, 0.47464, 0.34056, 0.26282, 
            0.20287, 0.17734, 0.16256, 0.15618, 0.14443),
        EECorrNoiseMatrixG12 = cms.vdouble(1.0, 0.71373, 0.44825, 0.30152, 0.21609, 
            0.14786, 0.11772, 0.10165, 0.09465, 0.08098),
        EEdigiCollection = cms.string(''),
        EEs25notContainment = cms.double(0.968),
        ESdigiCollection = cms.string(''),
        EcalPreMixStage1 = cms.bool(False),
        EcalPreMixStage2 = cms.bool(False),
        UseLCcorrection = cms.untracked.bool(True),
        accumulatorType = cms.string('EcalDigiProducer'),
        apdAddToBarrel = cms.bool(False),
        apdDigiTag = cms.string('APD'),
        apdDoPEStats = cms.bool(True),
        apdNonlParms = cms.vdouble(1.48, -3.75, 1.81, 1.26, 2.0, 
            45, 1.0),
        apdSeparateDigi = cms.bool(True),
        apdShapeTau = cms.double(40.5),
        apdShapeTstart = cms.double(74.5),
        apdSimToPEHigh = cms.double(88200000.0),
        apdSimToPELow = cms.double(2450000.0),
        apdTimeOffWidth = cms.double(0.8),
        apdTimeOffset = cms.double(-13.5),
        applyConstantTerm = cms.bool(True),
        binOfMaximum = cms.int32(6),
        cosmicsPhase = cms.bool(False),
        cosmicsShift = cms.double(0.0),
        doEB = cms.bool(True),
        doEE = cms.bool(True),
        doENoise = cms.bool(True),
        doES = cms.bool(True),
        doESNoise = cms.bool(True),
        doFast = cms.bool(True),
        doPhotostatistics = cms.bool(True),
        hitsProducer = cms.string('g4SimHits'),
        makeDigiSimLinks = cms.untracked.bool(False),
        photoelectronsToAnalogBarrel = cms.double(0.000444444),
        photoelectronsToAnalogEndcap = cms.double(0.000555555),
        readoutFrameSize = cms.int32(10),
        samplingFactor = cms.double(1.0),
        simHitToPhotoelectronsBarrel = cms.double(2250.0),
        simHitToPhotoelectronsEndcap = cms.double(1800.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(0.0)
    ),
    hcal = cms.PSet(
        DelivLuminosity = cms.double(0),
        HBDarkening = cms.bool(False),
        HEDarkening = cms.bool(False),
        HFDarkening = cms.bool(False),
        HFRecalParameterBlock = cms.PSet(
            HFdepthOneParameterA = cms.vdouble(0.004123, 0.00602, 0.008201, 0.010489, 0.013379, 
                0.016997, 0.021464, 0.027371, 0.034195, 0.044807, 
                0.058939, 0.125497),
            HFdepthOneParameterB = cms.vdouble(-4e-06, -2e-06, 0.0, 4e-06, 1.5e-05, 
                2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107, 
                0.000425, 0.000209),
            HFdepthTwoParameterA = cms.vdouble(0.002861, 0.004168, 0.0064, 0.008388, 0.011601, 
                0.014425, 0.018633, 0.023232, 0.028274, 0.035447, 
                0.051579, 0.086593),
            HFdepthTwoParameterB = cms.vdouble(-2e-06, -0.0, -7e-06, -6e-06, -2e-06, 
                1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05, 
                0.000157, -3e-06)
        ),
        HcalPreMixStage1 = cms.bool(False),
        HcalPreMixStage2 = cms.bool(False),
        TestNumbering = cms.bool(True),
        accumulatorType = cms.string('HcalDigiProducer'),
        debugCaloSamples = cms.bool(False),
        doEmpty = cms.bool(True),
        doHFWindow = cms.bool(False),
        doIonFeedback = cms.bool(True),
        doNeutralDensityFilter = cms.bool(True),
        doNoise = cms.bool(True),
        doThermalNoise = cms.bool(True),
        doTimeSlew = cms.bool(True),
        hb = cms.PSet(
            binOfMaximum = cms.int32(5),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(125.44, 125.54, 125.32, 125.13, 124.46, 
                125.01, 125.22, 125.48, 124.45, 125.9, 
                125.83, 127.01, 126.82, 129.73, 131.83, 
                143.52),
            simHitToPhotoelectrons = cms.double(2000.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(6.0),
            timeSmearing = cms.bool(True)
        ),
        he = cms.PSet(
            binOfMaximum = cms.int32(5),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(True),
            firstRing = cms.int32(16),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(210.55, 197.93, 186.12, 189.64, 189.63, 
                190.28, 189.61, 189.6, 190.12, 191.22, 
                190.9, 193.06, 188.42, 188.42),
            simHitToPhotoelectrons = cms.double(2000.0),
            sipmTau = cms.double(10.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(6.0),
            timeSmearing = cms.bool(True)
        ),
        hf1 = cms.PSet(
            binOfMaximum = cms.int32(2),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(2.79),
            readoutFrameSize = cms.int32(3),
            samplingFactor = cms.double(0.67),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(14.0)
        ),
        hf2 = cms.PSet(
            binOfMaximum = cms.int32(2),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(1.843),
            readoutFrameSize = cms.int32(3),
            samplingFactor = cms.double(0.67),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(13.0)
        ),
        hitsProducer = cms.string('g4SimHits'),
        ho = cms.PSet(
            binOfMaximum = cms.int32(5),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(231.0, 231.0, 231.0, 231.0, 360.0, 
                360.0, 360.0, 360.0, 360.0, 360.0, 
                360.0, 360.0, 360.0, 360.0, 360.0),
            siPMCode = cms.int32(1),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        hoHamamatsu = cms.PSet(
            binOfMaximum = cms.int32(5),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(231.0, 231.0, 231.0, 231.0, 360.0, 
                360.0, 360.0, 360.0, 360.0, 360.0, 
                360.0, 360.0, 360.0, 360.0, 360.0),
            siPMCode = cms.int32(2),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        hoZecotek = cms.PSet(
            binOfMaximum = cms.int32(5),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(231.0, 231.0, 231.0, 231.0, 360.0, 
                360.0, 360.0, 360.0, 360.0, 360.0, 
                360.0, 360.0, 360.0, 360.0, 360.0),
            siPMCode = cms.int32(2),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        ignoreGeantTime = cms.bool(False),
        injectTestHits = cms.bool(False),
        injectTestHitsCells = cms.vint32(),
        injectTestHitsEnergy = cms.vdouble(),
        injectTestHitsTime = cms.vdouble(),
        killHE = cms.bool(False),
        makeDigiSimLinks = cms.untracked.bool(False),
        minFCToDelay = cms.double(5.0),
        zdc = cms.PSet(
            binOfMaximum = cms.int32(5),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(1.843),
            readoutFrameSize = cms.int32(10),
            samplingFactor = cms.double(1.0),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(-4.0)
        )
    ),
    mergedtruth = cms.PSet(
        HepMCProductLabel = cms.InputTag("generatorSmeared"),
        accumulatorType = cms.string('TrackingTruthAccumulator'),
        allowDifferentSimHitProcesses = cms.bool(False),
        alwaysAddAncestors = cms.bool(True),
        createInitialVertexCollection = cms.bool(False),
        createMergedBremsstrahlung = cms.bool(True),
        createUnmergedCollection = cms.bool(True),
        genParticleCollection = cms.InputTag("genParticles"),
        ignoreTracksOutsideVolume = cms.bool(False),
        maximumPreviousBunchCrossing = cms.uint32(9999),
        maximumSubsequentBunchCrossing = cms.uint32(9999),
        removeDeadModules = cms.bool(False),
        select = cms.PSet(
            chargedOnlyTP = cms.bool(True),
            intimeOnlyTP = cms.bool(False),
            lipTP = cms.double(1000),
            maxRapidityTP = cms.double(5.0),
            minHitTP = cms.int32(0),
            minRapidityTP = cms.double(-5.0),
            pdgIdTP = cms.vint32(),
            ptMaxTP = cms.double(1e+100),
            ptMinTP = cms.double(0.1),
            signalOnlyTP = cms.bool(True),
            stableOnlyTP = cms.bool(False),
            tipTP = cms.double(1000)
        ),
        simHitCollections = cms.PSet(
            muon = cms.VInputTag(cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","MuonGEMHits")),
            pixel = cms.VInputTag(cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof")),
            tracker = cms.VInputTag(cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"), 
                cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof"))
        ),
        simTrackCollection = cms.InputTag("g4SimHits"),
        simVertexCollection = cms.InputTag("g4SimHits"),
        vertexDistanceCut = cms.double(0.003),
        volumeRadius = cms.double(120.0),
        volumeZ = cms.double(300.0)
    ),
    pixel = cms.PSet(
        AdcFullScale = cms.int32(255),
        AdcFullScaleStack = cms.int32(255),
        AddNoise = cms.bool(True),
        AddNoisyPixels = cms.bool(True),
        AddPixelInefficiency = cms.bool(True),
        AddThresholdSmearing = cms.bool(True),
        Alpha2Order = cms.bool(True),
        BPix_SignalResponse_p0 = cms.double(0.00171),
        BPix_SignalResponse_p1 = cms.double(0.711),
        BPix_SignalResponse_p2 = cms.double(203.0),
        BPix_SignalResponse_p3 = cms.double(148.0),
        ChargeVCALSmearing = cms.bool(True),
        DeadModules_DB = cms.bool(True),
        DoPixelAging = cms.bool(False),
        ElectronPerAdc = cms.double(135.0),
        ElectronsPerVcal = cms.double(47),
        ElectronsPerVcal_L1 = cms.double(50),
        ElectronsPerVcal_L1_Offset = cms.double(-670),
        ElectronsPerVcal_Offset = cms.double(-60),
        FPix_SignalResponse_p0 = cms.double(0.00171),
        FPix_SignalResponse_p1 = cms.double(0.711),
        FPix_SignalResponse_p2 = cms.double(203.0),
        FPix_SignalResponse_p3 = cms.double(148.0),
        FirstStackLayer = cms.int32(5),
        GainSmearing = cms.double(0.0),
        LorentzAngle_DB = cms.bool(True),
        MissCalibrate = cms.bool(True),
        NoiseInElectrons = cms.double(175.0),
        NumPixelBarrel = cms.int32(4),
        NumPixelEndcap = cms.int32(3),
        OffsetSmearing = cms.double(0.0),
        PixGeometryType = cms.string('idealForDigi'),
        ReadoutNoiseInElec = cms.double(350.0),
        RoutList = cms.vstring('TrackerHitsPixelBarrelLowTof', 
            'TrackerHitsPixelBarrelHighTof', 
            'TrackerHitsPixelEndcapLowTof', 
            'TrackerHitsPixelEndcapHighTof'),
        TanLorentzAnglePerTesla_BPix = cms.double(0.106),
        TanLorentzAnglePerTesla_FPix = cms.double(0.106),
        ThresholdInElectrons_BPix = cms.double(2000.0),
        ThresholdInElectrons_BPix_L1 = cms.double(3000.0),
        ThresholdInElectrons_BPix_L2 = cms.double(2600.0),
        ThresholdInElectrons_FPix = cms.double(2000.0),
        ThresholdSmearing_BPix = cms.double(245.0),
        ThresholdSmearing_BPix_L1 = cms.double(245.0),
        ThresholdSmearing_BPix_L2 = cms.double(245.0),
        ThresholdSmearing_FPix = cms.double(210.0),
        TofLowerCut = cms.double(-12.5),
        TofUpperCut = cms.double(12.5),
        accumulatorType = cms.string('SiPixelDigitizer'),
        deltaProductionCut = cms.double(0.03),
        hitsProducer = cms.string('g4SimHits'),
        killModules = cms.bool(True),
        makeDigiSimLinks = cms.untracked.bool(True),
        useDB = cms.bool(False)
    ),
    puVtx = cms.PSet(
        accumulatorType = cms.string('PileupVertexAccumulator'),
        hitsProducer = cms.string('generator'),
        makeDigiSimLinks = cms.untracked.bool(False),
        saveVtxTimes = cms.bool(False),
        vtxFallbackTag = cms.InputTag("generator"),
        vtxTag = cms.InputTag("generatorSmeared")
    ),
    strip = cms.PSet(
        APVProbabilityFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVProbaList.txt'),
        APVSaturationFromHIP = cms.bool(False),
        APVSaturationProbScaling = cms.double(1.0),
        APVpeakmode = cms.bool(False),
        AppliedVoltage = cms.double(300.0),
        BaselineShift = cms.bool(True),
        ChargeDistributionRMS = cms.double(6.5e-10),
        ChargeMobility = cms.double(310.0),
        CommonModeNoise = cms.bool(True),
        CosmicDelayShift = cms.untracked.double(0.0),
        CouplingConstantDecIB1 = cms.vdouble(0.7748, 0.0962, 0.0165),
        CouplingConstantDecIB2 = cms.vdouble(0.83, 0.0756, 0.0094),
        CouplingConstantDecOB1 = cms.vdouble(0.6871, 0.1222, 0.0342),
        CouplingConstantDecOB2 = cms.vdouble(0.725, 0.1102, 0.0273),
        CouplingConstantDecW1a = cms.vdouble(0.786, 0.093, 0.014),
        CouplingConstantDecW1b = cms.vdouble(0.822, 0.08, 0.009),
        CouplingConstantDecW2a = cms.vdouble(0.7962, 0.0914, 0.0104),
        CouplingConstantDecW2b = cms.vdouble(0.888, 0.05, 0.006),
        CouplingConstantDecW3a = cms.vdouble(0.8164, 0.09, 0.0018),
        CouplingConstantDecW3b = cms.vdouble(0.848, 0.06, 0.016),
        CouplingConstantDecW4 = cms.vdouble(0.876, 0.06, 0.002),
        CouplingConstantDecW5 = cms.vdouble(0.7565, 0.0913, 0.0304),
        CouplingConstantDecW6 = cms.vdouble(0.758, 0.093, 0.026),
        CouplingConstantDecW7 = cms.vdouble(0.7828, 0.0862, 0.0224),
        CouplingConstantPeakIB1 = cms.vdouble(0.9006, 0.0497),
        CouplingConstantPeakIB2 = cms.vdouble(0.9342, 0.0328),
        CouplingConstantPeakOB1 = cms.vdouble(0.8542, 0.0729),
        CouplingConstantPeakOB2 = cms.vdouble(0.8719, 0.064),
        CouplingConstantPeakW1a = cms.vdouble(0.996, 0.002),
        CouplingConstantPeakW1b = cms.vdouble(0.976, 0.012),
        CouplingConstantPeakW2a = cms.vdouble(1.0, 0.0),
        CouplingConstantPeakW2b = cms.vdouble(0.998, 0.001),
        CouplingConstantPeakW3a = cms.vdouble(0.996, 0.002),
        CouplingConstantPeakW3b = cms.vdouble(0.992, 0.004),
        CouplingConstantPeakW4 = cms.vdouble(0.992, 0.004),
        CouplingConstantPeakW5 = cms.vdouble(0.968, 0.016),
        CouplingConstantPeakW6 = cms.vdouble(0.972, 0.014),
        CouplingConstantPeakW7 = cms.vdouble(0.964, 0.018),
        DeltaProductionCut = cms.double(0.120425),
        DepletionVoltage = cms.double(170.0),
        DigiModeList = cms.PSet(
            PRDigi = cms.string('ProcessedRaw'),
            SCDigi = cms.string('ScopeMode'),
            VRDigi = cms.string('VirginRaw'),
            ZSDigi = cms.string('ZeroSuppressed')
        ),
        FedAlgorithm = cms.int32(4),
        FedAlgorithm_PM = cms.int32(4),
        Gain = cms.string(''),
        GeometryType = cms.string('idealForDigi'),
        GevPerElectron = cms.double(3.61e-09),
        Inefficiency = cms.double(0.0),
        LandauFluctuations = cms.bool(True),
        LorentzAngle = cms.string(''),
        Noise = cms.bool(True),
        NoiseSigmaThreshold = cms.double(2.0),
        PedestalsOffset = cms.double(128),
        PreMixingMode = cms.bool(False),
        ROUList = cms.vstring('TrackerHitsTIBLowTof', 
            'TrackerHitsTIBHighTof', 
            'TrackerHitsTIDLowTof', 
            'TrackerHitsTIDHighTof', 
            'TrackerHitsTOBLowTof', 
            'TrackerHitsTOBHighTof', 
            'TrackerHitsTECLowTof', 
            'TrackerHitsTECHighTof'),
        RealPedestals = cms.bool(True),
        SingleStripNoise = cms.bool(True),
        TOFCutForDeconvolution = cms.double(50.0),
        TOFCutForPeak = cms.double(100.0),
        Temperature = cms.double(273.0),
        TrackerConfigurationFromDB = cms.bool(False),
        ZeroSuppression = cms.bool(True),
        accumulatorType = cms.string('SiStripDigitizer'),
        chargeDivisionsPerStrip = cms.int32(10),
        cmnRMStec = cms.double(2.44),
        cmnRMStib = cms.double(5.92),
        cmnRMStid = cms.double(3.08),
        cmnRMStob = cms.double(1.08),
        electronPerAdcDec = cms.double(247.0),
        electronPerAdcPeak = cms.double(262.0),
        hitsProducer = cms.string('g4SimHits'),
        makeDigiSimLinks = cms.untracked.bool(True),
        noDiffusion = cms.bool(False)
    )
)

process.theDigitizersValid = cms.PSet(
    castor = cms.PSet(
        accumulatorType = cms.string('CastorDigiProducer'),
        castor = cms.PSet(
            binOfMaximum = cms.int32(5),
            doPhotoStatistics = cms.bool(True),
            photoelectronsToAnalog = cms.double(4.009),
            readoutFrameSize = cms.int32(6),
            samplingFactor = cms.double(0.062577),
            simHitToPhotoelectrons = cms.double(1000.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(-4.0)
        ),
        doNoise = cms.bool(True),
        doTimeSlew = cms.bool(True),
        hitsProducer = cms.InputTag("g4SimHits","CastorFI"),
        makeDigiSimLinks = cms.untracked.bool(False)
    ),
    ecal = cms.PSet(
        ConstantTerm = cms.double(0.003),
        EBCorrNoiseMatrixG01 = cms.vdouble(1.0, 0.73354, 0.64442, 0.58851, 0.55425, 
            0.53082, 0.51916, 0.51097, 0.50732, 0.50409),
        EBCorrNoiseMatrixG06 = cms.vdouble(1.0, 0.70946, 0.58021, 0.49846, 0.45006, 
            0.41366, 0.39699, 0.38478, 0.37847, 0.37055),
        EBCorrNoiseMatrixG12 = cms.vdouble(1.0, 0.71073, 0.55721, 0.46089, 0.40449, 
            0.35931, 0.33924, 0.32439, 0.31581, 0.30481),
        EBdigiCollection = cms.string(''),
        EBs25notContainment = cms.double(0.9675),
        EECorrNoiseMatrixG01 = cms.vdouble(1.0, 0.72698, 0.62048, 0.55691, 0.51848, 
            0.49147, 0.47813, 0.47007, 0.46621, 0.46265),
        EECorrNoiseMatrixG06 = cms.vdouble(1.0, 0.71217, 0.47464, 0.34056, 0.26282, 
            0.20287, 0.17734, 0.16256, 0.15618, 0.14443),
        EECorrNoiseMatrixG12 = cms.vdouble(1.0, 0.71373, 0.44825, 0.30152, 0.21609, 
            0.14786, 0.11772, 0.10165, 0.09465, 0.08098),
        EEdigiCollection = cms.string(''),
        EEs25notContainment = cms.double(0.968),
        ESdigiCollection = cms.string(''),
        EcalPreMixStage1 = cms.bool(False),
        EcalPreMixStage2 = cms.bool(False),
        UseLCcorrection = cms.untracked.bool(True),
        accumulatorType = cms.string('EcalDigiProducer'),
        apdAddToBarrel = cms.bool(False),
        apdDigiTag = cms.string('APD'),
        apdDoPEStats = cms.bool(True),
        apdNonlParms = cms.vdouble(1.48, -3.75, 1.81, 1.26, 2.0, 
            45, 1.0),
        apdSeparateDigi = cms.bool(True),
        apdShapeTau = cms.double(40.5),
        apdShapeTstart = cms.double(74.5),
        apdSimToPEHigh = cms.double(88200000.0),
        apdSimToPELow = cms.double(2450000.0),
        apdTimeOffWidth = cms.double(0.8),
        apdTimeOffset = cms.double(-13.5),
        applyConstantTerm = cms.bool(True),
        binOfMaximum = cms.int32(6),
        cosmicsPhase = cms.bool(False),
        cosmicsShift = cms.double(0.0),
        doEB = cms.bool(True),
        doEE = cms.bool(True),
        doENoise = cms.bool(True),
        doES = cms.bool(True),
        doESNoise = cms.bool(True),
        doFast = cms.bool(True),
        doPhotostatistics = cms.bool(True),
        hitsProducer = cms.string('g4SimHits'),
        makeDigiSimLinks = cms.untracked.bool(False),
        photoelectronsToAnalogBarrel = cms.double(0.000444444),
        photoelectronsToAnalogEndcap = cms.double(0.000555555),
        readoutFrameSize = cms.int32(10),
        samplingFactor = cms.double(1.0),
        simHitToPhotoelectronsBarrel = cms.double(2250.0),
        simHitToPhotoelectronsEndcap = cms.double(1800.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(0.0)
    ),
    hcal = cms.PSet(
        DelivLuminosity = cms.double(0),
        HBDarkening = cms.bool(False),
        HEDarkening = cms.bool(False),
        HFDarkening = cms.bool(False),
        HFRecalParameterBlock = cms.PSet(
            HFdepthOneParameterA = cms.vdouble(0.004123, 0.00602, 0.008201, 0.010489, 0.013379, 
                0.016997, 0.021464, 0.027371, 0.034195, 0.044807, 
                0.058939, 0.125497),
            HFdepthOneParameterB = cms.vdouble(-4e-06, -2e-06, 0.0, 4e-06, 1.5e-05, 
                2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107, 
                0.000425, 0.000209),
            HFdepthTwoParameterA = cms.vdouble(0.002861, 0.004168, 0.0064, 0.008388, 0.011601, 
                0.014425, 0.018633, 0.023232, 0.028274, 0.035447, 
                0.051579, 0.086593),
            HFdepthTwoParameterB = cms.vdouble(-2e-06, -0.0, -7e-06, -6e-06, -2e-06, 
                1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05, 
                0.000157, -3e-06)
        ),
        HcalPreMixStage1 = cms.bool(False),
        HcalPreMixStage2 = cms.bool(False),
        TestNumbering = cms.bool(True),
        accumulatorType = cms.string('HcalDigiProducer'),
        debugCaloSamples = cms.bool(False),
        doEmpty = cms.bool(True),
        doHFWindow = cms.bool(False),
        doIonFeedback = cms.bool(True),
        doNeutralDensityFilter = cms.bool(True),
        doNoise = cms.bool(True),
        doThermalNoise = cms.bool(True),
        doTimeSlew = cms.bool(True),
        hb = cms.PSet(
            binOfMaximum = cms.int32(5),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(125.44, 125.54, 125.32, 125.13, 124.46, 
                125.01, 125.22, 125.48, 124.45, 125.9, 
                125.83, 127.01, 126.82, 129.73, 131.83, 
                143.52),
            simHitToPhotoelectrons = cms.double(2000.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(6.0),
            timeSmearing = cms.bool(True)
        ),
        he = cms.PSet(
            binOfMaximum = cms.int32(5),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(True),
            firstRing = cms.int32(16),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(210.55, 197.93, 186.12, 189.64, 189.63, 
                190.28, 189.61, 189.6, 190.12, 191.22, 
                190.9, 193.06, 188.42, 188.42),
            simHitToPhotoelectrons = cms.double(2000.0),
            sipmTau = cms.double(10.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(6.0),
            timeSmearing = cms.bool(True)
        ),
        hf1 = cms.PSet(
            binOfMaximum = cms.int32(2),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(2.79),
            readoutFrameSize = cms.int32(3),
            samplingFactor = cms.double(0.67),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(14.0)
        ),
        hf2 = cms.PSet(
            binOfMaximum = cms.int32(2),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(1.843),
            readoutFrameSize = cms.int32(3),
            samplingFactor = cms.double(0.67),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(13.0)
        ),
        hitsProducer = cms.string('g4SimHits'),
        ho = cms.PSet(
            binOfMaximum = cms.int32(5),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(231.0, 231.0, 231.0, 231.0, 360.0, 
                360.0, 360.0, 360.0, 360.0, 360.0, 
                360.0, 360.0, 360.0, 360.0, 360.0),
            siPMCode = cms.int32(1),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        hoHamamatsu = cms.PSet(
            binOfMaximum = cms.int32(5),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(231.0, 231.0, 231.0, 231.0, 360.0, 
                360.0, 360.0, 360.0, 360.0, 360.0, 
                360.0, 360.0, 360.0, 360.0, 360.0),
            siPMCode = cms.int32(2),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        hoZecotek = cms.PSet(
            binOfMaximum = cms.int32(5),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(231.0, 231.0, 231.0, 231.0, 360.0, 
                360.0, 360.0, 360.0, 360.0, 360.0, 
                360.0, 360.0, 360.0, 360.0, 360.0),
            siPMCode = cms.int32(2),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        ignoreGeantTime = cms.bool(False),
        injectTestHits = cms.bool(False),
        injectTestHitsCells = cms.vint32(),
        injectTestHitsEnergy = cms.vdouble(),
        injectTestHitsTime = cms.vdouble(),
        killHE = cms.bool(False),
        makeDigiSimLinks = cms.untracked.bool(False),
        minFCToDelay = cms.double(5.0),
        zdc = cms.PSet(
            binOfMaximum = cms.int32(5),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(1.843),
            readoutFrameSize = cms.int32(10),
            samplingFactor = cms.double(1.0),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(-4.0)
        )
    ),
    mergedtruth = cms.PSet(
        HepMCProductLabel = cms.InputTag("generatorSmeared"),
        accumulatorType = cms.string('TrackingTruthAccumulator'),
        allowDifferentSimHitProcesses = cms.bool(False),
        alwaysAddAncestors = cms.bool(True),
        createInitialVertexCollection = cms.bool(False),
        createMergedBremsstrahlung = cms.bool(True),
        createUnmergedCollection = cms.bool(True),
        genParticleCollection = cms.InputTag("genParticles"),
        ignoreTracksOutsideVolume = cms.bool(False),
        maximumPreviousBunchCrossing = cms.uint32(9999),
        maximumSubsequentBunchCrossing = cms.uint32(9999),
        removeDeadModules = cms.bool(False),
        select = cms.PSet(
            chargedOnlyTP = cms.bool(True),
            intimeOnlyTP = cms.bool(False),
            lipTP = cms.double(1000),
            maxRapidityTP = cms.double(5.0),
            minHitTP = cms.int32(0),
            minRapidityTP = cms.double(-5.0),
            pdgIdTP = cms.vint32(),
            ptMaxTP = cms.double(1e+100),
            ptMinTP = cms.double(0.1),
            signalOnlyTP = cms.bool(False),
            stableOnlyTP = cms.bool(False),
            tipTP = cms.double(1000)
        ),
        simHitCollections = cms.PSet(
            muon = cms.VInputTag(cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","MuonGEMHits")),
            pixel = cms.VInputTag(cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof")),
            tracker = cms.VInputTag(cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"), 
                cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof"))
        ),
        simTrackCollection = cms.InputTag("g4SimHits"),
        simVertexCollection = cms.InputTag("g4SimHits"),
        vertexDistanceCut = cms.double(0.003),
        volumeRadius = cms.double(120.0),
        volumeZ = cms.double(300.0)
    ),
    pixel = cms.PSet(
        AdcFullScale = cms.int32(255),
        AdcFullScaleStack = cms.int32(255),
        AddNoise = cms.bool(True),
        AddNoisyPixels = cms.bool(True),
        AddPixelInefficiency = cms.bool(True),
        AddThresholdSmearing = cms.bool(True),
        Alpha2Order = cms.bool(True),
        BPix_SignalResponse_p0 = cms.double(0.00171),
        BPix_SignalResponse_p1 = cms.double(0.711),
        BPix_SignalResponse_p2 = cms.double(203.0),
        BPix_SignalResponse_p3 = cms.double(148.0),
        ChargeVCALSmearing = cms.bool(True),
        DeadModules_DB = cms.bool(True),
        DoPixelAging = cms.bool(False),
        ElectronPerAdc = cms.double(135.0),
        ElectronsPerVcal = cms.double(47),
        ElectronsPerVcal_L1 = cms.double(50),
        ElectronsPerVcal_L1_Offset = cms.double(-670),
        ElectronsPerVcal_Offset = cms.double(-60),
        FPix_SignalResponse_p0 = cms.double(0.00171),
        FPix_SignalResponse_p1 = cms.double(0.711),
        FPix_SignalResponse_p2 = cms.double(203.0),
        FPix_SignalResponse_p3 = cms.double(148.0),
        FirstStackLayer = cms.int32(5),
        GainSmearing = cms.double(0.0),
        LorentzAngle_DB = cms.bool(True),
        MissCalibrate = cms.bool(True),
        NoiseInElectrons = cms.double(175.0),
        NumPixelBarrel = cms.int32(4),
        NumPixelEndcap = cms.int32(3),
        OffsetSmearing = cms.double(0.0),
        PixGeometryType = cms.string('idealForDigi'),
        ReadoutNoiseInElec = cms.double(350.0),
        RoutList = cms.vstring('TrackerHitsPixelBarrelLowTof', 
            'TrackerHitsPixelBarrelHighTof', 
            'TrackerHitsPixelEndcapLowTof', 
            'TrackerHitsPixelEndcapHighTof'),
        TanLorentzAnglePerTesla_BPix = cms.double(0.106),
        TanLorentzAnglePerTesla_FPix = cms.double(0.106),
        ThresholdInElectrons_BPix = cms.double(2000.0),
        ThresholdInElectrons_BPix_L1 = cms.double(3000.0),
        ThresholdInElectrons_BPix_L2 = cms.double(2600.0),
        ThresholdInElectrons_FPix = cms.double(2000.0),
        ThresholdSmearing_BPix = cms.double(245.0),
        ThresholdSmearing_BPix_L1 = cms.double(245.0),
        ThresholdSmearing_BPix_L2 = cms.double(245.0),
        ThresholdSmearing_FPix = cms.double(210.0),
        TofLowerCut = cms.double(-12.5),
        TofUpperCut = cms.double(12.5),
        accumulatorType = cms.string('SiPixelDigitizer'),
        deltaProductionCut = cms.double(0.03),
        hitsProducer = cms.string('g4SimHits'),
        killModules = cms.bool(True),
        makeDigiSimLinks = cms.untracked.bool(True),
        useDB = cms.bool(False)
    ),
    puVtx = cms.PSet(
        accumulatorType = cms.string('PileupVertexAccumulator'),
        hitsProducer = cms.string('generator'),
        makeDigiSimLinks = cms.untracked.bool(False),
        saveVtxTimes = cms.bool(False),
        vtxFallbackTag = cms.InputTag("generator"),
        vtxTag = cms.InputTag("generatorSmeared")
    ),
    strip = cms.PSet(
        APVProbabilityFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVProbaList.txt'),
        APVSaturationFromHIP = cms.bool(False),
        APVSaturationProbScaling = cms.double(1.0),
        APVpeakmode = cms.bool(False),
        AppliedVoltage = cms.double(300.0),
        BaselineShift = cms.bool(True),
        ChargeDistributionRMS = cms.double(6.5e-10),
        ChargeMobility = cms.double(310.0),
        CommonModeNoise = cms.bool(True),
        CosmicDelayShift = cms.untracked.double(0.0),
        CouplingConstantDecIB1 = cms.vdouble(0.7748, 0.0962, 0.0165),
        CouplingConstantDecIB2 = cms.vdouble(0.83, 0.0756, 0.0094),
        CouplingConstantDecOB1 = cms.vdouble(0.6871, 0.1222, 0.0342),
        CouplingConstantDecOB2 = cms.vdouble(0.725, 0.1102, 0.0273),
        CouplingConstantDecW1a = cms.vdouble(0.786, 0.093, 0.014),
        CouplingConstantDecW1b = cms.vdouble(0.822, 0.08, 0.009),
        CouplingConstantDecW2a = cms.vdouble(0.7962, 0.0914, 0.0104),
        CouplingConstantDecW2b = cms.vdouble(0.888, 0.05, 0.006),
        CouplingConstantDecW3a = cms.vdouble(0.8164, 0.09, 0.0018),
        CouplingConstantDecW3b = cms.vdouble(0.848, 0.06, 0.016),
        CouplingConstantDecW4 = cms.vdouble(0.876, 0.06, 0.002),
        CouplingConstantDecW5 = cms.vdouble(0.7565, 0.0913, 0.0304),
        CouplingConstantDecW6 = cms.vdouble(0.758, 0.093, 0.026),
        CouplingConstantDecW7 = cms.vdouble(0.7828, 0.0862, 0.0224),
        CouplingConstantPeakIB1 = cms.vdouble(0.9006, 0.0497),
        CouplingConstantPeakIB2 = cms.vdouble(0.9342, 0.0328),
        CouplingConstantPeakOB1 = cms.vdouble(0.8542, 0.0729),
        CouplingConstantPeakOB2 = cms.vdouble(0.8719, 0.064),
        CouplingConstantPeakW1a = cms.vdouble(0.996, 0.002),
        CouplingConstantPeakW1b = cms.vdouble(0.976, 0.012),
        CouplingConstantPeakW2a = cms.vdouble(1.0, 0.0),
        CouplingConstantPeakW2b = cms.vdouble(0.998, 0.001),
        CouplingConstantPeakW3a = cms.vdouble(0.996, 0.002),
        CouplingConstantPeakW3b = cms.vdouble(0.992, 0.004),
        CouplingConstantPeakW4 = cms.vdouble(0.992, 0.004),
        CouplingConstantPeakW5 = cms.vdouble(0.968, 0.016),
        CouplingConstantPeakW6 = cms.vdouble(0.972, 0.014),
        CouplingConstantPeakW7 = cms.vdouble(0.964, 0.018),
        DeltaProductionCut = cms.double(0.120425),
        DepletionVoltage = cms.double(170.0),
        DigiModeList = cms.PSet(
            PRDigi = cms.string('ProcessedRaw'),
            SCDigi = cms.string('ScopeMode'),
            VRDigi = cms.string('VirginRaw'),
            ZSDigi = cms.string('ZeroSuppressed')
        ),
        FedAlgorithm = cms.int32(4),
        FedAlgorithm_PM = cms.int32(4),
        Gain = cms.string(''),
        GeometryType = cms.string('idealForDigi'),
        GevPerElectron = cms.double(3.61e-09),
        Inefficiency = cms.double(0.0),
        LandauFluctuations = cms.bool(True),
        LorentzAngle = cms.string(''),
        Noise = cms.bool(True),
        NoiseSigmaThreshold = cms.double(2.0),
        PedestalsOffset = cms.double(128),
        PreMixingMode = cms.bool(False),
        ROUList = cms.vstring('TrackerHitsTIBLowTof', 
            'TrackerHitsTIBHighTof', 
            'TrackerHitsTIDLowTof', 
            'TrackerHitsTIDHighTof', 
            'TrackerHitsTOBLowTof', 
            'TrackerHitsTOBHighTof', 
            'TrackerHitsTECLowTof', 
            'TrackerHitsTECHighTof'),
        RealPedestals = cms.bool(True),
        SingleStripNoise = cms.bool(True),
        TOFCutForDeconvolution = cms.double(50.0),
        TOFCutForPeak = cms.double(100.0),
        Temperature = cms.double(273.0),
        TrackerConfigurationFromDB = cms.bool(False),
        ZeroSuppression = cms.bool(True),
        accumulatorType = cms.string('SiStripDigitizer'),
        chargeDivisionsPerStrip = cms.int32(10),
        cmnRMStec = cms.double(2.44),
        cmnRMStib = cms.double(5.92),
        cmnRMStid = cms.double(3.08),
        cmnRMStob = cms.double(1.08),
        electronPerAdcDec = cms.double(247.0),
        electronPerAdcPeak = cms.double(262.0),
        hitsProducer = cms.string('g4SimHits'),
        makeDigiSimLinks = cms.untracked.bool(True),
        noDiffusion = cms.bool(False)
    )
)

process.theMixObjects = cms.PSet(
    mixCH = cms.PSet(
        crossingFrames = cms.untracked.vstring(),
        input = cms.VInputTag(cms.InputTag("g4SimHits","CastorFI"), cms.InputTag("g4SimHits","EcalHitsEB"), cms.InputTag("g4SimHits","EcalHitsEE"), cms.InputTag("g4SimHits","EcalHitsES"), cms.InputTag("g4SimHits","HcalHits"), 
            cms.InputTag("g4SimHits","ZDCHITS")),
        subdets = cms.vstring('CastorFI', 
            'EcalHitsEB', 
            'EcalHitsEE', 
            'EcalHitsES', 
            'HcalHits', 
            'ZDCHITS'),
        type = cms.string('PCaloHit')
    ),
    mixHepMC = cms.PSet(
        input = cms.VInputTag(cms.InputTag("generatorSmeared"), cms.InputTag("generator")),
        makeCrossingFrame = cms.untracked.bool(True),
        type = cms.string('HepMCProduct')
    ),
    mixSH = cms.PSet(
        crossingFrames = cms.untracked.vstring('MuonCSCHits', 
            'MuonDTHits', 
            'MuonRPCHits', 
            'MuonGEMHits'),
        input = cms.VInputTag(cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), 
            cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), 
            cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"), 
            cms.InputTag("g4SimHits","MuonGEMHits")),
        subdets = cms.vstring('MuonCSCHits', 
            'MuonDTHits', 
            'MuonRPCHits', 
            'TrackerHitsPixelBarrelHighTof', 
            'TrackerHitsPixelBarrelLowTof', 
            'TrackerHitsPixelEndcapHighTof', 
            'TrackerHitsPixelEndcapLowTof', 
            'TrackerHitsTECHighTof', 
            'TrackerHitsTECLowTof', 
            'TrackerHitsTIBHighTof', 
            'TrackerHitsTIBLowTof', 
            'TrackerHitsTIDHighTof', 
            'TrackerHitsTIDLowTof', 
            'TrackerHitsTOBHighTof', 
            'TrackerHitsTOBLowTof', 
            'MuonGEMHits'),
        type = cms.string('PSimHit')
    ),
    mixTracks = cms.PSet(
        input = cms.VInputTag(cms.InputTag("g4SimHits")),
        makeCrossingFrame = cms.untracked.bool(False),
        type = cms.string('SimTrack')
    ),
    mixVertices = cms.PSet(
        input = cms.VInputTag(cms.InputTag("g4SimHits")),
        makeCrossingFrame = cms.untracked.bool(False),
        type = cms.string('SimVertex')
    )
)

process.trackingParticles = cms.PSet(
    HepMCProductLabel = cms.InputTag("generatorSmeared"),
    accumulatorType = cms.string('TrackingTruthAccumulator'),
    allowDifferentSimHitProcesses = cms.bool(False),
    alwaysAddAncestors = cms.bool(True),
    createInitialVertexCollection = cms.bool(False),
    createMergedBremsstrahlung = cms.bool(True),
    createUnmergedCollection = cms.bool(True),
    genParticleCollection = cms.InputTag("genParticles"),
    ignoreTracksOutsideVolume = cms.bool(False),
    maximumPreviousBunchCrossing = cms.uint32(9999),
    maximumSubsequentBunchCrossing = cms.uint32(9999),
    removeDeadModules = cms.bool(False),
    select = cms.PSet(
        chargedOnlyTP = cms.bool(True),
        intimeOnlyTP = cms.bool(False),
        lipTP = cms.double(1000),
        maxRapidityTP = cms.double(5.0),
        minHitTP = cms.int32(0),
        minRapidityTP = cms.double(-5.0),
        pdgIdTP = cms.vint32(),
        ptMaxTP = cms.double(1e+100),
        ptMinTP = cms.double(0.1),
        signalOnlyTP = cms.bool(False),
        stableOnlyTP = cms.bool(False),
        tipTP = cms.double(1000)
    ),
    simHitCollections = cms.PSet(
        muon = cms.VInputTag(cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","MuonGEMHits")),
        pixel = cms.VInputTag(cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof")),
        tracker = cms.VInputTag(cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"), 
            cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof"))
    ),
    simTrackCollection = cms.InputTag("g4SimHits"),
    simVertexCollection = cms.InputTag("g4SimHits"),
    vertexDistanceCut = cms.double(0.003),
    volumeRadius = cms.double(120.0),
    volumeZ = cms.double(300.0)
)

process.trackingParticlesSelection = cms.PSet(
    chargedOnlyTP = cms.bool(True),
    intimeOnlyTP = cms.bool(False),
    lipTP = cms.double(1000),
    maxRapidityTP = cms.double(5.0),
    minHitTP = cms.int32(0),
    minRapidityTP = cms.double(-5.0),
    pdgIdTP = cms.vint32(),
    ptMaxTP = cms.double(1e+100),
    ptMinTP = cms.double(0.1),
    signalOnlyTP = cms.bool(False),
    stableOnlyTP = cms.bool(False),
    tipTP = cms.double(1000)
)

process.transferSystem = cms.PSet(
    default = cms.PSet(
        default = cms.vstring('Tier0'),
        emulator = cms.vstring('Lustre'),
        streamLookArea = cms.PSet(

        ),
        test = cms.vstring('Lustre')
    ),
    destinations = cms.vstring('Tier0', 
        'DQM', 
        'ECAL', 
        'EventDisplay', 
        'Lustre', 
        'None'),
    streamA = cms.PSet(
        default = cms.vstring('Tier0'),
        emulator = cms.vstring('Lustre'),
        test = cms.vstring('Lustre')
    ),
    streamCalibration = cms.PSet(
        default = cms.vstring('Tier0'),
        emulator = cms.vstring('None'),
        test = cms.vstring('Lustre')
    ),
    streamDQM = cms.PSet(
        default = cms.vstring('DQM'),
        emulator = cms.vstring('None'),
        test = cms.vstring('DQM', 
            'Lustre')
    ),
    streamDQMCalibration = cms.PSet(
        default = cms.vstring('DQM'),
        emulator = cms.vstring('None'),
        test = cms.vstring('DQM', 
            'Lustre')
    ),
    streamEcalCalibration = cms.PSet(
        default = cms.vstring('ECAL'),
        emulator = cms.vstring('None'),
        test = cms.vstring('ECAL')
    ),
    streamEventDisplay = cms.PSet(
        default = cms.vstring('EventDisplay', 
            'Tier0'),
        emulator = cms.vstring('None'),
        test = cms.vstring('EventDisplay', 
            'Lustre')
    ),
    streamExpressCosmics = cms.PSet(
        default = cms.vstring('Tier0'),
        emulator = cms.vstring('Lustre'),
        test = cms.vstring('Lustre')
    ),
    streamLookArea = cms.PSet(
        default = cms.vstring('DQM'),
        emulator = cms.vstring('None'),
        test = cms.vstring('DQM', 
            'Lustre')
    ),
    streamNanoDST = cms.PSet(
        default = cms.vstring('Tier0'),
        emulator = cms.vstring('None'),
        test = cms.vstring('Lustre')
    ),
    streamRPCMON = cms.PSet(
        default = cms.vstring('Tier0'),
        emulator = cms.vstring('None'),
        test = cms.vstring('Lustre')
    ),
    streamTrackerCalibration = cms.PSet(
        default = cms.vstring('Tier0'),
        emulator = cms.vstring('None'),
        test = cms.vstring('Lustre')
    ),
    transferModes = cms.vstring('default', 
        'test', 
        'emulator')
)

process.MEtoEDMConverter = cms.EDProducer("MEtoEDMConverter",
    Frequency = cms.untracked.int32(50),
    MEPathToSave = cms.untracked.string(''),
    Name = cms.untracked.string('MEtoEDMConverter'),
    Verbosity = cms.untracked.int32(0),
    deleteAfterCopy = cms.untracked.bool(True)
)


process.SiStripDigiToRaw = cms.EDProducer("SiStripDigiToRawModule",
    CopyBufferHeader = cms.bool(False),
    FedReadoutMode = cms.string('ZERO_SUPPRESSED'),
    InputDigiLabel = cms.string('ZeroSuppressed'),
    InputModuleLabel = cms.string('simSiStripDigis'),
    RawDataTag = cms.InputTag("rawDataCollector"),
    UseFedKey = cms.bool(False),
    UseWrongDigiType = cms.bool(False)
)


process.addPileupInfo = cms.EDProducer("PileupInformation",
    PileupMixingLabel = cms.InputTag("mix"),
    TrackingParticlesLabel = cms.InputTag("mergedtruth"),
    doTrackTruth = cms.untracked.bool(False),
    isPreMixed = cms.bool(False),
    pTcut_1 = cms.double(0.1),
    pTcut_2 = cms.double(0.5),
    saveVtxTimes = cms.bool(False),
    simHitLabel = cms.string('g4SimHits'),
    vertexDistanceCut = cms.double(0.003),
    volumeRadius = cms.double(1200.0),
    volumeZ = cms.double(3000.0)
)


process.ak1HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.1),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak2HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.2),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak3HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.3),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak4GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak4GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak4GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak4HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak5HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.5),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak6HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.6),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak7HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.7),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak8GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.8),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak8GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.8),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak8GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.8),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.bmtfStage2Raw = cms.EDProducer("L1TDigiToRaw",
    FWId = cms.uint32(1),
    FedId = cms.int32(1376),
    InputLabel = cms.InputTag("simBmtfDigis","BMTF"),
    InputLabel2 = cms.InputTag("simTwinMuxDigis"),
    Setup = cms.string('stage2::BMTFSetup')
)


process.caloLayer1RawFed1354 = cms.EDProducer("L1TDigiToRaw",
    CTP7 = cms.untracked.bool(True),
    FWId = cms.uint32(305419896),
    FedId = cms.int32(1354),
    Setup = cms.string('stage2::CaloLayer1Setup'),
    caloRegions = cms.InputTag("simCaloStage2Layer1Digis"),
    ecalDigis = cms.InputTag("simEcalTriggerPrimitiveDigis"),
    hcalDigis = cms.InputTag("simHcalTriggerPrimitiveDigis"),
    lenSlinkHeader = cms.untracked.int32(8),
    lenSlinkTrailer = cms.untracked.int32(8)
)


process.caloLayer1RawFed1356 = cms.EDProducer("L1TDigiToRaw",
    CTP7 = cms.untracked.bool(True),
    FWId = cms.uint32(305419896),
    FedId = cms.int32(1356),
    Setup = cms.string('stage2::CaloLayer1Setup'),
    caloRegions = cms.InputTag("simCaloStage2Layer1Digis"),
    ecalDigis = cms.InputTag("simEcalTriggerPrimitiveDigis"),
    hcalDigis = cms.InputTag("simHcalTriggerPrimitiveDigis"),
    lenSlinkHeader = cms.untracked.int32(8),
    lenSlinkTrailer = cms.untracked.int32(8)
)


process.caloLayer1RawFed1358 = cms.EDProducer("L1TDigiToRaw",
    CTP7 = cms.untracked.bool(True),
    FWId = cms.uint32(305419896),
    FedId = cms.int32(1358),
    Setup = cms.string('stage2::CaloLayer1Setup'),
    caloRegions = cms.InputTag("simCaloStage2Layer1Digis"),
    ecalDigis = cms.InputTag("simEcalTriggerPrimitiveDigis"),
    hcalDigis = cms.InputTag("simHcalTriggerPrimitiveDigis"),
    lenSlinkHeader = cms.untracked.int32(8),
    lenSlinkTrailer = cms.untracked.int32(8)
)


process.caloStage2Raw = cms.EDProducer("L1TDigiToRaw",
    FWId = cms.uint32(1),
    FedId = cms.int32(1366),
    InputLabel = cms.InputTag("simCaloStage2Digis"),
    Setup = cms.string('stage2::CaloSetup'),
    TowerInputLabel = cms.InputTag("simCaloStage2Layer1Digis"),
    lenSlinkHeader = cms.untracked.int32(8),
    lenSlinkTrailer = cms.untracked.int32(8)
)


process.castorRawData = cms.EDProducer("CastorDigiToRaw",
    CASTOR = cms.InputTag("simCastorDigis"),
    CastorCtdc = cms.bool(False)
)


process.cscpacker = cms.EDProducer("CSCDigiToRawModule",
    alctDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    alctWindowMax = cms.int32(3),
    alctWindowMin = cms.int32(-3),
    clctDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    clctWindowMax = cms.int32(3),
    clctWindowMin = cms.int32(-3),
    comparatorDigiTag = cms.InputTag("simMuonCSCDigis","MuonCSCComparatorDigi"),
    correlatedLCTDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis","MPCSORTED"),
    packEverything = cms.bool(True),
    preTriggerTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    preTriggerWindowMax = cms.int32(1),
    preTriggerWindowMin = cms.int32(-3),
    stripDigiTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigi"),
    useFormatVersion = cms.uint32(2013),
    usePreTriggers = cms.bool(False),
    wireDigiTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigi")
)


process.dtTriggerPrimitiveDigis = cms.EDProducer("DTTrigProd",
    DTTFSectorNumbering = cms.bool(True),
    debug = cms.untracked.bool(False),
    digiTag = cms.InputTag("muonDTDigis"),
    lutBtic = cms.untracked.int32(31),
    lutDumpFlag = cms.untracked.bool(False)
)


process.dtpacker = cms.EDProducer("DTDigiToRawModule",
    debugMode = cms.untracked.bool(False),
    digiColl = cms.InputTag("simMuonDTDigis"),
    maxFEDid = cms.untracked.int32(775),
    minFEDid = cms.untracked.int32(770),
    useStandardFEDid = cms.untracked.bool(True)
)


process.ecalPacker = cms.EDProducer("EcalDigiToRaw",
    DoBarrel = cms.untracked.bool(True),
    DoEndCap = cms.untracked.bool(True),
    InstanceEB = cms.string('ebDigis'),
    InstanceEE = cms.string('eeDigis'),
    Label = cms.string('simEcalDigis'),
    WriteSRFlags = cms.untracked.bool(True),
    WriteTCCBlock = cms.untracked.bool(True),
    WriteTowerBlock = cms.untracked.bool(True),
    debug = cms.untracked.bool(False),
    labelEBSRFlags = cms.InputTag("simEcalDigis","ebSrFlags"),
    labelEESRFlags = cms.InputTag("simEcalDigis","eeSrFlags"),
    labelTT = cms.InputTag("simEcalTriggerPrimitiveDigis"),
    listDCCId = cms.untracked.vint32(1, 2, 3, 4, 5, 
        6, 7, 8, 9, 10, 
        11, 12, 13, 14, 15, 
        16, 17, 18, 19, 20, 
        21, 22, 23, 24, 25, 
        26, 27, 28, 29, 30, 
        31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 
        41, 42, 43, 44, 45, 
        46, 47, 48, 49, 50, 
        51, 52, 53, 54)
)


process.esDigiToRaw = cms.EDProducer("ESDigiToRaw",
    InstanceES = cms.string(''),
    Label = cms.string('simEcalPreshowerDigis'),
    LookupTable = cms.untracked.FileInPath('EventFilter/ESDigiToRaw/data/ES_lookup_table.dat'),
    debugMode = cms.untracked.bool(False)
)


process.genCandidatesForMET = cms.EDProducer("InputGenJetsParticleSelector",
    excludeFromResonancePids = cms.vuint32(),
    excludeResonances = cms.bool(False),
    ignoreParticleIDs = cms.vuint32(1000022, 1000012, 1000014, 1000016, 2000012, 
        2000014, 2000016, 1000039, 5100039, 4000012, 
        4000014, 4000016, 9900012, 9900014, 9900016, 
        39, 12, 13, 14, 16),
    partonicFinalState = cms.bool(False),
    src = cms.InputTag("genParticles"),
    tausAsJets = cms.bool(False)
)


process.genMetCalo = cms.EDProducer("GenMETProducer",
    alias = cms.string('genMetCalo'),
    applyFiducialThresholdForFractions = cms.bool(False),
    globalThreshold = cms.double(0.0),
    onlyFiducialParticles = cms.bool(True),
    src = cms.InputTag("genCandidatesForMET"),
    usePt = cms.bool(True)
)


process.genMetCaloAndNonPrompt = cms.EDProducer("GenMETProducer",
    alias = cms.string('genMetCaloAndNonPrompt'),
    applyFiducialThresholdForFractions = cms.bool(False),
    globalThreshold = cms.double(0.0),
    onlyFiducialParticles = cms.bool(True),
    src = cms.InputTag("genParticlesForJets"),
    usePt = cms.bool(True)
)


process.genMetIC5GenJets = cms.EDProducer("ElseMETProducer",
    InputType = cms.string('CandidateCollection'),
    METType = cms.string('MET'),
    alias = cms.string('genMetIC5GenJets'),
    applyFiducialThresholdForFractions = cms.bool(False),
    globalThreshold = cms.double(0.0),
    noHF = cms.bool(False),
    src = cms.InputTag("iterativeCone5GenJets"),
    usePt = cms.bool(True)
)


process.genMetTrue = cms.EDProducer("GenMETProducer",
    alias = cms.string('genMetTrue'),
    applyFiducialThresholdForFractions = cms.bool(False),
    globalThreshold = cms.double(0.0),
    onlyFiducialParticles = cms.bool(False),
    src = cms.InputTag("genParticlesForMETAllVisible"),
    usePt = cms.bool(True)
)


process.genPUProtons = cms.EDProducer("GenPUProtonProducer",
    bunchCrossingList = cms.vint32(0),
    minPz = cms.double(2400.0),
    mix = cms.string('mix')
)


process.genParticleCandidates = cms.EDProducer("FastGenParticleCandidateProducer",
    abortOnUnknownPDGCode = cms.untracked.bool(False),
    saveBarCodes = cms.untracked.bool(False),
    src = cms.InputTag("generatorSmeared")
)


process.genParticles = cms.EDProducer("GenParticleProducer",
    abortOnUnknownPDGCode = cms.untracked.bool(False),
    saveBarCodes = cms.untracked.bool(True),
    src = cms.InputTag("generatorSmeared")
)


process.genParticlesForJets = cms.EDProducer("InputGenJetsParticleSelector",
    excludeFromResonancePids = cms.vuint32(12, 13, 14, 16),
    excludeResonances = cms.bool(False),
    ignoreParticleIDs = cms.vuint32(1000022, 1000012, 1000014, 1000016, 2000012, 
        2000014, 2000016, 1000039, 5100039, 4000012, 
        4000014, 4000016, 9900012, 9900014, 9900016, 
        39),
    partonicFinalState = cms.bool(False),
    src = cms.InputTag("genParticles"),
    tausAsJets = cms.bool(False)
)


process.genParticlesForJetsNoMuNoNu = cms.EDProducer("InputGenJetsParticleSelector",
    excludeFromResonancePids = cms.vuint32(12, 13, 14, 16),
    excludeResonances = cms.bool(False),
    ignoreParticleIDs = cms.vuint32(1000022, 1000012, 1000014, 1000016, 2000012, 
        2000014, 2000016, 1000039, 5100039, 4000012, 
        4000014, 4000016, 9900012, 9900014, 9900016, 
        39, 12, 13, 14, 16),
    partonicFinalState = cms.bool(False),
    src = cms.InputTag("genParticles"),
    tausAsJets = cms.bool(False)
)


process.genParticlesForJetsNoNu = cms.EDProducer("InputGenJetsParticleSelector",
    excludeFromResonancePids = cms.vuint32(12, 13, 14, 16),
    excludeResonances = cms.bool(False),
    ignoreParticleIDs = cms.vuint32(1000022, 1000012, 1000014, 1000016, 2000012, 
        2000014, 2000016, 1000039, 5100039, 4000012, 
        4000014, 4000016, 9900012, 9900014, 9900016, 
        39, 12, 14, 16),
    partonicFinalState = cms.bool(False),
    src = cms.InputTag("genParticles"),
    tausAsJets = cms.bool(False)
)


process.genParticlesForMETAllVisible = cms.EDProducer("InputGenJetsParticleSelector",
    excludeFromResonancePids = cms.vuint32(),
    excludeResonances = cms.bool(False),
    ignoreParticleIDs = cms.vuint32(1000022, 1000012, 1000014, 1000016, 2000012, 
        2000014, 2000016, 1000039, 5100039, 4000012, 
        4000014, 4000016, 9900012, 9900014, 9900016, 
        39, 12, 14, 16),
    partonicFinalState = cms.bool(False),
    src = cms.InputTag("genParticles"),
    tausAsJets = cms.bool(False)
)


process.generatorSmeared = cms.EDProducer("GeneratorSmearedProducer",
    currentTag = cms.untracked.InputTag("VtxSmeared"),
    previousTag = cms.untracked.InputTag("generator")
)


process.gmtStage2Raw = cms.EDProducer("L1TDigiToRaw",
    BMTFInputLabel = cms.InputTag("simBmtfDigis","BMTF"),
    EMTFInputLabel = cms.InputTag("simEmtfDigis","EMTF"),
    FWId = cms.uint32(67174400),
    FedId = cms.int32(1402),
    ImdInputLabelBMTF = cms.InputTag("simGmtStage2Digis","imdMuonsBMTF"),
    ImdInputLabelEMTFNeg = cms.InputTag("simGmtStage2Digis","imdMuonsEMTFNeg"),
    ImdInputLabelEMTFPos = cms.InputTag("simGmtStage2Digis","imdMuonsEMTFPos"),
    ImdInputLabelOMTFNeg = cms.InputTag("simGmtStage2Digis","imdMuonsOMTFNeg"),
    ImdInputLabelOMTFPos = cms.InputTag("simGmtStage2Digis","imdMuonsOMTFPos"),
    InputLabel = cms.InputTag("simGmtStage2Digis"),
    OMTFInputLabel = cms.InputTag("simOmtfDigis","OMTF"),
    Setup = cms.string('stage2::GMTSetup'),
    lenSlinkHeader = cms.untracked.int32(8),
    lenSlinkTrailer = cms.untracked.int32(8)
)


process.gtStage2Raw = cms.EDProducer("L1TDigiToRaw",
    EGammaInputTag = cms.InputTag("simCaloStage2Digis"),
    EtSumInputTag = cms.InputTag("simCaloStage2Digis"),
    ExtInputTag = cms.InputTag("simGtExtFakeStage2Digis"),
    FWId = cms.uint32(4262),
    FedId = cms.int32(1404),
    GtInputTag = cms.InputTag("simGtStage2Digis"),
    JetInputTag = cms.InputTag("simCaloStage2Digis"),
    MuonInputTag = cms.InputTag("simGmtStage2Digis"),
    Setup = cms.string('stage2::GTSetup'),
    TauInputTag = cms.InputTag("simCaloStage2Digis"),
    lenSlinkHeader = cms.untracked.int32(8),
    lenSlinkTrailer = cms.untracked.int32(8)
)


process.hcalRawDataVME = cms.EDProducer("HcalDigiToRaw",
    HBHE = cms.untracked.InputTag(""),
    HF = cms.untracked.InputTag(""),
    HO = cms.untracked.InputTag("simHcalDigis"),
    TRIG = cms.untracked.InputTag(""),
    ZDC = cms.untracked.InputTag("simHcalUnsuppressedDigis")
)


process.hcalRawDatauHTR = cms.EDProducer("HcalDigiToRawuHTR",
    ElectronicsMap = cms.string(''),
    HBHEqie8 = cms.InputTag("simHcalDigis"),
    HFqie8 = cms.InputTag("simHcalDigis"),
    QIE10 = cms.InputTag("simHcalDigis","HFQIE10DigiCollection"),
    QIE11 = cms.InputTag("simHcalDigis","HBHEQIE11DigiCollection"),
    TP = cms.InputTag("simHcalTriggerPrimitiveDigis"),
    Verbosity = cms.untracked.int32(0),
    premix = cms.bool(False)
)


process.heavyIon = cms.EDProducer("GenHIEventProducer",
    src = cms.InputTag("mix","generatorSmeared")
)


process.hltAK4CaloAbsoluteCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4CaloHLT'),
    level = cms.string('L3Absolute')
)


process.hltAK4CaloCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("hltAK4CaloFastJetCorrector", "hltAK4CaloRelativeCorrector", "hltAK4CaloAbsoluteCorrector", "hltAK4CaloResidualCorrector")
)


process.hltAK4CaloFastJetCorrector = cms.EDProducer("L1FastjetCorrectorProducer",
    algorithm = cms.string('AK4CaloHLT'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("hltFixedGridRhoFastjetAllCalo")
)


process.hltAK4CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    DxyTrVtxMax = cms.double(0.0),
    DzTrVtxMax = cms.double(0.0),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    MaxVtxZ = cms.double(15.0),
    MinVtxNdof = cms.int32(5),
    R0 = cms.double(-1.0),
    Rho_EtaMax = cms.double(4.4),
    UseOnlyOnePV = cms.bool(False),
    UseOnlyVertexTracks = cms.bool(False),
    beta = cms.double(-1.0),
    correctShape = cms.bool(False),
    csRParam = cms.double(-1.0),
    csRho_EtaMax = cms.double(-1.0),
    dRMax = cms.double(-1.0),
    dRMin = cms.double(-1.0),
    doAreaDiskApprox = cms.bool(True),
    doAreaFastjet = cms.bool(False),
    doFastJetNonUniform = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    gridMaxRapidity = cms.double(-1.0),
    gridSpacing = cms.double(-1.0),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetCollInstanceName = cms.string(''),
    jetPtMin = cms.double(1.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxDepth = cms.int32(-1),
    maxInputs = cms.uint32(1),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    muCut = cms.double(-1.0),
    muMax = cms.double(-1.0),
    muMin = cms.double(-1.0),
    nExclude = cms.uint32(0),
    nFilt = cms.int32(-1),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(),
    puPtMin = cms.double(10.0),
    puWidth = cms.double(0.0),
    rFilt = cms.double(-1.0),
    rFiltFactor = cms.double(-1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.4),
    rcut_factor = cms.double(-1.0),
    restrictInputs = cms.bool(False),
    src = cms.InputTag("hltTowerMakerForAll"),
    srcPVs = cms.InputTag("NotUsed"),
    subjetPtMin = cms.double(-1.0),
    subtractorName = cms.string(''),
    sumRecHits = cms.bool(False),
    trimPtFracMin = cms.double(-1.0),
    useCMSBoostedTauSeedingAlgorithm = cms.bool(False),
    useConstituentSubtraction = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    useDynamicFiltering = cms.bool(False),
    useExplicitGhosts = cms.bool(False),
    useFiltering = cms.bool(False),
    useKtPruning = cms.bool(False),
    useMassDropTagger = cms.bool(False),
    usePruning = cms.bool(False),
    useSoftDrop = cms.bool(False),
    useTrimming = cms.bool(False),
    verbosity = cms.int32(0),
    voronoiRfact = cms.double(0.9),
    writeCompound = cms.bool(False),
    writeJetsWithConst = cms.bool(False),
    yCut = cms.double(-1.0),
    yMax = cms.double(-1.0),
    yMin = cms.double(-1.0),
    zcut = cms.double(-1.0)
)


process.hltAK4CaloJetsCorrected = cms.EDProducer("CorrectedCaloJetProducer",
    correctors = cms.VInputTag("hltAK4CaloCorrector"),
    src = cms.InputTag("hltAK4CaloJets")
)


process.hltAK4CaloJetsCorrectedIDPassed = cms.EDProducer("CorrectedCaloJetProducer",
    correctors = cms.VInputTag("hltAK4CaloCorrector"),
    src = cms.InputTag("hltAK4CaloJetsIDPassed")
)


process.hltAK4CaloJetsIDPassed = cms.EDProducer("HLTCaloJetIDProducer",
    JetIDParams = cms.PSet(
        ebRecHitsColl = cms.InputTag("hltEcalRecHit","EcalRecHitsEB"),
        eeRecHitsColl = cms.InputTag("hltEcalRecHit","EcalRecHitsEE"),
        hbheRecHitsColl = cms.InputTag("hltHbhereco"),
        hfRecHitsColl = cms.InputTag("hltHfreco"),
        hoRecHitsColl = cms.InputTag("hltHoreco"),
        useRecHits = cms.bool(True)
    ),
    jetsInput = cms.InputTag("hltAK4CaloJets"),
    max_EMF = cms.double(999.0),
    min_EMF = cms.double(1e-06),
    min_N90 = cms.int32(-2),
    min_N90hits = cms.int32(2)
)


process.hltAK4CaloJetsPF = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    DxyTrVtxMax = cms.double(0.0),
    DzTrVtxMax = cms.double(0.0),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    MaxVtxZ = cms.double(15.0),
    MinVtxNdof = cms.int32(5),
    R0 = cms.double(-1.0),
    Rho_EtaMax = cms.double(4.4),
    UseOnlyOnePV = cms.bool(False),
    UseOnlyVertexTracks = cms.bool(False),
    beta = cms.double(-1.0),
    correctShape = cms.bool(False),
    csRParam = cms.double(-1.0),
    csRho_EtaMax = cms.double(-1.0),
    dRMax = cms.double(-1.0),
    dRMin = cms.double(-1.0),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doFastJetNonUniform = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    gridMaxRapidity = cms.double(-1.0),
    gridSpacing = cms.double(-1.0),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetCollInstanceName = cms.string(''),
    jetPtMin = cms.double(1.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxDepth = cms.int32(-1),
    maxInputs = cms.uint32(1),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(0),
    muCut = cms.double(-1.0),
    muMax = cms.double(-1.0),
    muMin = cms.double(-1.0),
    nExclude = cms.uint32(0),
    nFilt = cms.int32(-1),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(),
    puPtMin = cms.double(10.0),
    puWidth = cms.double(0.0),
    rFilt = cms.double(-1.0),
    rFiltFactor = cms.double(-1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.4),
    rcut_factor = cms.double(-1.0),
    restrictInputs = cms.bool(False),
    src = cms.InputTag("hltTowerMakerForAll"),
    srcPVs = cms.InputTag("NotUsed"),
    subjetPtMin = cms.double(-1.0),
    subtractorName = cms.string(''),
    sumRecHits = cms.bool(False),
    trimPtFracMin = cms.double(-1.0),
    useCMSBoostedTauSeedingAlgorithm = cms.bool(False),
    useConstituentSubtraction = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    useDynamicFiltering = cms.bool(False),
    useExplicitGhosts = cms.bool(False),
    useFiltering = cms.bool(False),
    useKtPruning = cms.bool(False),
    useMassDropTagger = cms.bool(False),
    usePruning = cms.bool(False),
    useSoftDrop = cms.bool(False),
    useTrimming = cms.bool(False),
    verbosity = cms.int32(0),
    voronoiRfact = cms.double(-9.0),
    writeCompound = cms.bool(False),
    writeJetsWithConst = cms.bool(False),
    yCut = cms.double(-1.0),
    yMax = cms.double(-1.0),
    yMin = cms.double(-1.0),
    zcut = cms.double(-1.0)
)


process.hltAK4CaloRelativeCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4CaloHLT'),
    level = cms.string('L2Relative')
)


process.hltAK4CaloResidualCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4CaloHLT'),
    level = cms.string('L2L3Residual')
)


process.hltAK4Iter1TrackJets4Iter2 = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    DxyTrVtxMax = cms.double(0.2),
    DzTrVtxMax = cms.double(0.5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    MaxVtxZ = cms.double(30.0),
    MinVtxNdof = cms.int32(0),
    R0 = cms.double(-1.0),
    Rho_EtaMax = cms.double(4.4),
    UseOnlyOnePV = cms.bool(True),
    UseOnlyVertexTracks = cms.bool(False),
    beta = cms.double(-1.0),
    correctShape = cms.bool(False),
    csRParam = cms.double(-1.0),
    csRho_EtaMax = cms.double(-1.0),
    dRMax = cms.double(-1.0),
    dRMin = cms.double(-1.0),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doFastJetNonUniform = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    gridMaxRapidity = cms.double(-1.0),
    gridSpacing = cms.double(-1.0),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.1),
    jetAlgorithm = cms.string('AntiKt'),
    jetCollInstanceName = cms.string(''),
    jetPtMin = cms.double(7.5),
    jetType = cms.string('TrackJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxDepth = cms.int32(-1),
    maxInputs = cms.uint32(1),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    muCut = cms.double(-1.0),
    muMax = cms.double(-1.0),
    muMin = cms.double(-1.0),
    nExclude = cms.uint32(0),
    nFilt = cms.int32(-1),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(),
    puPtMin = cms.double(0.0),
    puWidth = cms.double(0.0),
    rFilt = cms.double(-1.0),
    rFiltFactor = cms.double(-1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.4),
    rcut_factor = cms.double(-1.0),
    restrictInputs = cms.bool(False),
    src = cms.InputTag("hltIter1TrackRefsForJets4Iter2"),
    srcPVs = cms.InputTag("hltTrimmedPixelVertices"),
    subjetPtMin = cms.double(-1.0),
    subtractorName = cms.string(''),
    sumRecHits = cms.bool(False),
    trimPtFracMin = cms.double(-1.0),
    useCMSBoostedTauSeedingAlgorithm = cms.bool(False),
    useConstituentSubtraction = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    useDynamicFiltering = cms.bool(False),
    useExplicitGhosts = cms.bool(False),
    useFiltering = cms.bool(False),
    useKtPruning = cms.bool(False),
    useMassDropTagger = cms.bool(False),
    usePruning = cms.bool(False),
    useSoftDrop = cms.bool(False),
    useTrimming = cms.bool(False),
    verbosity = cms.int32(0),
    voronoiRfact = cms.double(0.9),
    writeCompound = cms.bool(False),
    writeJetsWithConst = cms.bool(False),
    yCut = cms.double(-1.0),
    yMax = cms.double(-1.0),
    yMin = cms.double(-1.0),
    zcut = cms.double(-1.0)
)


process.hltAK4PFAbsoluteCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PFHLT'),
    level = cms.string('L3Absolute')
)


process.hltAK4PFCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("hltAK4PFFastJetCorrector", "hltAK4PFRelativeCorrector", "hltAK4PFAbsoluteCorrector", "hltAK4PFResidualCorrector")
)


process.hltAK4PFFastJetCorrector = cms.EDProducer("L1FastjetCorrectorProducer",
    algorithm = cms.string('AK4PFHLT'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("hltFixedGridRhoFastjetAll")
)


process.hltAK4PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    DxyTrVtxMax = cms.double(0.0),
    DzTrVtxMax = cms.double(0.0),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    MaxVtxZ = cms.double(15.0),
    MinVtxNdof = cms.int32(0),
    R0 = cms.double(-1.0),
    Rho_EtaMax = cms.double(4.4),
    UseOnlyOnePV = cms.bool(False),
    UseOnlyVertexTracks = cms.bool(False),
    beta = cms.double(-1.0),
    correctShape = cms.bool(False),
    csRParam = cms.double(-1.0),
    csRho_EtaMax = cms.double(-1.0),
    dRMax = cms.double(-1.0),
    dRMin = cms.double(-1.0),
    doAreaDiskApprox = cms.bool(True),
    doAreaFastjet = cms.bool(False),
    doFastJetNonUniform = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    gridMaxRapidity = cms.double(-1.0),
    gridSpacing = cms.double(-1.0),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetCollInstanceName = cms.string(''),
    jetPtMin = cms.double(0.0),
    jetType = cms.string('PFJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxDepth = cms.int32(-1),
    maxInputs = cms.uint32(1),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(0),
    muCut = cms.double(-1.0),
    muMax = cms.double(-1.0),
    muMin = cms.double(-1.0),
    nExclude = cms.uint32(0),
    nFilt = cms.int32(-1),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(),
    puPtMin = cms.double(10.0),
    puWidth = cms.double(0.0),
    rFilt = cms.double(-1.0),
    rFiltFactor = cms.double(-1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.4),
    rcut_factor = cms.double(-1.0),
    restrictInputs = cms.bool(False),
    src = cms.InputTag("hltParticleFlow"),
    srcPVs = cms.InputTag("hltPixelVertices"),
    subjetPtMin = cms.double(-1.0),
    subtractorName = cms.string(''),
    sumRecHits = cms.bool(False),
    trimPtFracMin = cms.double(-1.0),
    useCMSBoostedTauSeedingAlgorithm = cms.bool(False),
    useConstituentSubtraction = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    useDynamicFiltering = cms.bool(False),
    useExplicitGhosts = cms.bool(False),
    useFiltering = cms.bool(False),
    useKtPruning = cms.bool(False),
    useMassDropTagger = cms.bool(False),
    usePruning = cms.bool(False),
    useSoftDrop = cms.bool(False),
    useTrimming = cms.bool(False),
    verbosity = cms.int32(0),
    voronoiRfact = cms.double(-9.0),
    writeCompound = cms.bool(False),
    writeJetsWithConst = cms.bool(False),
    yCut = cms.double(-1.0),
    yMax = cms.double(-1.0),
    yMin = cms.double(-1.0),
    zcut = cms.double(-1.0)
)


process.hltAK4PFJetsCorrected = cms.EDProducer("CorrectedPFJetProducer",
    correctors = cms.VInputTag("hltAK4PFCorrector"),
    src = cms.InputTag("hltAK4PFJets")
)


process.hltAK4PFJetsCorrectedMatchedToCaloJets15 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleAK4CaloJet15"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK4PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltAK4PFJetsCorrectedMatchedToCaloJets15FWD = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleAK4CaloJet15FWD"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK4PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltAK4PFJetsCorrectedMatchedToCaloJets30 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleAK4CaloJet30"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK4PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltAK4PFJetsCorrectedMatchedToCaloJets30FWD = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleAK4CaloJet30FWD"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK4PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltAK4PFJetsCorrectedMatchedToCaloJets50 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleAK4CaloJet50"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK4PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltAK4PFJetsCorrectedMatchedToCaloJets70 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleAK4CaloJet70"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK4PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltAK4PFJetsLooseID = cms.EDProducer("HLTPFJetIDProducer",
    CEF = cms.double(0.99),
    CHF = cms.double(0.0),
    NCH = cms.int32(0),
    NEF = cms.double(0.99),
    NHF = cms.double(0.99),
    NTOT = cms.int32(1),
    jetsInput = cms.InputTag("hltAK4PFJets"),
    maxCF = cms.double(99.0),
    maxEta = cms.double(1e+99),
    minPt = cms.double(20.0)
)


process.hltAK4PFJetsLooseIDCorrected = cms.EDProducer("CorrectedPFJetProducer",
    correctors = cms.VInputTag("hltAK4PFCorrector"),
    src = cms.InputTag("hltAK4PFJetsLooseID")
)


process.hltAK4PFJetsTightID = cms.EDProducer("HLTPFJetIDProducer",
    CEF = cms.double(0.99),
    CHF = cms.double(0.0),
    NCH = cms.int32(0),
    NEF = cms.double(0.99),
    NHF = cms.double(0.9),
    NTOT = cms.int32(1),
    jetsInput = cms.InputTag("hltAK4PFJets"),
    maxCF = cms.double(99.0),
    maxEta = cms.double(1e+99),
    minPt = cms.double(20.0)
)


process.hltAK4PFJetsTightIDCorrected = cms.EDProducer("CorrectedPFJetProducer",
    correctors = cms.VInputTag("hltAK4PFCorrector"),
    src = cms.InputTag("hltAK4PFJetsTightID")
)


process.hltAK4PFRelativeCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PFHLT'),
    level = cms.string('L2Relative')
)


process.hltAK4PFResidualCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PFHLT'),
    level = cms.string('L2L3Residual')
)


process.hltAK8CaloAbsoluteCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK8CaloHLT'),
    level = cms.string('L3Absolute')
)


process.hltAK8CaloCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("hltAK8CaloFastJetCorrector", "hltAK8CaloRelativeCorrector", "hltAK8CaloAbsoluteCorrector", "hltAK8CaloResidualCorrector")
)


process.hltAK8CaloFastJetCorrector = cms.EDProducer("L1FastjetCorrectorProducer",
    algorithm = cms.string('AK8CaloHLT'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("hltFixedGridRhoFastjetAllCalo")
)


process.hltAK8CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    DxyTrVtxMax = cms.double(0.0),
    DzTrVtxMax = cms.double(0.0),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    MaxVtxZ = cms.double(15.0),
    MinVtxNdof = cms.int32(5),
    R0 = cms.double(-1.0),
    Rho_EtaMax = cms.double(4.4),
    UseOnlyOnePV = cms.bool(False),
    UseOnlyVertexTracks = cms.bool(False),
    beta = cms.double(-1.0),
    correctShape = cms.bool(False),
    csRParam = cms.double(-1.0),
    csRho_EtaMax = cms.double(-1.0),
    dRMax = cms.double(-1.0),
    dRMin = cms.double(-1.0),
    doAreaDiskApprox = cms.bool(True),
    doAreaFastjet = cms.bool(False),
    doFastJetNonUniform = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    gridMaxRapidity = cms.double(-1.0),
    gridSpacing = cms.double(-1.0),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetCollInstanceName = cms.string(''),
    jetPtMin = cms.double(1.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxDepth = cms.int32(-1),
    maxInputs = cms.uint32(1),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    muCut = cms.double(-1.0),
    muMax = cms.double(-1.0),
    muMin = cms.double(-1.0),
    nExclude = cms.uint32(0),
    nFilt = cms.int32(-1),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(),
    puPtMin = cms.double(10.0),
    puWidth = cms.double(0.0),
    rFilt = cms.double(-1.0),
    rFiltFactor = cms.double(-1.0),
    rParam = cms.double(0.8),
    radiusPU = cms.double(0.8),
    rcut_factor = cms.double(-1.0),
    restrictInputs = cms.bool(False),
    src = cms.InputTag("hltTowerMakerForAll"),
    srcPVs = cms.InputTag("NotUsed"),
    subjetPtMin = cms.double(-1.0),
    subtractorName = cms.string(''),
    sumRecHits = cms.bool(False),
    trimPtFracMin = cms.double(-1.0),
    useCMSBoostedTauSeedingAlgorithm = cms.bool(False),
    useConstituentSubtraction = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    useDynamicFiltering = cms.bool(False),
    useExplicitGhosts = cms.bool(False),
    useFiltering = cms.bool(False),
    useKtPruning = cms.bool(False),
    useMassDropTagger = cms.bool(False),
    usePruning = cms.bool(False),
    useSoftDrop = cms.bool(False),
    useTrimming = cms.bool(False),
    verbosity = cms.int32(0),
    voronoiRfact = cms.double(0.9),
    writeCompound = cms.bool(False),
    writeJetsWithConst = cms.bool(False),
    yCut = cms.double(-1.0),
    yMax = cms.double(-1.0),
    yMin = cms.double(-1.0),
    zcut = cms.double(-1.0)
)


process.hltAK8CaloJetsCorrected = cms.EDProducer("CorrectedCaloJetProducer",
    correctors = cms.VInputTag("hltAK8CaloCorrector"),
    src = cms.InputTag("hltAK8CaloJets")
)


process.hltAK8CaloJetsCorrectedIDPassed = cms.EDProducer("CorrectedCaloJetProducer",
    correctors = cms.VInputTag("hltAK8CaloCorrector"),
    src = cms.InputTag("hltAK8CaloJetsIDPassed")
)


process.hltAK8CaloJetsIDPassed = cms.EDProducer("HLTCaloJetIDProducer",
    JetIDParams = cms.PSet(
        ebRecHitsColl = cms.InputTag("hltEcalRecHit","EcalRecHitsEB"),
        eeRecHitsColl = cms.InputTag("hltEcalRecHit","EcalRecHitsEE"),
        hbheRecHitsColl = cms.InputTag("hltHbhereco"),
        hfRecHitsColl = cms.InputTag("hltHfreco"),
        hoRecHitsColl = cms.InputTag("hltHoreco"),
        useRecHits = cms.bool(True)
    ),
    jetsInput = cms.InputTag("hltAK8CaloJets"),
    max_EMF = cms.double(999.0),
    min_EMF = cms.double(1e-06),
    min_N90 = cms.int32(-2),
    min_N90hits = cms.int32(2)
)


process.hltAK8CaloJetsPF = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    DxyTrVtxMax = cms.double(0.0),
    DzTrVtxMax = cms.double(0.0),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    MaxVtxZ = cms.double(15.0),
    MinVtxNdof = cms.int32(5),
    R0 = cms.double(-1.0),
    Rho_EtaMax = cms.double(4.4),
    UseOnlyOnePV = cms.bool(False),
    UseOnlyVertexTracks = cms.bool(False),
    beta = cms.double(-1.0),
    correctShape = cms.bool(False),
    csRParam = cms.double(-1.0),
    csRho_EtaMax = cms.double(-1.0),
    dRMax = cms.double(-1.0),
    dRMin = cms.double(-1.0),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doFastJetNonUniform = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    gridMaxRapidity = cms.double(-1.0),
    gridSpacing = cms.double(-1.0),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetCollInstanceName = cms.string(''),
    jetPtMin = cms.double(1.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxDepth = cms.int32(-1),
    maxInputs = cms.uint32(1),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(0),
    muCut = cms.double(-1.0),
    muMax = cms.double(-1.0),
    muMin = cms.double(-1.0),
    nExclude = cms.uint32(0),
    nFilt = cms.int32(-1),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(),
    puPtMin = cms.double(10.0),
    puWidth = cms.double(0.0),
    rFilt = cms.double(-1.0),
    rFiltFactor = cms.double(-1.0),
    rParam = cms.double(0.8),
    radiusPU = cms.double(0.8),
    rcut_factor = cms.double(-1.0),
    restrictInputs = cms.bool(False),
    src = cms.InputTag("hltTowerMakerForAll"),
    srcPVs = cms.InputTag("NotUsed"),
    subjetPtMin = cms.double(-1.0),
    subtractorName = cms.string(''),
    sumRecHits = cms.bool(False),
    trimPtFracMin = cms.double(-1.0),
    useCMSBoostedTauSeedingAlgorithm = cms.bool(False),
    useConstituentSubtraction = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    useDynamicFiltering = cms.bool(False),
    useExplicitGhosts = cms.bool(False),
    useFiltering = cms.bool(False),
    useKtPruning = cms.bool(False),
    useMassDropTagger = cms.bool(False),
    usePruning = cms.bool(False),
    useSoftDrop = cms.bool(False),
    useTrimming = cms.bool(False),
    verbosity = cms.int32(0),
    voronoiRfact = cms.double(-9.0),
    writeCompound = cms.bool(False),
    writeJetsWithConst = cms.bool(False),
    yCut = cms.double(-1.0),
    yMax = cms.double(-1.0),
    yMin = cms.double(-1.0),
    zcut = cms.double(-1.0)
)


process.hltAK8CaloRelativeCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK8CaloHLT'),
    level = cms.string('L2Relative')
)


process.hltAK8CaloResidualCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK8CaloHLT'),
    level = cms.string('L2L3Residual')
)


process.hltAK8PFAbsoluteCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK8PFHLT'),
    level = cms.string('L3Absolute')
)


process.hltAK8PFCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("hltAK8PFFastJetCorrector", "hltAK8PFRelativeCorrector", "hltAK8PFAbsoluteCorrector", "hltAK8PFResidualCorrector")
)


process.hltAK8PFFastJetCorrector = cms.EDProducer("L1FastjetCorrectorProducer",
    algorithm = cms.string('AK8PFHLT'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("hltFixedGridRhoFastjetAll")
)


process.hltAK8PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    DxyTrVtxMax = cms.double(0.0),
    DzTrVtxMax = cms.double(0.0),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    MaxVtxZ = cms.double(15.0),
    MinVtxNdof = cms.int32(0),
    R0 = cms.double(-1.0),
    Rho_EtaMax = cms.double(4.4),
    UseOnlyOnePV = cms.bool(False),
    UseOnlyVertexTracks = cms.bool(False),
    beta = cms.double(-1.0),
    correctShape = cms.bool(False),
    csRParam = cms.double(-1.0),
    csRho_EtaMax = cms.double(-1.0),
    dRMax = cms.double(-1.0),
    dRMin = cms.double(-1.0),
    doAreaDiskApprox = cms.bool(True),
    doAreaFastjet = cms.bool(False),
    doFastJetNonUniform = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    gridMaxRapidity = cms.double(-1.0),
    gridSpacing = cms.double(-1.0),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetCollInstanceName = cms.string(''),
    jetPtMin = cms.double(0.0),
    jetType = cms.string('PFJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxDepth = cms.int32(-1),
    maxInputs = cms.uint32(1),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(0),
    muCut = cms.double(-1.0),
    muMax = cms.double(-1.0),
    muMin = cms.double(-1.0),
    nExclude = cms.uint32(0),
    nFilt = cms.int32(-1),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(),
    puPtMin = cms.double(10.0),
    puWidth = cms.double(0.0),
    rFilt = cms.double(-1.0),
    rFiltFactor = cms.double(-1.0),
    rParam = cms.double(0.8),
    radiusPU = cms.double(0.8),
    rcut_factor = cms.double(-1.0),
    restrictInputs = cms.bool(False),
    src = cms.InputTag("hltParticleFlow"),
    srcPVs = cms.InputTag("hltPixelVertices"),
    subjetPtMin = cms.double(-1.0),
    subtractorName = cms.string(''),
    sumRecHits = cms.bool(False),
    trimPtFracMin = cms.double(-1.0),
    useCMSBoostedTauSeedingAlgorithm = cms.bool(False),
    useConstituentSubtraction = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    useDynamicFiltering = cms.bool(False),
    useExplicitGhosts = cms.bool(False),
    useFiltering = cms.bool(False),
    useKtPruning = cms.bool(False),
    useMassDropTagger = cms.bool(False),
    usePruning = cms.bool(False),
    useSoftDrop = cms.bool(False),
    useTrimming = cms.bool(False),
    verbosity = cms.int32(0),
    voronoiRfact = cms.double(-9.0),
    writeCompound = cms.bool(False),
    writeJetsWithConst = cms.bool(False),
    yCut = cms.double(-1.0),
    yMax = cms.double(-1.0),
    yMin = cms.double(-1.0),
    zcut = cms.double(-1.0)
)


process.hltAK8PFJetsCorrected = cms.EDProducer("CorrectedPFJetProducer",
    correctors = cms.VInputTag("hltAK8PFCorrector"),
    src = cms.InputTag("hltAK8PFJets")
)


process.hltAK8PFJetsLooseID = cms.EDProducer("HLTPFJetIDProducer",
    CEF = cms.double(0.99),
    CHF = cms.double(0.0),
    NCH = cms.int32(0),
    NEF = cms.double(0.99),
    NHF = cms.double(0.99),
    NTOT = cms.int32(1),
    jetsInput = cms.InputTag("hltAK8PFJets"),
    maxCF = cms.double(99.0),
    maxEta = cms.double(1e+99),
    minPt = cms.double(20.0)
)


process.hltAK8PFJetsLooseIDCorrected = cms.EDProducer("CorrectedPFJetProducer",
    correctors = cms.VInputTag("hltAK8PFCorrector"),
    src = cms.InputTag("hltAK8PFJetsLooseID")
)


process.hltAK8PFJetsTightID = cms.EDProducer("HLTPFJetIDProducer",
    CEF = cms.double(0.99),
    CHF = cms.double(0.0),
    NCH = cms.int32(0),
    NEF = cms.double(0.99),
    NHF = cms.double(0.9),
    NTOT = cms.int32(1),
    jetsInput = cms.InputTag("hltAK8PFJets"),
    maxCF = cms.double(99.0),
    maxEta = cms.double(1e+99),
    minPt = cms.double(20.0)
)


process.hltAK8PFJetsTightIDCorrected = cms.EDProducer("CorrectedPFJetProducer",
    correctors = cms.VInputTag("hltAK8PFCorrector"),
    src = cms.InputTag("hltAK8PFJetsTightID")
)


process.hltAK8PFRelativeCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK8PFHLT'),
    level = cms.string('L2Relative')
)


process.hltAK8PFResidualCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK8PFHLT'),
    level = cms.string('L2L3Residual')
)


process.hltAlCaEtaEBRechitsToDigis = cms.EDProducer("HLTRechitsToDigis",
    digisIn = cms.InputTag("hltEcalDigis","ebDigis"),
    digisOut = cms.string('etaEBDigis'),
    recHits = cms.InputTag("hltAlCaEtaEBUncalibrator","etaEcalRecHitsEB"),
    region = cms.string('barrel'),
    srFlagsIn = cms.InputTag("hltEcalDigis"),
    srFlagsOut = cms.string('etaEBSrFlags')
)


process.hltAlCaEtaEBUncalibrator = cms.EDProducer("EcalRecalibRecHitProducer",
    EBRecHitCollection = cms.InputTag("hltAlCaEtaRecHitsFilterEBonlyRegional","etaEcalRecHitsEB"),
    EBRecalibRecHitCollection = cms.string('etaEcalRecHitsEB'),
    EERecHitCollection = cms.InputTag("hltAlCaEtaRecHitsFilterEBonlyRegional","etaEcalRecHitsEB"),
    EERecalibRecHitCollection = cms.string('etaEcalRecHitsEE'),
    doEnergyScale = cms.bool(False),
    doEnergyScaleInverse = cms.bool(False),
    doIntercalib = cms.bool(False),
    doIntercalibInverse = cms.bool(False),
    doLaserCorrections = cms.bool(False),
    doLaserCorrectionsInverse = cms.bool(False)
)


process.hltAlCaEtaEERechitsToDigis = cms.EDProducer("HLTRechitsToDigis",
    digisIn = cms.InputTag("hltEcalDigis","eeDigis"),
    digisOut = cms.string('etaEEDigis'),
    recHits = cms.InputTag("hltAlCaEtaEEUncalibrator","etaEcalRecHitsEE"),
    region = cms.string('endcap'),
    srFlagsIn = cms.InputTag("hltEcalDigis"),
    srFlagsOut = cms.string('etaEESrFlags')
)


process.hltAlCaEtaEEUncalibrator = cms.EDProducer("EcalRecalibRecHitProducer",
    EBRecHitCollection = cms.InputTag("hltAlCaEtaRecHitsFilterEEonlyRegional","etaEcalRecHitsEE"),
    EBRecalibRecHitCollection = cms.string('etaEcalRecHitsEB'),
    EERecHitCollection = cms.InputTag("hltAlCaEtaRecHitsFilterEEonlyRegional","etaEcalRecHitsEE"),
    EERecalibRecHitCollection = cms.string('etaEcalRecHitsEE'),
    doEnergyScale = cms.bool(False),
    doEnergyScaleInverse = cms.bool(False),
    doIntercalib = cms.bool(False),
    doIntercalibInverse = cms.bool(False),
    doLaserCorrections = cms.bool(False),
    doLaserCorrectionsInverse = cms.bool(False)
)


process.hltAlCaPi0EBRechitsToDigis = cms.EDProducer("HLTRechitsToDigis",
    digisIn = cms.InputTag("hltEcalDigis","ebDigis"),
    digisOut = cms.string('pi0EBDigis'),
    recHits = cms.InputTag("hltAlCaPi0EBUncalibrator","pi0EcalRecHitsEB"),
    region = cms.string('barrel'),
    srFlagsIn = cms.InputTag("hltEcalDigis"),
    srFlagsOut = cms.string('pi0EBSrFlags')
)


process.hltAlCaPi0EBUncalibrator = cms.EDProducer("EcalRecalibRecHitProducer",
    EBRecHitCollection = cms.InputTag("hltAlCaPi0RecHitsFilterEBonlyRegional","pi0EcalRecHitsEB"),
    EBRecalibRecHitCollection = cms.string('pi0EcalRecHitsEB'),
    EERecHitCollection = cms.InputTag("hltAlCaPi0RecHitsFilterEBonlyRegional","pi0EcalRecHitsEB"),
    EERecalibRecHitCollection = cms.string('pi0EcalRecHitsEE'),
    doEnergyScale = cms.bool(False),
    doEnergyScaleInverse = cms.bool(False),
    doIntercalib = cms.bool(False),
    doIntercalibInverse = cms.bool(False),
    doLaserCorrections = cms.bool(False),
    doLaserCorrectionsInverse = cms.bool(False)
)


process.hltAlCaPi0EERechitsToDigis = cms.EDProducer("HLTRechitsToDigis",
    digisIn = cms.InputTag("hltEcalDigis","eeDigis"),
    digisOut = cms.string('pi0EEDigis'),
    recHits = cms.InputTag("hltAlCaPi0EEUncalibrator","pi0EcalRecHitsEE"),
    region = cms.string('endcap'),
    srFlagsIn = cms.InputTag("hltEcalDigis"),
    srFlagsOut = cms.string('pi0EESrFlags')
)


process.hltAlCaPi0EEUncalibrator = cms.EDProducer("EcalRecalibRecHitProducer",
    EBRecHitCollection = cms.InputTag("hltAlCaPi0RecHitsFilterEEonlyRegional","pi0EcalRecHitsEE"),
    EBRecalibRecHitCollection = cms.string('pi0EcalRecHitsEB'),
    EERecHitCollection = cms.InputTag("hltAlCaPi0RecHitsFilterEEonlyRegional","pi0EcalRecHitsEE"),
    EERecalibRecHitCollection = cms.string('pi0EcalRecHitsEE'),
    doEnergyScale = cms.bool(False),
    doEnergyScaleInverse = cms.bool(False),
    doIntercalib = cms.bool(False),
    doIntercalibInverse = cms.bool(False),
    doLaserCorrections = cms.bool(False),
    doLaserCorrectionsInverse = cms.bool(False)
)


process.hltBLifetimeAssociatorPFJet30Eta2p4 = cms.EDProducer("JetTracksAssociatorAtVertex",
    coneSize = cms.double(0.4),
    jets = cms.InputTag("hltPFJetForBtagJet30Eta2p4"),
    pvSrc = cms.InputTag(""),
    tracks = cms.InputTag("hltPFMuonMerging"),
    useAssigned = cms.bool(False)
)


process.hltBLifetimeAssociatorPFJet40Eta2p4 = cms.EDProducer("JetTracksAssociatorAtVertex",
    coneSize = cms.double(0.4),
    jets = cms.InputTag("hltPFJetForBtagJet40Eta2p4"),
    pvSrc = cms.InputTag(""),
    tracks = cms.InputTag("hltPFMuonMerging"),
    useAssigned = cms.bool(False)
)


process.hltBLifetimeAssociatorPFJet60Eta2p4 = cms.EDProducer("JetTracksAssociatorAtVertex",
    coneSize = cms.double(0.4),
    jets = cms.InputTag("hltPFJetForBtagJet60Eta2p4"),
    pvSrc = cms.InputTag(""),
    tracks = cms.InputTag("hltPFMuonMerging"),
    useAssigned = cms.bool(False)
)


process.hltBLifetimeAssociatorPFJet80Eta2p4 = cms.EDProducer("JetTracksAssociatorAtVertex",
    coneSize = cms.double(0.4),
    jets = cms.InputTag("hltPFJetForBtagJet80Eta2p4"),
    pvSrc = cms.InputTag(""),
    tracks = cms.InputTag("hltPFMuonMerging"),
    useAssigned = cms.bool(False)
)


process.hltBLifetimeTagInfosPFJet30Eta2p4 = cms.EDProducer("TrackIPProducer",
    computeGhostTrack = cms.bool(True),
    computeProbabilities = cms.bool(True),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetDirectionUsingGhostTrack = cms.bool(False),
    jetDirectionUsingTracks = cms.bool(False),
    jetTracks = cms.InputTag("hltBLifetimeAssociatorPFJet30Eta2p4"),
    maximumChiSquared = cms.double(5.0),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(3),
    minimumNumberOfPixelHits = cms.int32(2),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("hltVerticesPFFilter"),
    useTrackQuality = cms.bool(False)
)


process.hltBLifetimeTagInfosPFJet40Eta2p4 = cms.EDProducer("TrackIPProducer",
    computeGhostTrack = cms.bool(True),
    computeProbabilities = cms.bool(True),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetDirectionUsingGhostTrack = cms.bool(False),
    jetDirectionUsingTracks = cms.bool(False),
    jetTracks = cms.InputTag("hltBLifetimeAssociatorPFJet40Eta2p4"),
    maximumChiSquared = cms.double(5.0),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(3),
    minimumNumberOfPixelHits = cms.int32(2),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("hltVerticesPFFilter"),
    useTrackQuality = cms.bool(False)
)


process.hltBLifetimeTagInfosPFJet60Eta2p4 = cms.EDProducer("TrackIPProducer",
    computeGhostTrack = cms.bool(True),
    computeProbabilities = cms.bool(True),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetDirectionUsingGhostTrack = cms.bool(False),
    jetDirectionUsingTracks = cms.bool(False),
    jetTracks = cms.InputTag("hltBLifetimeAssociatorPFJet60Eta2p4"),
    maximumChiSquared = cms.double(5.0),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(3),
    minimumNumberOfPixelHits = cms.int32(2),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("hltVerticesPFFilter"),
    useTrackQuality = cms.bool(False)
)


process.hltBLifetimeTagInfosPFJet80Eta2p4 = cms.EDProducer("TrackIPProducer",
    computeGhostTrack = cms.bool(True),
    computeProbabilities = cms.bool(True),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetDirectionUsingGhostTrack = cms.bool(False),
    jetDirectionUsingTracks = cms.bool(False),
    jetTracks = cms.InputTag("hltBLifetimeAssociatorPFJet80Eta2p4"),
    maximumChiSquared = cms.double(5.0),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(3),
    minimumNumberOfPixelHits = cms.int32(2),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("hltVerticesPFFilter"),
    useTrackQuality = cms.bool(False)
)


process.hltCleanedHiCorrectedIslandBarrelSuperClustersHI = cms.EDProducer("HiSpikeCleaner",
    TimingCut = cms.untracked.double(9999999.0),
    etCut = cms.double(8.0),
    originalSuperClusterProducer = cms.InputTag("hltHiCorrectedIslandBarrelSuperClustersHI"),
    outputColl = cms.string(''),
    recHitProducerBarrel = cms.InputTag("hltEcalRecHit","EcalRecHitsEB"),
    recHitProducerEndcap = cms.InputTag("hltEcalRecHit","EcalRecHitsEE"),
    swissCutThr = cms.untracked.double(0.95)
)


process.hltCombinedSecondaryVertexBJetTagsPFJet30Eta2p4 = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('hltCombinedSecondaryVertexV2'),
    tagInfos = cms.VInputTag("hltBLifetimeTagInfosPFJet30Eta2p4", "hltSecondaryVertexTagInfosPFJet30Eta2p4")
)


process.hltCombinedSecondaryVertexBJetTagsPFJet40Eta2p4 = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('hltCombinedSecondaryVertexV2'),
    tagInfos = cms.VInputTag("hltBLifetimeTagInfosPFJet40Eta2p4", "hltSecondaryVertexTagInfosPFJet40Eta2p4")
)


process.hltCombinedSecondaryVertexBJetTagsPFJet60Eta2p4 = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('hltCombinedSecondaryVertexV2'),
    tagInfos = cms.VInputTag("hltBLifetimeTagInfosPFJet60Eta2p4", "hltSecondaryVertexTagInfosPFJet60Eta2p4")
)


process.hltCombinedSecondaryVertexBJetTagsPFJet80Eta2p4 = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('hltCombinedSecondaryVertexV2'),
    tagInfos = cms.VInputTag("hltBLifetimeTagInfosPFJet80Eta2p4", "hltSecondaryVertexTagInfosPFJet80Eta2p4")
)


process.hltCsc2DRecHits = cms.EDProducer("CSCRecHitDProducer",
    CSCDebug = cms.untracked.bool(False),
    CSCNoOfTimeBinsForDynamicPedestal = cms.int32(2),
    CSCStripClusterChargeCut = cms.double(25.0),
    CSCStripClusterSize = cms.untracked.int32(3),
    CSCStripPeakThreshold = cms.double(10.0),
    CSCStripxtalksOffset = cms.double(0.03),
    CSCUseCalibrations = cms.bool(True),
    CSCUseGasGainCorrections = cms.bool(False),
    CSCUseReducedWireTimeWindow = cms.bool(False),
    CSCUseStaticPedestals = cms.bool(False),
    CSCUseTimingCorrections = cms.bool(True),
    CSCWireClusterDeltaT = cms.int32(1),
    CSCWireTimeWindowHigh = cms.int32(15),
    CSCWireTimeWindowLow = cms.int32(0),
    CSCstripWireDeltaTime = cms.int32(8),
    ConstSyst_ME12 = cms.double(0.0),
    ConstSyst_ME13 = cms.double(0.0),
    ConstSyst_ME1a = cms.double(0.022),
    ConstSyst_ME1b = cms.double(0.007),
    ConstSyst_ME21 = cms.double(0.0),
    ConstSyst_ME22 = cms.double(0.0),
    ConstSyst_ME31 = cms.double(0.0),
    ConstSyst_ME32 = cms.double(0.0),
    ConstSyst_ME41 = cms.double(0.0),
    NoiseLevel_ME12 = cms.double(9.0),
    NoiseLevel_ME13 = cms.double(8.0),
    NoiseLevel_ME1a = cms.double(7.0),
    NoiseLevel_ME1b = cms.double(8.0),
    NoiseLevel_ME21 = cms.double(9.0),
    NoiseLevel_ME22 = cms.double(9.0),
    NoiseLevel_ME31 = cms.double(9.0),
    NoiseLevel_ME32 = cms.double(9.0),
    NoiseLevel_ME41 = cms.double(9.0),
    UseAverageTime = cms.bool(False),
    UseFivePoleFit = cms.bool(True),
    UseParabolaFit = cms.bool(False),
    XTasymmetry_ME12 = cms.double(0.0),
    XTasymmetry_ME13 = cms.double(0.0),
    XTasymmetry_ME1a = cms.double(0.0),
    XTasymmetry_ME1b = cms.double(0.0),
    XTasymmetry_ME21 = cms.double(0.0),
    XTasymmetry_ME22 = cms.double(0.0),
    XTasymmetry_ME31 = cms.double(0.0),
    XTasymmetry_ME32 = cms.double(0.0),
    XTasymmetry_ME41 = cms.double(0.0),
    readBadChambers = cms.bool(True),
    readBadChannels = cms.bool(False),
    stripDigiTag = cms.InputTag("hltMuonCSCDigis","MuonCSCStripDigi"),
    wireDigiTag = cms.InputTag("hltMuonCSCDigis","MuonCSCWireDigi")
)


process.hltCscSegments = cms.EDProducer("CSCSegmentProducer",
    algo_psets = cms.VPSet(cms.PSet(
        algo_name = cms.string('CSCSegAlgoST'),
        algo_psets = cms.VPSet(cms.PSet(
            BPMinImprovement = cms.double(10000.0),
            BrutePruning = cms.bool(True),
            CSCDebug = cms.untracked.bool(False),
            CorrectTheErrors = cms.bool(True),
            Covariance = cms.double(0.0),
            ForceCovariance = cms.bool(False),
            ForceCovarianceAll = cms.bool(False),
            NormChi2Cut2D = cms.double(20.0),
            NormChi2Cut3D = cms.double(10.0),
            Pruning = cms.bool(True),
            SeedBig = cms.double(0.0015),
            SeedSmall = cms.double(0.0002),
            curvePenalty = cms.double(2.0),
            curvePenaltyThreshold = cms.double(0.85),
            dPhiFineMax = cms.double(0.025),
            dRPhiFineMax = cms.double(8.0),
            dXclusBoxMax = cms.double(4.0),
            dYclusBoxMax = cms.double(8.0),
            hitDropLimit4Hits = cms.double(0.6),
            hitDropLimit5Hits = cms.double(0.8),
            hitDropLimit6Hits = cms.double(0.3333),
            maxDPhi = cms.double(999.0),
            maxDTheta = cms.double(999.0),
            maxRatioResidualPrune = cms.double(3.0),
            maxRecHitsInCluster = cms.int32(20),
            minHitsPerSegment = cms.int32(3),
            onlyBestSegment = cms.bool(False),
            preClustering = cms.bool(True),
            preClusteringUseChaining = cms.bool(True),
            prePrun = cms.bool(True),
            prePrunLimit = cms.double(3.17),
            tanPhiMax = cms.double(0.5),
            tanThetaMax = cms.double(1.2),
            useShowering = cms.bool(False),
            yweightPenalty = cms.double(1.5),
            yweightPenaltyThreshold = cms.double(1.0)
        ), 
            cms.PSet(
                BPMinImprovement = cms.double(10000.0),
                BrutePruning = cms.bool(True),
                CSCDebug = cms.untracked.bool(False),
                CorrectTheErrors = cms.bool(True),
                Covariance = cms.double(0.0),
                ForceCovariance = cms.bool(False),
                ForceCovarianceAll = cms.bool(False),
                NormChi2Cut2D = cms.double(20.0),
                NormChi2Cut3D = cms.double(10.0),
                Pruning = cms.bool(True),
                SeedBig = cms.double(0.0015),
                SeedSmall = cms.double(0.0002),
                curvePenalty = cms.double(2.0),
                curvePenaltyThreshold = cms.double(0.85),
                dPhiFineMax = cms.double(0.025),
                dRPhiFineMax = cms.double(8.0),
                dXclusBoxMax = cms.double(4.0),
                dYclusBoxMax = cms.double(8.0),
                hitDropLimit4Hits = cms.double(0.6),
                hitDropLimit5Hits = cms.double(0.8),
                hitDropLimit6Hits = cms.double(0.3333),
                maxDPhi = cms.double(999.0),
                maxDTheta = cms.double(999.0),
                maxRatioResidualPrune = cms.double(3.0),
                maxRecHitsInCluster = cms.int32(24),
                minHitsPerSegment = cms.int32(3),
                onlyBestSegment = cms.bool(False),
                preClustering = cms.bool(True),
                preClusteringUseChaining = cms.bool(True),
                prePrun = cms.bool(True),
                prePrunLimit = cms.double(3.17),
                tanPhiMax = cms.double(0.5),
                tanThetaMax = cms.double(1.2),
                useShowering = cms.bool(False),
                yweightPenalty = cms.double(1.5),
                yweightPenaltyThreshold = cms.double(1.0)
            )),
        chamber_types = cms.vstring('ME1/a', 
            'ME1/b', 
            'ME1/2', 
            'ME1/3', 
            'ME2/1', 
            'ME2/2', 
            'ME3/1', 
            'ME3/2', 
            'ME4/1', 
            'ME4/2'),
        parameters_per_chamber_type = cms.vint32(2, 1, 1, 1, 1, 
            1, 1, 1, 1, 1)
    )),
    algo_type = cms.int32(1),
    inputObjects = cms.InputTag("hltCsc2DRecHits")
)


process.hltDisplacedmumuVtxProducerDimuon0Jpsi = cms.EDProducer("HLTDisplacedmumuVtxProducer",
    ChargeOpt = cms.int32(-1),
    MaxEta = cms.double(2.5),
    MaxInvMass = cms.double(999999.0),
    MinInvMass = cms.double(0.0),
    MinPt = cms.double(0.0),
    MinPtPair = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltDimuon0JpsiL3Filtered"),
    Src = cms.InputTag("hltIterL3MuonCandidates")
)


process.hltDoubletRecoveryClustersRefRemoval = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(16.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hltTripletRecoveryClustersRefRemoval"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClusters"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacility"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltTripletRecoveryPFlowTrackSelectionHighPurity")
)


process.hltDoubletRecoveryMaskedMeasurementTrackerEvent = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltDoubletRecoveryClustersRefRemoval"),
    src = cms.InputTag("hltSiStripClusters")
)


process.hltDoubletRecoveryPFlowCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltDoubletRecoveryMaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTIter2GroupedCkfTrajectoryBuilderIT')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltDoubletRecoveryPFlowPixelSeeds"),
    useHitsSplitting = cms.bool(False)
)


process.hltDoubletRecoveryPFlowCtfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hltDoubletRecovery'),
    Fitter = cms.string('hltESPFittingSmootherIT'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltDoubletRecoveryMaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltDoubletRecoveryPFlowCkfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltDoubletRecoveryPFlowPixelClusterCheck = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripClusters"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(40000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClusters"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltDoubletRecoveryPFlowPixelHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltDoubletRecoveryPFlowPixelClusterCheck"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("hltDoubletRecoveryPixelLayerPairs"),
    trackingRegions = cms.InputTag("hltDoubletRecoveryPFlowPixelTrackingRegions")
)


process.hltDoubletRecoveryPFlowPixelSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltDoubletRecoveryPFlowPixelHitDoublets__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltDoubletRecoveryPFlowPixelHitDoublets")
)


process.hltDoubletRecoveryPFlowPixelTrackingRegions = cms.EDProducer("PointSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        deltaEta = cms.double(0.9),
        deltaPhi = cms.double(0.3),
        maxNRegions = cms.int32(100),
        maxNVertices = cms.int32(10),
        measurementTrackerName = cms.InputTag("hltDoubletRecoveryMaskedMeasurementTrackerEvent"),
        mode = cms.string('VerticesFixed'),
        nSigmaZBeamSpot = cms.double(3.0),
        nSigmaZVertex = cms.double(3.0),
        originRadius = cms.double(0.02),
        points = cms.PSet(
            eta = cms.vdouble(0.8),
            phi = cms.vdouble(3.0)
        ),
        precise = cms.bool(True),
        ptMin = cms.double(0.8),
        searchOpt = cms.bool(False),
        vertexCollection = cms.InputTag("hltTrimmedPixelVertices"),
        whereToUseMeasurementTracker = cms.string('ForSiStrips'),
        zErrorBeamSpot = cms.double(15.0),
        zErrorVetex = cms.double(0.1)
    )
)


process.hltDoubletRecoveryPFlowTrackCutClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 0.003),
            d0err_par = cms.vdouble(0.001, 0.001, 0.001),
            dr_exp = cms.vint32(4, 4, 4),
            dr_par1 = cms.vdouble(3.40282346639e+38, 0.4, 0.4),
            dr_par2 = cms.vdouble(3.40282346639e+38, 0.3, 0.3)
        ),
        dz_par = cms.PSet(
            dz_exp = cms.vint32(4, 4, 4),
            dz_par1 = cms.vdouble(3.40282346639e+38, 0.4, 0.4),
            dz_par2 = cms.vdouble(3.40282346639e+38, 0.35, 0.35)
        ),
        maxChi2 = cms.vdouble(9999.0, 25.0, 16.0),
        maxChi2n = cms.vdouble(1.2, 1.0, 0.7),
        maxDr = cms.vdouble(0.5, 0.03, 3.40282346639e+38),
        maxDz = cms.vdouble(0.5, 0.2, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24.0, 15.0),
        maxLostLayers = cms.vint32(1, 1, 1),
        min3DLayers = cms.vint32(0, 0, 0),
        minLayers = cms.vint32(3, 3, 3),
        minNVtxTrk = cms.int32(3),
        minNdof = cms.vdouble(1e-05, 1e-05, 1e-05),
        minPixelHits = cms.vint32(0, 0, 0)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("hltDoubletRecoveryPFlowCtfWithMaterialTracks"),
    vertices = cms.InputTag("hltTrimmedPixelVertices")
)


process.hltDoubletRecoveryPFlowTrackSelectionHighPurity = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltDoubletRecoveryPFlowTrackCutClassifier","MVAValues"),
    originalQualVals = cms.InputTag("hltDoubletRecoveryPFlowTrackCutClassifier","QualityMasks"),
    originalSource = cms.InputTag("hltDoubletRecoveryPFlowCtfWithMaterialTracks")
)


process.hltDoubletRecoveryPixelLayerPairs = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        skipClusters = cms.InputTag("hltDoubletRecoveryClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltDoubletRecoveryClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix4', 
        'BPix1+BPix2', 
        'BPix1+BPix3', 
        'BPix2+BPix3', 
        'BPix1+FPix1_pos', 
        'BPix1+FPix1_pos', 
        'BPix1+FPix1_pos', 
        'BPix2+FPix1_neg', 
        'BPix3+BPix4', 
        'BPix3+FPix1_pos', 
        'FPix1_pos+FPix2_pos')
)


process.hltDt1DRecHits = cms.EDProducer("DTRecHitProducer",
    debug = cms.untracked.bool(False),
    dtDigiLabel = cms.InputTag("hltMuonDTDigis"),
    recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
    recAlgoConfig = cms.PSet(
        debug = cms.untracked.bool(False),
        doVdriftCorr = cms.bool(True),
        maxTime = cms.double(420.0),
        minTime = cms.double(-3.0),
        stepTwoFromDigi = cms.bool(False),
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        tTrigModeConfig = cms.PSet(
            debug = cms.untracked.bool(False),
            doT0Correction = cms.bool(True),
            doTOFCorrection = cms.bool(True),
            doWirePropCorrection = cms.bool(True),
            tTrigLabel = cms.string(''),
            tofCorrType = cms.int32(0),
            vPropWire = cms.double(24.4),
            wirePropCorrType = cms.int32(0)
        ),
        useUncertDB = cms.bool(True)
    )
)


process.hltDt4DSegments = cms.EDProducer("DTRecSegment4DProducer",
    Reco4DAlgoConfig = cms.PSet(
        AllDTRecHits = cms.bool(True),
        Reco2DAlgoConfig = cms.PSet(
            AlphaMaxPhi = cms.double(1.0),
            AlphaMaxTheta = cms.double(0.9),
            MaxAllowedHits = cms.uint32(50),
            debug = cms.untracked.bool(False),
            hit_afterT0_resolution = cms.double(0.03),
            nSharedHitsMax = cms.int32(2),
            nUnSharedHitsMin = cms.int32(2),
            performT0SegCorrection = cms.bool(False),
            performT0_vdriftSegCorrection = cms.bool(False),
            perform_delta_rejecting = cms.bool(False),
            recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
            recAlgoConfig = cms.PSet(
                debug = cms.untracked.bool(False),
                doVdriftCorr = cms.bool(True),
                maxTime = cms.double(420.0),
                minTime = cms.double(-3.0),
                stepTwoFromDigi = cms.bool(False),
                tTrigMode = cms.string('DTTTrigSyncFromDB'),
                tTrigModeConfig = cms.PSet(
                    debug = cms.untracked.bool(False),
                    doT0Correction = cms.bool(True),
                    doTOFCorrection = cms.bool(True),
                    doWirePropCorrection = cms.bool(True),
                    tTrigLabel = cms.string(''),
                    tofCorrType = cms.int32(0),
                    vPropWire = cms.double(24.4),
                    wirePropCorrType = cms.int32(0)
                ),
                useUncertDB = cms.bool(True)
            ),
            segmCleanerMode = cms.int32(2)
        ),
        Reco2DAlgoName = cms.string('DTCombinatorialPatternReco'),
        debug = cms.untracked.bool(False),
        hit_afterT0_resolution = cms.double(0.03),
        nSharedHitsMax = cms.int32(2),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False),
        performT0_vdriftSegCorrection = cms.bool(False),
        perform_delta_rejecting = cms.bool(False),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            debug = cms.untracked.bool(False),
            doVdriftCorr = cms.bool(True),
            maxTime = cms.double(420.0),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            tTrigModeConfig = cms.PSet(
                debug = cms.untracked.bool(False),
                doT0Correction = cms.bool(True),
                doTOFCorrection = cms.bool(True),
                doWirePropCorrection = cms.bool(True),
                tTrigLabel = cms.string(''),
                tofCorrType = cms.int32(0),
                vPropWire = cms.double(24.4),
                wirePropCorrType = cms.int32(0)
            ),
            useUncertDB = cms.bool(True)
        ),
        segmCleanerMode = cms.int32(2)
    ),
    Reco4DAlgoName = cms.string('DTCombinatorialPatternReco4D'),
    debug = cms.untracked.bool(False),
    recHits1DLabel = cms.InputTag("hltDt1DRecHits"),
    recHits2DLabel = cms.InputTag("dt2DSegments")
)


process.hltEcalCalibrationRaw = cms.EDProducer("EvFFEDSelector",
    fedList = cms.vuint32(601, 602, 603, 604, 605, 
        606, 607, 608, 609, 610, 
        611, 612, 613, 614, 615, 
        616, 617, 618, 619, 620, 
        621, 622, 623, 624, 625, 
        626, 627, 628, 629, 630, 
        631, 632, 633, 634, 635, 
        636, 637, 638, 639, 640, 
        641, 642, 643, 644, 645, 
        646, 647, 648, 649, 650, 
        651, 652, 653, 654, 1024),
    inputTag = cms.InputTag("rawDataCollector")
)


process.hltEcalDetIdToBeRecovered = cms.EDProducer("EcalDetIdToBeRecoveredProducer",
    ebDetIdToBeRecovered = cms.string('ebDetId'),
    ebFEToBeRecovered = cms.string('ebFE'),
    ebIntegrityChIdErrors = cms.InputTag("hltEcalDigis","EcalIntegrityChIdErrors"),
    ebIntegrityGainErrors = cms.InputTag("hltEcalDigis","EcalIntegrityGainErrors"),
    ebIntegrityGainSwitchErrors = cms.InputTag("hltEcalDigis","EcalIntegrityGainSwitchErrors"),
    ebSrFlagCollection = cms.InputTag("hltEcalDigis"),
    eeDetIdToBeRecovered = cms.string('eeDetId'),
    eeFEToBeRecovered = cms.string('eeFE'),
    eeIntegrityChIdErrors = cms.InputTag("hltEcalDigis","EcalIntegrityChIdErrors"),
    eeIntegrityGainErrors = cms.InputTag("hltEcalDigis","EcalIntegrityGainErrors"),
    eeIntegrityGainSwitchErrors = cms.InputTag("hltEcalDigis","EcalIntegrityGainSwitchErrors"),
    eeSrFlagCollection = cms.InputTag("hltEcalDigis"),
    integrityBlockSizeErrors = cms.InputTag("hltEcalDigis","EcalIntegrityBlockSizeErrors"),
    integrityTTIdErrors = cms.InputTag("hltEcalDigis","EcalIntegrityTTIdErrors")
)


process.hltEcalDigis = cms.EDProducer("EcalRawToDigi",
    DoRegional = cms.bool(False),
    FEDs = cms.vint32(601, 602, 603, 604, 605, 
        606, 607, 608, 609, 610, 
        611, 612, 613, 614, 615, 
        616, 617, 618, 619, 620, 
        621, 622, 623, 624, 625, 
        626, 627, 628, 629, 630, 
        631, 632, 633, 634, 635, 
        636, 637, 638, 639, 640, 
        641, 642, 643, 644, 645, 
        646, 647, 648, 649, 650, 
        651, 652, 653, 654),
    FedLabel = cms.InputTag("listfeds"),
    InputLabel = cms.InputTag("rawDataCollector"),
    eventPut = cms.bool(True),
    feIdCheck = cms.bool(True),
    feUnpacking = cms.bool(True),
    forceToKeepFRData = cms.bool(False),
    headerUnpacking = cms.bool(True),
    memUnpacking = cms.bool(True),
    numbTriggerTSamples = cms.int32(1),
    numbXtalTSamples = cms.int32(10),
    orderedDCCIdList = cms.vint32(1, 2, 3, 4, 5, 
        6, 7, 8, 9, 10, 
        11, 12, 13, 14, 15, 
        16, 17, 18, 19, 20, 
        21, 22, 23, 24, 25, 
        26, 27, 28, 29, 30, 
        31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 
        41, 42, 43, 44, 45, 
        46, 47, 48, 49, 50, 
        51, 52, 53, 54),
    orderedFedList = cms.vint32(601, 602, 603, 604, 605, 
        606, 607, 608, 609, 610, 
        611, 612, 613, 614, 615, 
        616, 617, 618, 619, 620, 
        621, 622, 623, 624, 625, 
        626, 627, 628, 629, 630, 
        631, 632, 633, 634, 635, 
        636, 637, 638, 639, 640, 
        641, 642, 643, 644, 645, 
        646, 647, 648, 649, 650, 
        651, 652, 653, 654),
    silentMode = cms.untracked.bool(True),
    srpUnpacking = cms.bool(True),
    syncCheck = cms.bool(True),
    tccUnpacking = cms.bool(True)
)


process.hltEcalPreshowerDigis = cms.EDProducer("ESRawToDigi",
    ESdigiCollection = cms.string(''),
    InstanceES = cms.string(''),
    LookupTable = cms.FileInPath('EventFilter/ESDigiToRaw/data/ES_lookup_table.dat'),
    debugMode = cms.untracked.bool(False),
    sourceTag = cms.InputTag("rawDataCollector")
)


process.hltEcalPreshowerRecHit = cms.EDProducer("ESRecHitProducer",
    ESRecoAlgo = cms.int32(0),
    ESdigiCollection = cms.InputTag("hltEcalPreshowerDigis"),
    ESrechitCollection = cms.string('EcalRecHitsES'),
    algo = cms.string('ESRecHitWorker')
)


process.hltEcalRecHit = cms.EDProducer("EcalRecHitProducer",
    ChannelStatusToBeExcluded = cms.vstring(),
    EBLaserMAX = cms.double(3.0),
    EBLaserMIN = cms.double(0.5),
    EBrechitCollection = cms.string('EcalRecHitsEB'),
    EBuncalibRecHitCollection = cms.InputTag("hltEcalUncalibRecHit","EcalUncalibRecHitsEB"),
    EELaserMAX = cms.double(8.0),
    EELaserMIN = cms.double(0.5),
    EErechitCollection = cms.string('EcalRecHitsEE'),
    EEuncalibRecHitCollection = cms.InputTag("hltEcalUncalibRecHit","EcalUncalibRecHitsEE"),
    algo = cms.string('EcalRecHitWorkerSimple'),
    algoRecover = cms.string('EcalRecHitWorkerRecover'),
    cleaningConfig = cms.PSet(
        cThreshold_barrel = cms.double(4.0),
        cThreshold_double = cms.double(10.0),
        cThreshold_endcap = cms.double(15.0),
        e4e1Threshold_barrel = cms.double(0.08),
        e4e1Threshold_endcap = cms.double(0.3),
        e4e1_a_barrel = cms.double(0.04),
        e4e1_a_endcap = cms.double(0.02),
        e4e1_b_barrel = cms.double(-0.024),
        e4e1_b_endcap = cms.double(-0.0125),
        e6e2thresh = cms.double(0.04),
        ignoreOutOfTimeThresh = cms.double(1000000000.0),
        tightenCrack_e1_double = cms.double(2.0),
        tightenCrack_e1_single = cms.double(2.0),
        tightenCrack_e4e1_single = cms.double(3.0),
        tightenCrack_e6e2_double = cms.double(3.0)
    ),
    dbStatusToBeExcludedEB = cms.vint32(14, 78, 142),
    dbStatusToBeExcludedEE = cms.vint32(14, 78, 142),
    ebDetIdToBeRecovered = cms.InputTag("hltEcalDetIdToBeRecovered","ebDetId"),
    ebFEToBeRecovered = cms.InputTag("hltEcalDetIdToBeRecovered","ebFE"),
    eeDetIdToBeRecovered = cms.InputTag("hltEcalDetIdToBeRecovered","eeDetId"),
    eeFEToBeRecovered = cms.InputTag("hltEcalDetIdToBeRecovered","eeFE"),
    flagsMapDBReco = cms.PSet(
        kDead = cms.vstring('kNoDataNoTP'),
        kGood = cms.vstring('kOk', 
            'kDAC', 
            'kNoLaser', 
            'kNoisy'),
        kNeighboursRecovered = cms.vstring('kFixedG0', 
            'kNonRespondingIsolated', 
            'kDeadVFE'),
        kNoisy = cms.vstring('kNNoisy', 
            'kFixedG6', 
            'kFixedG1'),
        kTowerRecovered = cms.vstring('kDeadFE')
    ),
    killDeadChannels = cms.bool(True),
    laserCorrection = cms.bool(True),
    logWarningEtThreshold_EB_FE = cms.double(50.0),
    logWarningEtThreshold_EE_FE = cms.double(50.0),
    recoverEBFE = cms.bool(True),
    recoverEBIsolatedChannels = cms.bool(False),
    recoverEBVFE = cms.bool(False),
    recoverEEFE = cms.bool(True),
    recoverEEIsolatedChannels = cms.bool(False),
    recoverEEVFE = cms.bool(False),
    singleChannelRecoveryMethod = cms.string('NeuralNetworks'),
    singleChannelRecoveryThreshold = cms.double(8.0),
    skipTimeCalib = cms.bool(True),
    triggerPrimitiveDigiCollection = cms.InputTag("hltEcalDigis","EcalTriggerPrimitives")
)


process.hltEcalUncalibRecHit = cms.EDProducer("EcalUncalibRecHitProducer",
    EBdigiCollection = cms.InputTag("hltEcalDigis","ebDigis"),
    EBhitCollection = cms.string('EcalUncalibRecHitsEB'),
    EEdigiCollection = cms.InputTag("hltEcalDigis","eeDigis"),
    EEhitCollection = cms.string('EcalUncalibRecHitsEE'),
    algo = cms.string('EcalUncalibRecHitWorkerMultiFit'),
    algoPSet = cms.PSet(
        EBamplitudeFitParameters = cms.vdouble(1.138, 1.652),
        EBtimeConstantTerm = cms.double(0.6),
        EBtimeFitLimits_Lower = cms.double(0.2),
        EBtimeFitLimits_Upper = cms.double(1.4),
        EBtimeFitParameters = cms.vdouble(-2.015452, 3.130702, -12.3473, 41.88921, -82.83944, 
            91.01147, -50.35761, 11.05621),
        EBtimeNconst = cms.double(28.5),
        EEamplitudeFitParameters = cms.vdouble(1.89, 1.4),
        EEtimeConstantTerm = cms.double(1.0),
        EEtimeFitLimits_Lower = cms.double(0.2),
        EEtimeFitLimits_Upper = cms.double(1.4),
        EEtimeFitParameters = cms.vdouble(-2.390548, 3.553628, -17.62341, 67.67538, -133.213, 
            140.7432, -75.41106, 16.20277),
        EEtimeNconst = cms.double(31.8),
        EcalPulseShapeParameters = cms.PSet(
            EBCorrNoiseMatrixG01 = cms.vdouble(1.0, 0.73354, 0.64442, 0.58851, 0.55425, 
                0.53082, 0.51916, 0.51097, 0.50732, 0.50409),
            EBCorrNoiseMatrixG06 = cms.vdouble(1.0, 0.70946, 0.58021, 0.49846, 0.45006, 
                0.41366, 0.39699, 0.38478, 0.37847, 0.37055),
            EBCorrNoiseMatrixG12 = cms.vdouble(1.0, 0.71073, 0.55721, 0.46089, 0.40449, 
                0.35931, 0.33924, 0.32439, 0.31581, 0.30481),
            EBPulseShapeCovariance = cms.vdouble(3.001e-06, 1.233e-05, 0.0, -4.416e-06, -4.571e-06, 
                -3.614e-06, -2.636e-06, -1.286e-06, -8.41e-07, -5.296e-07, 
                0.0, 0.0, 1.233e-05, 6.154e-05, 0.0, 
                -2.2e-05, -2.309e-05, -1.838e-05, -1.373e-05, -7.334e-06, 
                -5.088e-06, -3.745e-06, -2.428e-06, 0.0, 0.0, 
                0.0, 0.0, 0.0, 0.0, 0.0, 
                0.0, 0.0, 0.0, 0.0, 0.0, 
                0.0, -4.416e-06, -2.2e-05, 0.0, 8.319e-06, 
                8.545e-06, 6.792e-06, 5.059e-06, 2.678e-06, 1.816e-06, 
                1.223e-06, 8.245e-07, 5.589e-07, -4.571e-06, -2.309e-05, 
                0.0, 8.545e-06, 9.182e-06, 7.219e-06, 5.388e-06, 
                2.853e-06, 1.944e-06, 1.324e-06, 9.083e-07, 6.335e-07, 
                -3.614e-06, -1.838e-05, 0.0, 6.792e-06, 7.219e-06, 
                6.016e-06, 4.437e-06, 2.385e-06, 1.636e-06, 1.118e-06, 
                7.754e-07, 5.556e-07, -2.636e-06, -1.373e-05, 0.0, 
                5.059e-06, 5.388e-06, 4.437e-06, 3.602e-06, 1.917e-06, 
                1.322e-06, 9.079e-07, 6.529e-07, 4.752e-07, -1.286e-06, 
                -7.334e-06, 0.0, 2.678e-06, 2.853e-06, 2.385e-06, 
                1.917e-06, 1.375e-06, 9.1e-07, 6.455e-07, 4.693e-07, 
                3.657e-07, -8.41e-07, -5.088e-06, 0.0, 1.816e-06, 
                1.944e-06, 1.636e-06, 1.322e-06, 9.1e-07, 9.115e-07, 
                6.062e-07, 4.436e-07, 3.422e-07, -5.296e-07, -3.745e-06, 
                0.0, 1.223e-06, 1.324e-06, 1.118e-06, 9.079e-07, 
                6.455e-07, 6.062e-07, 7.217e-07, 4.862e-07, 3.768e-07, 
                0.0, -2.428e-06, 0.0, 8.245e-07, 9.083e-07, 
                7.754e-07, 6.529e-07, 4.693e-07, 4.436e-07, 4.862e-07, 
                6.509e-07, 4.418e-07, 0.0, 0.0, 0.0, 
                5.589e-07, 6.335e-07, 5.556e-07, 4.752e-07, 3.657e-07, 
                3.422e-07, 3.768e-07, 4.418e-07, 6.142e-07),
            EBPulseShapeTemplate = cms.vdouble(0.0113979, 0.758151, 1.0, 0.887744, 0.673548, 
                0.474332, 0.319561, 0.215144, 0.147464, 0.101087, 
                0.0693181, 0.0475044),
            EBdigiCollection = cms.string(''),
            EECorrNoiseMatrixG01 = cms.vdouble(1.0, 0.72698, 0.62048, 0.55691, 0.51848, 
                0.49147, 0.47813, 0.47007, 0.46621, 0.46265),
            EECorrNoiseMatrixG06 = cms.vdouble(1.0, 0.71217, 0.47464, 0.34056, 0.26282, 
                0.20287, 0.17734, 0.16256, 0.15618, 0.14443),
            EECorrNoiseMatrixG12 = cms.vdouble(1.0, 0.71373, 0.44825, 0.30152, 0.21609, 
                0.14786, 0.11772, 0.10165, 0.09465, 0.08098),
            EEPulseShapeCovariance = cms.vdouble(3.941e-05, 3.333e-05, 0.0, -1.449e-05, -1.661e-05, 
                -1.424e-05, -1.183e-05, -6.842e-06, -4.915e-06, -3.411e-06, 
                0.0, 0.0, 3.333e-05, 2.862e-05, 0.0, 
                -1.244e-05, -1.431e-05, -1.233e-05, -1.032e-05, -5.883e-06, 
                -4.154e-06, -2.902e-06, -2.128e-06, 0.0, 0.0, 
                0.0, 0.0, 0.0, 0.0, 0.0, 
                0.0, 0.0, 0.0, 0.0, 0.0, 
                0.0, -1.449e-05, -1.244e-05, 0.0, 5.84e-06, 
                6.649e-06, 5.72e-06, 4.812e-06, 2.708e-06, 1.869e-06, 
                1.33e-06, 9.186e-07, 6.446e-07, -1.661e-05, -1.431e-05, 
                0.0, 6.649e-06, 7.966e-06, 6.898e-06, 5.794e-06, 
                3.157e-06, 2.184e-06, 1.567e-06, 1.084e-06, 7.575e-07, 
                -1.424e-05, -1.233e-05, 0.0, 5.72e-06, 6.898e-06, 
                6.341e-06, 5.347e-06, 2.859e-06, 1.991e-06, 1.431e-06, 
                9.839e-07, 6.886e-07, -1.183e-05, -1.032e-05, 0.0, 
                4.812e-06, 5.794e-06, 5.347e-06, 4.854e-06, 2.628e-06, 
                1.809e-06, 1.289e-06, 9.02e-07, 6.146e-07, -6.842e-06, 
                -5.883e-06, 0.0, 2.708e-06, 3.157e-06, 2.859e-06, 
                2.628e-06, 1.863e-06, 1.296e-06, 8.882e-07, 6.108e-07, 
                4.283e-07, -4.915e-06, -4.154e-06, 0.0, 1.869e-06, 
                2.184e-06, 1.991e-06, 1.809e-06, 1.296e-06, 1.217e-06, 
                8.669e-07, 5.751e-07, 3.882e-07, -3.411e-06, -2.902e-06, 
                0.0, 1.33e-06, 1.567e-06, 1.431e-06, 1.289e-06, 
                8.882e-07, 8.669e-07, 9.522e-07, 6.717e-07, 4.293e-07, 
                0.0, -2.128e-06, 0.0, 9.186e-07, 1.084e-06, 
                9.839e-07, 9.02e-07, 6.108e-07, 5.751e-07, 6.717e-07, 
                7.911e-07, 5.493e-07, 0.0, 0.0, 0.0, 
                6.446e-07, 7.575e-07, 6.886e-07, 6.146e-07, 4.283e-07, 
                3.882e-07, 4.293e-07, 5.493e-07, 7.027e-07),
            EEPulseShapeTemplate = cms.vdouble(0.116442, 0.756246, 1.0, 0.897182, 0.686831, 
                0.491506, 0.344111, 0.245731, 0.174115, 0.123361, 
                0.0874288, 0.061957),
            EEdigiCollection = cms.string(''),
            ESdigiCollection = cms.string(''),
            EcalPreMixStage1 = cms.bool(False),
            EcalPreMixStage2 = cms.bool(False),
            UseLCcorrection = cms.untracked.bool(True)
        ),
        activeBXs = cms.vint32(-5, -4, -3, -2, -1, 
            0, 1, 2, 3, 4),
        addPedestalUncertaintyEB = cms.double(0.0),
        addPedestalUncertaintyEE = cms.double(0.0),
        ampErrorCalculation = cms.bool(False),
        amplitudeThresholdEB = cms.double(10.0),
        amplitudeThresholdEE = cms.double(10.0),
        chi2ThreshEB_ = cms.double(65.0),
        chi2ThreshEE_ = cms.double(50.0),
        doPrefitEB = cms.bool(False),
        doPrefitEE = cms.bool(False),
        dynamicPedestalsEB = cms.bool(False),
        dynamicPedestalsEE = cms.bool(False),
        ebPulseShape = cms.vdouble(5.2e-05, -5.26e-05, 6.66e-05, 0.1168, 0.7575, 
            1.0, 0.8876, 0.6732, 0.4741, 0.3194),
        ebSpikeThreshold = cms.double(1.042),
        eePulseShape = cms.vdouble(5.2e-05, -5.26e-05, 6.66e-05, 0.1168, 0.7575, 
            1.0, 0.8876, 0.6732, 0.4741, 0.3194),
        gainSwitchUseMaxSampleEB = cms.bool(True),
        gainSwitchUseMaxSampleEE = cms.bool(False),
        kPoorRecoFlagEB = cms.bool(True),
        kPoorRecoFlagEE = cms.bool(False),
        mitigateBadSamplesEB = cms.bool(False),
        mitigateBadSamplesEE = cms.bool(False),
        outOfTimeThresholdGain12mEB = cms.double(5.0),
        outOfTimeThresholdGain12mEE = cms.double(1000.0),
        outOfTimeThresholdGain12pEB = cms.double(5.0),
        outOfTimeThresholdGain12pEE = cms.double(1000.0),
        outOfTimeThresholdGain61mEB = cms.double(5.0),
        outOfTimeThresholdGain61mEE = cms.double(1000.0),
        outOfTimeThresholdGain61pEB = cms.double(5.0),
        outOfTimeThresholdGain61pEE = cms.double(1000.0),
        prefitMaxChiSqEB = cms.double(25.0),
        prefitMaxChiSqEE = cms.double(10.0),
        selectiveBadSampleCriteriaEB = cms.bool(False),
        selectiveBadSampleCriteriaEE = cms.bool(False),
        simplifiedNoiseModelForGainSwitch = cms.bool(True),
        timealgo = cms.string('None'),
        useLumiInfoRunHeader = cms.bool(False)
    )
)


process.hltEgammaCandidates = cms.EDProducer("EgammaHLTRecoEcalCandidateProducers",
    recoEcalCandidateCollection = cms.string(''),
    scHybridBarrelProducer = cms.InputTag("hltParticleFlowSuperClusterECALL1Seeded","hltParticleFlowSuperClusterECALBarrel"),
    scIslandEndcapProducer = cms.InputTag("hltParticleFlowSuperClusterECALL1Seeded","hltParticleFlowSuperClusterECALEndcapWithPreshower")
)


process.hltEgammaCkfTrackCandidatesForGSF = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClusters"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTPSetTrajectoryBuilderForGsfElectrons')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(1000000),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltEgammaElectronPixelSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.hltEgammaClusterShape = cms.EDProducer("EgammaHLTClusterShapeProducer",
    ecalRechitEB = cms.InputTag("hltRechitInRegionsECAL","EcalRecHitsEB"),
    ecalRechitEE = cms.InputTag("hltRechitInRegionsECAL","EcalRecHitsEE"),
    isIeta = cms.bool(True),
    recoEcalCandidateProducer = cms.InputTag("hltEgammaCandidates")
)


process.hltEgammaEcalPFClusterIso = cms.EDProducer("EgammaHLTEcalPFClusterIsolationProducer",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    doRhoCorrection = cms.bool(False),
    drMax = cms.double(0.3),
    drVetoBarrel = cms.double(0.0),
    drVetoEndcap = cms.double(0.0),
    effectiveAreas = cms.vdouble(0.29, 0.21),
    energyBarrel = cms.double(0.0),
    energyEndcap = cms.double(0.0),
    etaStripBarrel = cms.double(0.0),
    etaStripEndcap = cms.double(0.0),
    pfClusterProducer = cms.InputTag("hltParticleFlowClusterECALL1Seeded"),
    recoEcalCandidateProducer = cms.InputTag("hltEgammaCandidates"),
    rhoMax = cms.double(99999999.0),
    rhoProducer = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    rhoScale = cms.double(1.0)
)


process.hltEgammaEleGsfTrackIso = cms.EDProducer("EgammaHLTElectronTrackIsolationProducers",
    beamSpotProducer = cms.InputTag("hltOnlineBeamSpot"),
    egTrkIsoConeSize = cms.double(0.2),
    egTrkIsoPtMin = cms.double(1.0),
    egTrkIsoRSpan = cms.double(999999.0),
    egTrkIsoStripBarrel = cms.double(0.01),
    egTrkIsoStripEndcap = cms.double(0.01),
    egTrkIsoVetoConeSizeBarrel = cms.double(0.03),
    egTrkIsoVetoConeSizeEndcap = cms.double(0.03),
    egTrkIsoZSpan = cms.double(0.15),
    electronProducer = cms.InputTag("hltEgammaGsfElectrons"),
    recoEcalCandidateProducer = cms.InputTag("hltEgammaCandidates"),
    trackProducer = cms.InputTag("hltIter2MergedForElectrons"),
    useGsfTrack = cms.bool(True),
    useSCRefs = cms.bool(True)
)


process.hltEgammaElectronPixelSeeds = cms.EDProducer("ElectronNHitSeedProducer",
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    initialSeeds = cms.InputTag("hltElePixelSeedsCombined"),
    matcherConfig = cms.PSet(
        detLayerGeom = cms.string('hltESPGlobalDetLayerGeometry'),
        matchingCuts = cms.VPSet(cms.PSet(
            dPhiMaxHighEt = cms.vdouble(0.05),
            dPhiMaxHighEtThres = cms.vdouble(20.0),
            dPhiMaxLowEtGrad = cms.vdouble(-0.002),
            dRZMaxHighEt = cms.vdouble(9999.0),
            dRZMaxHighEtThres = cms.vdouble(0.0),
            dRZMaxLowEtGrad = cms.vdouble(0.0),
            version = cms.int32(2)
        ), 
            cms.PSet(
                dPhiMaxHighEt = cms.vdouble(0.003),
                dPhiMaxHighEtThres = cms.vdouble(0.0),
                dPhiMaxLowEtGrad = cms.vdouble(0.0),
                dRZMaxHighEt = cms.vdouble(0.05),
                dRZMaxHighEtThres = cms.vdouble(30.0),
                dRZMaxLowEtGrad = cms.vdouble(-0.002),
                etaBins = cms.vdouble(),
                version = cms.int32(2)
            ), 
            cms.PSet(
                dPhiMaxHighEt = cms.vdouble(0.003),
                dPhiMaxHighEtThres = cms.vdouble(0.0),
                dPhiMaxLowEtGrad = cms.vdouble(0.0),
                dRZMaxHighEt = cms.vdouble(0.05),
                dRZMaxHighEtThres = cms.vdouble(30.0),
                dRZMaxLowEtGrad = cms.vdouble(-0.002),
                etaBins = cms.vdouble(),
                version = cms.int32(2)
            )),
        minNrHits = cms.vuint32(2, 3),
        minNrHitsValidLayerBins = cms.vint32(4),
        navSchool = cms.string('SimpleNavigationSchool'),
        useRecoVertex = cms.bool(False)
    ),
    measTkEvt = cms.InputTag("hltSiStripClusters"),
    superClusters = cms.VInputTag("hltEgammaSuperClustersToPixelMatch"),
    vertices = cms.InputTag("")
)


process.hltEgammaGsfElectrons = cms.EDProducer("EgammaHLTPixelMatchElectronProducers",
    BSProducer = cms.InputTag("hltOnlineBeamSpot"),
    GsfTrackProducer = cms.InputTag("hltEgammaGsfTracks"),
    TrackProducer = cms.InputTag(""),
    UseGsfTracks = cms.bool(True)
)


process.hltEgammaGsfTrackVars = cms.EDProducer("EgammaHLTGsfTrackVarProducer",
    beamSpotProducer = cms.InputTag("hltOnlineBeamSpot"),
    inputCollection = cms.InputTag("hltEgammaGsfTracks"),
    lowerTrackNrToRemoveCut = cms.int32(-1),
    recoEcalCandidateProducer = cms.InputTag("hltEgammaCandidates"),
    upperTrackNrToRemoveCut = cms.int32(9999)
)


process.hltEgammaGsfTracks = cms.EDProducer("GsfTrackProducer",
    AlgorithmName = cms.string('gsf'),
    Fitter = cms.string('hltESPGsfElectronFittingSmoother'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string('hltESPMeasurementTracker'),
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClusters"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('hltESPFwdElectronPropagator'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(True),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    producer = cms.string(''),
    src = cms.InputTag("hltEgammaCkfTrackCandidatesForGSF"),
    useHitsSplitting = cms.bool(False)
)


process.hltEgammaHcalPFClusterIso = cms.EDProducer("EgammaHLTHcalPFClusterIsolationProducer",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    doRhoCorrection = cms.bool(False),
    drMax = cms.double(0.3),
    drVetoBarrel = cms.double(0.0),
    drVetoEndcap = cms.double(0.0),
    effectiveAreas = cms.vdouble(0.2, 0.25),
    energyBarrel = cms.double(0.0),
    energyEndcap = cms.double(0.0),
    etaStripBarrel = cms.double(0.0),
    etaStripEndcap = cms.double(0.0),
    pfClusterProducerHCAL = cms.InputTag("hltParticleFlowClusterHCALForEgamma"),
    pfClusterProducerHFEM = cms.InputTag(""),
    pfClusterProducerHFHAD = cms.InputTag(""),
    recoEcalCandidateProducer = cms.InputTag("hltEgammaCandidates"),
    rhoMax = cms.double(99999999.0),
    rhoProducer = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    rhoScale = cms.double(1.0),
    useEt = cms.bool(True),
    useHF = cms.bool(False)
)


process.hltEgammaHoverE = cms.EDProducer("EgammaHLTBcHcalIsolationProducersRegional",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    caloTowerProducer = cms.InputTag("hltTowerMakerMethod2L1EGSeeded"),
    depth = cms.int32(-1),
    doEtSum = cms.bool(False),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.105, 0.17),
    etMin = cms.double(0.0),
    innerCone = cms.double(0.0),
    outerCone = cms.double(0.14),
    recoEcalCandidateProducer = cms.InputTag("hltEgammaCandidates"),
    rhoMax = cms.double(99999999.0),
    rhoProducer = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    rhoScale = cms.double(1.0),
    useSingleTower = cms.bool(False)
)


process.hltEgammaPixelMatchVars = cms.EDProducer("EgammaHLTPixelMatchVarProducer",
    dPhi1SParams = cms.PSet(
        bins = cms.VPSet(cms.PSet(
            binType = cms.string('AbsEtaClus'),
            funcParams = cms.vdouble(0.00112, 0.000752, -0.00122, 0.00109),
            funcType = cms.string('TF1:=pol3'),
            xMax = cms.double(1.5),
            xMin = cms.double(0.0),
            yMax = cms.int32(1),
            yMin = cms.int32(1)
        ), 
            cms.PSet(
                binType = cms.string('AbsEtaClus'),
                funcParams = cms.vdouble(0.00222, 0.000196, -0.000203, 0.000447),
                funcType = cms.string('TF1:=pol3'),
                xMax = cms.double(1.5),
                xMin = cms.double(0.0),
                yMax = cms.int32(2),
                yMin = cms.int32(2)
            ), 
            cms.PSet(
                binType = cms.string('AbsEtaClus'),
                funcParams = cms.vdouble(0.00236, 0.000691, 0.000199, 0.000416),
                funcType = cms.string('TF1:=pol3'),
                xMax = cms.double(1.5),
                xMin = cms.double(0.0),
                yMax = cms.int32(99999),
                yMin = cms.int32(3)
            ), 
            cms.PSet(
                binType = cms.string('AbsEtaClus'),
                funcParams = cms.vdouble(0.00823, -0.0029),
                funcType = cms.string('TF1:=pol1'),
                xMax = cms.double(2.0),
                xMin = cms.double(1.5),
                yMax = cms.int32(1),
                yMin = cms.int32(1)
            ), 
            cms.PSet(
                binType = cms.string('AbsEtaClus'),
                funcParams = cms.vdouble(0.00282),
                funcType = cms.string('TF1:=pol0'),
                xMax = cms.double(3.0),
                xMin = cms.double(2.0),
                yMax = cms.int32(1),
                yMin = cms.int32(1)
            ), 
            cms.PSet(
                binType = cms.string('AbsEtaClus'),
                funcParams = cms.vdouble(0.010838, -0.00345),
                funcType = cms.string('TF1:=pol1'),
                xMax = cms.double(2.0),
                xMin = cms.double(1.5),
                yMax = cms.int32(2),
                yMin = cms.int32(2)
            ), 
            cms.PSet(
                binType = cms.string('AbsEtaClus'),
                funcParams = cms.vdouble(0.0043),
                funcType = cms.string('TF1:=pol0'),
                xMax = cms.double(3.0),
                xMin = cms.double(2.0),
                yMax = cms.int32(2),
                yMin = cms.int32(2)
            ), 
            cms.PSet(
                binType = cms.string('AbsEtaClus'),
                funcParams = cms.vdouble(0.0208, -0.0125, 0.00231),
                funcType = cms.string('TF1:=pol2'),
                xMax = cms.double(3.0),
                xMin = cms.double(1.5),
                yMax = cms.int32(99999),
                yMin = cms.int32(3)
            ))
    ),
    dPhi2SParams = cms.PSet(
        bins = cms.VPSet(cms.PSet(
            binType = cms.string('AbsEtaClus'),
            funcParams = cms.vdouble(0.00013),
            funcType = cms.string('TF1:=pol0'),
            xMax = cms.double(1.6),
            xMin = cms.double(0.0),
            yMax = cms.int32(99999),
            yMin = cms.int32(1)
        ), 
            cms.PSet(
                binType = cms.string('AbsEtaClus'),
                funcParams = cms.vdouble(0.00045, -0.000199),
                funcType = cms.string('TF1:=pol1'),
                xMax = cms.double(1.9),
                xMin = cms.double(1.5),
                yMax = cms.int32(99999),
                yMin = cms.int32(1)
            ), 
            cms.PSet(
                binType = cms.string('AbsEtaClus'),
                funcParams = cms.vdouble(7.94e-05),
                funcType = cms.string('TF1:=pol0'),
                xMax = cms.double(3.0),
                xMin = cms.double(1.9),
                yMax = cms.int32(99999),
                yMin = cms.int32(1)
            ))
    ),
    dRZ2SParams = cms.PSet(
        bins = cms.VPSet(cms.PSet(
            binType = cms.string('AbsEtaClus'),
            funcParams = cms.vdouble(0.00299, 0.000299, -4.13e-06, 0.00191),
            funcType = cms.string('TF1:=pol3'),
            xMax = cms.double(1.5),
            xMin = cms.double(0.0),
            yMax = cms.int32(99999),
            yMin = cms.int32(1)
        ), 
            cms.PSet(
                binType = cms.string('AbsEtaClus'),
                funcParams = cms.vdouble(0.248, -0.329, 0.148, -0.0222),
                funcType = cms.string('TF1:=pol3'),
                xMax = cms.double(3.0),
                xMin = cms.double(1.5),
                yMax = cms.int32(99999),
                yMin = cms.int32(1)
            ))
    ),
    pixelSeedsProducer = cms.InputTag("hltEgammaElectronPixelSeeds"),
    productsToWrite = cms.int32(0),
    recoEcalCandidateProducer = cms.InputTag("hltEgammaCandidates")
)


process.hltEgammaSuperClustersToPixelMatch = cms.EDProducer("EgammaHLTFilteredSuperClusterProducer",
    cands = cms.InputTag("hltEgammaCandidates"),
    cuts = cms.VPSet(cms.PSet(
        barrelCut = cms.PSet(
            cutOverE = cms.double(0.2),
            useEt = cms.bool(False)
        ),
        endcapCut = cms.PSet(
            cutOverE = cms.double(0.2),
            useEt = cms.bool(False)
        ),
        var = cms.InputTag("hltEgammaHoverE")
    ))
)


process.hltEle15JetCollectionsForLeptonPlusPFJets = cms.EDProducer("HLTPFJetsCleanedFromLeadingLeptons",
    jets = cms.InputTag("hltAK4PFJetsCorrected"),
    leptons = cms.InputTag("hltEle15CaloIdLTrackIdLIsoVLJet30TrackIsoFilter"),
    minDeltaR = cms.double(1.0),
    numLeptons = cms.uint32(1)
)


process.hltEle20JetCollectionsForLeptonPlusPFJets = cms.EDProducer("HLTPFJetsCleanedFromLeadingLeptons",
    jets = cms.InputTag("hltAK4PFJetsCorrected"),
    leptons = cms.InputTag("hltEle20erJetC15WPTightGsfTrackIsoFilter"),
    minDeltaR = cms.double(0.4),
    numLeptons = cms.uint32(1)
)


process.hltElePixelHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("hltPixelLayerPairs"),
    trackingRegions = cms.InputTag("hltEleSeedsTrackingRegions")
)


process.hltElePixelHitDoubletsForTriplets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0, 1),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("hltPixelLayerTriplets"),
    trackingRegions = cms.InputTag("hltEleSeedsTrackingRegions")
)


process.hltElePixelHitTriplets = cms.EDProducer("CAHitTripletEDProducer",
    CAHardPtCut = cms.double(0.3),
    CAPhiCut = cms.double(0.1),
    CAThetaCut = cms.double(0.004),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("hltElePixelHitDoubletsForTriplets"),
    extraHitRPhitolerance = cms.double(0.032),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.8),
        pt2 = cms.double(8.0),
        value1 = cms.double(100.0),
        value2 = cms.double(6.0)
    ),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltElePixelHitDoubletsForTriplets__HLT', 
        'IntermediateHitDoublets_hltElePixelHitDoubletsForTriplets__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltElePixelSeedsCombined = cms.EDProducer("SeedCombiner",
    seedCollections = cms.VInputTag("hltElePixelSeedsDoublets", "hltElePixelSeedsTriplets")
)


process.hltElePixelSeedsDoublets = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltElePixelHitDoublets__HLT', 
        'IntermediateHitDoublets_hltElePixelHitDoublets__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltElePixelHitDoublets")
)


process.hltElePixelSeedsTriplets = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltElePixelHitTriplets__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltElePixelHitTriplets")
)


process.hltEleSeedsTrackingRegions = cms.EDProducer("TrackingRegionsFromSuperClustersEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        defaultZ = cms.double(0.0),
        deltaEtaRegion = cms.double(0.1),
        deltaPhiRegion = cms.double(0.4),
        measurementTrackerEvent = cms.InputTag(""),
        minBSDeltaZ = cms.double(0.0),
        nrSigmaForBSDeltaZ = cms.double(4.0),
        originHalfLength = cms.double(12.5),
        originRadius = cms.double(0.2),
        precise = cms.bool(True),
        ptMin = cms.double(1.5),
        superClusters = cms.VInputTag("hltEgammaSuperClustersToPixelMatch"),
        useZInBeamspot = cms.bool(False),
        useZInVertex = cms.bool(False),
        vertices = cms.InputTag(""),
        whereToUseMeasTracker = cms.string('kNever')
    )
)


process.hltElectronsVertex = cms.EDProducer("VertexFromTrackProducer",
    beamSpotLabel = cms.InputTag("hltOnlineBeamSpot"),
    isRecoCandidate = cms.bool(True),
    trackLabel = cms.InputTag("hltEgammaGsfElectrons"),
    triggerFilterElectronsSrc = cms.InputTag("None"),
    triggerFilterMuonsSrc = cms.InputTag("None"),
    useBeamSpot = cms.bool(True),
    useTriggerFilterElectrons = cms.bool(False),
    useTriggerFilterMuons = cms.bool(False),
    useVertex = cms.bool(False),
    verbose = cms.untracked.bool(False),
    vertexLabel = cms.InputTag("None")
)


process.hltFEDSelector = cms.EDProducer("EvFFEDSelector",
    fedList = cms.vuint32(1023, 1024),
    inputTag = cms.InputTag("rawDataCollector")
)


process.hltFEDSelectorLumiPixels = cms.EDProducer("EvFFEDSelector",
    fedList = cms.vuint32(1200, 1201, 1202, 1203, 1204, 
        1205, 1206, 1207, 1208, 1209, 
        1212, 1213, 1214, 1215, 1216, 
        1217, 1218, 1219, 1220, 1221, 
        1224, 1225, 1226, 1227, 1228, 
        1229, 1230, 1231, 1232, 1233, 
        1236, 1237, 1238, 1239, 1240, 
        1241, 1242, 1243, 1244, 1245, 
        1248, 1249, 1250, 1251, 1252, 
        1253, 1254, 1255, 1256, 1257, 
        1260, 1261, 1262, 1263, 1264, 
        1265, 1266, 1267, 1268, 1269, 
        1272, 1273, 1274, 1275, 1276, 
        1277, 1278, 1279, 1280, 1281, 
        1284, 1285, 1286, 1287, 1288, 
        1289, 1290, 1291, 1292, 1293, 
        1296, 1297, 1298, 1299, 1300, 
        1301, 1302, 1308, 1309, 1310, 
        1311, 1312, 1313, 1314, 1320, 
        1321, 1322, 1323, 1324, 1325, 
        1326, 1332, 1333, 1334, 1335, 
        1336, 1337, 1338),
    inputTag = cms.InputTag("rawDataCollector")
)


process.hltFixedGridRhoFastjetAll = cms.EDProducer("FixedGridRhoProducerFastjet",
    gridSpacing = cms.double(0.55),
    maxRapidity = cms.double(5.0),
    pfCandidatesTag = cms.InputTag("hltParticleFlow")
)


process.hltFixedGridRhoFastjetAllCalo = cms.EDProducer("FixedGridRhoProducerFastjet",
    gridSpacing = cms.double(0.55),
    maxRapidity = cms.double(5.0),
    pfCandidatesTag = cms.InputTag("hltTowerMakerForAll")
)


process.hltFixedGridRhoFastjetAllCaloForMuons = cms.EDProducer("FixedGridRhoProducerFastjet",
    gridSpacing = cms.double(0.55),
    maxRapidity = cms.double(2.5),
    pfCandidatesTag = cms.InputTag("hltTowerMakerForAll")
)


process.hltFullCandsForHighPtTrigger = cms.EDProducer("ConcreteChargedCandidateProducer",
    particleType = cms.string('pi+'),
    src = cms.InputTag("hltGoodHighPurityFullTracksForHighPt")
)


process.hltFullCandsForRefPP = cms.EDProducer("ConcreteChargedCandidateProducer",
    particleType = cms.string('pi+'),
    src = cms.InputTag("hltFullIterativeTrackingMergedForRefPP")
)


process.hltFullIter0CkfTrackCandidatesForRefPP = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClustersFullForRefPP"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTPSetInitialStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltFullIter0PixelSeedsForRefPP"),
    useHitsSplitting = cms.bool(True)
)


process.hltFullIter0CkfTrackCandidatesPreSplittingForRefPP = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClustersForRefPP"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTPSetInitialStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltFullIter0PixelSeedsPreSplittingForRefPP"),
    useHitsSplitting = cms.bool(True)
)


process.hltFullIter0CtfWithMaterialTracksForRefPP = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('initialStep'),
    Fitter = cms.string('hltESPFlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag(""),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltFullIter0CkfTrackCandidatesForRefPP"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltFullIter0CtfWithMaterialTracksPreSplittingForRefPP = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('initialStep'),
    Fitter = cms.string('hltESPFlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag(""),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltFullIter0CkfTrackCandidatesPreSplittingForRefPP"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltFullIter0HighPurityTracksForRefPP = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltFullIter0TrackMVAClassifierForRefPP","MVAValues"),
    originalQualVals = cms.InputTag("hltFullIter0TrackMVAClassifierForRefPP","QualityMasks"),
    originalSource = cms.InputTag("hltFullIter0CtfWithMaterialTracksForRefPP")
)


process.hltFullIter0PixelClusterCheckForRefPP = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClustersForRefPP"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltFullIter0PixelClusterCheckPreSplittingForRefPP = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripRawToClustersFacility"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClustersForRefPP"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltFullIter0PixelHitDoubletsForRefPP = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltFullIter0PixelClusterCheckForRefPP"),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltFullIter0PixelQuadrupletsForRefPP"),
    trackingRegions = cms.InputTag("hltFullIter0PixelTrackingRegions")
)


process.hltFullIter0PixelHitDoubletsPreSplittingForRefPP = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltFullIter0PixelClusterCheckPreSplittingForRefPP"),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltFullIter0PixelQuadrupletsPreSplittingForRefPP"),
    trackingRegions = cms.InputTag("hltFullIter0PixelTrackingRegionsPreSplitting")
)


process.hltFullIter0PixelHitQuadrupletsForRefPP = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0.0),
    CAOnlyOneLastHitPerLayerFilter = cms.bool(False),
    CAPhiCut = cms.double(0.2),
    CAThetaCut = cms.double(0.0012),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hltFullIter0PixelHitDoubletsForRefPP"),
    extraHitRPhitolerance = cms.double(0.032),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.7),
        pt2 = cms.double(2.0),
        value1 = cms.double(200.0),
        value2 = cms.double(50.0)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltFullIter0PixelHitDoubletsForRefPP__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltFullIter0PixelHitQuadrupletsPreSplittingForRefPP = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0.0),
    CAOnlyOneLastHitPerLayerFilter = cms.bool(False),
    CAPhiCut = cms.double(0.2),
    CAThetaCut = cms.double(0.0012),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hltFullIter0PixelHitDoubletsPreSplittingForRefPP"),
    extraHitRPhitolerance = cms.double(0.032),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.7),
        pt2 = cms.double(2.0),
        value1 = cms.double(200.0),
        value2 = cms.double(50.0)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltFullIter0PixelHitDoubletsPreSplittingForRefPP__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltFullIter0PixelQuadrupletsForRefPP = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3+BPix4', 
        'BPix1+BPix2+BPix3+FPix1_pos', 
        'BPix1+BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos+FPix2_pos', 
        'BPix1+BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos+FPix3_pos', 
        'BPix1+FPix1_neg+FPix2_neg+FPix3_neg')
)


process.hltFullIter0PixelQuadrupletsPreSplittingForRefPP = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3+BPix4', 
        'BPix1+BPix2+BPix3+FPix1_pos', 
        'BPix1+BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos+FPix2_pos', 
        'BPix1+BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos+FPix3_pos', 
        'BPix1+FPix1_neg+FPix2_neg+FPix3_neg')
)


process.hltFullIter0PixelSeedsForRefPP = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(False),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False)
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter0PixelHitQuadrupletsForRefPP__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltFullIter0PixelHitQuadrupletsForRefPP")
)


process.hltFullIter0PixelSeedsPreSplittingForRefPP = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(False),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False)
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter0PixelHitQuadrupletsPreSplittingForRefPP__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltFullIter0PixelHitQuadrupletsPreSplittingForRefPP")
)


process.hltFullIter0PixelTrackingRegions = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        nSigmaZ = cms.double(4.0),
        originHalfLength = cms.double(0.0),
        originRadius = cms.double(0.02),
        precise = cms.bool(True),
        ptMin = cms.double(0.5),
        useMultipleScattering = cms.bool(False)
    )
)


process.hltFullIter0PixelTrackingRegionsPreSplitting = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        nSigmaZ = cms.double(4.0),
        originHalfLength = cms.double(0.0),
        originRadius = cms.double(0.02),
        precise = cms.bool(True),
        ptMin = cms.double(0.5),
        useMultipleScattering = cms.bool(False)
    )
)


process.hltFullIter0PrimaryVerticesForRefPP = cms.EDProducer("PrimaryVertexProducer",
    TkClusParameters = cms.PSet(
        TkDAClusParameters = cms.PSet(
            Tmin = cms.double(2.4),
            Tpurge = cms.double(2.0),
            Tstop = cms.double(0.5),
            coolingFactor = cms.double(0.6),
            d0CutOff = cms.double(3.0),
            dzCutOff = cms.double(4.0),
            uniquetrkweight = cms.double(0.9),
            vertexSize = cms.double(0.01),
            zmerge = cms.double(0.01)
        ),
        algorithm = cms.string('DA_vect')
    ),
    TkFilterParameters = cms.PSet(
        algorithm = cms.string('filter'),
        maxD0Significance = cms.double(5.0),
        maxEta = cms.double(2.4),
        maxNormalizedChi2 = cms.double(20.0),
        minPixelLayersWithHits = cms.int32(2),
        minPt = cms.double(0.0),
        minSiliconLayersWithHits = cms.int32(5),
        trackQuality = cms.string('any')
    ),
    TrackLabel = cms.InputTag("hltFullIter0CtfWithMaterialTracksForRefPP"),
    beamSpotLabel = cms.InputTag("hltOnlineBeamSpot"),
    verbose = cms.untracked.bool(False),
    vertexCollections = cms.VPSet(cms.PSet(
        algorithm = cms.string('AdaptiveVertexFitter'),
        chi2cutoff = cms.double(2.5),
        label = cms.string(''),
        maxDistanceToBeam = cms.double(1.0),
        minNdof = cms.double(0.0),
        useBeamConstraint = cms.bool(False)
    ))
)


process.hltFullIter0PrimaryVerticesPreSplittingForRefPP = cms.EDProducer("PrimaryVertexProducer",
    TkClusParameters = cms.PSet(
        TkDAClusParameters = cms.PSet(
            Tmin = cms.double(2.4),
            Tpurge = cms.double(2.0),
            Tstop = cms.double(0.5),
            coolingFactor = cms.double(0.6),
            d0CutOff = cms.double(3.0),
            dzCutOff = cms.double(4.0),
            uniquetrkweight = cms.double(0.9),
            vertexSize = cms.double(0.01),
            zmerge = cms.double(0.01)
        ),
        algorithm = cms.string('DA_vect')
    ),
    TkFilterParameters = cms.PSet(
        algorithm = cms.string('filter'),
        maxD0Significance = cms.double(5.0),
        maxEta = cms.double(2.4),
        maxNormalizedChi2 = cms.double(20.0),
        minPixelLayersWithHits = cms.int32(2),
        minPt = cms.double(0.0),
        minSiliconLayersWithHits = cms.int32(5),
        trackQuality = cms.string('any')
    ),
    TrackLabel = cms.InputTag("hltFullIter0CtfWithMaterialTracksPreSplittingForRefPP"),
    beamSpotLabel = cms.InputTag("hltOnlineBeamSpot"),
    verbose = cms.untracked.bool(False),
    vertexCollections = cms.VPSet(cms.PSet(
        algorithm = cms.string('AdaptiveVertexFitter'),
        chi2cutoff = cms.double(2.5),
        label = cms.string(''),
        maxDistanceToBeam = cms.double(1.0),
        minNdof = cms.double(0.0),
        useBeamConstraint = cms.bool(False)
    ))
)


process.hltFullIter0TrackMVAClassifierForRefPP = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorInitialStep_Phase1')
    ),
    qualityCuts = cms.vdouble(-0.95, -0.85, -0.75),
    src = cms.InputTag("hltFullIter0CtfWithMaterialTracksForRefPP"),
    vertices = cms.InputTag("hltFullIter0PrimaryVerticesForRefPP")
)


process.hltFullIter10CkfTrackCandidatesForRefPP = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClustersFullForRefPP"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTPSetJetCoreStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(10000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltFullIter10JetCoreSeedsForRefPP"),
    useHitsSplitting = cms.bool(True)
)


process.hltFullIter10CtfWithMaterialTracksForRefPP = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('jetCoreRegionalStep'),
    Fitter = cms.string('hltESPFlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag(""),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltFullIter10CkfTrackCandidatesForRefPP"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltFullIter10JetCoreClusterCheckForRefPP = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClustersAfterSplittingForRefPP"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltFullIter10JetCoreHitDoubletsForRefPP = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltFullIter10JetCoreClusterCheckForRefPP"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("hltFullIter10JetCoreLayersForRefPP"),
    trackingRegions = cms.InputTag("hltFullIter10JetCoreTrackingRegionsForRefPP")
)


process.hltFullIter10JetCoreLayersForRefPP = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsAfterSplittingForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        hitErrorRPhi = cms.double(0.0027),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsAfterSplittingForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
        ),
        matchedRecHits = cms.InputTag("hltSiStripMatchedRecHitsFull","matchedRecHit")
    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2', 
        'BPix1+BPix3', 
        'BPix1+BPix4', 
        'BPix2+BPix3', 
        'BPix2+BPix4', 
        'BPix3+BPix4', 
        'BPix1+FPix1_pos', 
        'BPix1+FPix1_neg', 
        'BPix2+FPix1_pos', 
        'BPix2+FPix1_neg', 
        'FPix1_pos+FPix2_pos', 
        'FPix1_neg+FPix2_neg', 
        'FPix1_pos+FPix3_pos', 
        'FPix1_neg+FPix3_neg', 
        'FPix2_pos+FPix3_pos', 
        'FPix2_neg+FPix3_neg', 
        'BPix4+TIB1', 
        'BPix4+TIB2')
)


process.hltFullIter10JetCoreSeedsForRefPP = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(True),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter10JetCoreHitDoubletsForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter10JetCoreHitDoubletsForRefPP__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltFullIter10JetCoreHitDoubletsForRefPP")
)


process.hltFullIter10JetCoreTrackingRegionsForRefPP = cms.EDProducer("TauRegionalPixelSeedTrackingRegionEDProducer",
    RegionPSet = cms.PSet(
        JetSrc = cms.InputTag("hltJetsForCoreTracking"),
        deltaEtaRegion = cms.double(0.2),
        deltaPhiRegion = cms.double(0.2),
        howToUseMeasurementTracker = cms.string('never'),
        measurementTrackerName = cms.InputTag(""),
        originHalfLength = cms.double(0.2),
        originRadius = cms.double(0.2),
        ptMin = cms.double(10.0),
        searchOpt = cms.bool(False),
        vertexSrc = cms.InputTag("hltFirstStepGoodPrimaryVerticesForRefPP")
    )
)


process.hltFullIter10TrackMVAClassifierForRefPP = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorJetCoreRegionalStep_Phase1')
    ),
    qualityCuts = cms.vdouble(-0.2, 0.0, 0.4),
    src = cms.InputTag("hltFullIter10CtfWithMaterialTracksForRefPP"),
    vertices = cms.InputTag("hltFullIter0PrimaryVerticesForRefPP")
)


process.hltFullIter1CkfTrackCandidatesForRefPP = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltFullIter1MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTPSetLowPtQuadStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('hltESPLowPtQuadStepTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltFullIter1PixelSeedsForRefPP"),
    useHitsSplitting = cms.bool(True)
)


process.hltFullIter1ClustersRefRemovalForRefPP = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag(""),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClustersForRefPP"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltFullIter0HighPurityTracksForRefPP")
)


process.hltFullIter1CtfWithMaterialTracksForRefPP = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('lowPtQuadStep'),
    Fitter = cms.string('hltESPFlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltFullIter1MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltFullIter1CkfTrackCandidatesForRefPP"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltFullIter1HighPurityTracksForRefPP = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltFullIter1TrackMVAClassifierForRefPP","MVAValues"),
    originalQualVals = cms.InputTag("hltFullIter1TrackMVAClassifierForRefPP","QualityMasks"),
    originalSource = cms.InputTag("hltFullIter1CtfWithMaterialTracksForRefPP")
)


process.hltFullIter1MaskedMeasurementTrackerEventForRefPP = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltFullIter1ClustersRefRemovalForRefPP"),
    src = cms.InputTag("hltSiStripClustersFullForRefPP")
)


process.hltFullIter1PixelClusterCheckForRefPP = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClustersForRefPP"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltFullIter1PixelHitDoubletsForRefPP = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltFullIter1PixelClusterCheckForRefPP"),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltFullIter1PixelQuadrupletsForRefPP"),
    trackingRegions = cms.InputTag("hltFullIter1PixelTrackingRegions")
)


process.hltFullIter1PixelHitQuadrupletsForRefPP = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0.0),
    CAOnlyOneLastHitPerLayerFilter = cms.bool(False),
    CAPhiCut = cms.double(0.3),
    CAThetaCut = cms.double(0.0017),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hltFullIter1PixelHitDoubletsForRefPP"),
    extraHitRPhitolerance = cms.double(0.032),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.7),
        pt2 = cms.double(2.0),
        value1 = cms.double(1000.0),
        value2 = cms.double(150.0)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltFullIter1PixelHitDoubletsForRefPP__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltFullIter1PixelQuadrupletsForRefPP = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        skipClusters = cms.InputTag("hltFullIter1ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltFullIter1ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3+BPix4', 
        'BPix1+BPix2+BPix3+FPix1_pos', 
        'BPix1+BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos+FPix2_pos', 
        'BPix1+BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos+FPix3_pos', 
        'BPix1+FPix1_neg+FPix2_neg+FPix3_neg')
)


process.hltFullIter1PixelSeedsForRefPP = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter1PixelHitQuadrupletsForRefPP__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltFullIter1PixelHitQuadrupletsForRefPP")
)


process.hltFullIter1PixelTrackingRegions = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        nSigmaZ = cms.double(4.0),
        originHalfLength = cms.double(0.0),
        originRadius = cms.double(0.02),
        precise = cms.bool(True),
        ptMin = cms.double(0.15),
        useMultipleScattering = cms.bool(False)
    )
)


process.hltFullIter1TrackMVAClassifierForRefPP = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorLowPtQuadStep_Phase1')
    ),
    qualityCuts = cms.vdouble(-0.65, -0.35, -0.15),
    src = cms.InputTag("hltFullIter1CtfWithMaterialTracksForRefPP"),
    vertices = cms.InputTag("hltFullIter0PrimaryVerticesForRefPP")
)


process.hltFullIter2CkfTrackCandidatesForRefPP = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltFullIter2MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTPSetHighPtTripletStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltFullIter2PixelSeedsForRefPP"),
    useHitsSplitting = cms.bool(True)
)


process.hltFullIter2ClustersRefRemovalForRefPP = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hltFullIter1ClustersRefRemovalForRefPP"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClustersForRefPP"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltFullIter1HighPurityTracksForRefPP")
)


process.hltFullIter2CtfWithMaterialTracksForRefPP = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('highPtTripletStep'),
    Fitter = cms.string('hltESPFlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltFullIter2MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltFullIter2CkfTrackCandidatesForRefPP"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltFullIter2HighPurityTracksForRefPP = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltFullIter2TrackMVAClassifierForRefPP","MVAValues"),
    originalQualVals = cms.InputTag("hltFullIter2TrackMVAClassifierForRefPP","QualityMasks"),
    originalSource = cms.InputTag("hltFullIter2CtfWithMaterialTracksForRefPP")
)


process.hltFullIter2MaskedMeasurementTrackerEventForRefPP = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltFullIter2ClustersRefRemovalForRefPP"),
    src = cms.InputTag("hltSiStripClustersFullForRefPP")
)


process.hltFullIter2PixelClusterCheckForRefPP = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClustersForRefPP"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltFullIter2PixelHitDoubletsForRefPP = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltFullIter2PixelClusterCheckForRefPP"),
    layerPairs = cms.vuint32(0, 1),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("hltFullIter2PixelTripletsForRefPP"),
    trackingRegions = cms.InputTag("hltFullIter2PixelTrackingRegions")
)


process.hltFullIter2PixelHitTripletsForRefPP = cms.EDProducer("CAHitTripletEDProducer",
    CAHardPtCut = cms.double(0.3),
    CAPhiCut = cms.double(0.07),
    CAThetaCut = cms.double(0.004),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hltFullIter2PixelHitDoubletsForRefPP"),
    extraHitRPhitolerance = cms.double(0.032),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.8),
        pt2 = cms.double(8.0),
        value1 = cms.double(100.0),
        value2 = cms.double(6.0)
    ),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter2PixelHitDoubletsForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter2PixelHitDoubletsForRefPP__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltFullIter2PixelSeedsForRefPP = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter2PixelHitTripletsForRefPP__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltFullIter2PixelHitTripletsForRefPP")
)


process.hltFullIter2PixelTrackingRegions = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        nSigmaZ = cms.double(4.0),
        originHalfLength = cms.double(0.0),
        originRadius = cms.double(0.02),
        precise = cms.bool(True),
        ptMin = cms.double(0.55),
        useMultipleScattering = cms.bool(False)
    )
)


process.hltFullIter2PixelTripletsForRefPP = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        skipClusters = cms.InputTag("hltFullIter2ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltFullIter2ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix2+BPix3+BPix4', 
        'BPix1+BPix3+BPix4', 
        'BPix1+BPix2+BPix4', 
        'BPix2+BPix3+FPix1_pos', 
        'BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix1+BPix3+FPix1_pos', 
        'BPix1+BPix3+FPix1_neg', 
        'BPix2+FPix1_pos+FPix2_pos', 
        'BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg', 
        'BPix1+BPix2+FPix2_pos', 
        'BPix1+BPix2+FPix2_neg', 
        'FPix1_pos+FPix2_pos+FPix3_pos', 
        'FPix1_neg+FPix2_neg+FPix3_neg', 
        'BPix1+FPix2_pos+FPix3_pos', 
        'BPix1+FPix2_neg+FPix3_neg', 
        'BPix1+FPix1_pos+FPix3_pos', 
        'BPix1+FPix1_neg+FPix3_neg')
)


process.hltFullIter2TrackMVAClassifierForRefPP = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorHighPtTripletStep_Phase1')
    ),
    qualityCuts = cms.vdouble(0.2, 0.3, 0.4),
    src = cms.InputTag("hltFullIter2CtfWithMaterialTracksForRefPP"),
    vertices = cms.InputTag("hltFullIter0PrimaryVerticesForRefPP")
)


process.hltFullIter3CkfTrackCandidatesForRefPP = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltFullIter3MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTPSetLowPtTripletStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('hltESPLowPtTripletStepTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltFullIter3PixelSeedsForRefPP"),
    useHitsSplitting = cms.bool(True)
)


process.hltFullIter3ClustersRefRemovalForRefPP = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hltFullIter2ClustersRefRemovalForRefPP"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClustersForRefPP"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltFullIter2HighPurityTracksForRefPP")
)


process.hltFullIter3CtfWithMaterialTracksForRefPP = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('lowPtTripletStep'),
    Fitter = cms.string('hltESPFlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltFullIter3MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltFullIter3CkfTrackCandidatesForRefPP"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltFullIter3HighPurityTracksForRefPP = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltFullIter3TrackMVAClassifierForRefPP","MVAValues"),
    originalQualVals = cms.InputTag("hltFullIter3TrackMVAClassifierForRefPP","QualityMasks"),
    originalSource = cms.InputTag("hltFullIter3CtfWithMaterialTracksForRefPP")
)


process.hltFullIter3MaskedMeasurementTrackerEventForRefPP = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltFullIter3ClustersRefRemovalForRefPP"),
    src = cms.InputTag("hltSiStripClustersFullForRefPP")
)


process.hltFullIter3PixelClusterCheckForRefPP = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClustersForRefPP"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltFullIter3PixelHitDoubletsForRefPP = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltFullIter3PixelClusterCheckForRefPP"),
    layerPairs = cms.vuint32(0, 1),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("hltFullIter3PixelTripletsForRefPP"),
    trackingRegions = cms.InputTag("hltFullIter3PixelTrackingRegions")
)


process.hltFullIter3PixelHitTripletsForRefPP = cms.EDProducer("CAHitTripletEDProducer",
    CAHardPtCut = cms.double(0.3),
    CAPhiCut = cms.double(0.05),
    CAThetaCut = cms.double(0.002),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hltFullIter3PixelHitDoubletsForRefPP"),
    extraHitRPhitolerance = cms.double(0.032),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.8),
        pt2 = cms.double(2.0),
        value1 = cms.double(70.0),
        value2 = cms.double(8.0)
    ),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter3PixelHitDoubletsForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter3PixelHitDoubletsForRefPP__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltFullIter3PixelSeedsForRefPP = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter3PixelHitTripletsForRefPP__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltFullIter3PixelHitTripletsForRefPP")
)


process.hltFullIter3PixelTrackingRegions = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        nSigmaZ = cms.double(4.0),
        originHalfLength = cms.double(0.0),
        originRadius = cms.double(0.02),
        precise = cms.bool(True),
        ptMin = cms.double(0.2),
        useMultipleScattering = cms.bool(False)
    )
)


process.hltFullIter3PixelTripletsForRefPP = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        skipClusters = cms.InputTag("hltFullIter3ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltFullIter3ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix2+BPix3+BPix4', 
        'BPix1+BPix3+BPix4', 
        'BPix1+BPix2+BPix4', 
        'BPix2+BPix3+FPix1_pos', 
        'BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix1+BPix3+FPix1_pos', 
        'BPix1+BPix3+FPix1_neg', 
        'BPix2+FPix1_pos+FPix2_pos', 
        'BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg', 
        'BPix1+BPix2+FPix2_pos', 
        'BPix1+BPix2+FPix2_neg', 
        'FPix1_pos+FPix2_pos+FPix3_pos', 
        'FPix1_neg+FPix2_neg+FPix3_neg', 
        'BPix1+FPix2_pos+FPix3_pos', 
        'BPix1+FPix2_neg+FPix3_neg', 
        'BPix1+FPix1_pos+FPix3_pos', 
        'BPix1+FPix1_neg+FPix3_neg')
)


process.hltFullIter3TrackMVAClassifierForRefPP = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorLowPtTripletStep_Phase1')
    ),
    qualityCuts = cms.vdouble(0.0, 0.2, 0.4),
    src = cms.InputTag("hltFullIter3CtfWithMaterialTracksForRefPP"),
    vertices = cms.InputTag("hltFullIter0PrimaryVerticesForRefPP")
)


process.hltFullIter4CkfTrackCandidatesForRefPP = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltFullIter4MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTPSetDetachedQuadStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('hltESPDetachedQuadStepTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltFullIter4PixelSeedsForRefPP"),
    useHitsSplitting = cms.bool(True)
)


process.hltFullIter4ClustersRefRemovalForRefPP = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hltFullIter3ClustersRefRemovalForRefPP"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClustersForRefPP"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltFullIter3HighPurityTracksForRefPP")
)


process.hltFullIter4CtfWithMaterialTracksForRefPP = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('detachedQuadStep'),
    Fitter = cms.string('hltESPFlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltFullIter4MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltFullIter4CkfTrackCandidatesForRefPP"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltFullIter4HighPurityTracksForRefPP = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltFullIter4TrackMVAClassifierForRefPP","MVAValues"),
    originalQualVals = cms.InputTag("hltFullIter4TrackMVAClassifierForRefPP","QualityMasks"),
    originalSource = cms.InputTag("hltFullIter4CtfWithMaterialTracksForRefPP")
)


process.hltFullIter4MaskedMeasurementTrackerEventForRefPP = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltFullIter4ClustersRefRemovalForRefPP"),
    src = cms.InputTag("hltSiStripClustersFullForRefPP")
)


process.hltFullIter4PixelClusterCheckForRefPP = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClustersForRefPP"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltFullIter4PixelHitDoubletsForRefPP = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltFullIter4PixelClusterCheckForRefPP"),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("hltFullIter4PixelQuadrupletsForRefPP"),
    trackingRegions = cms.InputTag("hltFullIter4PixelTrackingRegions")
)


process.hltFullIter4PixelHitQuadrupletsForRefPP = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0.0),
    CAOnlyOneLastHitPerLayerFilter = cms.bool(False),
    CAPhiCut = cms.double(0.0),
    CAThetaCut = cms.double(0.0011),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hltFullIter4PixelHitDoubletsForRefPP"),
    extraHitRPhitolerance = cms.double(0.032),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.8),
        pt2 = cms.double(2.0),
        value1 = cms.double(500.0),
        value2 = cms.double(100.0)
    ),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter4PixelHitDoubletsForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter4PixelHitDoubletsForRefPP__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltFullIter4PixelQuadrupletsForRefPP = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        skipClusters = cms.InputTag("hltFullIter4ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltFullIter4ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3+BPix4', 
        'BPix1+BPix2+BPix3+FPix1_pos', 
        'BPix1+BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos+FPix2_pos', 
        'BPix1+BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos+FPix3_pos', 
        'BPix1+FPix1_neg+FPix2_neg+FPix3_neg')
)


process.hltFullIter4PixelSeedsForRefPP = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(False),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False)
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter4PixelHitQuadrupletsForRefPP__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltFullIter4PixelHitQuadrupletsForRefPP")
)


process.hltFullIter4PixelTrackingRegions = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        nSigmaZ = cms.double(0.0),
        originHalfLength = cms.double(15.0),
        originRadius = cms.double(1.5),
        precise = cms.bool(True),
        ptMin = cms.double(0.3),
        useMultipleScattering = cms.bool(False)
    )
)


process.hltFullIter4TrackMVAClassifierForRefPP = cms.EDProducer("TrackMVAClassifierDetached",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorDetachedQuadStep_Phase1')
    ),
    qualityCuts = cms.vdouble(-0.5, 0.0, 0.5),
    src = cms.InputTag("hltFullIter4CtfWithMaterialTracksForRefPP"),
    vertices = cms.InputTag("hltFullIter0PrimaryVerticesForRefPP")
)


process.hltFullIter5CkfTrackCandidatesForRefPP = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltFullIter5MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTPSetDetachedTripletStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('hltESPDetachedTripletStepTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltFullIter5PixelSeedsForRefPP"),
    useHitsSplitting = cms.bool(True)
)


process.hltFullIter5ClustersRefRemovalForRefPP = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hltFullIter4ClustersRefRemovalForRefPP"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClustersForRefPP"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltFullIter4HighPurityTracksForRefPP")
)


process.hltFullIter5CtfWithMaterialTracksForRefPP = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('detachedTripletStep'),
    Fitter = cms.string('hltESPFlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltFullIter5MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltFullIter5CkfTrackCandidatesForRefPP"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltFullIter5HighPurityTracksForRefPP = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltFullIter5TrackMVAClassifierForRefPP","MVAValues"),
    originalQualVals = cms.InputTag("hltFullIter5TrackMVAClassifierForRefPP","QualityMasks"),
    originalSource = cms.InputTag("hltFullIter5CtfWithMaterialTracksForRefPP")
)


process.hltFullIter5MaskedMeasurementTrackerEventForRefPP = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltFullIter5ClustersRefRemovalForRefPP"),
    src = cms.InputTag("hltSiStripClustersFullForRefPP")
)


process.hltFullIter5PixelClusterCheckForRefPP = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClustersForRefPP"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltFullIter5PixelHitDoubletsForRefPP = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltFullIter5PixelClusterCheckForRefPP"),
    layerPairs = cms.vuint32(0, 1),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("hltFullIter5PixelTripletsForRefPP"),
    trackingRegions = cms.InputTag("hltFullIter5PixelTrackingRegions")
)


process.hltFullIter5PixelHitTripletsForRefPP = cms.EDProducer("CAHitTripletEDProducer",
    CAHardPtCut = cms.double(0.2),
    CAPhiCut = cms.double(0.0),
    CAThetaCut = cms.double(0.001),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("hltFullIter5PixelHitDoubletsForRefPP"),
    extraHitRPhitolerance = cms.double(0.032),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.8),
        pt2 = cms.double(2.0),
        value1 = cms.double(300.0),
        value2 = cms.double(10.0)
    ),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter5PixelHitDoubletsForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter5PixelHitDoubletsForRefPP__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltFullIter5PixelSeedsForRefPP = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(False),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False)
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter5PixelHitTripletsForRefPP__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltFullIter5PixelHitTripletsForRefPP")
)


process.hltFullIter5PixelTrackingRegions = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        nSigmaZ = cms.double(0.0),
        originHalfLength = cms.double(15.0),
        originRadius = cms.double(1.5),
        precise = cms.bool(True),
        ptMin = cms.double(0.25),
        useMultipleScattering = cms.bool(False)
    )
)


process.hltFullIter5PixelTripletsForRefPP = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        skipClusters = cms.InputTag("hltFullIter5ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltFullIter5ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix2+BPix3+BPix4', 
        'BPix2+BPix3+FPix1_pos', 
        'BPix2+BPix3+FPix1_neg', 
        'BPix2+FPix1_pos+FPix2_pos', 
        'BPix2+FPix1_neg+FPix2_neg', 
        'FPix1_pos+FPix2_pos+FPix3_pos', 
        'FPix1_neg+FPix2_neg+FPix3_neg')
)


process.hltFullIter5TrackMVAClassifierForRefPP = cms.EDProducer("TrackMVAClassifierDetached",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorDetachedTripletStep_Phase1')
    ),
    qualityCuts = cms.vdouble(-0.2, 0.3, 0.8),
    src = cms.InputTag("hltFullIter5CtfWithMaterialTracksForRefPP"),
    vertices = cms.InputTag("hltFullIter0PrimaryVerticesForRefPP")
)


process.hltFullIter6CkfTrackCandidatesForRefPP = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltFullIter6MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPixelPairStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltFullIter6PixelSeedsForRefPP"),
    useHitsSplitting = cms.bool(True)
)


process.hltFullIter6ClustersRefRemovalForRefPP = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hltFullIter5ClustersRefRemovalForRefPP"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClustersForRefPP"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltFullIter5HighPurityTracksForRefPP")
)


process.hltFullIter6CtfWithMaterialTracksForRefPP = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('pixelPairStep'),
    Fitter = cms.string('hltESPFlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltFullIter6MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltFullIter6CkfTrackCandidatesForRefPP"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltFullIter6HighPurityTracksForRefPP = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltFullIter6TrackMVAClassifierForRefPP","MVAValues"),
    originalQualVals = cms.InputTag("hltFullIter6TrackMVAClassifierForRefPP","QualityMasks"),
    originalSource = cms.InputTag("hltFullIter6CtfWithMaterialTracksForRefPP")
)


process.hltFullIter6MaskedMeasurementTrackerEventForRefPP = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltFullIter6ClustersRefRemovalForRefPP"),
    src = cms.InputTag("hltSiStripClustersFullForRefPP")
)


process.hltFullIter6PixelClusterCheckForRefPP = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClustersForRefPP"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltFullIter6PixelHitDoubletsAForRefPP = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltFullIter6PixelClusterCheckForRefPP"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("hltFullIter6PixelPairsAForRefPP"),
    trackingRegions = cms.InputTag("hltFullIter6PixelTrackingRegionsAForRefPP")
)


process.hltFullIter6PixelHitDoubletsBForRefPP = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltFullIter6PixelClusterCheckForRefPP"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("hltFullIter6PixelPairsBForRefPP"),
    trackingRegions = cms.InputTag("hltFullIter6PixelTrackingRegionsBForRefPP")
)


process.hltFullIter6PixelPairsAForRefPP = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        skipClusters = cms.InputTag("hltFullIter6ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltFullIter6ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2', 
        'BPix1+BPix3', 
        'BPix2+BPix3', 
        'BPix1+FPix1_pos', 
        'BPix1+FPix1_neg', 
        'BPix2+FPix1_pos', 
        'BPix2+FPix1_neg')
)


process.hltFullIter6PixelPairsBForRefPP = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        hitErrorRPhi = cms.double(0.0027),
        skipClusters = cms.InputTag("hltFullIter6ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltFullIter6ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("hltSiStripMatchedRecHitsFull","matchedRecHit"),
        skipClusters = cms.InputTag("hltFullIter6ClustersRefRemovalForRefPP")
    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix4')
)


process.hltFullIter6PixelSeedsAForRefPP = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(True),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False)
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter6PixelHitDoubletsAForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter6PixelHitDoubletsAForRefPP__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltFullIter6PixelHitDoubletsAForRefPP")
)


process.hltFullIter6PixelSeedsBForRefPP = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(True),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False)
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter6PixelHitDoubletsBForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter6PixelHitDoubletsBForRefPP__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltFullIter6PixelHitDoubletsBForRefPP")
)


process.hltFullIter6PixelSeedsForRefPP = cms.EDProducer("SeedCombiner",
    seedCollections = cms.VInputTag("hltFullIter6PixelSeedsAForRefPP", "hltFullIter6PixelSeedsBForRefPP")
)


process.hltFullIter6PixelTrackingRegionsAForRefPP = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hltFullIter0PrimaryVerticesForRefPP"),
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        fixedError = cms.double(0.03),
        maxNVertices = cms.int32(5),
        nSigmaZ = cms.double(4.0),
        originRadius = cms.double(0.015),
        precise = cms.bool(True),
        ptMin = cms.double(0.6),
        sigmaZVertex = cms.double(3.0),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hltFullIter6PixelTrackingRegionsBForRefPP = cms.EDProducer("PointSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        deltaEta = cms.double(1.2),
        deltaPhi = cms.double(0.5),
        maxNRegions = cms.int32(5),
        maxNVertices = cms.int32(5),
        measurementTrackerName = cms.InputTag(""),
        mode = cms.string('VerticesFixed'),
        nSigmaZBeamSpot = cms.double(4.0),
        nSigmaZVertex = cms.double(3.0),
        originRadius = cms.double(0.015),
        points = cms.PSet(
            eta = cms.vdouble(0.0),
            phi = cms.vdouble(3.0)
        ),
        precise = cms.bool(True),
        ptMin = cms.double(0.6),
        searchOpt = cms.bool(False),
        vertexCollection = cms.InputTag("hltFullIter0PrimaryVerticesForRefPP"),
        whereToUseMeasurementTracker = cms.string('Never'),
        zErrorBeamSpot = cms.double(24.2),
        zErrorVetex = cms.double(0.03)
    )
)


process.hltFullIter6TrackMVAClassifierForRefPP = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorIter2_13TeV')
    ),
    qualityCuts = cms.vdouble(-0.2, 0.0, 0.3),
    src = cms.InputTag("hltFullIter6CtfWithMaterialTracksForRefPP"),
    vertices = cms.InputTag("hltFullIter0PrimaryVerticesForRefPP")
)


process.hltFullIter7CkfTrackCandidatesForRefPP = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltFullIter7MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTPSetMixedTripletStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('hltESPMixedTripletStepTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltFullIter7MixedSeedsForRefPP"),
    useHitsSplitting = cms.bool(True)
)


process.hltFullIter7ClustersRefRemovalForRefPP = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hltFullIter6ClustersRefRemovalForRefPP"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClustersForRefPP"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltFullIter6HighPurityTracksForRefPP")
)


process.hltFullIter7CtfWithMaterialTracksForRefPP = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('mixedTripletStep'),
    Fitter = cms.string('hltESPFlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltFullIter7MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltFullIter7CkfTrackCandidatesForRefPP"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltFullIter7HighPurityTracksForRefPP = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltFullIter7TrackMVAClassifierForRefPP","MVAValues"),
    originalQualVals = cms.InputTag("hltFullIter7TrackMVAClassifierForRefPP","QualityMasks"),
    originalSource = cms.InputTag("hltFullIter7CtfWithMaterialTracksForRefPP")
)


process.hltFullIter7MaskedMeasurementTrackerEventForRefPP = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltFullIter7ClustersRefRemovalForRefPP"),
    src = cms.InputTag("hltSiStripClustersFullForRefPP")
)


process.hltFullIter7MixedClusterCheckForRefPP = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClustersForRefPP"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltFullIter7MixedHitDoubletsAForRefPP = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltFullIter7MixedClusterCheckForRefPP"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("hltFullIter7MixedLayersAForRefPP"),
    trackingRegions = cms.InputTag("hltFullIter7MixedTrackingRegionsA")
)


process.hltFullIter7MixedHitDoubletsBForRefPP = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltFullIter7MixedClusterCheckForRefPP"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("hltFullIter7MixedLayersBForRefPP"),
    trackingRegions = cms.InputTag("hltFullIter7MixedTrackingRegionsB")
)


process.hltFullIter7MixedHitTripletsAForRefPP = cms.EDProducer("PixelTripletLargeTipEDProducer",
    doublets = cms.InputTag("hltFullIter7MixedHitDoubletsAForRefPP"),
    extraHitRPhitolerance = cms.double(0.0),
    extraHitRZtolerance = cms.double(0.0),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter7MixedHitDoubletsAForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter7MixedHitDoubletsAForRefPP__HLT'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.hltFullIter7MixedHitTripletsBForRefPP = cms.EDProducer("PixelTripletLargeTipEDProducer",
    doublets = cms.InputTag("hltFullIter7MixedHitDoubletsBForRefPP"),
    extraHitRPhitolerance = cms.double(0.0),
    extraHitRZtolerance = cms.double(0.0),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter7MixedHitDoubletsBForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter7MixedHitDoubletsBForRefPP__HLT'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.hltFullIter7MixedLayersAForRefPP = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        hitErrorRPhi = cms.double(0.0027),
        skipClusters = cms.InputTag("hltFullIter7ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltFullIter7ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("hltSiStripMatchedRecHitsFull","matchedRecHit"),
        maxRing = cms.int32(1),
        minRing = cms.int32(1),
        skipClusters = cms.InputTag("hltFullIter7ClustersRefRemovalForRefPP"),
        useRingSlector = cms.bool(True)
    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix2+FPix1_pos+FPix2_pos', 
        'BPix2+FPix1_neg+FPix2_neg')
)


process.hltFullIter7MixedLayersBForRefPP = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        hitErrorRPhi = cms.double(0.0027),
        skipClusters = cms.InputTag("hltFullIter7ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHitsForRefPP'),
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltFullIter7ClustersRefRemovalForRefPP"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("hltSiStripMatchedRecHitsFull","matchedRecHit"),
        skipClusters = cms.InputTag("hltFullIter7ClustersRefRemovalForRefPP")
    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix3+BPix4+TIB1')
)


process.hltFullIter7MixedSeedsAForRefPP = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
        ClusterShapeHitFilterName = cms.string('hltESPMixedStepClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(False),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(True)
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter7MixedHitTripletsAForRefPP__HLT', 
        'RegionsSeedingHitSets_hltFullIter7MixedHitDoubletsAForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter7MixedHitDoubletsAForRefPP__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltFullIter7MixedHitTripletsAForRefPP")
)


process.hltFullIter7MixedSeedsBForRefPP = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
        ClusterShapeHitFilterName = cms.string('hltESPMixedStepClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(False),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(True)
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter7MixedHitTripletsBForRefPP__HLT', 
        'RegionsSeedingHitSets_hltFullIter7MixedHitDoubletsBForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter7MixedHitDoubletsBForRefPP__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltFullIter7MixedHitTripletsBForRefPP")
)


process.hltFullIter7MixedSeedsForRefPP = cms.EDProducer("SeedCombiner",
    seedCollections = cms.VInputTag("hltFullIter7MixedSeedsAForRefPP", "hltFullIter7MixedSeedsBForRefPP")
)


process.hltFullIter7MixedTrackingRegionsA = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        nSigmaZ = cms.double(0.0),
        originHalfLength = cms.double(15.0),
        originRadius = cms.double(1.5),
        precise = cms.bool(True),
        ptMin = cms.double(0.4),
        useMultipleScattering = cms.bool(False)
    )
)


process.hltFullIter7MixedTrackingRegionsB = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        nSigmaZ = cms.double(0.0),
        originHalfLength = cms.double(10.0),
        originRadius = cms.double(1.5),
        precise = cms.bool(True),
        ptMin = cms.double(0.6),
        useMultipleScattering = cms.bool(False)
    )
)


process.hltFullIter7TrackMVAClassifierForRefPP = cms.EDProducer("TrackMVAClassifierDetached",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorMixedTripletStep_Phase1')
    ),
    qualityCuts = cms.vdouble(-0.5, 0.0, 0.5),
    src = cms.InputTag("hltFullIter7CtfWithMaterialTracksForRefPP"),
    vertices = cms.InputTag("hltFullIter0PrimaryVerticesForRefPP")
)


process.hltFullIter8CkfTrackCandidatesForRefPP = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltFullIter8MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPixelLessStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('hltESPPixelLessStepTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltFullIter8PixelLessSeedsForRefPP"),
    useHitsSplitting = cms.bool(True)
)


process.hltFullIter8ClustersRefRemovalForRefPP = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hltFullIter7ClustersRefRemovalForRefPP"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClustersForRefPP"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltFullIter7HighPurityTracksForRefPP")
)


process.hltFullIter8CtfWithMaterialTracksForRefPP = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('pixelLessStep'),
    Fitter = cms.string('hltESPFlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltFullIter8MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBuilderAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(True),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltFullIter8CkfTrackCandidatesForRefPP"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltFullIter8HighPurityTracksForRefPP = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltFullIter8TrackMVAClassifierForRefPP","MVAValues"),
    originalQualVals = cms.InputTag("hltFullIter8TrackMVAClassifierForRefPP","QualityMasks"),
    originalSource = cms.InputTag("hltFullIter8CtfWithMaterialTracksForRefPP")
)


process.hltFullIter8MaskedMeasurementTrackerEventForRefPP = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltFullIter8ClustersRefRemovalForRefPP"),
    src = cms.InputTag("hltSiStripClustersFullForRefPP")
)


process.hltFullIter8PixelLessClusterCheckForRefPP = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClustersForRefPP"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltFullIter8PixelLessHitDoubletsForRefPP = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltFullIter8PixelLessClusterCheckForRefPP"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltFullIter8PixelLessLayersForRefPP"),
    trackingRegions = cms.InputTag("hltFullIter8PixelLessTrackingRegions")
)


process.hltFullIter8PixelLessHitTripletsForRefPP = cms.EDProducer("MultiHitFromChi2EDProducer",
    ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    chi2VsPtCut = cms.bool(True),
    chi2_cuts = cms.vdouble(3.0, 4.0, 5.0, 5.0),
    detIdsToDebug = cms.vint32(0, 0, 0),
    doublets = cms.InputTag("hltFullIter8PixelLessHitDoubletsForRefPP"),
    extraHitRPhitolerance = cms.double(0.0),
    extraHitRZtolerance = cms.double(0.0),
    extraPhiKDBox = cms.double(0.005),
    extraRKDBox = cms.double(0.2),
    extraZKDBox = cms.double(0.2),
    fnSigmaRZ = cms.double(2.0),
    maxChi2 = cms.double(5.0),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltFullIter8PixelLessHitDoubletsForRefPP__HLT'),
    phiPreFiltering = cms.double(0.3),
    pt_interv = cms.vdouble(0.4, 0.7, 1.0, 2.0),
    refitHits = cms.bool(True),
    useFixedPreFiltering = cms.bool(False)
)


process.hltFullIter8PixelLessLayersForRefPP = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(

    ),
    FPix = cms.PSet(

    ),
    MTEC = cms.PSet(
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
        ),
        maxRing = cms.int32(3),
        minRing = cms.int32(3),
        rphiRecHits = cms.InputTag("hltSiStripMatchedRecHitsFull","rphiRecHit"),
        skipClusters = cms.InputTag("hltFullIter8ClustersRefRemovalForRefPP"),
        useRingSlector = cms.bool(True)
    ),
    MTIB = cms.PSet(
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
        ),
        rphiRecHits = cms.InputTag("hltSiStripMatchedRecHitsFull","rphiRecHit"),
        skipClusters = cms.InputTag("hltFullIter8ClustersRefRemovalForRefPP")
    ),
    MTID = cms.PSet(
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
        ),
        maxRing = cms.int32(3),
        minRing = cms.int32(3),
        rphiRecHits = cms.InputTag("hltSiStripMatchedRecHitsFull","rphiRecHit"),
        skipClusters = cms.InputTag("hltFullIter8ClustersRefRemovalForRefPP"),
        useRingSlector = cms.bool(True)
    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("hltSiStripMatchedRecHitsFull","matchedRecHit"),
        maxRing = cms.int32(2),
        minRing = cms.int32(1),
        skipClusters = cms.InputTag("hltFullIter8ClustersRefRemovalForRefPP"),
        useRingSlector = cms.bool(True)
    ),
    TIB = cms.PSet(
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("hltSiStripMatchedRecHitsFull","matchedRecHit"),
        skipClusters = cms.InputTag("hltFullIter8ClustersRefRemovalForRefPP")
    ),
    TID = cms.PSet(
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("hltSiStripMatchedRecHitsFull","matchedRecHit"),
        maxRing = cms.int32(2),
        minRing = cms.int32(1),
        skipClusters = cms.InputTag("hltFullIter8ClustersRefRemovalForRefPP"),
        useRingSlector = cms.bool(True)
    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('TIB1+TIB2+MTIB3', 
        'TIB1+TIB2+MTIB4', 
        'TIB1+TIB2+MTID1_pos', 
        'TIB1+TIB2+MTID1_neg', 
        'TID1_pos+TID2_pos+TID3_pos', 
        'TID1_neg+TID2_neg+TID3_neg', 
        'TID1_pos+TID2_pos+MTID3_pos', 
        'TID1_neg+TID2_neg+MTID3_neg', 
        'TID1_pos+TID2_pos+MTEC1_pos', 
        'TID1_neg+TID2_neg+MTEC1_neg', 
        'TID2_pos+TID3_pos+TEC1_pos', 
        'TID2_neg+TID3_neg+TEC1_neg', 
        'TID2_pos+TID3_pos+MTEC1_pos', 
        'TID2_neg+TID3_neg+MTEC1_neg', 
        'TEC1_pos+TEC2_pos+TEC3_pos', 
        'TEC1_neg+TEC2_neg+TEC3_neg', 
        'TEC1_pos+TEC2_pos+MTEC3_pos', 
        'TEC1_neg+TEC2_neg+MTEC3_neg', 
        'TEC1_pos+TEC2_pos+TEC4_pos', 
        'TEC1_neg+TEC2_neg+TEC4_neg', 
        'TEC1_pos+TEC2_pos+MTEC4_pos', 
        'TEC1_neg+TEC2_neg+MTEC4_neg', 
        'TEC2_pos+TEC3_pos+TEC4_pos', 
        'TEC2_neg+TEC3_neg+TEC4_neg', 
        'TEC2_pos+TEC3_pos+MTEC4_pos', 
        'TEC2_neg+TEC3_neg+MTEC4_neg', 
        'TEC2_pos+TEC3_pos+TEC5_pos', 
        'TEC2_neg+TEC3_neg+TEC5_neg', 
        'TEC2_pos+TEC3_pos+TEC6_pos', 
        'TEC2_neg+TEC3_neg+TEC6_neg', 
        'TEC3_pos+TEC4_pos+TEC5_pos', 
        'TEC3_neg+TEC4_neg+TEC5_neg', 
        'TEC3_pos+TEC4_pos+MTEC5_pos', 
        'TEC3_neg+TEC4_neg+MTEC5_neg', 
        'TEC3_pos+TEC5_pos+TEC6_pos', 
        'TEC3_neg+TEC5_neg+TEC6_neg', 
        'TEC4_pos+TEC5_pos+TEC6_pos', 
        'TEC4_neg+TEC5_neg+TEC6_neg')
)


process.hltFullIter8PixelLessSeedsForRefPP = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('CombinedSeedComparitor'),
        comparitors = cms.VPSet(cms.PSet(
            ClusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
            ClusterShapeHitFilterName = cms.string('hltESPPixelLessStepClusterShapeHitFilter'),
            ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
            FilterAtHelixStage = cms.bool(True),
            FilterPixelHits = cms.bool(False),
            FilterStripHits = cms.bool(True)
        ), 
            cms.PSet(
                ComponentName = cms.string('StripSubClusterShapeSeedFilter'),
                FilterAtHelixStage = cms.bool(False),
                maxNSat = cms.uint32(3),
                maxTrimmedSizeDiffNeg = cms.double(1.0),
                maxTrimmedSizeDiffPos = cms.double(0.7),
                seedCutMIPs = cms.double(0.35),
                seedCutSN = cms.double(7.0),
                subclusterCutMIPs = cms.double(0.45),
                subclusterCutSN = cms.double(12.0),
                subclusterWindow = cms.double(0.7),
                trimMaxADC = cms.double(30.0),
                trimMaxFracNeigh = cms.double(0.25),
                trimMaxFracTotal = cms.double(0.15)
            )),
        mode = cms.string('and')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter8PixelLessHitTripletsForRefPP__HLT', 
        'BaseTrackerRecHitsOwned_hltFullIter8PixelLessHitTripletsForRefPP__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltFullIter8PixelLessHitTripletsForRefPP")
)


process.hltFullIter8PixelLessTrackingRegions = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        nSigmaZ = cms.double(0.0),
        originHalfLength = cms.double(12.0),
        originRadius = cms.double(1.0),
        precise = cms.bool(True),
        ptMin = cms.double(0.4),
        useMultipleScattering = cms.bool(False)
    )
)


process.hltFullIter8TrackMVAClassifierForRefPP = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorPixelLessStep_Phase1')
    ),
    qualityCuts = cms.vdouble(-0.4, 0.0, 0.4),
    src = cms.InputTag("hltFullIter8CtfWithMaterialTracksForRefPP"),
    vertices = cms.InputTag("hltFullIter0PrimaryVerticesForRefPP")
)


process.hltFullIter9CkfTrackCandidatesForRefPP = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltFullIter9MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTPSetTobTecStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('hltESPTobTecStepTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltFullIter9TobTecSeedsForRefPP"),
    useHitsSplitting = cms.bool(True)
)


process.hltFullIter9ClustersRefRemovalForRefPP = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hltFullIter8ClustersRefRemovalForRefPP"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClustersForRefPP"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltFullIter8HighPurityTracksForRefPP")
)


process.hltFullIter9CtfWithMaterialTracksForRefPP = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('tobTecStep'),
    Fitter = cms.string('hltESPTobTecStepFlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltFullIter9MaskedMeasurementTrackerEventForRefPP"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBuilderAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(True),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltFullIter9CkfTrackCandidatesForRefPP"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltFullIter9MaskedMeasurementTrackerEventForRefPP = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltFullIter9ClustersRefRemovalForRefPP"),
    src = cms.InputTag("hltSiStripClustersFullForRefPP")
)


process.hltFullIter9TobTecClusterCheckForRefPP = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClustersForRefPP"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltFullIter9TobTecHitDoubletsPairForRefPP = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltFullIter9TobTecClusterCheckForRefPP"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("hltFullIter9TobTecLayersPairForRefPP"),
    trackingRegions = cms.InputTag("hltFullIter9TobTecTrackingRegionsPairForRefPP")
)


process.hltFullIter9TobTecHitDoubletsTriplForRefPP = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltFullIter9TobTecClusterCheckForRefPP"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltFullIter9TobTecLayersTriplForRefPP"),
    trackingRegions = cms.InputTag("hltFullIter9TobTecTrackingRegionsTriplForRefPP")
)


process.hltFullIter9TobTecHitTripletsTriplForRefPP = cms.EDProducer("MultiHitFromChi2EDProducer",
    ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    chi2VsPtCut = cms.bool(True),
    chi2_cuts = cms.vdouble(3.0, 4.0, 5.0, 5.0),
    detIdsToDebug = cms.vint32(0, 0, 0),
    doublets = cms.InputTag("hltFullIter9TobTecHitDoubletsTriplForRefPP"),
    extraHitRPhitolerance = cms.double(0.0),
    extraHitRZtolerance = cms.double(0.0),
    extraPhiKDBox = cms.double(0.01),
    extraRKDBox = cms.double(0.2),
    extraZKDBox = cms.double(0.2),
    fnSigmaRZ = cms.double(2.0),
    maxChi2 = cms.double(5.0),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltFullIter9TobTecHitDoubletsTriplForRefPP__HLT'),
    phiPreFiltering = cms.double(0.3),
    pt_interv = cms.vdouble(0.4, 0.7, 1.0, 2.0),
    refitHits = cms.bool(True),
    useFixedPreFiltering = cms.bool(False)
)


process.hltFullIter9TobTecLayersPairForRefPP = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(

    ),
    FPix = cms.PSet(

    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("hltSiStripMatchedRecHitsFull","matchedRecHit"),
        maxRing = cms.int32(5),
        minRing = cms.int32(5),
        skipClusters = cms.InputTag("hltFullIter9ClustersRefRemovalForRefPP"),
        useRingSlector = cms.bool(True)
    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("hltSiStripMatchedRecHitsFull","matchedRecHit"),
        skipClusters = cms.InputTag("hltFullIter9ClustersRefRemovalForRefPP")
    ),
    layerList = cms.vstring('TOB1+TEC1_pos', 
        'TOB1+TEC1_neg', 
        'TEC1_pos+TEC2_pos', 
        'TEC1_neg+TEC2_neg', 
        'TEC2_pos+TEC3_pos', 
        'TEC2_neg+TEC3_neg', 
        'TEC3_pos+TEC4_pos', 
        'TEC3_neg+TEC4_neg', 
        'TEC4_pos+TEC5_pos', 
        'TEC4_neg+TEC5_neg', 
        'TEC5_pos+TEC6_pos', 
        'TEC5_neg+TEC6_neg', 
        'TEC6_pos+TEC7_pos', 
        'TEC6_neg+TEC7_neg')
)


process.hltFullIter9TobTecLayersTriplForRefPP = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(

    ),
    FPix = cms.PSet(

    ),
    MTEC = cms.PSet(
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
        ),
        maxRing = cms.int32(7),
        minRing = cms.int32(6),
        rphiRecHits = cms.InputTag("hltSiStripMatchedRecHitsFull","rphiRecHit"),
        skipClusters = cms.InputTag("hltFullIter9ClustersRefRemovalForRefPP"),
        useRingSlector = cms.bool(True)
    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
        ),
        rphiRecHits = cms.InputTag("hltSiStripMatchedRecHitsFull","rphiRecHit"),
        skipClusters = cms.InputTag("hltFullIter9ClustersRefRemovalForRefPP")
    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("hltSiStripMatchedRecHitsFull","matchedRecHit"),
        skipClusters = cms.InputTag("hltFullIter9ClustersRefRemovalForRefPP")
    ),
    layerList = cms.vstring('TOB1+TOB2+MTOB3', 
        'TOB1+TOB2+MTOB4', 
        'TOB1+TOB2+MTEC1_pos', 
        'TOB1+TOB2+MTEC1_neg')
)


process.hltFullIter9TobTecSeedsForRefPP = cms.EDProducer("SeedCombiner",
    seedCollections = cms.VInputTag("hltFullIter9TobTecSeedsTriplForRefPP", "hltFullIter9TobTecSeedsPairForRefPP")
)


process.hltFullIter9TobTecSeedsPairForRefPP = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('CombinedSeedComparitor'),
        comparitors = cms.VPSet(cms.PSet(
            ClusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
            ClusterShapeHitFilterName = cms.string('hltESPTobTecStepClusterShapeHitFilter'),
            ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
            FilterAtHelixStage = cms.bool(True),
            FilterPixelHits = cms.bool(False),
            FilterStripHits = cms.bool(True)
        ), 
            cms.PSet(
                ComponentName = cms.string('StripSubClusterShapeSeedFilter'),
                FilterAtHelixStage = cms.bool(False),
                maxNSat = cms.uint32(3),
                maxTrimmedSizeDiffNeg = cms.double(1.0),
                maxTrimmedSizeDiffPos = cms.double(0.7),
                seedCutMIPs = cms.double(0.35),
                seedCutSN = cms.double(7.0),
                subclusterCutMIPs = cms.double(0.45),
                subclusterCutSN = cms.double(12.0),
                subclusterWindow = cms.double(0.7),
                trimMaxADC = cms.double(30.0),
                trimMaxFracNeigh = cms.double(0.25),
                trimMaxFracTotal = cms.double(0.15)
            )),
        mode = cms.string('and')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter9TobTecHitDoubletsPairForRefPP__HLT', 
        'IntermediateHitDoublets_hltFullIter9TobTecHitDoubletsPairForRefPP__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltFullIter9TobTecHitDoubletsPairForRefPP")
)


process.hltFullIter9TobTecSeedsTriplForRefPP = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('CombinedSeedComparitor'),
        comparitors = cms.VPSet(cms.PSet(
            ClusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCacheForRefPP"),
            ClusterShapeHitFilterName = cms.string('hltESPTobTecStepClusterShapeHitFilter'),
            ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
            FilterAtHelixStage = cms.bool(True),
            FilterPixelHits = cms.bool(False),
            FilterStripHits = cms.bool(True)
        ), 
            cms.PSet(
                ComponentName = cms.string('StripSubClusterShapeSeedFilter'),
                FilterAtHelixStage = cms.bool(False),
                maxNSat = cms.uint32(3),
                maxTrimmedSizeDiffNeg = cms.double(1.0),
                maxTrimmedSizeDiffPos = cms.double(0.7),
                seedCutMIPs = cms.double(0.35),
                seedCutSN = cms.double(7.0),
                subclusterCutMIPs = cms.double(0.45),
                subclusterCutSN = cms.double(12.0),
                subclusterWindow = cms.double(0.7),
                trimMaxADC = cms.double(30.0),
                trimMaxFracNeigh = cms.double(0.25),
                trimMaxFracTotal = cms.double(0.15)
            )),
        mode = cms.string('and')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltFullIter9TobTecHitTripletsTriplForRefPP__HLT', 
        'BaseTrackerRecHitsOwned_hltFullIter9TobTecHitTripletsTriplForRefPP__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltFullIter9TobTecHitTripletsTriplForRefPP")
)


process.hltFullIter9TobTecTrackingRegionsPairForRefPP = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        nSigmaZ = cms.double(0.0),
        originHalfLength = cms.double(30.0),
        originRadius = cms.double(6.0),
        precise = cms.bool(True),
        ptMin = cms.double(0.6),
        useMultipleScattering = cms.bool(False)
    )
)


process.hltFullIter9TobTecTrackingRegionsTriplForRefPP = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        nSigmaZ = cms.double(0.0),
        originHalfLength = cms.double(20.0),
        originRadius = cms.double(3.5),
        precise = cms.bool(True),
        ptMin = cms.double(0.55),
        useMultipleScattering = cms.bool(False)
    )
)


process.hltFullIter9TrackMVAClassifierForRefPP = cms.EDProducer("TrackMVAClassifierDetached",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorTobTecStep_Phase1')
    ),
    qualityCuts = cms.vdouble(-0.6, -0.45, -0.3),
    src = cms.InputTag("hltFullIter9CtfWithMaterialTracksForRefPP"),
    vertices = cms.InputTag("hltFullIter0PrimaryVerticesForRefPP")
)


process.hltFullIterativeTrackingMergedForRefPP = cms.EDProducer("TrackCollectionMerger",
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    foundHitBonus = cms.double(10.0),
    inputClassifiers = cms.vstring('hltFullIter0TrackMVAClassifierForRefPP', 
        'hltFullIter1TrackMVAClassifierForRefPP', 
        'hltFullIter2TrackMVAClassifierForRefPP', 
        'hltFullIter3TrackMVAClassifierForRefPP', 
        'hltFullIter4TrackMVAClassifierForRefPP', 
        'hltFullIter5TrackMVAClassifierForRefPP', 
        'hltFullIter6TrackMVAClassifierForRefPP', 
        'hltFullIter7TrackMVAClassifierForRefPP', 
        'hltFullIter8TrackMVAClassifierForRefPP', 
        'hltFullIter9TrackMVAClassifierForRefPP', 
        'hltFullIter10TrackMVAClassifierForRefPP'),
    lostHitPenalty = cms.double(5.0),
    minQuality = cms.string('loose'),
    minShareHits = cms.uint32(2),
    shareFrac = cms.double(0.19),
    trackAlgoPriorityOrder = cms.string('hltESPTrackAlgoPriorityOrder'),
    trackProducers = cms.VInputTag("hltFullIter0CtfWithMaterialTracksForRefPP", "hltFullIter1CtfWithMaterialTracksForRefPP", "hltFullIter2CtfWithMaterialTracksForRefPP", "hltFullIter3CtfWithMaterialTracksForRefPP", "hltFullIter4CtfWithMaterialTracksForRefPP", 
        "hltFullIter5CtfWithMaterialTracksForRefPP", "hltFullIter6CtfWithMaterialTracksForRefPP", "hltFullIter7CtfWithMaterialTracksForRefPP", "hltFullIter8CtfWithMaterialTracksForRefPP", "hltFullIter9CtfWithMaterialTracksForRefPP", 
        "hltFullIter10CtfWithMaterialTracksForRefPP")
)


process.hltFullOnlinePrimaryVerticesForRefPP = cms.EDProducer("PrimaryVertexProducer",
    TkClusParameters = cms.PSet(
        TkDAClusParameters = cms.PSet(
            Tmin = cms.double(2.4),
            Tpurge = cms.double(2.0),
            Tstop = cms.double(0.5),
            coolingFactor = cms.double(0.6),
            d0CutOff = cms.double(3.0),
            dzCutOff = cms.double(4.0),
            uniquetrkweight = cms.double(0.9),
            vertexSize = cms.double(0.01),
            zmerge = cms.double(0.01)
        ),
        algorithm = cms.string('DA_vect')
    ),
    TkFilterParameters = cms.PSet(
        algorithm = cms.string('filter'),
        maxD0Significance = cms.double(5.0),
        maxEta = cms.double(2.4),
        maxNormalizedChi2 = cms.double(20.0),
        minPixelLayersWithHits = cms.int32(2),
        minPt = cms.double(0.0),
        minSiliconLayersWithHits = cms.int32(5),
        trackQuality = cms.string('any')
    ),
    TrackLabel = cms.InputTag("hltFullIterativeTrackingMergedForRefPP"),
    beamSpotLabel = cms.InputTag("hltOnlineBeamSpot"),
    verbose = cms.untracked.bool(False),
    vertexCollections = cms.VPSet(cms.PSet(
        algorithm = cms.string('AdaptiveVertexFitter'),
        chi2cutoff = cms.double(3.0),
        label = cms.string(''),
        maxDistanceToBeam = cms.double(1.0),
        minNdof = cms.double(0.0),
        useBeamConstraint = cms.bool(False)
    ), 
        cms.PSet(
            algorithm = cms.string('AdaptiveVertexFitter'),
            chi2cutoff = cms.double(3.0),
            label = cms.string('WithBS'),
            maxDistanceToBeam = cms.double(1.0),
            minNdof = cms.double(2.0),
            useBeamConstraint = cms.bool(True)
        ))
)


process.hltGoodHighPurityFullTrackCutClassifierForHighPt = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            drWPVerr_par = cms.vdouble(9999.0, 9999.0, 9999.0),
            dr_exp = cms.vint32(0, 0, 0)
        ),
        dz_par = cms.PSet(
            dzWPVerr_par = cms.vdouble(9999.0, 9999.0, 9999.0),
            dz_exp = cms.vint32(0, 0, 0)
        ),
        maxChi2 = cms.vdouble(9999.0, 9999.0, 9999.0),
        maxChi2n = cms.vdouble(9999.0, 9999.0, 9999.0),
        maxDr = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxDz = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 999.0, 999.0),
        maxLostLayers = cms.vint32(999, 999, 999),
        maxRelPtErr = cms.vdouble(0.3, 0.3, 0.3),
        min3DLayers = cms.vint32(0, 0, 0),
        minHits = cms.vint32(0, 0, 0),
        minLayers = cms.vint32(0, 0, 0),
        minNVtxTrk = cms.int32(2),
        minNdof = cms.vdouble(-1.0, -1.0, -1.0),
        minPixelHits = cms.vint32(0, 0, 0)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("hltFullIterativeTrackingMergedForRefPP"),
    vertices = cms.InputTag("hltFullOnlinePrimaryVerticesForRefPP")
)


process.hltGoodHighPurityFullTracksForHighPt = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltGoodHighPurityFullTrackCutClassifierForHighPt","MVAValues"),
    originalQualVals = cms.InputTag("hltGoodHighPurityFullTrackCutClassifierForHighPt","QualityMasks"),
    originalSource = cms.InputTag("hltFullIterativeTrackingMergedForRefPP")
)


process.hltGtStage2Digis = cms.EDProducer("L1TRawToDigi",
    CTP7 = cms.untracked.bool(False),
    FWId = cms.uint32(0),
    FWOverride = cms.bool(False),
    FedIds = cms.vint32(1404),
    InputLabel = cms.InputTag("rawDataCollector"),
    MTF7 = cms.untracked.bool(False),
    MinFeds = cms.uint32(0),
    Setup = cms.string('stage2::GTSetup'),
    TMTCheck = cms.bool(True),
    debug = cms.untracked.bool(False),
    lenAMC13Header = cms.untracked.int32(8),
    lenAMC13Trailer = cms.untracked.int32(8),
    lenAMCHeader = cms.untracked.int32(8),
    lenAMCTrailer = cms.untracked.int32(0),
    lenSlinkHeader = cms.untracked.int32(8),
    lenSlinkTrailer = cms.untracked.int32(8)
)


process.hltGtStage2ObjectMap = cms.EDProducer("L1TGlobalProducer",
    AlgorithmTriggersUnmasked = cms.bool(True),
    AlgorithmTriggersUnprescaled = cms.bool(True),
    AlternativeNrBxBoardDaq = cms.uint32(0),
    BstLengthBytes = cms.int32(-1),
    EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    EmulateBxInEvent = cms.int32(1),
    EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    ExtInputTag = cms.InputTag("hltGtStage2Digis"),
    JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1DataBxInEvent = cms.int32(5),
    MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    PrescaleCSVFile = cms.string('prescale_L1TGlobal.csv'),
    PrescaleSet = cms.uint32(1),
    PrintL1Menu = cms.untracked.bool(False),
    ProduceL1GtDaqRecord = cms.bool(True),
    ProduceL1GtObjectMapRecord = cms.bool(True),
    TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    TriggerMenuLuminosity = cms.string('startup'),
    Verbosity = cms.untracked.int32(0)
)


process.hltHbhePhase1Reco = cms.EDProducer("HBHEPhase1Reconstructor",
    algoConfigClass = cms.string(''),
    algorithm = cms.PSet(
        Class = cms.string('SimpleHBHEPhase1Algo'),
        applyDCConstraint = cms.bool(False),
        applyPedConstraint = cms.bool(True),
        applyPulseJitter = cms.bool(False),
        applyTimeConstraint = cms.bool(True),
        applyTimeSlew = cms.bool(True),
        applyTimeSlewM3 = cms.bool(True),
        correctForPhaseContainment = cms.bool(True),
        correctionPhaseNS = cms.double(6.0),
        firstSampleShift = cms.int32(0),
        fitTimes = cms.int32(1),
        meanPed = cms.double(0.0),
        meanTime = cms.double(0.0),
        noiseHPD = cms.double(1.0),
        noiseSiPM = cms.double(1.0),
        pedSigmaHPD = cms.double(0.5),
        pedSigmaSiPM = cms.double(0.00065),
        pedestalUpperLimit = cms.double(2.7),
        pulseJitter = cms.double(1.0),
        respCorrM3 = cms.double(1.0),
        samplesToAdd = cms.int32(2),
        tdcTimeShift = cms.double(0.0),
        timeMax = cms.double(12.5),
        timeMin = cms.double(-12.5),
        timeSigmaHPD = cms.double(5.0),
        timeSigmaSiPM = cms.double(2.5),
        timeSlewPars = cms.vdouble(12.2999, -2.19142, 0.0, 12.2999, -2.19142, 
            0.0, 12.2999, -2.19142, 0.0),
        timeSlewParsType = cms.int32(3),
        ts4Max = cms.vdouble(100.0, 45000.0),
        ts4Min = cms.double(0.0),
        ts4chi2 = cms.vdouble(15.0, 15.0),
        useM2 = cms.bool(False),
        useM3 = cms.bool(True)
    ),
    digiLabelQIE11 = cms.InputTag("hltHcalDigis"),
    digiLabelQIE8 = cms.InputTag("hltHcalDigis"),
    dropZSmarkedPassed = cms.bool(True),
    flagParametersQIE11 = cms.PSet(

    ),
    flagParametersQIE8 = cms.PSet(
        hitEnergyMinimum = cms.double(1.0),
        hitMultiplicityThreshold = cms.int32(17),
        nominalPedestal = cms.double(3.0),
        pulseShapeParameterSets = cms.VPSet(cms.PSet(
            pulseShapeParameters = cms.vdouble(0.0, 100.0, -50.0, 0.0, -15.0, 
                0.15)
        ), 
            cms.PSet(
                pulseShapeParameters = cms.vdouble(100.0, 2000.0, -50.0, 0.0, -5.0, 
                    0.05)
            ), 
            cms.PSet(
                pulseShapeParameters = cms.vdouble(2000.0, 1000000.0, -50.0, 0.0, 95.0, 
                    0.0)
            ), 
            cms.PSet(
                pulseShapeParameters = cms.vdouble(-1000000.0, 1000000.0, 45.0, 0.1, 1000000.0, 
                    0.0)
            ))
    ),
    makeRecHits = cms.bool(True),
    processQIE11 = cms.bool(True),
    processQIE8 = cms.bool(True),
    pulseShapeParametersQIE11 = cms.PSet(

    ),
    pulseShapeParametersQIE8 = cms.PSet(
        LeftSlopeCut = cms.vdouble(5.0, 2.55, 2.55),
        LeftSlopeThreshold = cms.vdouble(250.0, 500.0, 100000.0),
        LinearCut = cms.vdouble(-3.0, -0.054, -0.054),
        LinearThreshold = cms.vdouble(20.0, 100.0, 100000.0),
        MinimumChargeThreshold = cms.double(20.0),
        MinimumTS4TS5Threshold = cms.double(100.0),
        R45MinusOneRange = cms.double(0.2),
        R45PlusOneRange = cms.double(0.2),
        RMS8MaxCut = cms.vdouble(-13.5, -11.5, -11.5),
        RMS8MaxThreshold = cms.vdouble(20.0, 100.0, 100000.0),
        RightSlopeCut = cms.vdouble(5.0, 4.15, 4.15),
        RightSlopeSmallCut = cms.vdouble(1.08, 1.16, 1.16),
        RightSlopeSmallThreshold = cms.vdouble(150.0, 200.0, 100000.0),
        RightSlopeThreshold = cms.vdouble(250.0, 400.0, 100000.0),
        TS3TS4ChargeThreshold = cms.double(70.0),
        TS3TS4UpperChargeThreshold = cms.double(20.0),
        TS4TS5ChargeThreshold = cms.double(70.0),
        TS4TS5LowerCut = cms.vdouble(-1.0, -0.7, -0.5, -0.4, -0.3, 
            0.1),
        TS4TS5LowerThreshold = cms.vdouble(100.0, 120.0, 160.0, 200.0, 300.0, 
            500.0),
        TS4TS5UpperCut = cms.vdouble(1.0, 0.8, 0.75, 0.72),
        TS4TS5UpperThreshold = cms.vdouble(70.0, 90.0, 100.0, 400.0),
        TS5TS6ChargeThreshold = cms.double(70.0),
        TS5TS6UpperChargeThreshold = cms.double(20.0),
        TriangleIgnoreSlow = cms.bool(False),
        TrianglePeakTS = cms.uint32(10000),
        UseDualFit = cms.bool(True)
    ),
    recoParamsFromDB = cms.bool(True),
    saveDroppedInfos = cms.bool(False),
    saveEffectivePedestal = cms.bool(False),
    saveInfos = cms.bool(False),
    setLegacyFlagsQIE11 = cms.bool(False),
    setLegacyFlagsQIE8 = cms.bool(False),
    setNegativeFlagsQIE11 = cms.bool(False),
    setNegativeFlagsQIE8 = cms.bool(False),
    setNoiseFlagsQIE11 = cms.bool(False),
    setNoiseFlagsQIE8 = cms.bool(True),
    setPulseShapeFlagsQIE11 = cms.bool(False),
    setPulseShapeFlagsQIE8 = cms.bool(True),
    sipmQNTStoSum = cms.int32(3),
    sipmQTSShift = cms.int32(0),
    tsFromDB = cms.bool(False)
)


process.hltHbhePhase1RecoMethod2L1EGSeeded = cms.EDProducer("HBHEPhase1Reconstructor",
    algoConfigClass = cms.string(''),
    algorithm = cms.PSet(
        Class = cms.string('SimpleHBHEPhase1Algo'),
        applyDCConstraint = cms.bool(False),
        applyPedConstraint = cms.bool(True),
        applyPulseJitter = cms.bool(False),
        applyTimeConstraint = cms.bool(True),
        applyTimeSlew = cms.bool(True),
        applyTimeSlewM3 = cms.bool(True),
        correctForPhaseContainment = cms.bool(True),
        correctionPhaseNS = cms.double(6.0),
        firstSampleShift = cms.int32(0),
        fitTimes = cms.int32(1),
        meanPed = cms.double(0.0),
        meanTime = cms.double(0.0),
        noiseHPD = cms.double(1.0),
        noiseSiPM = cms.double(1.0),
        pedSigmaHPD = cms.double(0.5),
        pedSigmaSiPM = cms.double(0.00065),
        pedestalUpperLimit = cms.double(2.7),
        pulseJitter = cms.double(1.0),
        respCorrM3 = cms.double(1.0),
        samplesToAdd = cms.int32(2),
        tdcTimeShift = cms.double(0.0),
        timeMax = cms.double(12.5),
        timeMin = cms.double(-12.5),
        timeSigmaHPD = cms.double(5.0),
        timeSigmaSiPM = cms.double(2.5),
        timeSlewPars = cms.vdouble(12.2999, -2.19142, 0.0, 12.2999, -2.19142, 
            0.0, 12.2999, -2.19142, 0.0),
        timeSlewParsType = cms.int32(3),
        ts4Max = cms.vdouble(100.0, 45000.0),
        ts4Min = cms.double(0.0),
        ts4chi2 = cms.vdouble(15.0, 15.0),
        useM2 = cms.bool(True),
        useM3 = cms.bool(False)
    ),
    digiLabelQIE11 = cms.InputTag("hltHcalDigis"),
    digiLabelQIE8 = cms.InputTag("hltHcalDigisL1EGSeeded"),
    dropZSmarkedPassed = cms.bool(True),
    flagParametersQIE11 = cms.PSet(

    ),
    flagParametersQIE8 = cms.PSet(
        hitEnergyMinimum = cms.double(1.0),
        hitMultiplicityThreshold = cms.int32(17),
        nominalPedestal = cms.double(3.0),
        pulseShapeParameterSets = cms.VPSet(cms.PSet(
            pulseShapeParameters = cms.vdouble(0.0, 100.0, -50.0, 0.0, -15.0, 
                0.15)
        ), 
            cms.PSet(
                pulseShapeParameters = cms.vdouble(100.0, 2000.0, -50.0, 0.0, -5.0, 
                    0.05)
            ), 
            cms.PSet(
                pulseShapeParameters = cms.vdouble(2000.0, 1000000.0, -50.0, 0.0, 95.0, 
                    0.0)
            ), 
            cms.PSet(
                pulseShapeParameters = cms.vdouble(-1000000.0, 1000000.0, 45.0, 0.1, 1000000.0, 
                    0.0)
            ))
    ),
    makeRecHits = cms.bool(True),
    processQIE11 = cms.bool(True),
    processQIE8 = cms.bool(True),
    pulseShapeParametersQIE11 = cms.PSet(

    ),
    pulseShapeParametersQIE8 = cms.PSet(
        LeftSlopeCut = cms.vdouble(5.0, 2.55, 2.55),
        LeftSlopeThreshold = cms.vdouble(250.0, 500.0, 100000.0),
        LinearCut = cms.vdouble(-3.0, -0.054, -0.054),
        LinearThreshold = cms.vdouble(20.0, 100.0, 100000.0),
        MinimumChargeThreshold = cms.double(20.0),
        MinimumTS4TS5Threshold = cms.double(100.0),
        R45MinusOneRange = cms.double(0.2),
        R45PlusOneRange = cms.double(0.2),
        RMS8MaxCut = cms.vdouble(-13.5, -11.5, -11.5),
        RMS8MaxThreshold = cms.vdouble(20.0, 100.0, 100000.0),
        RightSlopeCut = cms.vdouble(5.0, 4.15, 4.15),
        RightSlopeSmallCut = cms.vdouble(1.08, 1.16, 1.16),
        RightSlopeSmallThreshold = cms.vdouble(150.0, 200.0, 100000.0),
        RightSlopeThreshold = cms.vdouble(250.0, 400.0, 100000.0),
        TS3TS4ChargeThreshold = cms.double(70.0),
        TS3TS4UpperChargeThreshold = cms.double(20.0),
        TS4TS5ChargeThreshold = cms.double(70.0),
        TS4TS5LowerCut = cms.vdouble(-1.0, -0.7, -0.5, -0.4, -0.3, 
            0.1),
        TS4TS5LowerThreshold = cms.vdouble(100.0, 120.0, 160.0, 200.0, 300.0, 
            500.0),
        TS4TS5UpperCut = cms.vdouble(1.0, 0.8, 0.75, 0.72),
        TS4TS5UpperThreshold = cms.vdouble(70.0, 90.0, 100.0, 400.0),
        TS5TS6ChargeThreshold = cms.double(70.0),
        TS5TS6UpperChargeThreshold = cms.double(20.0),
        TriangleIgnoreSlow = cms.bool(False),
        TrianglePeakTS = cms.uint32(10000),
        UseDualFit = cms.bool(True)
    ),
    recoParamsFromDB = cms.bool(True),
    saveDroppedInfos = cms.bool(False),
    saveEffectivePedestal = cms.bool(False),
    saveInfos = cms.bool(False),
    setLegacyFlagsQIE11 = cms.bool(False),
    setLegacyFlagsQIE8 = cms.bool(False),
    setNegativeFlagsQIE11 = cms.bool(False),
    setNegativeFlagsQIE8 = cms.bool(False),
    setNoiseFlagsQIE11 = cms.bool(False),
    setNoiseFlagsQIE8 = cms.bool(True),
    setPulseShapeFlagsQIE11 = cms.bool(False),
    setPulseShapeFlagsQIE8 = cms.bool(True),
    sipmQNTStoSum = cms.int32(3),
    sipmQTSShift = cms.int32(0),
    tsFromDB = cms.bool(False)
)


process.hltHbhereco = cms.EDProducer("HBHEPlan1Combiner",
    algorithm = cms.PSet(
        Class = cms.string('SimplePlan1RechitCombiner')
    ),
    hbheInput = cms.InputTag("hltHbhePhase1Reco"),
    ignorePlan1Topology = cms.bool(False),
    usePlan1Mode = cms.bool(True)
)


process.hltHbherecoMethod2L1EGSeeded = cms.EDProducer("HBHEPlan1Combiner",
    algorithm = cms.PSet(
        Class = cms.string('SimplePlan1RechitCombiner')
    ),
    hbheInput = cms.InputTag("hltHbhePhase1RecoMethod2L1EGSeeded"),
    ignorePlan1Topology = cms.bool(False),
    usePlan1Mode = cms.bool(True)
)


process.hltHcalCalibrationRaw = cms.EDProducer("EvFFEDSelector",
    fedList = cms.vuint32(700, 701, 702, 703, 704, 
        705, 706, 707, 708, 709, 
        710, 711, 712, 713, 714, 
        715, 716, 717, 718, 719, 
        720, 721, 722, 723, 724, 
        725, 726, 727, 728, 729, 
        730, 731, 1024, 1100, 1101, 
        1102, 1103, 1104, 1105, 1106, 
        1107, 1108, 1109, 1110, 1111, 
        1112, 1113, 1114, 1115, 1116, 
        1117, 1118, 1119, 1120, 1121, 
        1122, 1123, 1124, 1125, 1126, 
        1127, 1128, 1129, 1130, 1131, 
        1132, 1133, 1134, 1135, 1136, 
        1137, 1138, 1139, 1140, 1141, 
        1142, 1143, 1144, 1145, 1146, 
        1147, 1148, 1149, 1150, 1151, 
        1152, 1153, 1154, 1155, 1156, 
        1157, 1158, 1159, 1160, 1161, 
        1162, 1163, 1164, 1165, 1166, 
        1167, 1168, 1169, 1170, 1171, 
        1172, 1173, 1174, 1175, 1176, 
        1177, 1178, 1179, 1180, 1181, 
        1182, 1183, 1184, 1185, 1186, 
        1187, 1188, 1189, 1190, 1191, 
        1192, 1193, 1194, 1195, 1196, 
        1197, 1198, 1199),
    inputTag = cms.InputTag("rawDataCollector")
)


process.hltHcalDigis = cms.EDProducer("HcalRawToDigi",
    ComplainEmptyData = cms.untracked.bool(False),
    ElectronicsMap = cms.string(''),
    ExpectedOrbitMessageTime = cms.untracked.int32(-1),
    FEDs = cms.untracked.vint32(),
    FilterDataQuality = cms.bool(True),
    HcalFirstFED = cms.untracked.int32(700),
    InputLabel = cms.InputTag("rawDataCollector"),
    UnpackCalib = cms.untracked.bool(True),
    UnpackTTP = cms.untracked.bool(False),
    UnpackUMNio = cms.untracked.bool(True),
    UnpackZDC = cms.untracked.bool(True),
    UnpackerMode = cms.untracked.int32(0),
    firstSample = cms.int32(0),
    lastSample = cms.int32(9),
    silent = cms.untracked.bool(True)
)


process.hltHcalDigisL1EGSeeded = cms.EDProducer("HLTHcalDigisInRegionsProducer",
    etaPhiRegions = cms.VPSet(cms.PSet(
        inputColl = cms.InputTag("hltEgammaCandidates"),
        maxDEta = cms.double(0.0),
        maxDPhi = cms.double(0.0),
        maxDeltaR = cms.double(0.4),
        maxEt = cms.double(-1.0),
        minEt = cms.double(5.0),
        type = cms.string('RecoEcalCandidate')
    )),
    inputCollTags = cms.VInputTag("hltHcalDigis"),
    outputProductNames = cms.vstring('')
)


process.hltHfprereco = cms.EDProducer("HFPreReconstructor",
    digiLabel = cms.InputTag("hltHcalDigis"),
    dropZSmarkedPassed = cms.bool(True),
    forceSOI = cms.int32(-1),
    soiShift = cms.int32(0),
    sumAllTimeSlices = cms.bool(False),
    tsFromDB = cms.bool(False)
)


process.hltHfreco = cms.EDProducer("HFPhase1Reconstructor",
    PETstat = cms.PSet(
        HcalAcceptSeverityLevel = cms.int32(9),
        longETParams = cms.vdouble(0.0, 0.0, 0.0, 0.0, 0.0, 
            0.0, 0.0, 0.0, 0.0, 0.0, 
            0.0, 0.0, 0.0),
        longEnergyParams = cms.vdouble(43.5, 45.7, 48.32, 51.36, 54.82, 
            58.7, 63.0, 67.72, 72.86, 78.42, 
            84.4, 90.8, 97.62),
        long_R = cms.vdouble(0.98),
        long_R_29 = cms.vdouble(0.8),
        shortETParams = cms.vdouble(0.0, 0.0, 0.0, 0.0, 0.0, 
            0.0, 0.0, 0.0, 0.0, 0.0, 
            0.0, 0.0, 0.0),
        shortEnergyParams = cms.vdouble(35.1773, 35.37, 35.7933, 36.4472, 37.3317, 
            38.4468, 39.7925, 41.3688, 43.1757, 45.2132, 
            47.4813, 49.98, 52.7093),
        short_R = cms.vdouble(0.8),
        short_R_29 = cms.vdouble(0.8)
    ),
    S8S1stat = cms.PSet(
        HcalAcceptSeverityLevel = cms.int32(9),
        isS8S1 = cms.bool(True),
        longETParams = cms.vdouble(0.0, 0.0, 0.0, 0.0, 0.0, 
            0.0, 0.0, 0.0, 0.0, 0.0, 
            0.0, 0.0, 0.0),
        longEnergyParams = cms.vdouble(40.0, 100.0, 100.0, 100.0, 100.0, 
            100.0, 100.0, 100.0, 100.0, 100.0, 
            100.0, 100.0, 100.0),
        long_optimumSlope = cms.vdouble(0.3, 0.1, 0.1, 0.1, 0.1, 
            0.1, 0.1, 0.1, 0.1, 0.1, 
            0.1, 0.1, 0.1),
        shortETParams = cms.vdouble(0.0, 0.0, 0.0, 0.0, 0.0, 
            0.0, 0.0, 0.0, 0.0, 0.0, 
            0.0, 0.0, 0.0),
        shortEnergyParams = cms.vdouble(40.0, 100.0, 100.0, 100.0, 100.0, 
            100.0, 100.0, 100.0, 100.0, 100.0, 
            100.0, 100.0, 100.0),
        short_optimumSlope = cms.vdouble(0.3, 0.1, 0.1, 0.1, 0.1, 
            0.1, 0.1, 0.1, 0.1, 0.1, 
            0.1, 0.1, 0.1)
    ),
    S9S1stat = cms.PSet(
        HcalAcceptSeverityLevel = cms.int32(9),
        isS8S1 = cms.bool(False),
        longETParams = cms.vdouble(0.0, 0.0, 0.0, 0.0, 0.0, 
            0.0, 0.0, 0.0, 0.0, 0.0, 
            0.0, 0.0, 0.0),
        longEnergyParams = cms.vdouble(43.5, 45.7, 48.32, 51.36, 54.82, 
            58.7, 63.0, 67.72, 72.86, 78.42, 
            84.4, 90.8, 97.62),
        long_optimumSlope = cms.vdouble(-99999.0, 0.0164905, 0.0238698, 0.0321383, 0.041296, 
            0.0513428, 0.0622789, 0.0741041, 0.0868186, 0.100422, 
            0.135313, 0.136289, 0.0589927),
        shortETParams = cms.vdouble(0.0, 0.0, 0.0, 0.0, 0.0, 
            0.0, 0.0, 0.0, 0.0, 0.0, 
            0.0, 0.0, 0.0),
        shortEnergyParams = cms.vdouble(35.1773, 35.37, 35.7933, 36.4472, 37.3317, 
            38.4468, 39.7925, 41.3688, 43.1757, 45.2132, 
            47.4813, 49.98, 52.7093),
        short_optimumSlope = cms.vdouble(-99999.0, 0.0164905, 0.0238698, 0.0321383, 0.041296, 
            0.0513428, 0.0622789, 0.0741041, 0.0868186, 0.100422, 
            0.135313, 0.136289, 0.0589927)
    ),
    algoConfigClass = cms.string('HFPhase1PMTParams'),
    algorithm = cms.PSet(
        Class = cms.string('HFFlexibleTimeCheck'),
        energyWeights = cms.vdouble(1.0, 1.0, 1.0, 0.0, 1.0, 
            0.0, 2.0, 0.0, 2.0, 0.0, 
            2.0, 0.0, 1.0, 0.0, 0.0, 
            1.0, 0.0, 1.0, 0.0, 2.0, 
            0.0, 2.0, 0.0, 2.0, 0.0, 
            1.0),
        rejectAllFailures = cms.bool(True),
        soiPhase = cms.uint32(1),
        tfallIfNoTDC = cms.double(-101.0),
        timeShift = cms.double(0.0),
        tlimits = cms.vdouble(-1000.0, 1000.0, -1000.0, 1000.0),
        triseIfNoTDC = cms.double(-100.0)
    ),
    checkChannelQualityForDepth3and4 = cms.bool(False),
    inputLabel = cms.InputTag("hltHfprereco"),
    setNoiseFlags = cms.bool(True),
    useChannelQualityFromDB = cms.bool(False)
)


process.hltHiCorrectedIslandBarrelSuperClustersHI = cms.EDProducer("HiEgammaSCCorrectionMaker",
    VerbosityLevel = cms.string('ERROR'),
    applyEnergyCorrection = cms.bool(True),
    corectedSuperClusterCollection = cms.string(''),
    etThresh = cms.double(0.0),
    isl_fCorrPset = cms.PSet(
        brLinearHighThr = cms.double(0.0),
        brLinearLowThr = cms.double(0.0),
        fBremThVect = cms.vdouble(1.2, 1.2),
        fBremVect = cms.vdouble(-0.773799, 2.73438, -1.07235, 0.986821, -0.0101822, 
            0.000306744, 1.00595, -0.0495958, 0.00451986, 1.00595, 
            -0.0495958, 0.00451986),
        fEtEtaVect = cms.vdouble(0.9497, 0.006985, 1.03754, -0.0142667, -0.0233993, 
            0.0, 0.0, 0.908915, 0.0137322, 16.9602, 
            -29.3093, 19.8976, -5.92666, 0.654571),
        fEtaVect = cms.vdouble(0.993, 0.0, 0.00546, 1.165, -0.180844, 
            0.040312),
        maxR9 = cms.double(1.5),
        minR9Barrel = cms.double(0.94),
        minR9Endcap = cms.double(0.95)
    ),
    rawSuperClusterProducer = cms.InputTag("hltHiIslandSuperClustersHI","islandBarrelSuperClustersHI"),
    recHitProducer = cms.InputTag("hltEcalRecHit","EcalRecHitsEB"),
    sigmaElectronicNoise = cms.double(0.03),
    superClusterAlgo = cms.string('Island')
)


process.hltHiCorrectedIslandEndcapSuperClustersHI = cms.EDProducer("HiEgammaSCCorrectionMaker",
    VerbosityLevel = cms.string('ERROR'),
    applyEnergyCorrection = cms.bool(True),
    corectedSuperClusterCollection = cms.string(''),
    etThresh = cms.double(0.0),
    isl_fCorrPset = cms.PSet(
        brLinearHighThr = cms.double(0.0),
        brLinearLowThr = cms.double(0.0),
        fBremThVect = cms.vdouble(1.2, 1.2),
        fBremVect = cms.vdouble(-0.773799, 2.73438, -1.07235, 0.986821, -0.0101822, 
            0.000306744, 1.00595, -0.0495958, 0.00451986, 1.00595, 
            -0.0495958, 0.00451986),
        fEtEtaVect = cms.vdouble(0.9497, 0.006985, 1.03754, -0.0142667, -0.0233993, 
            0.0, 0.0, 0.908915, 0.0137322, 16.9602, 
            -29.3093, 19.8976, -5.92666, 0.654571),
        fEtaVect = cms.vdouble(0.993, 0.0, 0.00546, 1.165, -0.180844, 
            0.040312),
        maxR9 = cms.double(1.5),
        minR9Barrel = cms.double(0.94),
        minR9Endcap = cms.double(0.95)
    ),
    rawSuperClusterProducer = cms.InputTag("hltHiIslandSuperClustersHI","islandEndcapSuperClustersHI"),
    recHitProducer = cms.InputTag("hltEcalRecHit","EcalRecHitsEE"),
    sigmaElectronicNoise = cms.double(0.15),
    superClusterAlgo = cms.string('Island')
)


process.hltHiIslandSuperClustersHI = cms.EDProducer("HiSuperClusterProducer",
    VerbosityLevel = cms.string('ERROR'),
    barrelBCEnergyThreshold = cms.double(0.0),
    barrelClusterCollection = cms.string('islandBarrelBasicClustersHI'),
    barrelClusterProducer = cms.string('hltIslandBasicClustersHI'),
    barrelEtaSearchRoad = cms.double(0.07),
    barrelPhiSearchRoad = cms.double(0.8),
    barrelSuperclusterCollection = cms.string('islandBarrelSuperClustersHI'),
    doBarrel = cms.bool(True),
    doEndcaps = cms.bool(True),
    endcapBCEnergyThreshold = cms.double(0.0),
    endcapClusterCollection = cms.string('islandEndcapBasicClustersHI'),
    endcapClusterProducer = cms.string('hltIslandBasicClustersHI'),
    endcapEtaSearchRoad = cms.double(0.14),
    endcapPhiSearchRoad = cms.double(0.6),
    endcapSuperclusterCollection = cms.string('islandEndcapSuperClustersHI'),
    seedTransverseEnergyThreshold = cms.double(1.0)
)


process.hltHoreco = cms.EDProducer("HcalHitReconstructor",
    HFInWindowStat = cms.PSet(

    ),
    PETstat = cms.PSet(

    ),
    S8S1stat = cms.PSet(

    ),
    S9S1stat = cms.PSet(

    ),
    Subdetector = cms.string('HO'),
    applyDCConstraint = cms.bool(False),
    applyPedConstraint = cms.bool(True),
    applyPulseJitter = cms.bool(False),
    applyTimeConstraint = cms.bool(True),
    applyTimeSlew = cms.bool(True),
    applyTimeSlewM3 = cms.bool(True),
    correctForPhaseContainment = cms.bool(True),
    correctForTimeslew = cms.bool(True),
    correctTiming = cms.bool(False),
    correctionPhaseNS = cms.double(13.0),
    dataOOTCorrectionCategory = cms.string('Data'),
    dataOOTCorrectionName = cms.string(''),
    digiLabel = cms.InputTag("hltHcalDigis"),
    digiTimeFromDB = cms.bool(True),
    digistat = cms.PSet(

    ),
    dropZSmarkedPassed = cms.bool(True),
    firstAuxTS = cms.int32(4),
    firstSample = cms.int32(4),
    fitTimes = cms.int32(1),
    flagParameters = cms.PSet(

    ),
    hfTimingTrustParameters = cms.PSet(

    ),
    hscpParameters = cms.PSet(

    ),
    mcOOTCorrectionCategory = cms.string('MC'),
    mcOOTCorrectionName = cms.string(''),
    meanPed = cms.double(0.0),
    meanTime = cms.double(-2.5),
    noiseHPD = cms.double(1.0),
    noiseSiPM = cms.double(1.0),
    pedSigmaHPD = cms.double(0.5),
    pedSigmaSiPM = cms.double(0.00065),
    pedestalUpperLimit = cms.double(2.7),
    puCorrMethod = cms.int32(0),
    pulseJitter = cms.double(1.0),
    pulseShapeParameters = cms.PSet(

    ),
    recoParamsFromDB = cms.bool(True),
    respCorrM3 = cms.double(1.0),
    samplesToAdd = cms.int32(4),
    saturationParameters = cms.PSet(
        maxADCvalue = cms.int32(127)
    ),
    setHSCPFlags = cms.bool(False),
    setNegativeFlags = cms.bool(False),
    setNoiseFlags = cms.bool(False),
    setPulseShapeFlags = cms.bool(False),
    setSaturationFlags = cms.bool(False),
    setTimingShapedCutsFlags = cms.bool(False),
    setTimingTrustFlags = cms.bool(False),
    timeMax = cms.double(10.0),
    timeMin = cms.double(-15.0),
    timeSigmaHPD = cms.double(5.0),
    timeSigmaSiPM = cms.double(2.5),
    timeSlewPars = cms.vdouble(12.2999, -2.19142, 0.0, 12.2999, -2.19142, 
        0.0, 12.2999, -2.19142, 0.0),
    timeSlewParsType = cms.int32(3),
    timingshapedcutsParameters = cms.PSet(

    ),
    ts4Max = cms.vdouble(100.0, 45000.0),
    ts4Min = cms.double(5.0),
    ts4chi2 = cms.vdouble(15.0, 15.0),
    tsFromDB = cms.bool(True),
    useLeakCorrection = cms.bool(False)
)


process.hltHtMht = cms.EDProducer("HLTHtMhtProducer",
    excludePFMuons = cms.bool(False),
    jetsLabel = cms.InputTag("hltAK4CaloJetsCorrected"),
    maxEtaJetHt = cms.double(2.5),
    maxEtaJetMht = cms.double(5.0),
    minNJetHt = cms.int32(0),
    minNJetMht = cms.int32(0),
    minPtJetHt = cms.double(40.0),
    minPtJetMht = cms.double(30.0),
    pfCandidatesLabel = cms.InputTag(""),
    usePt = cms.bool(False)
)


process.hltInclusiveMergedVerticesPF = cms.EDProducer("VertexMerger",
    maxFraction = cms.double(0.2),
    minSignificance = cms.double(10.0),
    secondaryVertices = cms.InputTag("hltTrackVertexArbitratorPF")
)


process.hltInclusiveSecondaryVerticesPF = cms.EDProducer("VertexMerger",
    maxFraction = cms.double(0.7),
    minSignificance = cms.double(2.0),
    secondaryVertices = cms.InputTag("hltInclusiveVertexFinderPF")
)


process.hltInclusiveVertexFinderPF = cms.EDProducer("InclusiveVertexFinder",
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterizer = cms.PSet(
        clusterMaxDistance = cms.double(0.05),
        clusterMaxSignificance = cms.double(4.5),
        clusterMinAngleCosine = cms.double(0.5),
        distanceRatio = cms.double(20.0),
        seedMax3DIPSignificance = cms.double(9999.0),
        seedMax3DIPValue = cms.double(9999.0),
        seedMin3DIPSignificance = cms.double(1.2),
        seedMin3DIPValue = cms.double(0.005)
    ),
    fitterRatio = cms.double(0.25),
    fitterSigmacut = cms.double(3.0),
    fitterTini = cms.double(256.0),
    maxNTracks = cms.uint32(30),
    maximumLongitudinalImpactParameter = cms.double(0.3),
    minHits = cms.uint32(8),
    minPt = cms.double(0.8),
    primaryVertices = cms.InputTag("hltVerticesPFFilter"),
    tracks = cms.InputTag("hltPFMuonMerging"),
    useDirectVertexFitter = cms.bool(True),
    useVertexReco = cms.bool(True),
    vertexMinAngleCosine = cms.double(0.95),
    vertexMinDLen2DSig = cms.double(2.5),
    vertexMinDLenSig = cms.double(0.5),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        primcut = cms.double(1.0),
        seccut = cms.double(3.0),
        smoothing = cms.bool(True)
    )
)


process.hltIslandBasicClustersHI = cms.EDProducer("IslandClusterProducer",
    IslandBarrelSeedThr = cms.double(0.5),
    IslandEndcapSeedThr = cms.double(0.18),
    VerbosityLevel = cms.string('ERROR'),
    barrelClusterCollection = cms.string('islandBarrelBasicClustersHI'),
    barrelHits = cms.InputTag("hltEcalRecHit","EcalRecHitsEB"),
    barrelShapeAssociation = cms.string('islandBarrelShapeAssoc'),
    clustershapecollectionEB = cms.string('islandBarrelShape'),
    clustershapecollectionEE = cms.string('islandEndcapShape'),
    endcapClusterCollection = cms.string('islandEndcapBasicClustersHI'),
    endcapHits = cms.InputTag("hltEcalRecHit","EcalRecHitsEE"),
    endcapShapeAssociation = cms.string('islandEndcapShapeAssoc'),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    )
)


process.hltIter0ElectronsCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClusters"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTIter0PSetTrajectoryBuilderIT')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltIter0ElectronsPixelSeedsFromPixelTracks"),
    useHitsSplitting = cms.bool(False)
)


process.hltIter0ElectronsCtfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hltIterX'),
    Fitter = cms.string('hltESPFittingSmootherIT'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClusters"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltIter0ElectronsCkfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltIter0ElectronsPixelSeedsFromPixelTracks = cms.EDProducer("SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag("hltPixelTracksElectrons"),
    InputVertexCollection = cms.InputTag("hltPixelVerticesElectrons"),
    SeedCreatorPSet = cms.PSet(
        refToPSet_ = cms.string('HLTSeedFromProtoTracks')
    ),
    TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
    originHalfLength = cms.double(0.3),
    originRadius = cms.double(0.1),
    useEventsWithNoVertex = cms.bool(True),
    usePV = cms.bool(True),
    useProtoTrackKinematics = cms.bool(False)
)


process.hltIter0ElectronsTrackSelectionHighPurity = cms.EDProducer("AnalyticalTrackSelector",
    applyAbsCutsIfNoPV = cms.bool(False),
    applyAdaptedPVCuts = cms.bool(True),
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    chi2n_no1Dmod_par = cms.double(9999.0),
    chi2n_par = cms.double(0.7),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    d0_par1 = cms.vdouble(0.3, 4.0),
    d0_par2 = cms.vdouble(0.4, 4.0),
    dz_par1 = cms.vdouble(0.35, 4.0),
    dz_par2 = cms.vdouble(0.4, 4.0),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(1),
    max_d0 = cms.double(100.0),
    max_d0NoPV = cms.double(100.0),
    max_eta = cms.double(9999.0),
    max_lostHitFraction = cms.double(1.0),
    max_minMissHitOutOrIn = cms.int32(99),
    max_relpterr = cms.double(9999.0),
    max_z0 = cms.double(100.0),
    max_z0NoPV = cms.double(100.0),
    minHitsToBypassChecks = cms.uint32(20),
    minNumber3DLayers = cms.uint32(0),
    minNumberLayers = cms.uint32(3),
    min_eta = cms.double(-9999.0),
    min_nhits = cms.uint32(0),
    nSigmaZ = cms.double(3.0),
    qualityBit = cms.string('highPurity'),
    res_par = cms.vdouble(0.003, 0.001),
    src = cms.InputTag("hltIter0ElectronsCtfWithMaterialTracks"),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(False),
    vertexCut = cms.string('tracksSize>=3'),
    vertices = cms.InputTag("hltPixelVerticesElectrons"),
    vtxNumber = cms.int32(-1)
)


process.hltIter0IterL3FromL1MuonCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClusters"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('none'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTIter0IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltIter0IterL3FromL1MuonPixelSeedsFromPixelTracks"),
    useHitsSplitting = cms.bool(True)
)


process.hltIter0IterL3FromL1MuonCtfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hltIter0'),
    Fitter = cms.string('hltESPFittingSmootherIT'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClusters"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltIter0IterL3FromL1MuonCkfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltIter0IterL3FromL1MuonPixelSeedsFromPixelTracks = cms.EDProducer("SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag("hltIterL3FromL1MuonPixelTracks"),
    InputVertexCollection = cms.InputTag("hltIterL3FromL1MuonTrimmedPixelVertices"),
    SeedCreatorPSet = cms.PSet(
        refToPSet_ = cms.string('HLTSeedFromProtoTracks')
    ),
    TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
    originHalfLength = cms.double(0.3),
    originRadius = cms.double(0.1),
    useEventsWithNoVertex = cms.bool(True),
    usePV = cms.bool(False),
    useProtoTrackKinematics = cms.bool(False)
)


process.hltIter0IterL3FromL1MuonTrackCutClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 3.40282346639e+38),
            d0err_par = cms.vdouble(0.001, 0.001, 3.40282346639e+38),
            dr_exp = cms.vint32(4, 4, 2147483647),
            dr_par1 = cms.vdouble(0.4, 0.4, 3.40282346639e+38),
            dr_par2 = cms.vdouble(0.3, 0.3, 3.40282346639e+38)
        ),
        dz_par = cms.PSet(
            dz_exp = cms.vint32(4, 4, 2147483647),
            dz_par1 = cms.vdouble(0.4, 0.4, 3.40282346639e+38),
            dz_par2 = cms.vdouble(0.35, 0.35, 3.40282346639e+38)
        ),
        maxChi2 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxChi2n = cms.vdouble(1.2, 1.0, 0.7),
        maxDr = cms.vdouble(0.5, 0.03, 3.40282346639e+38),
        maxDz = cms.vdouble(0.5, 0.2, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24.0, 100.0),
        maxLostLayers = cms.vint32(1, 1, 1),
        min3DLayers = cms.vint32(0, 3, 4),
        minLayers = cms.vint32(3, 3, 4),
        minNVtxTrk = cms.int32(3),
        minNdof = cms.vdouble(1e-05, 1e-05, 1e-05),
        minPixelHits = cms.vint32(0, 3, 4)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("hltIter0IterL3FromL1MuonCtfWithMaterialTracks"),
    vertices = cms.InputTag("hltIterL3FromL1MuonTrimmedPixelVertices")
)


process.hltIter0IterL3FromL1MuonTrackSelectionHighPurity = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltIter0IterL3FromL1MuonTrackCutClassifier","MVAValues"),
    originalQualVals = cms.InputTag("hltIter0IterL3FromL1MuonTrackCutClassifier","QualityMasks"),
    originalSource = cms.InputTag("hltIter0IterL3FromL1MuonCtfWithMaterialTracks")
)


process.hltIter0IterL3MuonCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClusters"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('none'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTIter0IterL3MuonPSetGroupedCkfTrajectoryBuilderIT')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltIter0IterL3MuonPixelSeedsFromPixelTracks"),
    useHitsSplitting = cms.bool(True)
)


process.hltIter0IterL3MuonCtfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hltIter0'),
    Fitter = cms.string('hltESPFittingSmootherIT'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClusters"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltIter0IterL3MuonCkfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltIter0IterL3MuonPixelSeedsFromPixelTracks = cms.EDProducer("SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag("hltIterL3MuonPixelTracks"),
    InputVertexCollection = cms.InputTag("hltIterL3MuonTrimmedPixelVertices"),
    SeedCreatorPSet = cms.PSet(
        refToPSet_ = cms.string('HLTSeedFromProtoTracks')
    ),
    TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
    originHalfLength = cms.double(0.3),
    originRadius = cms.double(0.1),
    useEventsWithNoVertex = cms.bool(True),
    usePV = cms.bool(False),
    useProtoTrackKinematics = cms.bool(False)
)


process.hltIter0IterL3MuonTrackCutClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 3.40282346639e+38),
            d0err_par = cms.vdouble(0.001, 0.001, 3.40282346639e+38),
            dr_exp = cms.vint32(4, 4, 2147483647),
            dr_par1 = cms.vdouble(0.4, 0.4, 3.40282346639e+38),
            dr_par2 = cms.vdouble(0.3, 0.3, 3.40282346639e+38)
        ),
        dz_par = cms.PSet(
            dz_exp = cms.vint32(4, 4, 2147483647),
            dz_par1 = cms.vdouble(0.4, 0.4, 3.40282346639e+38),
            dz_par2 = cms.vdouble(0.35, 0.35, 3.40282346639e+38)
        ),
        maxChi2 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxChi2n = cms.vdouble(1.2, 1.0, 0.7),
        maxDr = cms.vdouble(0.5, 0.03, 3.40282346639e+38),
        maxDz = cms.vdouble(0.5, 0.2, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24.0, 100.0),
        maxLostLayers = cms.vint32(1, 1, 1),
        min3DLayers = cms.vint32(0, 3, 4),
        minLayers = cms.vint32(3, 3, 4),
        minNVtxTrk = cms.int32(3),
        minNdof = cms.vdouble(1e-05, 1e-05, 1e-05),
        minPixelHits = cms.vint32(0, 3, 4)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("hltIter0IterL3MuonCtfWithMaterialTracks"),
    vertices = cms.InputTag("hltIterL3MuonTrimmedPixelVertices")
)


process.hltIter0IterL3MuonTrackSelectionHighPurity = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltIter0IterL3MuonTrackCutClassifier","MVAValues"),
    originalQualVals = cms.InputTag("hltIter0IterL3MuonTrackCutClassifier","QualityMasks"),
    originalSource = cms.InputTag("hltIter0IterL3MuonCtfWithMaterialTracks")
)


process.hltIter0L3MuonCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClusters"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTIter0GroupedCkfTrajectoryBuilderIT')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltIter0L3MuonPixelSeedsFromPixelTracks"),
    useHitsSplitting = cms.bool(False)
)


process.hltIter0L3MuonCtfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hltIterX'),
    Fitter = cms.string('hltESPFittingSmootherIT'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClusters"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltIter0L3MuonCkfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltIter0L3MuonPixelSeedsFromPixelTracks = cms.EDProducer("SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag("hltPixelTracksForSeedsL3Muon"),
    InputVertexCollection = cms.InputTag("hltPixelVerticesL3Muon"),
    SeedCreatorPSet = cms.PSet(
        refToPSet_ = cms.string('HLTSeedFromProtoTracks')
    ),
    TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
    originHalfLength = cms.double(0.2),
    originRadius = cms.double(0.1),
    useEventsWithNoVertex = cms.bool(True),
    usePV = cms.bool(False),
    useProtoTrackKinematics = cms.bool(False)
)


process.hltIter0L3MuonTrackCutClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 0.003),
            d0err_par = cms.vdouble(0.001, 0.001, 0.001),
            dr_exp = cms.vint32(4, 4, 4),
            dr_par1 = cms.vdouble(0.4, 0.4, 0.4),
            dr_par2 = cms.vdouble(0.3, 0.3, 0.3)
        ),
        dz_par = cms.PSet(
            dz_exp = cms.vint32(4, 4, 4),
            dz_par1 = cms.vdouble(0.4, 0.4, 0.4),
            dz_par2 = cms.vdouble(0.35, 0.35, 0.35)
        ),
        maxChi2 = cms.vdouble(9999.0, 25.0, 16.0),
        maxChi2n = cms.vdouble(1.2, 1.0, 0.7),
        maxDr = cms.vdouble(0.5, 0.03, 3.40282346639e+38),
        maxDz = cms.vdouble(0.5, 0.2, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24.0, 15.0),
        maxLostLayers = cms.vint32(1, 1, 1),
        min3DLayers = cms.vint32(0, 3, 4),
        minLayers = cms.vint32(3, 3, 4),
        minNVtxTrk = cms.int32(3),
        minNdof = cms.vdouble(1e-05, 1e-05, 1e-05),
        minPixelHits = cms.vint32(0, 3, 4)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("hltIter0L3MuonCtfWithMaterialTracks"),
    vertices = cms.InputTag("hltPixelVerticesL3Muon")
)


process.hltIter0L3MuonTrackSelectionHighPurity = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltIter0L3MuonTrackCutClassifier","MVAValues"),
    originalQualVals = cms.InputTag("hltIter0L3MuonTrackCutClassifier","QualityMasks"),
    originalSource = cms.InputTag("hltIter0L3MuonCtfWithMaterialTracks")
)


process.hltIter0PFLowPixelSeedsFromPixelTracks = cms.EDProducer("SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag("hltPixelTracks"),
    InputVertexCollection = cms.InputTag("hltTrimmedPixelVertices"),
    SeedCreatorPSet = cms.PSet(
        refToPSet_ = cms.string('HLTSeedFromProtoTracks')
    ),
    TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
    originHalfLength = cms.double(0.3),
    originRadius = cms.double(0.1),
    useEventsWithNoVertex = cms.bool(True),
    usePV = cms.bool(False),
    useProtoTrackKinematics = cms.bool(False)
)


process.hltIter0PFlowCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClusters"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTIter0GroupedCkfTrajectoryBuilderIT')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltIter0PFLowPixelSeedsFromPixelTracks"),
    useHitsSplitting = cms.bool(False)
)


process.hltIter0PFlowCtfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hltIter0'),
    Fitter = cms.string('hltESPFittingSmootherIT'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClusters"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltIter0PFlowCkfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltIter0PFlowTrackCutClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 0.003),
            d0err_par = cms.vdouble(0.001, 0.001, 0.001),
            dr_exp = cms.vint32(4, 4, 4),
            dr_par1 = cms.vdouble(0.4, 0.4, 0.4),
            dr_par2 = cms.vdouble(0.3, 0.3, 0.3)
        ),
        dz_par = cms.PSet(
            dz_exp = cms.vint32(4, 4, 4),
            dz_par1 = cms.vdouble(0.4, 0.4, 0.4),
            dz_par2 = cms.vdouble(0.35, 0.35, 0.35)
        ),
        maxChi2 = cms.vdouble(9999.0, 25.0, 16.0),
        maxChi2n = cms.vdouble(1.2, 1.0, 0.7),
        maxDr = cms.vdouble(0.5, 0.03, 3.40282346639e+38),
        maxDz = cms.vdouble(0.5, 0.2, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24.0, 15.0),
        maxLostLayers = cms.vint32(1, 1, 1),
        min3DLayers = cms.vint32(0, 3, 4),
        minLayers = cms.vint32(3, 3, 4),
        minNVtxTrk = cms.int32(3),
        minNdof = cms.vdouble(1e-05, 1e-05, 1e-05),
        minPixelHits = cms.vint32(0, 3, 4)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("hltIter0PFlowCtfWithMaterialTracks"),
    vertices = cms.InputTag("hltTrimmedPixelVertices")
)


process.hltIter0PFlowTrackSelectionHighPurity = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltIter0PFlowTrackCutClassifier","MVAValues"),
    originalQualVals = cms.InputTag("hltIter0PFlowTrackCutClassifier","QualityMasks"),
    originalSource = cms.InputTag("hltIter0PFlowCtfWithMaterialTracks")
)


process.hltIter1ClustersRefRemoval = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag(""),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClusters"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacility"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltIter0PFlowTrackSelectionHighPurity")
)


process.hltIter1ElectronsCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltIter1ElectronsMaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTIter1PSetTrajectoryBuilderIT')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltIter1ElectronsPixelSeeds"),
    useHitsSplitting = cms.bool(False)
)


process.hltIter1ElectronsClustersRefRemoval = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag(""),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClusters"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacility"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltIter0ElectronsTrackSelectionHighPurity")
)


process.hltIter1ElectronsCtfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hltIterX'),
    Fitter = cms.string('hltESPFittingSmootherIT'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltIter1ElectronsMaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltIter1ElectronsCkfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltIter1ElectronsMaskedMeasurementTrackerEvent = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltIter1ElectronsClustersRefRemoval"),
    src = cms.InputTag("hltSiStripClusters")
)


process.hltIter1ElectronsPixelClusterCheck = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripClusters"),
    MaxNumberOfCosmicClusters = cms.uint32(800000),
    MaxNumberOfPixelClusters = cms.uint32(40000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClusters"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltIter1ElectronsPixelHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltIter1ElectronsPixelClusterCheck"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltIter1ElectronsPixelLayerTriplets"),
    trackingRegions = cms.InputTag("hltIter1ElectronsPixelTrackingRegions")
)


process.hltIter1ElectronsPixelHitTriplets = cms.EDProducer("PixelTripletHLTEDProducer",
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("hltIter1ElectronsPixelHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    extraHitRZtolerance = cms.double(0.037),
    maxElement = cms.uint32(100000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltIter1ElectronsPixelHitDoublets__HLT'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.hltIter1ElectronsPixelLayerTriplets = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        skipClusters = cms.InputTag("hltIter1ElectronsClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltIter1ElectronsClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg')
)


process.hltIter1ElectronsPixelSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltIter1ElectronsPixelHitTriplets__HLT', 
        'IntermediateHitDoublets_hltIter1ElectronsPixelHitDoublets__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltIter1ElectronsPixelHitTriplets")
)


process.hltIter1ElectronsPixelTrackingRegions = cms.EDProducer("CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        deltaEta = cms.double(0.5),
        deltaPhi = cms.double(0.5),
        input = cms.InputTag("hltEgammaCandidates"),
        maxNRegions = cms.int32(10),
        maxNVertices = cms.int32(3),
        measurementTrackerName = cms.InputTag(""),
        mode = cms.string('VerticesFixed'),
        nSigmaZBeamSpot = cms.double(4.0),
        nSigmaZVertex = cms.double(3.0),
        originRadius = cms.double(0.05),
        precise = cms.bool(True),
        ptMin = cms.double(0.5),
        searchOpt = cms.bool(False),
        vertexCollection = cms.InputTag("hltPixelVerticesElectrons"),
        whereToUseMeasurementTracker = cms.string('Never'),
        zErrorBeamSpot = cms.double(24.2),
        zErrorVetex = cms.double(0.2)
    )
)


process.hltIter1ElectronsTrackSelectionHighPurity = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(20.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag("hltIter1ElectronsTrackSelectionHighPurityLoose", "hltIter1ElectronsTrackSelectionHighPurityTight"),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(False),
    hasSelector = cms.vint32(0, 0),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag("hltIter1ElectronsTrackSelectionHighPurityLoose", "hltIter1ElectronsTrackSelectionHighPurityTight"),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(False),
        tLists = cms.vint32(0, 1)
    )),
    trackAlgoPriorityOrder = cms.string('hltESPTrackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hltIter1ElectronsTrackSelectionHighPurityLoose = cms.EDProducer("AnalyticalTrackSelector",
    applyAbsCutsIfNoPV = cms.bool(False),
    applyAdaptedPVCuts = cms.bool(True),
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    chi2n_no1Dmod_par = cms.double(9999.0),
    chi2n_par = cms.double(0.7),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    d0_par1 = cms.vdouble(0.85, 3.0),
    d0_par2 = cms.vdouble(0.9, 3.0),
    dz_par1 = cms.vdouble(0.8, 3.0),
    dz_par2 = cms.vdouble(0.9, 3.0),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(1),
    max_d0 = cms.double(100.0),
    max_d0NoPV = cms.double(100.0),
    max_eta = cms.double(9999.0),
    max_lostHitFraction = cms.double(1.0),
    max_minMissHitOutOrIn = cms.int32(99),
    max_relpterr = cms.double(9999.0),
    max_z0 = cms.double(100.0),
    max_z0NoPV = cms.double(100.0),
    minHitsToBypassChecks = cms.uint32(20),
    minNumber3DLayers = cms.uint32(0),
    minNumberLayers = cms.uint32(3),
    min_eta = cms.double(-9999.0),
    min_nhits = cms.uint32(0),
    nSigmaZ = cms.double(3.0),
    qualityBit = cms.string('highPurity'),
    res_par = cms.vdouble(0.003, 0.001),
    src = cms.InputTag("hltIter1ElectronsCtfWithMaterialTracks"),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(False),
    vertexCut = cms.string('tracksSize>=3'),
    vertices = cms.InputTag("hltPixelVerticesElectrons"),
    vtxNumber = cms.int32(-1)
)


process.hltIter1ElectronsTrackSelectionHighPurityTight = cms.EDProducer("AnalyticalTrackSelector",
    applyAbsCutsIfNoPV = cms.bool(False),
    applyAdaptedPVCuts = cms.bool(True),
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    chi2n_no1Dmod_par = cms.double(9999.0),
    chi2n_par = cms.double(0.4),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    d0_par1 = cms.vdouble(1.0, 4.0),
    d0_par2 = cms.vdouble(1.0, 4.0),
    dz_par1 = cms.vdouble(1.0, 4.0),
    dz_par2 = cms.vdouble(1.0, 4.0),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(1),
    max_d0 = cms.double(100.0),
    max_d0NoPV = cms.double(100.0),
    max_eta = cms.double(9999.0),
    max_lostHitFraction = cms.double(1.0),
    max_minMissHitOutOrIn = cms.int32(99),
    max_relpterr = cms.double(9999.0),
    max_z0 = cms.double(100.0),
    max_z0NoPV = cms.double(100.0),
    minHitsToBypassChecks = cms.uint32(20),
    minNumber3DLayers = cms.uint32(0),
    minNumberLayers = cms.uint32(5),
    min_eta = cms.double(-9999.0),
    min_nhits = cms.uint32(0),
    nSigmaZ = cms.double(3.0),
    qualityBit = cms.string('highPurity'),
    res_par = cms.vdouble(0.003, 0.001),
    src = cms.InputTag("hltIter1ElectronsCtfWithMaterialTracks"),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(False),
    vertexCut = cms.string('tracksSize>=3'),
    vertices = cms.InputTag("hltPixelVerticesElectrons"),
    vtxNumber = cms.int32(-1)
)


process.hltIter1L3MuonCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltIter1L3MuonMaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTIter1GroupedCkfTrajectoryBuilderIT')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltIter1L3MuonPixelSeeds"),
    useHitsSplitting = cms.bool(False)
)


process.hltIter1L3MuonClustersRefRemoval = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag(""),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClusters"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacility"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltIter0L3MuonTrackSelectionHighPurity")
)


process.hltIter1L3MuonCtfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hltIterX'),
    Fitter = cms.string('hltESPFittingSmootherIT'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltIter1L3MuonMaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltIter1L3MuonCkfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltIter1L3MuonMaskedMeasurementTrackerEvent = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltIter1L3MuonClustersRefRemoval"),
    src = cms.InputTag("hltSiStripClusters")
)


process.hltIter1L3MuonMerged = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(20.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag("hltIter0L3MuonTrackSelectionHighPurity", "hltIter1L3MuonTrackSelectionHighPurity"),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(False),
    hasSelector = cms.vint32(0, 0),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag("hltIter0L3MuonTrackSelectionHighPurity", "hltIter1L3MuonTrackSelectionHighPurity"),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(False),
        tLists = cms.vint32(0, 1)
    )),
    trackAlgoPriorityOrder = cms.string('hltESPTrackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hltIter1L3MuonPixelClusterCheck = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripClusters"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClusters"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltIter1L3MuonPixelHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltIter1L3MuonPixelClusterCheck"),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltIter1L3MuonPixelLayerQuadruplets"),
    trackingRegions = cms.InputTag("hltIter1L3MuonPixelTrackingRegions")
)


process.hltIter1L3MuonPixelHitQuadruplets = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0.0),
    CAOnlyOneLastHitPerLayerFilter = cms.bool(False),
    CAPhiCut = cms.double(0.3),
    CAThetaCut = cms.double(0.004),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none'),
        clusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hltIter1L3MuonPixelHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.7),
        pt2 = cms.double(2.0),
        value1 = cms.double(2000.0),
        value2 = cms.double(150.0)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltIter1L3MuonPixelHitDoublets__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltIter1L3MuonPixelLayerQuadruplets = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        skipClusters = cms.InputTag("hltIter1L3MuonClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltIter1L3MuonClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3+BPix4', 
        'BPix1+BPix2+BPix3+FPix1_pos', 
        'BPix1+BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos+FPix2_pos', 
        'BPix1+BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos+FPix3_pos', 
        'BPix1+FPix1_neg+FPix2_neg+FPix3_neg')
)


process.hltIter1L3MuonPixelSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltIter1L3MuonPixelHitQuadruplets__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltIter1L3MuonPixelHitQuadruplets")
)


process.hltIter1L3MuonPixelTrackingRegions = cms.EDProducer("CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        deltaEta = cms.double(0.3),
        deltaPhi = cms.double(0.3),
        input = cms.InputTag("hltIterL3MuonCandidates"),
        maxNRegions = cms.int32(10),
        maxNVertices = cms.int32(1),
        measurementTrackerName = cms.InputTag("hltIter1L3MuonMaskedMeasurementTrackerEvent"),
        mode = cms.string('VerticesFixed'),
        nSigmaZBeamSpot = cms.double(4.0),
        nSigmaZVertex = cms.double(3.0),
        originRadius = cms.double(0.05),
        precise = cms.bool(True),
        ptMin = cms.double(0.3),
        searchOpt = cms.bool(False),
        vertexCollection = cms.InputTag("hltPixelVerticesL3Muon"),
        whereToUseMeasurementTracker = cms.string('ForSiStrips'),
        zErrorBeamSpot = cms.double(24.2),
        zErrorVetex = cms.double(0.1)
    )
)


process.hltIter1L3MuonTrackCutClassifierDetached = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 0.003),
            d0err_par = cms.vdouble(0.001, 0.001, 0.001),
            dr_exp = cms.vint32(4, 4, 4),
            dr_par1 = cms.vdouble(1.0, 1.0, 1.0),
            dr_par2 = cms.vdouble(1.0, 1.0, 1.0)
        ),
        dz_par = cms.PSet(
            dz_exp = cms.vint32(4, 4, 4),
            dz_par1 = cms.vdouble(1.0, 1.0, 1.0),
            dz_par2 = cms.vdouble(1.0, 1.0, 1.0)
        ),
        maxChi2 = cms.vdouble(9999.0, 25.0, 16.0),
        maxChi2n = cms.vdouble(1.0, 0.7, 0.4),
        maxDr = cms.vdouble(3.40282346639e+38, 1.0, 3.40282346639e+38),
        maxDz = cms.vdouble(3.40282346639e+38, 1.0, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24.0, 15.0),
        maxLostLayers = cms.vint32(99, 3, 3),
        min3DLayers = cms.vint32(1, 2, 3),
        minLayers = cms.vint32(5, 5, 5),
        minNVtxTrk = cms.int32(2),
        minNdof = cms.vdouble(-1.0, -1.0, -1.0),
        minPixelHits = cms.vint32(0, 0, 1)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("hltIter1L3MuonCtfWithMaterialTracks"),
    vertices = cms.InputTag("hltPixelVerticesL3Muon")
)


process.hltIter1L3MuonTrackCutClassifierMerged = cms.EDProducer("ClassifierMerger",
    inputClassifiers = cms.vstring('hltIter1L3MuonTrackCutClassifierPrompt', 
        'hltIter1L3MuonTrackCutClassifierDetached')
)


process.hltIter1L3MuonTrackCutClassifierPrompt = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 0.003),
            d0err_par = cms.vdouble(0.001, 0.001, 0.001),
            dr_exp = cms.vint32(3, 3, 3),
            dr_par1 = cms.vdouble(3.40282346639e+38, 1.0, 0.9),
            dr_par2 = cms.vdouble(3.40282346639e+38, 1.0, 0.85)
        ),
        dz_par = cms.PSet(
            dz_exp = cms.vint32(3, 3, 3),
            dz_par1 = cms.vdouble(3.40282346639e+38, 1.0, 0.9),
            dz_par2 = cms.vdouble(3.40282346639e+38, 1.0, 0.8)
        ),
        maxChi2 = cms.vdouble(9999.0, 25.0, 16.0),
        maxChi2n = cms.vdouble(1.2, 1.0, 0.7),
        maxDr = cms.vdouble(3.40282346639e+38, 1.0, 3.40282346639e+38),
        maxDz = cms.vdouble(3.40282346639e+38, 1.0, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24.0, 15.0),
        maxLostLayers = cms.vint32(1, 1, 1),
        min3DLayers = cms.vint32(0, 0, 0),
        minLayers = cms.vint32(3, 3, 3),
        minNVtxTrk = cms.int32(3),
        minNdof = cms.vdouble(1e-05, 1e-05, 1e-05),
        minPixelHits = cms.vint32(0, 0, 2)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("hltIter1L3MuonCtfWithMaterialTracks"),
    vertices = cms.InputTag("hltPixelVerticesL3Muon")
)


process.hltIter1L3MuonTrackSelectionHighPurity = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltIter1L3MuonTrackCutClassifierMerged","MVAValues"),
    originalQualVals = cms.InputTag("hltIter1L3MuonTrackCutClassifierMerged","QualityMasks"),
    originalSource = cms.InputTag("hltIter1L3MuonCtfWithMaterialTracks")
)


process.hltIter1MaskedMeasurementTrackerEvent = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltIter1ClustersRefRemoval"),
    src = cms.InputTag("hltSiStripClusters")
)


process.hltIter1Merged = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(20.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag("hltIter0PFlowTrackSelectionHighPurity", "hltIter1PFlowTrackSelectionHighPurity"),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(False),
    hasSelector = cms.vint32(0, 0),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag("hltIter0PFlowTrackSelectionHighPurity", "hltIter1PFlowTrackSelectionHighPurity"),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(False),
        tLists = cms.vint32(0, 1)
    )),
    trackAlgoPriorityOrder = cms.string('hltESPTrackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hltIter1MergedForElectrons = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(20.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag("hltIter0ElectronsTrackSelectionHighPurity", "hltIter1ElectronsTrackSelectionHighPurity"),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(False),
    hasSelector = cms.vint32(0, 0),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag("hltIter0ElectronsTrackSelectionHighPurity", "hltIter1ElectronsTrackSelectionHighPurity"),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(False),
        tLists = cms.vint32(0, 1)
    )),
    trackAlgoPriorityOrder = cms.string('hltESPTrackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hltIter1PFLowPixelSeedsFromPixelTracks = cms.EDProducer("SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag("hltIter1PixelTracks"),
    InputVertexCollection = cms.InputTag("hltTrimmedPixelVertices"),
    SeedCreatorPSet = cms.PSet(
        refToPSet_ = cms.string('HLTSeedFromProtoTracks')
    ),
    TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
    originHalfLength = cms.double(0.3),
    originRadius = cms.double(0.1),
    useEventsWithNoVertex = cms.bool(True),
    usePV = cms.bool(False),
    useProtoTrackKinematics = cms.bool(False)
)


process.hltIter1PFlowCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltIter1MaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTIter1GroupedCkfTrajectoryBuilderIT')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltIter1PFLowPixelSeedsFromPixelTracks"),
    useHitsSplitting = cms.bool(False)
)


process.hltIter1PFlowCtfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hltIter1'),
    Fitter = cms.string('hltESPFittingSmootherIT'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltIter1MaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltIter1PFlowCkfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltIter1PFlowPixelClusterCheck = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripClusters"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(40000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClusters"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltIter1PFlowPixelHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltIter1PFlowPixelClusterCheck"),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltIter1PixelLayerQuadruplets"),
    trackingRegions = cms.InputTag("hltIter1PFlowPixelTrackingRegions")
)


process.hltIter1PFlowPixelHitQuadruplets = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0.0),
    CAOnlyOneLastHitPerLayerFilter = cms.bool(False),
    CAPhiCut = cms.double(0.3),
    CAThetaCut = cms.double(0.004),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none'),
        clusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hltIter1PFlowPixelHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.4),
        pt2 = cms.double(2.0),
        value1 = cms.double(1000.0),
        value2 = cms.double(100.0)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltIter1PFlowPixelHitDoublets__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltIter1PFlowPixelTrackingRegions = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hltTrimmedPixelVertices"),
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        fixedError = cms.double(0.2),
        nSigmaZ = cms.double(4.0),
        originRadius = cms.double(0.05),
        precise = cms.bool(True),
        ptMin = cms.double(0.4),
        sigmaZVertex = cms.double(3.0),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hltIter1PFlowTrackCutClassifierDetached = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 0.003),
            d0err_par = cms.vdouble(0.001, 0.001, 0.001),
            dr_exp = cms.vint32(4, 4, 4),
            dr_par1 = cms.vdouble(1.0, 1.0, 1.0),
            dr_par2 = cms.vdouble(1.0, 1.0, 1.0)
        ),
        dz_par = cms.PSet(
            dz_exp = cms.vint32(4, 4, 4),
            dz_par1 = cms.vdouble(1.0, 1.0, 1.0),
            dz_par2 = cms.vdouble(1.0, 1.0, 1.0)
        ),
        maxChi2 = cms.vdouble(9999.0, 25.0, 16.0),
        maxChi2n = cms.vdouble(1.0, 0.7, 0.4),
        maxDr = cms.vdouble(3.40282346639e+38, 1.0, 3.40282346639e+38),
        maxDz = cms.vdouble(3.40282346639e+38, 1.0, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24.0, 15.0),
        maxLostLayers = cms.vint32(99, 3, 3),
        min3DLayers = cms.vint32(1, 2, 3),
        minLayers = cms.vint32(5, 5, 5),
        minNVtxTrk = cms.int32(2),
        minNdof = cms.vdouble(-1.0, -1.0, -1.0),
        minPixelHits = cms.vint32(0, 0, 1)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("hltIter1PFlowCtfWithMaterialTracks"),
    vertices = cms.InputTag("hltTrimmedPixelVertices")
)


process.hltIter1PFlowTrackCutClassifierMerged = cms.EDProducer("ClassifierMerger",
    inputClassifiers = cms.vstring('hltIter1PFlowTrackCutClassifierPrompt', 
        'hltIter1PFlowTrackCutClassifierDetached')
)


process.hltIter1PFlowTrackCutClassifierPrompt = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 0.003),
            d0err_par = cms.vdouble(0.001, 0.001, 0.001),
            dr_exp = cms.vint32(3, 3, 3),
            dr_par1 = cms.vdouble(3.40282346639e+38, 1.0, 0.9),
            dr_par2 = cms.vdouble(3.40282346639e+38, 1.0, 0.85)
        ),
        dz_par = cms.PSet(
            dz_exp = cms.vint32(3, 3, 3),
            dz_par1 = cms.vdouble(3.40282346639e+38, 1.0, 0.9),
            dz_par2 = cms.vdouble(3.40282346639e+38, 1.0, 0.8)
        ),
        maxChi2 = cms.vdouble(9999.0, 25.0, 16.0),
        maxChi2n = cms.vdouble(1.2, 1.0, 0.7),
        maxDr = cms.vdouble(3.40282346639e+38, 1.0, 3.40282346639e+38),
        maxDz = cms.vdouble(3.40282346639e+38, 1.0, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24.0, 15.0),
        maxLostLayers = cms.vint32(1, 1, 1),
        min3DLayers = cms.vint32(0, 0, 0),
        minLayers = cms.vint32(3, 3, 3),
        minNVtxTrk = cms.int32(3),
        minNdof = cms.vdouble(1e-05, 1e-05, 1e-05),
        minPixelHits = cms.vint32(0, 0, 2)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("hltIter1PFlowCtfWithMaterialTracks"),
    vertices = cms.InputTag("hltTrimmedPixelVertices")
)


process.hltIter1PFlowTrackSelectionHighPurity = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltIter1PFlowTrackCutClassifierMerged","MVAValues"),
    originalQualVals = cms.InputTag("hltIter1PFlowTrackCutClassifierMerged","QualityMasks"),
    originalSource = cms.InputTag("hltIter1PFlowCtfWithMaterialTracks")
)


process.hltIter1PixelLayerQuadruplets = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        skipClusters = cms.InputTag("hltIter1ClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltIter1ClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3+BPix4', 
        'BPix1+BPix2+BPix3+FPix1_pos', 
        'BPix1+BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos+FPix2_pos', 
        'BPix1+BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos+FPix3_pos', 
        'BPix1+FPix1_neg+FPix2_neg+FPix3_neg')
)


process.hltIter1PixelTracks = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('hltPixelTracksCleanerBySharedHits'),
    Filter = cms.InputTag("hltPixelTracksFilter"),
    Fitter = cms.InputTag("hltPixelTracksFitter"),
    SeedingHitSets = cms.InputTag("hltIter1PFlowPixelHitQuadruplets"),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltIter1PFlowPixelHitQuadruplets__HLT'),
    passLabel = cms.string('')
)


process.hltIter1TrackAndTauJets4Iter2 = cms.EDProducer("TauJetSelectorForHLTTrackSeeding",
    etaMaxCaloJet = cms.double(2.7),
    etaMinCaloJet = cms.double(-2.7),
    fractionMaxChargedPUInCaloCone = cms.double(0.3),
    fractionMinCaloInTauCone = cms.double(0.7),
    inputCaloJetTag = cms.InputTag("hltAK4CaloJetsPFEt5"),
    inputTrackJetTag = cms.InputTag("hltAK4Iter1TrackJets4Iter2"),
    inputTrackTag = cms.InputTag("hltIter1Merged"),
    isolationConeSize = cms.double(0.5),
    nTrkMaxInCaloCone = cms.int32(0),
    ptMinCaloJet = cms.double(10.0),
    ptTrkMaxInCaloCone = cms.double(1.4),
    tauConeSize = cms.double(0.2)
)


process.hltIter1TrackRefsForJets4Iter2 = cms.EDProducer("ChargedRefCandidateProducer",
    particleType = cms.string('pi+'),
    src = cms.InputTag("hltIter1Merged")
)


process.hltIter2ClustersRefRemoval = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(16.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hltIter1ClustersRefRemoval"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClusters"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacility"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltIter1PFlowTrackSelectionHighPurity")
)


process.hltIter2ElectronsCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltIter2ElectronsMaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTIter2PSetTrajectoryBuilderIT')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltIter2ElectronsPixelSeeds"),
    useHitsSplitting = cms.bool(False)
)


process.hltIter2ElectronsClustersRefRemoval = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(16.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hltIter1ElectronsClustersRefRemoval"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClusters"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacility"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltIter1ElectronsTrackSelectionHighPurity")
)


process.hltIter2ElectronsCtfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hltIterX'),
    Fitter = cms.string('hltESPFittingSmootherIT'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltIter2ElectronsMaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltIter2ElectronsCkfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltIter2ElectronsMaskedMeasurementTrackerEvent = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltIter2ElectronsClustersRefRemoval"),
    src = cms.InputTag("hltSiStripClusters")
)


process.hltIter2ElectronsPixelClusterCheck = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripClusters"),
    MaxNumberOfCosmicClusters = cms.uint32(800000),
    MaxNumberOfPixelClusters = cms.uint32(40000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClusters"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltIter2ElectronsPixelHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltIter2ElectronsPixelClusterCheck"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("hltIter2ElectronsPixelLayerPairs"),
    trackingRegions = cms.InputTag("hltIter2ElectronsPixelTrackingRegions")
)


process.hltIter2ElectronsPixelLayerPairs = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        skipClusters = cms.InputTag("hltIter2ElectronsClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltIter2ElectronsClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2', 
        'BPix1+BPix3', 
        'BPix2+BPix3', 
        'BPix1+FPix1_pos', 
        'BPix1+FPix1_neg', 
        'BPix1+FPix2_pos', 
        'BPix1+FPix2_neg', 
        'BPix2+FPix1_pos', 
        'BPix2+FPix1_neg', 
        'BPix2+FPix2_pos', 
        'BPix2+FPix2_neg', 
        'FPix1_pos+FPix2_pos', 
        'FPix1_neg+FPix2_neg')
)


process.hltIter2ElectronsPixelSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltIter2ElectronsPixelHitDoublets__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltIter2ElectronsPixelHitDoublets")
)


process.hltIter2ElectronsPixelTrackingRegions = cms.EDProducer("CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        deltaEta = cms.double(0.5),
        deltaPhi = cms.double(0.5),
        input = cms.InputTag("hltEgammaCandidates"),
        maxNRegions = cms.int32(10),
        maxNVertices = cms.int32(3),
        measurementTrackerName = cms.InputTag(""),
        mode = cms.string('VerticesFixed'),
        nSigmaZBeamSpot = cms.double(4.0),
        nSigmaZVertex = cms.double(3.0),
        originRadius = cms.double(0.05),
        precise = cms.bool(True),
        ptMin = cms.double(1.2),
        searchOpt = cms.bool(False),
        vertexCollection = cms.InputTag("hltPixelVerticesElectrons"),
        whereToUseMeasurementTracker = cms.string('Never'),
        zErrorBeamSpot = cms.double(24.2),
        zErrorVetex = cms.double(0.2)
    )
)


process.hltIter2ElectronsTrackSelectionHighPurity = cms.EDProducer("AnalyticalTrackSelector",
    applyAbsCutsIfNoPV = cms.bool(False),
    applyAdaptedPVCuts = cms.bool(True),
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    chi2n_no1Dmod_par = cms.double(9999.0),
    chi2n_par = cms.double(0.7),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    d0_par1 = cms.vdouble(0.3, 4.0),
    d0_par2 = cms.vdouble(0.4, 4.0),
    dz_par1 = cms.vdouble(0.35, 4.0),
    dz_par2 = cms.vdouble(0.4, 4.0),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(1),
    max_d0 = cms.double(100.0),
    max_d0NoPV = cms.double(100.0),
    max_eta = cms.double(9999.0),
    max_lostHitFraction = cms.double(1.0),
    max_minMissHitOutOrIn = cms.int32(99),
    max_relpterr = cms.double(9999.0),
    max_z0 = cms.double(100.0),
    max_z0NoPV = cms.double(100.0),
    minHitsToBypassChecks = cms.uint32(20),
    minNumber3DLayers = cms.uint32(0),
    minNumberLayers = cms.uint32(3),
    min_eta = cms.double(-9999.0),
    min_nhits = cms.uint32(0),
    nSigmaZ = cms.double(3.0),
    qualityBit = cms.string('highPurity'),
    res_par = cms.vdouble(0.003, 0.001),
    src = cms.InputTag("hltIter2ElectronsCtfWithMaterialTracks"),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(False),
    vertexCut = cms.string('tracksSize>=3'),
    vertices = cms.InputTag("hltPixelVerticesElectrons"),
    vtxNumber = cms.int32(-1)
)


process.hltIter2IterL3FromL1MuonCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltIter2IterL3FromL1MuonMaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTIter2IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltIter2IterL3FromL1MuonPixelSeeds"),
    useHitsSplitting = cms.bool(False)
)


process.hltIter2IterL3FromL1MuonClustersRefRemoval = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(16.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag(""),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClusters"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacility"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltIter0IterL3FromL1MuonTrackSelectionHighPurity")
)


process.hltIter2IterL3FromL1MuonCtfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hltIter2'),
    Fitter = cms.string('hltESPFittingSmootherIT'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltIter2IterL3FromL1MuonMaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltIter2IterL3FromL1MuonCkfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltIter2IterL3FromL1MuonMaskedMeasurementTrackerEvent = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltIter2IterL3FromL1MuonClustersRefRemoval"),
    src = cms.InputTag("hltSiStripClusters")
)


process.hltIter2IterL3FromL1MuonMerged = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(20.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag("hltIter0IterL3FromL1MuonTrackSelectionHighPurity", "hltIter2IterL3FromL1MuonTrackSelectionHighPurity"),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(False),
    hasSelector = cms.vint32(0, 0),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag("hltIter0IterL3FromL1MuonTrackSelectionHighPurity", "hltIter2IterL3FromL1MuonTrackSelectionHighPurity"),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(False),
        tLists = cms.vint32(0, 1)
    )),
    trackAlgoPriorityOrder = cms.string('hltESPTrackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hltIter2IterL3FromL1MuonPixelClusterCheck = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripClusters"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClusters"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltIter2IterL3FromL1MuonPixelHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltIter2IterL3FromL1MuonPixelClusterCheck"),
    layerPairs = cms.vuint32(0, 1),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltIter2IterL3FromL1MuonPixelLayerTriplets"),
    trackingRegions = cms.InputTag("hltIterL3FromL1MuonPixelTracksTrackingRegions")
)


process.hltIter2IterL3FromL1MuonPixelHitTriplets = cms.EDProducer("CAHitTripletEDProducer",
    CAHardPtCut = cms.double(0.3),
    CAPhiCut = cms.double(0.1),
    CAThetaCut = cms.double(0.015),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("hltIter2IterL3FromL1MuonPixelHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.8),
        pt2 = cms.double(8.0),
        value1 = cms.double(100.0),
        value2 = cms.double(6.0)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltIter2IterL3FromL1MuonPixelHitDoublets__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltIter2IterL3FromL1MuonPixelLayerTriplets = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        skipClusters = cms.InputTag("hltIter2IterL3FromL1MuonClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltIter2IterL3FromL1MuonClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix2+BPix3+BPix4', 
        'BPix1+BPix3+BPix4', 
        'BPix1+BPix2+BPix4', 
        'BPix2+BPix3+FPix1_pos', 
        'BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix2+FPix1_pos+FPix2_pos', 
        'BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg', 
        'FPix1_pos+FPix2_pos+FPix3_pos', 
        'FPix1_neg+FPix2_neg+FPix3_neg')
)


process.hltIter2IterL3FromL1MuonPixelSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltIter2IterL3FromL1MuonPixelHitTriplets__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltIter2IterL3FromL1MuonPixelHitTriplets")
)


process.hltIter2IterL3FromL1MuonTrackCutClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 3.40282346639e+38),
            d0err_par = cms.vdouble(0.001, 0.001, 3.40282346639e+38),
            dr_exp = cms.vint32(4, 4, 2147483647),
            dr_par1 = cms.vdouble(3.40282346639e+38, 0.4, 3.40282346639e+38),
            dr_par2 = cms.vdouble(3.40282346639e+38, 0.3, 3.40282346639e+38)
        ),
        dz_par = cms.PSet(
            dz_exp = cms.vint32(4, 4, 2147483647),
            dz_par1 = cms.vdouble(3.40282346639e+38, 0.4, 3.40282346639e+38),
            dz_par2 = cms.vdouble(3.40282346639e+38, 0.35, 3.40282346639e+38)
        ),
        maxChi2 = cms.vdouble(9999.0, 25.0, 3.40282346639e+38),
        maxChi2n = cms.vdouble(1.2, 1.0, 0.7),
        maxDr = cms.vdouble(0.5, 0.03, 3.40282346639e+38),
        maxDz = cms.vdouble(0.5, 0.2, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24.0, 100.0),
        maxLostLayers = cms.vint32(1, 1, 1),
        min3DLayers = cms.vint32(0, 0, 0),
        minLayers = cms.vint32(3, 3, 3),
        minNVtxTrk = cms.int32(3),
        minNdof = cms.vdouble(1e-05, 1e-05, 1e-05),
        minPixelHits = cms.vint32(0, 0, 0)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("hltIter2IterL3FromL1MuonCtfWithMaterialTracks"),
    vertices = cms.InputTag("hltIterL3FromL1MuonTrimmedPixelVertices")
)


process.hltIter2IterL3FromL1MuonTrackSelectionHighPurity = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltIter2IterL3FromL1MuonTrackCutClassifier","MVAValues"),
    originalQualVals = cms.InputTag("hltIter2IterL3FromL1MuonTrackCutClassifier","QualityMasks"),
    originalSource = cms.InputTag("hltIter2IterL3FromL1MuonCtfWithMaterialTracks")
)


process.hltIter2IterL3MuonCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltIter2IterL3MuonMaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTIter2IterL3MuonPSetGroupedCkfTrajectoryBuilderIT')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltIter2IterL3MuonPixelSeeds"),
    useHitsSplitting = cms.bool(False)
)


process.hltIter2IterL3MuonClustersRefRemoval = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(16.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag(""),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClusters"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacility"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltIter0IterL3MuonTrackSelectionHighPurity")
)


process.hltIter2IterL3MuonCtfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hltIter2'),
    Fitter = cms.string('hltESPFittingSmootherIT'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltIter2IterL3MuonMaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltIter2IterL3MuonCkfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltIter2IterL3MuonMaskedMeasurementTrackerEvent = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltIter2IterL3MuonClustersRefRemoval"),
    src = cms.InputTag("hltSiStripClusters")
)


process.hltIter2IterL3MuonMerged = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(20.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag("hltIter0IterL3MuonTrackSelectionHighPurity", "hltIter2IterL3MuonTrackSelectionHighPurity"),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(False),
    hasSelector = cms.vint32(0, 0),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag("hltIter0IterL3MuonTrackSelectionHighPurity", "hltIter2IterL3MuonTrackSelectionHighPurity"),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(False),
        tLists = cms.vint32(0, 1)
    )),
    trackAlgoPriorityOrder = cms.string('hltESPTrackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hltIter2IterL3MuonPixelClusterCheck = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripClusters"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClusters"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltIter2IterL3MuonPixelHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltIter2IterL3MuonPixelClusterCheck"),
    layerPairs = cms.vuint32(0, 1),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltIter2IterL3MuonPixelLayerTriplets"),
    trackingRegions = cms.InputTag("hltIterL3MuonPixelTracksTrackingRegions")
)


process.hltIter2IterL3MuonPixelHitTriplets = cms.EDProducer("CAHitTripletEDProducer",
    CAHardPtCut = cms.double(0.3),
    CAPhiCut = cms.double(0.1),
    CAThetaCut = cms.double(0.015),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("hltIter2IterL3MuonPixelHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.8),
        pt2 = cms.double(8.0),
        value1 = cms.double(100.0),
        value2 = cms.double(6.0)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltIter2IterL3MuonPixelHitDoublets__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltIter2IterL3MuonPixelLayerTriplets = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        skipClusters = cms.InputTag("hltIter2IterL3MuonClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltIter2IterL3MuonClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix2+BPix3+BPix4', 
        'BPix1+BPix3+BPix4', 
        'BPix1+BPix2+BPix4', 
        'BPix2+BPix3+FPix1_pos', 
        'BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix2+FPix1_pos+FPix2_pos', 
        'BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg', 
        'FPix1_pos+FPix2_pos+FPix3_pos', 
        'FPix1_neg+FPix2_neg+FPix3_neg')
)


process.hltIter2IterL3MuonPixelSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltIter2IterL3MuonPixelHitTriplets__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltIter2IterL3MuonPixelHitTriplets")
)


process.hltIter2IterL3MuonTrackCutClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 3.40282346639e+38),
            d0err_par = cms.vdouble(0.001, 0.001, 3.40282346639e+38),
            dr_exp = cms.vint32(4, 4, 2147483647),
            dr_par1 = cms.vdouble(3.40282346639e+38, 0.4, 3.40282346639e+38),
            dr_par2 = cms.vdouble(3.40282346639e+38, 0.3, 3.40282346639e+38)
        ),
        dz_par = cms.PSet(
            dz_exp = cms.vint32(4, 4, 2147483647),
            dz_par1 = cms.vdouble(3.40282346639e+38, 0.4, 3.40282346639e+38),
            dz_par2 = cms.vdouble(3.40282346639e+38, 0.35, 3.40282346639e+38)
        ),
        maxChi2 = cms.vdouble(9999.0, 25.0, 3.40282346639e+38),
        maxChi2n = cms.vdouble(1.2, 1.0, 0.7),
        maxDr = cms.vdouble(0.5, 0.03, 3.40282346639e+38),
        maxDz = cms.vdouble(0.5, 0.2, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24.0, 100.0),
        maxLostLayers = cms.vint32(1, 1, 1),
        min3DLayers = cms.vint32(0, 0, 0),
        minLayers = cms.vint32(3, 3, 3),
        minNVtxTrk = cms.int32(3),
        minNdof = cms.vdouble(1e-05, 1e-05, 1e-05),
        minPixelHits = cms.vint32(0, 0, 0)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("hltIter2IterL3MuonCtfWithMaterialTracks"),
    vertices = cms.InputTag("hltIterL3MuonTrimmedPixelVertices")
)


process.hltIter2IterL3MuonTrackSelectionHighPurity = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltIter2IterL3MuonTrackCutClassifier","MVAValues"),
    originalQualVals = cms.InputTag("hltIter2IterL3MuonTrackCutClassifier","QualityMasks"),
    originalSource = cms.InputTag("hltIter2IterL3MuonCtfWithMaterialTracks")
)


process.hltIter2L3MuonCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltIter2L3MuonMaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTIter2GroupedCkfTrajectoryBuilderIT')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltIter2L3MuonPixelSeeds"),
    useHitsSplitting = cms.bool(False)
)


process.hltIter2L3MuonClustersRefRemoval = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(16.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hltIter1L3MuonClustersRefRemoval"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClusters"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacility"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltIter1L3MuonTrackSelectionHighPurity")
)


process.hltIter2L3MuonCtfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hltIterX'),
    Fitter = cms.string('hltESPFittingSmootherIT'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltIter2L3MuonMaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltIter2L3MuonCkfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltIter2L3MuonMaskedMeasurementTrackerEvent = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltIter2L3MuonClustersRefRemoval"),
    src = cms.InputTag("hltSiStripClusters")
)


process.hltIter2L3MuonMerged = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(20.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag("hltIter1L3MuonMerged", "hltIter2L3MuonTrackSelectionHighPurity"),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(False),
    hasSelector = cms.vint32(0, 0),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag("hltIter1L3MuonMerged", "hltIter2L3MuonTrackSelectionHighPurity"),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(False),
        tLists = cms.vint32(0, 1)
    )),
    trackAlgoPriorityOrder = cms.string('hltESPTrackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hltIter2L3MuonPixelClusterCheck = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripClusters"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClusters"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltIter2L3MuonPixelHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltIter2L3MuonPixelClusterCheck"),
    layerPairs = cms.vuint32(0, 1),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltIter2L3MuonPixelLayerTriplets"),
    trackingRegions = cms.InputTag("hltIter2L3MuonPixelTrackingRegions")
)


process.hltIter2L3MuonPixelHitTriplets = cms.EDProducer("CAHitTripletEDProducer",
    CAHardPtCut = cms.double(0.3),
    CAPhiCut = cms.double(0.1),
    CAThetaCut = cms.double(0.004),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("hltIter2L3MuonPixelHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.8),
        pt2 = cms.double(8.0),
        value1 = cms.double(100.0),
        value2 = cms.double(6.0)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltIter2L3MuonPixelHitDoublets__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltIter2L3MuonPixelLayerTriplets = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        skipClusters = cms.InputTag("hltIter2L3MuonClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltIter2L3MuonClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix2+BPix3+BPix4', 
        'BPix1+BPix3+BPix4', 
        'BPix1+BPix2+BPix4', 
        'BPix2+BPix3+FPix1_pos', 
        'BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix2+FPix1_pos+FPix2_pos', 
        'BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg', 
        'FPix1_pos+FPix2_pos+FPix3_pos', 
        'FPix1_neg+FPix2_neg+FPix3_neg')
)


process.hltIter2L3MuonPixelSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltIter2L3MuonPixelHitTriplets__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltIter2L3MuonPixelHitTriplets")
)


process.hltIter2L3MuonPixelTrackingRegions = cms.EDProducer("CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        deltaEta = cms.double(0.3),
        deltaPhi = cms.double(0.3),
        input = cms.InputTag("hltIterL3MuonCandidates"),
        maxNRegions = cms.int32(10),
        maxNVertices = cms.int32(1),
        measurementTrackerName = cms.InputTag("hltIter2L3MuonMaskedMeasurementTrackerEvent"),
        mode = cms.string('VerticesFixed'),
        nSigmaZBeamSpot = cms.double(4.0),
        nSigmaZVertex = cms.double(3.0),
        originRadius = cms.double(0.025),
        precise = cms.bool(True),
        ptMin = cms.double(0.8),
        searchOpt = cms.bool(False),
        vertexCollection = cms.InputTag("hltPixelVerticesL3Muon"),
        whereToUseMeasurementTracker = cms.string('ForSiStrips'),
        zErrorBeamSpot = cms.double(24.2),
        zErrorVetex = cms.double(0.05)
    )
)


process.hltIter2L3MuonTrackCutClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 0.003),
            d0err_par = cms.vdouble(0.001, 0.001, 0.001),
            dr_exp = cms.vint32(4, 4, 4),
            dr_par1 = cms.vdouble(3.40282346639e+38, 0.4, 0.4),
            dr_par2 = cms.vdouble(3.40282346639e+38, 0.3, 0.3)
        ),
        dz_par = cms.PSet(
            dz_exp = cms.vint32(4, 4, 4),
            dz_par1 = cms.vdouble(3.40282346639e+38, 0.4, 0.4),
            dz_par2 = cms.vdouble(3.40282346639e+38, 0.35, 0.35)
        ),
        maxChi2 = cms.vdouble(9999.0, 25.0, 16.0),
        maxChi2n = cms.vdouble(1.2, 1.0, 0.7),
        maxDr = cms.vdouble(0.5, 0.03, 3.40282346639e+38),
        maxDz = cms.vdouble(0.5, 0.2, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24.0, 15.0),
        maxLostLayers = cms.vint32(1, 1, 1),
        min3DLayers = cms.vint32(0, 0, 0),
        minLayers = cms.vint32(3, 3, 3),
        minNVtxTrk = cms.int32(3),
        minNdof = cms.vdouble(1e-05, 1e-05, 1e-05),
        minPixelHits = cms.vint32(0, 0, 0)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("hltIter2L3MuonCtfWithMaterialTracks"),
    vertices = cms.InputTag("hltPixelVerticesL3Muon")
)


process.hltIter2L3MuonTrackSelectionHighPurity = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltIter2L3MuonTrackCutClassifier","MVAValues"),
    originalQualVals = cms.InputTag("hltIter2L3MuonTrackCutClassifier","QualityMasks"),
    originalSource = cms.InputTag("hltIter2L3MuonCtfWithMaterialTracks")
)


process.hltIter2MaskedMeasurementTrackerEvent = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltIter2ClustersRefRemoval"),
    src = cms.InputTag("hltSiStripClusters")
)


process.hltIter2Merged = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(20.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag("hltIter1Merged", "hltIter2PFlowTrackSelectionHighPurity"),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(False),
    hasSelector = cms.vint32(0, 0),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag("hltIter1Merged", "hltIter2PFlowTrackSelectionHighPurity"),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(False),
        tLists = cms.vint32(0, 1)
    )),
    trackAlgoPriorityOrder = cms.string('hltESPTrackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hltIter2MergedForElectrons = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(20.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag("hltIter1MergedForElectrons", "hltIter2ElectronsTrackSelectionHighPurity"),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(False),
    hasSelector = cms.vint32(0, 0),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag("hltIter1MergedForElectrons", "hltIter2ElectronsTrackSelectionHighPurity"),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(False),
        tLists = cms.vint32(0, 1)
    )),
    trackAlgoPriorityOrder = cms.string('hltESPTrackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hltIter2PFlowCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltIter2MaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTIter2GroupedCkfTrajectoryBuilderIT')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltIter2PFlowPixelSeeds"),
    useHitsSplitting = cms.bool(False)
)


process.hltIter2PFlowCtfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hltIter2'),
    Fitter = cms.string('hltESPFittingSmootherIT'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltIter2MaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltIter2PFlowCkfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltIter2PFlowPixelClusterCheck = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripClusters"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(40000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClusters"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltIter2PFlowPixelHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltIter2PFlowPixelClusterCheck"),
    layerPairs = cms.vuint32(0, 1),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltIter2PixelLayerTriplets"),
    trackingRegions = cms.InputTag("hltIter2PFlowPixelTrackingRegions")
)


process.hltIter2PFlowPixelHitTriplets = cms.EDProducer("CAHitTripletEDProducer",
    CAHardPtCut = cms.double(0.3),
    CAPhiCut = cms.double(0.1),
    CAThetaCut = cms.double(0.004),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("hltIter2PFlowPixelHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.4),
        pt2 = cms.double(8.0),
        value1 = cms.double(100.0),
        value2 = cms.double(6.0)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltIter2PFlowPixelHitDoublets__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltIter2PFlowPixelSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltIter2PFlowPixelHitTriplets__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltIter2PFlowPixelHitTriplets")
)


process.hltIter2PFlowPixelTrackingRegions = cms.EDProducer("CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        deltaEta = cms.double(0.8),
        deltaPhi = cms.double(0.8),
        input = cms.InputTag("hltIter1TrackAndTauJets4Iter2"),
        maxNRegions = cms.int32(100),
        maxNVertices = cms.int32(10),
        measurementTrackerName = cms.InputTag("hltIter2MaskedMeasurementTrackerEvent"),
        mode = cms.string('VerticesFixed'),
        nSigmaZBeamSpot = cms.double(3.0),
        nSigmaZVertex = cms.double(4.0),
        originRadius = cms.double(0.025),
        precise = cms.bool(True),
        ptMin = cms.double(0.4),
        searchOpt = cms.bool(True),
        vertexCollection = cms.InputTag("hltTrimmedPixelVertices"),
        whereToUseMeasurementTracker = cms.string('ForSiStrips'),
        zErrorBeamSpot = cms.double(15.0),
        zErrorVetex = cms.double(0.05)
    )
)


process.hltIter2PFlowTrackCutClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 0.003),
            d0err_par = cms.vdouble(0.001, 0.001, 0.001),
            dr_exp = cms.vint32(4, 4, 4),
            dr_par1 = cms.vdouble(3.40282346639e+38, 0.4, 0.4),
            dr_par2 = cms.vdouble(3.40282346639e+38, 0.3, 0.3)
        ),
        dz_par = cms.PSet(
            dz_exp = cms.vint32(4, 4, 4),
            dz_par1 = cms.vdouble(3.40282346639e+38, 0.4, 0.4),
            dz_par2 = cms.vdouble(3.40282346639e+38, 0.35, 0.35)
        ),
        maxChi2 = cms.vdouble(9999.0, 25.0, 16.0),
        maxChi2n = cms.vdouble(1.2, 1.0, 0.7),
        maxDr = cms.vdouble(0.5, 0.03, 3.40282346639e+38),
        maxDz = cms.vdouble(0.5, 0.2, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24.0, 15.0),
        maxLostLayers = cms.vint32(1, 1, 1),
        min3DLayers = cms.vint32(0, 0, 0),
        minLayers = cms.vint32(3, 3, 3),
        minNVtxTrk = cms.int32(3),
        minNdof = cms.vdouble(1e-05, 1e-05, 1e-05),
        minPixelHits = cms.vint32(0, 0, 0)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("hltIter2PFlowCtfWithMaterialTracks"),
    vertices = cms.InputTag("hltTrimmedPixelVertices")
)


process.hltIter2PFlowTrackSelectionHighPurity = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltIter2PFlowTrackCutClassifier","MVAValues"),
    originalQualVals = cms.InputTag("hltIter2PFlowTrackCutClassifier","QualityMasks"),
    originalSource = cms.InputTag("hltIter2PFlowCtfWithMaterialTracks")
)


process.hltIter2PixelLayerTriplets = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        skipClusters = cms.InputTag("hltIter2ClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltIter2ClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix2+BPix3+BPix4', 
        'BPix1+BPix3+BPix4', 
        'BPix1+BPix2+BPix4', 
        'BPix2+BPix3+FPix1_pos', 
        'BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix2+FPix1_pos+FPix2_pos', 
        'BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg', 
        'FPix1_pos+FPix2_pos+FPix3_pos', 
        'FPix1_neg+FPix2_neg+FPix3_neg', 
        'BPix1+BPix3+FPix1_pos', 
        'BPix1+BPix2+FPix2_pos', 
        'BPix1+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix2_neg', 
        'BPix1+FPix2_neg+FPix3_neg', 
        'BPix1+FPix1_neg+FPix3_neg', 
        'BPix1+FPix2_pos+FPix3_pos', 
        'BPix1+FPix1_pos+FPix3_pos')
)


process.hltIterL3FromL1MuonPixelLayerQuadruplets = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3+BPix4', 
        'BPix1+BPix2+BPix3+FPix1_pos', 
        'BPix1+BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos+FPix2_pos', 
        'BPix1+BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos+FPix3_pos', 
        'BPix1+FPix1_neg+FPix2_neg+FPix3_neg')
)


process.hltIterL3FromL1MuonPixelTracks = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('hltPixelTracksCleanerBySharedHits'),
    Filter = cms.InputTag("hltIterL3MuonPixelTracksFilter"),
    Fitter = cms.InputTag("hltIterL3MuonPixelTracksFitter"),
    SeedingHitSets = cms.InputTag("hltIterL3FromL1MuonPixelTracksHitQuadruplets"),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltIterL3FromL1MuonPixelTracksHitQuadruplets__HLT'),
    passLabel = cms.string('')
)


process.hltIterL3FromL1MuonPixelTracksHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltIterL3FromL1MuonPixelLayerQuadruplets"),
    trackingRegions = cms.InputTag("hltIterL3FromL1MuonPixelTracksTrackingRegions")
)


process.hltIterL3FromL1MuonPixelTracksHitQuadruplets = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0.0),
    CAOnlyOneLastHitPerLayerFilter = cms.bool(False),
    CAPhiCut = cms.double(0.2),
    CAThetaCut = cms.double(0.005),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hltIterL3FromL1MuonPixelTracksHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.7),
        pt2 = cms.double(2.0),
        value1 = cms.double(200.0),
        value2 = cms.double(50.0)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltIterL3FromL1MuonPixelTracksHitDoublets__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltIterL3FromL1MuonPixelTracksTrackingRegions = cms.EDProducer("CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        deltaEta = cms.double(0.35),
        deltaPhi = cms.double(0.2),
        input = cms.InputTag("hltIterL3MuonL1MuonNoL2Selector"),
        maxNRegions = cms.int32(2),
        maxNVertices = cms.int32(1),
        measurementTrackerName = cms.InputTag(""),
        mode = cms.string('BeamSpotSigma'),
        nSigmaZBeamSpot = cms.double(4.0),
        nSigmaZVertex = cms.double(3.0),
        originRadius = cms.double(0.2),
        precise = cms.bool(True),
        ptMin = cms.double(10.0),
        searchOpt = cms.bool(False),
        vertexCollection = cms.InputTag("notUsed"),
        whereToUseMeasurementTracker = cms.string('Never'),
        zErrorBeamSpot = cms.double(24.2),
        zErrorVetex = cms.double(0.2)
    )
)


process.hltIterL3FromL1MuonPixelVertices = cms.EDProducer("PixelVertexProducer",
    Finder = cms.string('DivisiveVertexFinder'),
    Method2 = cms.bool(True),
    NTrkMin = cms.int32(2),
    PVcomparer = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPvClusterComparerForIT')
    ),
    PtMin = cms.double(1.0),
    TrackCollection = cms.InputTag("hltIterL3MuonPixelTracks"),
    UseError = cms.bool(True),
    Verbosity = cms.int32(0),
    WtAverage = cms.bool(True),
    ZOffset = cms.double(5.0),
    ZSeparation = cms.double(0.05),
    beamSpot = cms.InputTag("hltOnlineBeamSpot")
)


process.hltIterL3FromL1MuonTrimmedPixelVertices = cms.EDProducer("PixelVertexCollectionTrimmer",
    PVcomparer = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPvClusterComparerForIT')
    ),
    fractionSumPt2 = cms.double(0.3),
    maxVtx = cms.uint32(100),
    minSumPt2 = cms.double(0.0),
    src = cms.InputTag("hltIterL3FromL1MuonPixelVertices")
)


process.hltIterL3MuonAndMuonFromL1Merged = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(20.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag("hltIterL3MuonMerged", "hltIter2IterL3FromL1MuonMerged"),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(False),
    hasSelector = cms.vint32(0, 0),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag("hltIterL3MuonMerged", "hltIter2IterL3FromL1MuonMerged"),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(False),
        tLists = cms.vint32(0, 1)
    )),
    trackAlgoPriorityOrder = cms.string('hltESPTrackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hltIterL3MuonCandidates = cms.EDProducer("L3MuonCandidateProducerFromMuons",
    InputObjects = cms.InputTag("hltIterL3Muons")
)


process.hltIterL3MuonL1MuonNoL2Selector = cms.EDProducer("HLTL1MuonNoL2Selector",
    CentralBxOnly = cms.bool(True),
    InputObjects = cms.InputTag("hltGtStage2Digis","Muon"),
    L1MaxEta = cms.double(5.0),
    L1MinPt = cms.double(-1.0),
    L1MinQuality = cms.uint32(7),
    L2CandTag = cms.InputTag("hltL2MuonCandidates"),
    SeedMapTag = cms.InputTag("hltL2Muons")
)


process.hltIterL3MuonMerged = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(20.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag("hltIterL3OIMuonTrackSelectionHighPurity", "hltIter2IterL3MuonMerged"),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(False),
    hasSelector = cms.vint32(0, 0),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag("hltIterL3OIMuonTrackSelectionHighPurity", "hltIter2IterL3MuonMerged"),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(False),
        tLists = cms.vint32(0, 1)
    )),
    trackAlgoPriorityOrder = cms.string('hltESPTrackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hltIterL3MuonPixelLayerQuadruplets = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3+BPix4', 
        'BPix1+BPix2+BPix3+FPix1_pos', 
        'BPix1+BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos+FPix2_pos', 
        'BPix1+BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos+FPix3_pos', 
        'BPix1+FPix1_neg+FPix2_neg+FPix3_neg')
)


process.hltIterL3MuonPixelTracks = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('hltPixelTracksCleanerBySharedHits'),
    Filter = cms.InputTag("hltIterL3MuonPixelTracksFilter"),
    Fitter = cms.InputTag("hltIterL3MuonPixelTracksFitter"),
    SeedingHitSets = cms.InputTag("hltIterL3MuonPixelTracksHitQuadruplets"),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltIterL3MuonPixelTracksHitQuadruplets__HLT'),
    passLabel = cms.string('')
)


process.hltIterL3MuonPixelTracksFilter = cms.EDProducer("PixelTrackFilterByKinematicsProducer",
    chi2 = cms.double(1000.0),
    nSigmaInvPtTolerance = cms.double(0.0),
    nSigmaTipMaxTolerance = cms.double(0.0),
    ptMin = cms.double(0.1),
    tipMax = cms.double(1.0)
)


process.hltIterL3MuonPixelTracksFitter = cms.EDProducer("PixelFitterByHelixProjectionsProducer",
    scaleErrorsForBPix1 = cms.bool(False),
    scaleFactor = cms.double(0.65)
)


process.hltIterL3MuonPixelTracksHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltIterL3MuonPixelLayerQuadruplets"),
    trackingRegions = cms.InputTag("hltIterL3MuonPixelTracksTrackingRegions")
)


process.hltIterL3MuonPixelTracksHitQuadruplets = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0.0),
    CAOnlyOneLastHitPerLayerFilter = cms.bool(False),
    CAPhiCut = cms.double(0.2),
    CAThetaCut = cms.double(0.005),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hltIterL3MuonPixelTracksHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.7),
        pt2 = cms.double(2.0),
        value1 = cms.double(200.0),
        value2 = cms.double(50.0)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltIterL3MuonPixelTracksHitDoublets__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltIterL3MuonPixelTracksTrackingRegions = cms.EDProducer("MuonTrackingRegionEDProducer",
    DeltaEta = cms.double(0.2),
    DeltaPhi = cms.double(0.15),
    DeltaR = cms.double(0.025),
    DeltaZ = cms.double(24.2),
    EtaR_UpperLimit_Par1 = cms.double(0.25),
    EtaR_UpperLimit_Par2 = cms.double(0.15),
    Eta_fixed = cms.bool(True),
    Eta_min = cms.double(0.0),
    MeasurementTrackerName = cms.InputTag(""),
    OnDemand = cms.int32(-1),
    PhiR_UpperLimit_Par1 = cms.double(0.6),
    PhiR_UpperLimit_Par2 = cms.double(0.2),
    Phi_fixed = cms.bool(True),
    Phi_min = cms.double(0.0),
    Pt_fixed = cms.bool(True),
    Pt_min = cms.double(2.0),
    Rescale_Dz = cms.double(4.0),
    Rescale_eta = cms.double(3.0),
    Rescale_phi = cms.double(3.0),
    UseVertex = cms.bool(False),
    Z_fixed = cms.bool(True),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    input = cms.InputTag("hltL2SelectorForL3IO"),
    maxRegions = cms.int32(5),
    precise = cms.bool(True),
    vertexCollection = cms.InputTag("notUsed")
)


process.hltIterL3MuonPixelVertices = cms.EDProducer("PixelVertexProducer",
    Finder = cms.string('DivisiveVertexFinder'),
    Method2 = cms.bool(True),
    NTrkMin = cms.int32(2),
    PVcomparer = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPvClusterComparerForIT')
    ),
    PtMin = cms.double(1.0),
    TrackCollection = cms.InputTag("hltIterL3MuonPixelTracks"),
    UseError = cms.bool(True),
    Verbosity = cms.int32(0),
    WtAverage = cms.bool(True),
    ZOffset = cms.double(5.0),
    ZSeparation = cms.double(0.05),
    beamSpot = cms.InputTag("hltOnlineBeamSpot")
)


process.hltIterL3MuonTrimmedPixelVertices = cms.EDProducer("PixelVertexCollectionTrimmer",
    PVcomparer = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPvClusterComparerForIT')
    ),
    fractionSumPt2 = cms.double(0.3),
    maxVtx = cms.uint32(100),
    minSumPt2 = cms.double(0.0),
    src = cms.InputTag("hltIterL3MuonPixelVertices")
)


process.hltIterL3Muons = cms.EDProducer("MuonIdProducer",
    CaloExtractorPSet = cms.PSet(
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        DR_Max = cms.double(1.0),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_H = cms.double(0.1),
        DR_Veto_HO = cms.double(0.1),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        DepositLabel = cms.untracked.string('Cal'),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Noise_EB = cms.double(0.025),
        Noise_EE = cms.double(0.1),
        Noise_HB = cms.double(0.2),
        Noise_HE = cms.double(0.2),
        Noise_HO = cms.double(0.2),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('hltESPFastSteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('hltESPFastSteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold_E = cms.double(0.2),
        Threshold_H = cms.double(0.5),
        Threshold_HO = cms.double(0.5),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("hltCscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("Notused"),
            DTRecSegment4DCollectionLabel = cms.InputTag("hltDt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("Notused"),
            EERecHitCollectionLabel = cms.InputTag("Notused"),
            HBHERecHitCollectionLabel = cms.InputTag("Notused"),
            HORecHitCollectionLabel = cms.InputTag("Notused"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            dRHcal = cms.double(1.0),
            dRHcalPreselection = cms.double(1.0),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        ),
        UseRecHitsFlag = cms.bool(False)
    ),
    JetExtractorPSet = cms.PSet(
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.1),
        ExcludeMuonVeto = cms.bool(True),
        JetCollectionLabel = cms.InputTag("Notused"),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('hltESPFastSteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('hltESPFastSteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold = cms.double(5.0),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("hltCscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("Notused"),
            DTRecSegment4DCollectionLabel = cms.InputTag("hltDt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("Notused"),
            EERecHitCollectionLabel = cms.InputTag("Notused"),
            HBHERecHitCollectionLabel = cms.InputTag("Notused"),
            HORecHitCollectionLabel = cms.InputTag("Notused"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            dRHcal = cms.double(0.5),
            dRHcalPreselection = cms.double(0.5),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        )
    ),
    MuonCaloCompatibility = cms.PSet(
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        allSiPMHO = cms.bool(False),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    TimingFillerParameters = cms.PSet(
        CSCTimingParameters = cms.PSet(
            CSCStripError = cms.double(7.0),
            CSCStripTimeOffset = cms.double(0.0),
            CSCTimeOffset = cms.double(0.0),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            CSCsegments = cms.InputTag("hltCscSegments"),
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("hltCscSegments"),
                DTradius = cms.double(0.01),
                DTsegments = cms.InputTag("hltDt4DSegments"),
                TightMatchCSC = cms.bool(True),
                TightMatchDT = cms.bool(False)
            ),
            PruneCut = cms.double(100.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('hltESPFastSteppingHelixPropagatorAny'),
                RPCLayers = cms.bool(True)
            ),
            UseStripTime = cms.bool(True),
            UseWireTime = cms.bool(True),
            debug = cms.bool(False)
        ),
        DTTimingParameters = cms.PSet(
            DTTimeOffset = cms.double(2.7),
            DTsegments = cms.InputTag("hltDt4DSegments"),
            DoWireCorr = cms.bool(False),
            DropTheta = cms.bool(True),
            HitError = cms.double(6.0),
            HitsMin = cms.int32(5),
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("hltCscSegments"),
                DTradius = cms.double(0.01),
                DTsegments = cms.InputTag("hltDt4DSegments"),
                TightMatchCSC = cms.bool(True),
                TightMatchDT = cms.bool(False)
            ),
            PruneCut = cms.double(10000.0),
            RequireBothProjections = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('hltESPFastSteppingHelixPropagatorAny'),
                RPCLayers = cms.bool(True)
            ),
            UseSegmentT0 = cms.bool(False),
            debug = cms.bool(False)
        ),
        EcalEnergyCut = cms.double(0.4),
        ErrorCSC = cms.double(7.4),
        ErrorDT = cms.double(6.0),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        UseCSC = cms.bool(True),
        UseDT = cms.bool(True),
        UseECAL = cms.bool(True)
    ),
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("hltCscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("Notused"),
        DTRecSegment4DCollectionLabel = cms.InputTag("hltDt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("Notused"),
        EERecHitCollectionLabel = cms.InputTag("Notused"),
        HBHERecHitCollectionLabel = cms.InputTag("Notused"),
        HORecHitCollectionLabel = cms.InputTag("Notused"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        dRHcal = cms.double(9999.0),
        dRHcalPreselection = cms.double(0.2),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(False),
        useEcal = cms.bool(False),
        useHO = cms.bool(False),
        useHcal = cms.bool(False),
        useMuon = cms.bool(True),
        usePreshower = cms.bool(False)
    ),
    TrackExtractorPSet = cms.PSet(
        BeamSpotLabel = cms.InputTag("hltOnlineBeamSpot"),
        BeamlineOption = cms.string('BeamSpotFromEvent'),
        Chi2Ndof_Max = cms.double(1e+64),
        Chi2Prob_Min = cms.double(-1.0),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.01),
        Diff_r = cms.double(0.1),
        Diff_z = cms.double(0.2),
        NHits_Min = cms.uint32(0),
        Pt_Min = cms.double(-1.0),
        inputTrackCollection = cms.InputTag("hltIter2IterL3FromL1MuonMerged")
    ),
    TrackerKinkFinderParameters = cms.PSet(
        diagonalOnly = cms.bool(False),
        usePosition = cms.bool(False)
    ),
    addExtraSoftMuons = cms.bool(False),
    arbitrateTrackerMuons = cms.bool(True),
    arbitrationCleanerOptions = cms.PSet(
        ClusterDPhi = cms.double(0.6),
        ClusterDTheta = cms.double(0.02),
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        OverlapDTheta = cms.double(0.02)
    ),
    debugWithTruthMatching = cms.bool(False),
    ecalDepositName = cms.string('ecal'),
    fillCaloCompatibility = cms.bool(False),
    fillEnergy = cms.bool(False),
    fillGlobalTrackQuality = cms.bool(False),
    fillGlobalTrackRefits = cms.bool(False),
    fillIsolation = cms.bool(False),
    fillMatching = cms.bool(True),
    fillTrackerKink = cms.bool(False),
    globalTrackQualityInputTag = cms.InputTag("glbTrackQual"),
    hcalDepositName = cms.string('hcal'),
    hoDepositName = cms.string('ho'),
    inputCollectionLabels = cms.VInputTag("hltIter2IterL3FromL1MuonMerged", "hltL3MuonsIterL3Links"),
    inputCollectionTypes = cms.vstring('inner tracks', 
        'links'),
    jetDepositName = cms.string('jets'),
    maxAbsDx = cms.double(3.0),
    maxAbsDy = cms.double(9999.0),
    maxAbsEta = cms.double(3.0),
    maxAbsPullX = cms.double(4.0),
    maxAbsPullY = cms.double(9999.0),
    minCaloCompatibility = cms.double(0.6),
    minNumberOfMatches = cms.int32(1),
    minP = cms.double(0.0),
    minPCaloMuon = cms.double(1000000000.0),
    minPt = cms.double(8.0),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    runArbitrationCleaner = cms.bool(False),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    trackDepositName = cms.string('tracker'),
    writeIsoDeposits = cms.bool(False)
)


process.hltIterL3MuonsFromL2 = cms.EDProducer("L3TrackCombiner",
    labels = cms.VInputTag("hltL3MuonsIterL3OI", "hltL3MuonsIterL3IO")
)


process.hltIterL3MuonsFromL2LinksCombination = cms.EDProducer("L3TrackLinksCombiner",
    labels = cms.VInputTag("hltL3MuonsIterL3OI", "hltL3MuonsIterL3IO")
)


process.hltIterL3OIL3MuonCandidates = cms.EDProducer("L3MuonCandidateProducer",
    InputLinksObjects = cms.InputTag("hltIterL3OIL3MuonsLinksCombination"),
    InputObjects = cms.InputTag("hltIterL3OIL3Muons"),
    MuonPtOption = cms.string('Tracker')
)


process.hltIterL3OIL3Muons = cms.EDProducer("L3TrackCombiner",
    labels = cms.VInputTag("hltL3MuonsIterL3OI")
)


process.hltIterL3OIL3MuonsLinksCombination = cms.EDProducer("L3TrackLinksCombiner",
    labels = cms.VInputTag("hltL3MuonsIterL3OI")
)


process.hltIterL3OIMuCtfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('iter10'),
    Fitter = cms.string('hltESPKFFittingSmootherWithOutliersRejectionAndRK'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string('hltESPMeasurementTracker'),
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClusters"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('PropagatorWithMaterial'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltIterL3OITrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hltIterL3OIMuonTrackCutClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(True),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 3.40282346639e+38),
            d0err_par = cms.vdouble(0.001, 0.001, 3.40282346639e+38),
            dr_exp = cms.vint32(4, 4, 2147483647),
            dr_par1 = cms.vdouble(0.4, 0.4, 3.40282346639e+38),
            dr_par2 = cms.vdouble(0.3, 0.3, 3.40282346639e+38)
        ),
        dz_par = cms.PSet(
            dz_exp = cms.vint32(4, 4, 2147483647),
            dz_par1 = cms.vdouble(0.4, 0.4, 3.40282346639e+38),
            dz_par2 = cms.vdouble(0.35, 0.35, 3.40282346639e+38)
        ),
        maxChi2 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxChi2n = cms.vdouble(10.0, 1.0, 0.4),
        maxDr = cms.vdouble(0.5, 0.03, 3.40282346639e+38),
        maxDz = cms.vdouble(0.5, 0.2, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24.0, 100.0),
        maxLostLayers = cms.vint32(4, 3, 2),
        min3DLayers = cms.vint32(1, 2, 1),
        minLayers = cms.vint32(3, 5, 5),
        minNVtxTrk = cms.int32(3),
        minNdof = cms.vdouble(1e-05, 1e-05, 1e-05),
        minPixelHits = cms.vint32(0, 0, 1)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("hltIterL3OIMuCtfWithMaterialTracks"),
    vertices = cms.InputTag("Notused")
)


process.hltIterL3OIMuonTrackSelectionHighPurity = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltIterL3OIMuonTrackCutClassifier","MVAValues"),
    originalQualVals = cms.InputTag("hltIterL3OIMuonTrackCutClassifier","QualityMasks"),
    originalSource = cms.InputTag("hltIterL3OIMuCtfWithMaterialTracks")
)


process.hltIterL3OISeedsFromL2Muons = cms.EDProducer("TSGForOI",
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClusters"),
    SF1 = cms.double(3.0),
    SF2 = cms.double(4.0),
    SF3 = cms.double(5.0),
    SF4 = cms.double(7.0),
    SF5 = cms.double(10.0),
    UseHitLessSeeds = cms.bool(True),
    UseStereoLayersInTEC = cms.bool(False),
    adjustErrorsDynamicallyForHitless = cms.bool(True),
    adjustErrorsDynamicallyForHits = cms.bool(True),
    debug = cms.untracked.bool(False),
    estimator = cms.string('hltESPChi2MeasurementEstimator100'),
    eta1 = cms.double(1.0),
    eta2 = cms.double(1.4),
    fixedErrorRescaleFactorForHitless = cms.double(10.0),
    fixedErrorRescaleFactorForHits = cms.double(3.0),
    hitsToTry = cms.int32(3),
    layersToTry = cms.int32(2),
    maxEtaForTOB = cms.double(1.8),
    maxSeeds = cms.uint32(5),
    minEtaForTEC = cms.double(0.7),
    pT1 = cms.double(13.0),
    pT2 = cms.double(30.0),
    pT3 = cms.double(70.0),
    propagatorName = cms.string('PropagatorWithMaterial'),
    src = cms.InputTag("hltL2Muons","UpdatedAtVtx"),
    tsosDiff = cms.double(0.03)
)


process.hltIterL3OITrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltSiStripClusters"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('CkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTPSetMuonCkfTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('muonSeededTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltIterL3OISeedsFromL2Muons"),
    useHitsSplitting = cms.bool(False)
)


process.hltL2MuonCandidates = cms.EDProducer("L2MuonCandidateProducer",
    InputObjects = cms.InputTag("hltL2Muons","UpdatedAtVtx")
)


process.hltL2MuonSeeds = cms.EDProducer("L2MuonSeedGeneratorFromL1T",
    CentralBxOnly = cms.bool(True),
    EtaMatchingBins = cms.vdouble(0.0, 2.5),
    GMTReadoutCollection = cms.InputTag(""),
    InputObjects = cms.InputTag("hltGtStage2Digis","Muon"),
    L1MaxEta = cms.double(2.5),
    L1MinPt = cms.double(0.0),
    L1MinQuality = cms.uint32(7),
    MatchDR = cms.vdouble(0.3),
    OfflineSeedLabel = cms.untracked.InputTag("hltL2OfflineMuonSeeds"),
    Propagator = cms.string('SteppingHelixPropagatorAny'),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    UseOfflineSeed = cms.untracked.bool(True),
    UseUnassociatedL1 = cms.bool(False)
)


process.hltL2Muons = cms.EDProducer("L2MuonProducer",
    DoSeedRefit = cms.bool(False),
    InputObjects = cms.InputTag("hltL2MuonSeeds"),
    L2TrajBuilderParameters = cms.PSet(
        BWFilterParameters = cms.PSet(
            BWSeedType = cms.string('fromGenerator'),
            CSCRecSegmentLabel = cms.InputTag("hltCscSegments"),
            DTRecSegmentLabel = cms.InputTag("hltDt4DSegments"),
            EnableCSCMeasurement = cms.bool(True),
            EnableDTMeasurement = cms.bool(True),
            EnableRPCMeasurement = cms.bool(True),
            FitDirection = cms.string('outsideIn'),
            MaxChi2 = cms.double(100.0),
            MuonTrajectoryUpdatorParameters = cms.PSet(
                ExcludeRPCFromFit = cms.bool(False),
                Granularity = cms.int32(0),
                MaxChi2 = cms.double(25.0),
                RescaleError = cms.bool(False),
                RescaleErrorFactor = cms.double(100.0),
                UseInvalidHits = cms.bool(True)
            ),
            NumberOfSigma = cms.double(3.0),
            Propagator = cms.string('hltESPFastSteppingHelixPropagatorAny'),
            RPCRecSegmentLabel = cms.InputTag("hltRpcRecHits")
        ),
        DoBackwardFilter = cms.bool(True),
        DoRefit = cms.bool(False),
        DoSeedRefit = cms.bool(False),
        FilterParameters = cms.PSet(
            CSCRecSegmentLabel = cms.InputTag("hltCscSegments"),
            DTRecSegmentLabel = cms.InputTag("hltDt4DSegments"),
            EnableCSCMeasurement = cms.bool(True),
            EnableDTMeasurement = cms.bool(True),
            EnableRPCMeasurement = cms.bool(True),
            FitDirection = cms.string('insideOut'),
            MaxChi2 = cms.double(1000.0),
            MuonTrajectoryUpdatorParameters = cms.PSet(
                ExcludeRPCFromFit = cms.bool(False),
                Granularity = cms.int32(0),
                MaxChi2 = cms.double(25.0),
                RescaleError = cms.bool(False),
                RescaleErrorFactor = cms.double(100.0),
                UseInvalidHits = cms.bool(True)
            ),
            NumberOfSigma = cms.double(3.0),
            Propagator = cms.string('hltESPFastSteppingHelixPropagatorAny'),
            RPCRecSegmentLabel = cms.InputTag("hltRpcRecHits")
        ),
        NavigationType = cms.string('Standard'),
        SeedPosition = cms.string('in'),
        SeedPropagator = cms.string('hltESPFastSteppingHelixPropagatorAny'),
        SeedTransformerParameters = cms.PSet(
            Fitter = cms.string('hltESPKFFittingSmootherForL2Muon'),
            MuonRecHitBuilder = cms.string('hltESPMuonTransientTrackingRecHitBuilder'),
            NMinRecHits = cms.uint32(2),
            Propagator = cms.string('hltESPFastSteppingHelixPropagatorAny'),
            RescaleError = cms.double(100.0),
            UseSubRecHits = cms.bool(False)
        )
    ),
    MuonTrajectoryBuilder = cms.string('Exhaustive'),
    SeedTransformerParameters = cms.PSet(
        Fitter = cms.string('hltESPKFFittingSmootherForL2Muon'),
        MuonRecHitBuilder = cms.string('hltESPMuonTransientTrackingRecHitBuilder'),
        NMinRecHits = cms.uint32(2),
        Propagator = cms.string('hltESPFastSteppingHelixPropagatorAny'),
        RescaleError = cms.double(100.0),
        UseSubRecHits = cms.bool(False)
    ),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('hltESPFastSteppingHelixPropagatorAny', 
            'hltESPFastSteppingHelixPropagatorOpposite'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(False),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPosition = cms.vdouble(0.0, 0.0, 0.0),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('hltESPFastSteppingHelixPropagatorOpposite')
        ),
        Smoother = cms.string('hltESPKFTrajectorySmootherForMuonTrackLoader'),
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        VertexConstraint = cms.bool(True),
        beamSpot = cms.InputTag("hltOnlineBeamSpot")
    )
)


process.hltL2OfflineMuonSeeds = cms.EDProducer("MuonSeedGenerator",
    CSCRecSegmentLabel = cms.InputTag("hltCscSegments"),
    CSC_01 = cms.vdouble(0.166, 0.0, 0.0, 0.031, 0.0, 
        0.0),
    CSC_01_1_scale = cms.vdouble(-1.915329, 0.0),
    CSC_02 = cms.vdouble(0.612, -0.207, 0.0, 0.067, -0.001, 
        0.0),
    CSC_03 = cms.vdouble(0.787, -0.338, 0.029, 0.101, -0.008, 
        0.0),
    CSC_12 = cms.vdouble(-0.161, 0.254, -0.047, 0.042, -0.007, 
        0.0),
    CSC_12_1_scale = cms.vdouble(-6.434242, 0.0),
    CSC_12_2_scale = cms.vdouble(-1.63622, 0.0),
    CSC_12_3_scale = cms.vdouble(-1.63622, 0.0),
    CSC_13 = cms.vdouble(0.901, -1.302, 0.533, 0.045, 0.005, 
        0.0),
    CSC_13_2_scale = cms.vdouble(-6.077936, 0.0),
    CSC_13_3_scale = cms.vdouble(-1.701268, 0.0),
    CSC_14 = cms.vdouble(0.606, -0.181, -0.002, 0.111, -0.003, 
        0.0),
    CSC_14_3_scale = cms.vdouble(-1.969563, 0.0),
    CSC_23 = cms.vdouble(-0.081, 0.113, -0.029, 0.015, 0.008, 
        0.0),
    CSC_23_1_scale = cms.vdouble(-19.084285, 0.0),
    CSC_23_2_scale = cms.vdouble(-6.079917, 0.0),
    CSC_24 = cms.vdouble(0.004, 0.021, -0.002, 0.053, 0.0, 
        0.0),
    CSC_24_1_scale = cms.vdouble(-6.055701, 0.0),
    CSC_34 = cms.vdouble(0.062, -0.067, 0.019, 0.021, 0.003, 
        0.0),
    CSC_34_1_scale = cms.vdouble(-11.520507, 0.0),
    DTRecSegmentLabel = cms.InputTag("hltDt4DSegments"),
    DT_12 = cms.vdouble(0.183, 0.054, -0.087, 0.028, 0.002, 
        0.0),
    DT_12_1_scale = cms.vdouble(-3.692398, 0.0),
    DT_12_2_scale = cms.vdouble(-3.518165, 0.0),
    DT_13 = cms.vdouble(0.315, 0.068, -0.127, 0.051, -0.002, 
        0.0),
    DT_13_1_scale = cms.vdouble(-4.520923, 0.0),
    DT_13_2_scale = cms.vdouble(-4.257687, 0.0),
    DT_14 = cms.vdouble(0.359, 0.052, -0.107, 0.072, -0.004, 
        0.0),
    DT_14_1_scale = cms.vdouble(-5.644816, 0.0),
    DT_14_2_scale = cms.vdouble(-4.808546, 0.0),
    DT_23 = cms.vdouble(0.13, 0.023, -0.057, 0.028, 0.004, 
        0.0),
    DT_23_1_scale = cms.vdouble(-5.320346, 0.0),
    DT_23_2_scale = cms.vdouble(-5.117625, 0.0),
    DT_24 = cms.vdouble(0.176, 0.014, -0.051, 0.051, 0.003, 
        0.0),
    DT_24_1_scale = cms.vdouble(-7.490909, 0.0),
    DT_24_2_scale = cms.vdouble(-6.63094, 0.0),
    DT_34 = cms.vdouble(0.044, 0.004, -0.013, 0.029, 0.003, 
        0.0),
    DT_34_1_scale = cms.vdouble(-13.783765, 0.0),
    DT_34_2_scale = cms.vdouble(-11.901897, 0.0),
    EnableCSCMeasurement = cms.bool(True),
    EnableDTMeasurement = cms.bool(True),
    EnableME0Measurement = cms.bool(False),
    ME0RecSegmentLabel = cms.InputTag("me0Segments"),
    OL_1213 = cms.vdouble(0.96, -0.737, 0.0, 0.052, 0.0, 
        0.0),
    OL_1213_0_scale = cms.vdouble(-4.488158, 0.0),
    OL_1222 = cms.vdouble(0.848, -0.591, 0.0, 0.062, 0.0, 
        0.0),
    OL_1222_0_scale = cms.vdouble(-5.810449, 0.0),
    OL_1232 = cms.vdouble(0.184, 0.0, 0.0, 0.066, 0.0, 
        0.0),
    OL_1232_0_scale = cms.vdouble(-5.964634, 0.0),
    OL_2213 = cms.vdouble(0.117, 0.0, 0.0, 0.044, 0.0, 
        0.0),
    OL_2213_0_scale = cms.vdouble(-7.239789, 0.0),
    OL_2222 = cms.vdouble(0.107, 0.0, 0.0, 0.04, 0.0, 
        0.0),
    OL_2222_0_scale = cms.vdouble(-7.667231, 0.0),
    SMB_10 = cms.vdouble(1.387, -0.038, 0.0, 0.19, 0.0, 
        0.0),
    SMB_10_0_scale = cms.vdouble(2.448566, 0.0),
    SMB_11 = cms.vdouble(1.247, 0.72, -0.802, 0.229, -0.075, 
        0.0),
    SMB_11_0_scale = cms.vdouble(2.56363, 0.0),
    SMB_12 = cms.vdouble(2.128, -0.956, 0.0, 0.199, 0.0, 
        0.0),
    SMB_12_0_scale = cms.vdouble(2.283221, 0.0),
    SMB_20 = cms.vdouble(1.011, -0.052, 0.0, 0.188, 0.0, 
        0.0),
    SMB_20_0_scale = cms.vdouble(1.486168, 0.0),
    SMB_21 = cms.vdouble(1.043, -0.124, 0.0, 0.183, 0.0, 
        0.0),
    SMB_21_0_scale = cms.vdouble(1.58384, 0.0),
    SMB_22 = cms.vdouble(1.474, -0.758, 0.0, 0.185, 0.0, 
        0.0),
    SMB_22_0_scale = cms.vdouble(1.346681, 0.0),
    SMB_30 = cms.vdouble(0.505, -0.022, 0.0, 0.215, 0.0, 
        0.0),
    SMB_30_0_scale = cms.vdouble(-3.629838, 0.0),
    SMB_31 = cms.vdouble(0.549, -0.145, 0.0, 0.207, 0.0, 
        0.0),
    SMB_31_0_scale = cms.vdouble(-3.323768, 0.0),
    SMB_32 = cms.vdouble(0.67, -0.327, 0.0, 0.22, 0.0, 
        0.0),
    SMB_32_0_scale = cms.vdouble(-3.054156, 0.0),
    SME_11 = cms.vdouble(3.295, -1.527, 0.112, 0.378, 0.02, 
        0.0),
    SME_11_0_scale = cms.vdouble(1.325085, 0.0),
    SME_12 = cms.vdouble(0.102, 0.599, 0.0, 0.38, 0.0, 
        0.0),
    SME_12_0_scale = cms.vdouble(2.279181, 0.0),
    SME_13 = cms.vdouble(-1.286, 1.711, 0.0, 0.356, 0.0, 
        0.0),
    SME_13_0_scale = cms.vdouble(0.104905, 0.0),
    SME_21 = cms.vdouble(-0.529, 1.194, -0.358, 0.472, 0.086, 
        0.0),
    SME_21_0_scale = cms.vdouble(-0.040862, 0.0),
    SME_22 = cms.vdouble(-1.207, 1.491, -0.251, 0.189, 0.243, 
        0.0),
    SME_22_0_scale = cms.vdouble(-3.457901, 0.0),
    SME_31 = cms.vdouble(-1.594, 1.482, -0.317, 0.487, 0.097, 
        0.0),
    SME_32 = cms.vdouble(-0.901, 1.333, -0.47, 0.41, 0.073, 
        0.0),
    SME_41 = cms.vdouble(-0.003, 0.005, 0.005, 0.608, 0.076, 
        0.0),
    SME_42 = cms.vdouble(-0.003, 0.005, 0.005, 0.608, 0.076, 
        0.0),
    beamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    crackEtas = cms.vdouble(0.2, 1.6, 1.7),
    crackWindow = cms.double(0.04),
    deltaEtaCrackSearchWindow = cms.double(0.25),
    deltaEtaSearchWindow = cms.double(0.2),
    deltaPhiSearchWindow = cms.double(0.25),
    scaleDT = cms.bool(True)
)


process.hltL2SelectorForL3IO = cms.EDProducer("HLTMuonL2SelectorForL3IO",
    InputLinks = cms.InputTag("hltIterL3OIL3MuonsLinksCombination"),
    MaxNormalizedChi2 = cms.double(20.0),
    MaxPtDifference = cms.double(0.3),
    MinNhits = cms.int32(1),
    MinNmuonHits = cms.int32(1),
    applyL3Filters = cms.bool(False),
    l2Src = cms.InputTag("hltL2Muons","UpdatedAtVtx"),
    l3OISrc = cms.InputTag("hltIterL3OIL3MuonCandidates")
)


process.hltL3MuonVertex = cms.EDProducer("VertexFromTrackProducer",
    beamSpotLabel = cms.InputTag("hltOnlineBeamSpot"),
    isRecoCandidate = cms.bool(True),
    trackLabel = cms.InputTag("hltIterL3MuonCandidates"),
    triggerFilterElectronsSrc = cms.InputTag("notUsed"),
    triggerFilterMuonsSrc = cms.InputTag("notUsed"),
    useBeamSpot = cms.bool(True),
    useTriggerFilterElectrons = cms.bool(False),
    useTriggerFilterMuons = cms.bool(False),
    useVertex = cms.bool(False),
    verbose = cms.untracked.bool(False),
    vertexLabel = cms.InputTag("notUsed")
)


process.hltL3MuonsIterL3IO = cms.EDProducer("L3MuonProducer",
    L3TrajBuilderParameters = cms.PSet(
        GlbRefitterParameters = cms.PSet(
            CSCRecSegmentLabel = cms.InputTag("hltCscSegments"),
            Chi2CutCSC = cms.double(150.0),
            Chi2CutDT = cms.double(10.0),
            Chi2CutRPC = cms.double(1.0),
            DTRecSegmentLabel = cms.InputTag("hltDt4DSegments"),
            DYTthrs = cms.vint32(30, 15),
            DoPredictionsOnly = cms.bool(False),
            Fitter = cms.string('hltESPL3MuKFTrajectoryFitter'),
            HitThreshold = cms.int32(1),
            MuonHitsOption = cms.int32(1),
            MuonRecHitBuilder = cms.string('hltESPMuonTransientTrackingRecHitBuilder'),
            PropDirForCosmics = cms.bool(False),
            Propagator = cms.string('hltESPSmartPropagatorAny'),
            RefitDirection = cms.string('insideOut'),
            RefitFlag = cms.bool(True),
            RefitRPCHits = cms.bool(True),
            SkipStation = cms.int32(-1),
            TrackerRecHitBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
            TrackerSkipSection = cms.int32(-1),
            TrackerSkipSystem = cms.int32(-1)
        ),
        GlobalMuonTrackMatcher = cms.PSet(
            Chi2Cut_1 = cms.double(50.0),
            Chi2Cut_2 = cms.double(50.0),
            Chi2Cut_3 = cms.double(200.0),
            DeltaDCut_1 = cms.double(40.0),
            DeltaDCut_2 = cms.double(10.0),
            DeltaDCut_3 = cms.double(15.0),
            DeltaRCut_1 = cms.double(0.1),
            DeltaRCut_2 = cms.double(0.2),
            DeltaRCut_3 = cms.double(1.0),
            Eta_threshold = cms.double(1.2),
            LocChi2Cut = cms.double(0.001),
            MinP = cms.double(2.5),
            MinPt = cms.double(1.0),
            Propagator = cms.string('hltESPSmartPropagator'),
            Pt_threshold1 = cms.double(0.0),
            Pt_threshold2 = cms.double(999999999.0),
            Quality_1 = cms.double(20.0),
            Quality_2 = cms.double(15.0),
            Quality_3 = cms.double(7.0)
        ),
        MuonRecHitBuilder = cms.string('hltESPMuonTransientTrackingRecHitBuilder'),
        MuonTrackingRegionBuilder = cms.PSet(
            DeltaEta = cms.double(0.04),
            DeltaPhi = cms.double(0.15),
            DeltaR = cms.double(0.025),
            DeltaZ = cms.double(24.2),
            EtaR_UpperLimit_Par1 = cms.double(0.25),
            EtaR_UpperLimit_Par2 = cms.double(0.15),
            Eta_fixed = cms.bool(True),
            Eta_min = cms.double(0.1),
            MeasurementTrackerName = cms.InputTag("hltESPMeasurementTracker"),
            OnDemand = cms.int32(-1),
            PhiR_UpperLimit_Par1 = cms.double(0.6),
            PhiR_UpperLimit_Par2 = cms.double(0.2),
            Phi_fixed = cms.bool(True),
            Phi_min = cms.double(0.1),
            Pt_fixed = cms.bool(True),
            Pt_min = cms.double(3.0),
            Rescale_Dz = cms.double(4.0),
            Rescale_eta = cms.double(3.0),
            Rescale_phi = cms.double(3.0),
            UseVertex = cms.bool(False),
            Z_fixed = cms.bool(True),
            beamSpot = cms.InputTag("hltOnlineBeamSpot"),
            input = cms.InputTag("hltL2SelectorForL3IO"),
            maxRegions = cms.int32(2),
            precise = cms.bool(True),
            vertexCollection = cms.InputTag("pixelVertices")
        ),
        PCut = cms.double(2.5),
        PtCut = cms.double(1.0),
        RefitRPCHits = cms.bool(True),
        ScaleTECxFactor = cms.double(-1.0),
        ScaleTECyFactor = cms.double(-1.0),
        TrackTransformer = cms.PSet(
            DoPredictionsOnly = cms.bool(False),
            Fitter = cms.string('hltESPL3MuKFTrajectoryFitter'),
            MuonRecHitBuilder = cms.string('hltESPMuonTransientTrackingRecHitBuilder'),
            Propagator = cms.string('hltESPSmartPropagatorAny'),
            RefitDirection = cms.string('insideOut'),
            RefitRPCHits = cms.bool(True),
            Smoother = cms.string('hltESPKFTrajectorySmootherForMuonTrackLoader'),
            TrackerRecHitBuilder = cms.string('hltESPTTRHBWithTrackAngle')
        ),
        TrackerPropagator = cms.string('SteppingHelixPropagatorAny'),
        TrackerRecHitBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        matchToSeeds = cms.bool(True),
        tkTrajBeamSpot = cms.InputTag("hltOnlineBeamSpot"),
        tkTrajLabel = cms.InputTag("hltIter2IterL3MuonMerged"),
        tkTrajMaxChi2 = cms.double(9999.0),
        tkTrajMaxDXYBeamSpot = cms.double(9999.0),
        tkTrajUseVertex = cms.bool(False),
        tkTrajVertex = cms.InputTag("hltIterL3MuonPixelVertices")
    ),
    MuonCollectionLabel = cms.InputTag("hltL2Muons","UpdatedAtVtx"),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('hltESPSmartPropagatorAny', 
            'SteppingHelixPropagatorAny', 
            'hltESPSmartPropagator', 
            'hltESPSteppingHelixPropagatorOpposite'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(False),
        MuonSeededTracksInstance = cms.untracked.string('L2Seeded'),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('hltESPSteppingHelixPropagatorOpposite')
        ),
        PutTkTrackIntoEvent = cms.untracked.bool(False),
        SmoothTkTrack = cms.untracked.bool(False),
        Smoother = cms.string('hltESPKFTrajectorySmootherForMuonTrackLoader'),
        VertexConstraint = cms.bool(False),
        beamSpot = cms.InputTag("hltOnlineBeamSpot")
    )
)


process.hltL3MuonsIterL3Links = cms.EDProducer("MuonLinksProducerForHLT",
    InclusiveTrackerTrackCollection = cms.InputTag("hltIter2IterL3FromL1MuonMerged"),
    LinkCollection = cms.InputTag("hltIterL3MuonsFromL2LinksCombination"),
    pMin = cms.double(2.5),
    ptMin = cms.double(2.5),
    shareHitFraction = cms.double(0.19)
)


process.hltL3MuonsIterL3OI = cms.EDProducer("L3MuonProducer",
    L3TrajBuilderParameters = cms.PSet(
        GlbRefitterParameters = cms.PSet(
            CSCRecSegmentLabel = cms.InputTag("hltCscSegments"),
            Chi2CutCSC = cms.double(150.0),
            Chi2CutDT = cms.double(10.0),
            Chi2CutRPC = cms.double(1.0),
            DTRecSegmentLabel = cms.InputTag("hltDt4DSegments"),
            DYTthrs = cms.vint32(30, 15),
            DoPredictionsOnly = cms.bool(False),
            Fitter = cms.string('hltESPL3MuKFTrajectoryFitter'),
            HitThreshold = cms.int32(1),
            MuonHitsOption = cms.int32(1),
            MuonRecHitBuilder = cms.string('hltESPMuonTransientTrackingRecHitBuilder'),
            PropDirForCosmics = cms.bool(False),
            Propagator = cms.string('hltESPSmartPropagatorAny'),
            RefitDirection = cms.string('insideOut'),
            RefitFlag = cms.bool(True),
            RefitRPCHits = cms.bool(True),
            SkipStation = cms.int32(-1),
            TrackerRecHitBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
            TrackerSkipSection = cms.int32(-1),
            TrackerSkipSystem = cms.int32(-1)
        ),
        GlobalMuonTrackMatcher = cms.PSet(
            Chi2Cut_1 = cms.double(50.0),
            Chi2Cut_2 = cms.double(50.0),
            Chi2Cut_3 = cms.double(200.0),
            DeltaDCut_1 = cms.double(40.0),
            DeltaDCut_2 = cms.double(10.0),
            DeltaDCut_3 = cms.double(15.0),
            DeltaRCut_1 = cms.double(0.1),
            DeltaRCut_2 = cms.double(0.2),
            DeltaRCut_3 = cms.double(1.0),
            Eta_threshold = cms.double(1.2),
            LocChi2Cut = cms.double(0.001),
            MinP = cms.double(2.5),
            MinPt = cms.double(1.0),
            Propagator = cms.string('hltESPSmartPropagator'),
            Pt_threshold1 = cms.double(0.0),
            Pt_threshold2 = cms.double(999999999.0),
            Quality_1 = cms.double(20.0),
            Quality_2 = cms.double(15.0),
            Quality_3 = cms.double(7.0)
        ),
        MuonRecHitBuilder = cms.string('hltESPMuonTransientTrackingRecHitBuilder'),
        MuonTrackingRegionBuilder = cms.PSet(
            DeltaEta = cms.double(0.2),
            DeltaPhi = cms.double(0.15),
            DeltaR = cms.double(0.025),
            DeltaZ = cms.double(24.2),
            EtaR_UpperLimit_Par1 = cms.double(0.25),
            EtaR_UpperLimit_Par2 = cms.double(0.15),
            Eta_fixed = cms.bool(True),
            Eta_min = cms.double(0.1),
            MeasurementTrackerName = cms.InputTag("hltESPMeasurementTracker"),
            OnDemand = cms.int32(-1),
            PhiR_UpperLimit_Par1 = cms.double(0.6),
            PhiR_UpperLimit_Par2 = cms.double(0.2),
            Phi_fixed = cms.bool(True),
            Phi_min = cms.double(0.1),
            Pt_fixed = cms.bool(False),
            Pt_min = cms.double(3.0),
            Rescale_Dz = cms.double(4.0),
            Rescale_eta = cms.double(3.0),
            Rescale_phi = cms.double(3.0),
            UseVertex = cms.bool(False),
            Z_fixed = cms.bool(False),
            beamSpot = cms.InputTag("hltOnlineBeamSpot"),
            input = cms.InputTag("hltL2Muons","UpdatedAtVtx"),
            maxRegions = cms.int32(2),
            precise = cms.bool(True),
            vertexCollection = cms.InputTag("pixelVertices")
        ),
        PCut = cms.double(2.5),
        PtCut = cms.double(1.0),
        RefitRPCHits = cms.bool(True),
        ScaleTECxFactor = cms.double(-1.0),
        ScaleTECyFactor = cms.double(-1.0),
        TrackTransformer = cms.PSet(
            DoPredictionsOnly = cms.bool(False),
            Fitter = cms.string('hltESPL3MuKFTrajectoryFitter'),
            MuonRecHitBuilder = cms.string('hltESPMuonTransientTrackingRecHitBuilder'),
            Propagator = cms.string('hltESPSmartPropagatorAny'),
            RefitDirection = cms.string('insideOut'),
            RefitRPCHits = cms.bool(True),
            Smoother = cms.string('hltESPKFTrajectorySmootherForMuonTrackLoader'),
            TrackerRecHitBuilder = cms.string('hltESPTTRHBWithTrackAngle')
        ),
        TrackerPropagator = cms.string('SteppingHelixPropagatorAny'),
        TrackerRecHitBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        tkTrajBeamSpot = cms.InputTag("hltOnlineBeamSpot"),
        tkTrajLabel = cms.InputTag("hltIterL3OIMuonTrackSelectionHighPurity"),
        tkTrajMaxChi2 = cms.double(9999.0),
        tkTrajMaxDXYBeamSpot = cms.double(9999.0),
        tkTrajUseVertex = cms.bool(False),
        tkTrajVertex = cms.InputTag("Notused")
    ),
    MuonCollectionLabel = cms.InputTag("hltL2Muons","UpdatedAtVtx"),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('hltESPSmartPropagatorAny', 
            'SteppingHelixPropagatorAny', 
            'hltESPSmartPropagator', 
            'hltESPSteppingHelixPropagatorOpposite'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(True),
        MuonSeededTracksInstance = cms.untracked.string('L2Seeded'),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('hltESPSteppingHelixPropagatorOpposite')
        ),
        PutTkTrackIntoEvent = cms.untracked.bool(False),
        SmoothTkTrack = cms.untracked.bool(False),
        Smoother = cms.string('hltESPKFTrajectorySmootherForMuonTrackLoader'),
        TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
        VertexConstraint = cms.bool(False),
        beamSpot = cms.InputTag("hltOnlineBeamSpot")
    )
)


process.hltLightPFTracks = cms.EDProducer("LightPFTrackProducer",
    TkColList = cms.VInputTag("hltPFMuonMerging"),
    TrackQuality = cms.string('none'),
    UseQuality = cms.bool(False)
)


process.hltMergedTracks = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(20.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag("hltTripletRecoveryMerged", "hltDoubletRecoveryPFlowTrackSelectionHighPurity"),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(False),
    hasSelector = cms.vint32(0, 0),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag("hltTripletRecoveryMerged", "hltDoubletRecoveryPFlowTrackSelectionHighPurity"),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(False),
        tLists = cms.vint32(0, 1)
    )),
    trackAlgoPriorityOrder = cms.string('hltESPTrackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hltMuonCSCDigis = cms.EDProducer("CSCDCCUnpacker",
    Debug = cms.untracked.bool(False),
    ErrorMask = cms.uint32(0),
    ExaminerMask = cms.uint32(535557110),
    FormatedEventDump = cms.untracked.bool(False),
    InputObjects = cms.InputTag("rawDataCollector"),
    PrintEventNumber = cms.untracked.bool(False),
    SuppressZeroLCT = cms.untracked.bool(True),
    UnpackStatusDigis = cms.bool(False),
    UseExaminer = cms.bool(True),
    UseFormatStatus = cms.bool(True),
    UseSelectiveUnpacking = cms.bool(True),
    VisualFEDInspect = cms.untracked.bool(False),
    VisualFEDShort = cms.untracked.bool(False),
    runDQM = cms.untracked.bool(False)
)


process.hltMuonDTDigis = cms.EDProducer("DTUnpackingModule",
    dataType = cms.string('DDU'),
    dqmOnly = cms.bool(False),
    inputLabel = cms.InputTag("rawDataCollector"),
    maxFEDid = cms.untracked.int32(779),
    minFEDid = cms.untracked.int32(770),
    readOutParameters = cms.PSet(
        debug = cms.untracked.bool(False),
        localDAQ = cms.untracked.bool(False),
        performDataIntegrityMonitor = cms.untracked.bool(False),
        rosParameters = cms.PSet(
            debug = cms.untracked.bool(False),
            localDAQ = cms.untracked.bool(False),
            performDataIntegrityMonitor = cms.untracked.bool(False),
            readDDUIDfromDDU = cms.untracked.bool(True),
            readingDDU = cms.untracked.bool(True),
            writeSC = cms.untracked.bool(True)
        )
    ),
    useStandardFEDid = cms.bool(True)
)


process.hltMuonLinks = cms.EDProducer("MuonLinksProducerForHLT",
    InclusiveTrackerTrackCollection = cms.InputTag("hltPFMuonMerging"),
    LinkCollection = cms.InputTag("hltL3MuonsIterL3Links"),
    pMin = cms.double(2.5),
    ptMin = cms.double(2.5),
    shareHitFraction = cms.double(0.8)
)


process.hltMuonRPCDigis = cms.EDProducer("RPCUnpackingModule",
    InputLabel = cms.InputTag("rawDataCollector"),
    doSynchro = cms.bool(False)
)


process.hltMuons = cms.EDProducer("MuonIdProducer",
    CaloExtractorPSet = cms.PSet(
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        DR_Max = cms.double(1.0),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_H = cms.double(0.1),
        DR_Veto_HO = cms.double(0.1),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        DepositLabel = cms.untracked.string('Cal'),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Noise_EB = cms.double(0.025),
        Noise_EE = cms.double(0.1),
        Noise_HB = cms.double(0.2),
        Noise_HE = cms.double(0.2),
        Noise_HO = cms.double(0.2),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('hltESPFastSteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('hltESPFastSteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold_E = cms.double(0.2),
        Threshold_H = cms.double(0.5),
        Threshold_HO = cms.double(0.5),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("hltCscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("hltTowerMakerForAll"),
            DTRecSegment4DCollectionLabel = cms.InputTag("hltDt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("hltEcalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("hltEcalRecHit","EcalRecHitsEE"),
            HBHERecHitCollectionLabel = cms.InputTag("hltHbhereco"),
            HORecHitCollectionLabel = cms.InputTag("hltHoreco"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            dRHcal = cms.double(1.0),
            dRHcalPreselection = cms.double(1.0),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        ),
        UseRecHitsFlag = cms.bool(False)
    ),
    JetExtractorPSet = cms.PSet(
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.1),
        ExcludeMuonVeto = cms.bool(True),
        JetCollectionLabel = cms.InputTag("hltAK4CaloJetsPFEt5"),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('hltESPFastSteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('hltESPFastSteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold = cms.double(5.0),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("hltCscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("hltTowerMakerForAll"),
            DTRecSegment4DCollectionLabel = cms.InputTag("hltDt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("hltEcalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("hltEcalRecHit","EcalRecHitsEE"),
            HBHERecHitCollectionLabel = cms.InputTag("hltHbhereco"),
            HORecHitCollectionLabel = cms.InputTag("hltHoreco"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            dRHcal = cms.double(0.5),
            dRHcalPreselection = cms.double(0.5),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        )
    ),
    MuonCaloCompatibility = cms.PSet(
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        allSiPMHO = cms.bool(False),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    TimingFillerParameters = cms.PSet(
        CSCTimingParameters = cms.PSet(
            CSCStripError = cms.double(7.0),
            CSCStripTimeOffset = cms.double(0.0),
            CSCTimeOffset = cms.double(0.0),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            CSCsegments = cms.InputTag("hltCscSegments"),
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("hltCscSegments"),
                DTradius = cms.double(0.01),
                DTsegments = cms.InputTag("hltDt4DSegments"),
                TightMatchCSC = cms.bool(True),
                TightMatchDT = cms.bool(False)
            ),
            PruneCut = cms.double(100.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('hltESPFastSteppingHelixPropagatorAny'),
                RPCLayers = cms.bool(True)
            ),
            UseStripTime = cms.bool(True),
            UseWireTime = cms.bool(True),
            debug = cms.bool(False)
        ),
        DTTimingParameters = cms.PSet(
            DTTimeOffset = cms.double(2.7),
            DTsegments = cms.InputTag("hltDt4DSegments"),
            DoWireCorr = cms.bool(False),
            DropTheta = cms.bool(True),
            HitError = cms.double(6.0),
            HitsMin = cms.int32(5),
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("hltCscSegments"),
                DTradius = cms.double(0.01),
                DTsegments = cms.InputTag("hltDt4DSegments"),
                TightMatchCSC = cms.bool(True),
                TightMatchDT = cms.bool(False)
            ),
            PruneCut = cms.double(10000.0),
            RequireBothProjections = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('hltESPFastSteppingHelixPropagatorAny'),
                RPCLayers = cms.bool(True)
            ),
            UseSegmentT0 = cms.bool(False),
            debug = cms.bool(False)
        ),
        EcalEnergyCut = cms.double(0.4),
        ErrorCSC = cms.double(7.4),
        ErrorDT = cms.double(6.0),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        UseCSC = cms.bool(True),
        UseDT = cms.bool(True),
        UseECAL = cms.bool(True)
    ),
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("hltCscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("hltTowerMakerForAll"),
        DTRecSegment4DCollectionLabel = cms.InputTag("hltDt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("hltEcalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("hltEcalRecHit","EcalRecHitsEE"),
        HBHERecHitCollectionLabel = cms.InputTag("hltHbhereco"),
        HORecHitCollectionLabel = cms.InputTag("hltHoreco"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        dRHcal = cms.double(9999.0),
        dRHcalPreselection = cms.double(0.2),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(False),
        useEcal = cms.bool(True),
        useHO = cms.bool(True),
        useHcal = cms.bool(True),
        useMuon = cms.bool(True),
        usePreshower = cms.bool(False)
    ),
    TrackExtractorPSet = cms.PSet(
        BeamSpotLabel = cms.InputTag("hltOnlineBeamSpot"),
        BeamlineOption = cms.string('BeamSpotFromEvent'),
        Chi2Ndof_Max = cms.double(1e+64),
        Chi2Prob_Min = cms.double(-1.0),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.01),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(0.1),
        Diff_z = cms.double(0.2),
        NHits_Min = cms.uint32(0),
        Pt_Min = cms.double(-1.0),
        inputTrackCollection = cms.InputTag("hltPFMuonMerging")
    ),
    TrackerKinkFinderParameters = cms.PSet(
        diagonalOnly = cms.bool(False),
        usePosition = cms.bool(False)
    ),
    addExtraSoftMuons = cms.bool(False),
    arbitrateTrackerMuons = cms.bool(False),
    arbitrationCleanerOptions = cms.PSet(
        ClusterDPhi = cms.double(0.6),
        ClusterDTheta = cms.double(0.02),
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        OverlapDTheta = cms.double(0.02)
    ),
    debugWithTruthMatching = cms.bool(False),
    ecalDepositName = cms.string('ecal'),
    fillCaloCompatibility = cms.bool(True),
    fillEnergy = cms.bool(True),
    fillGlobalTrackQuality = cms.bool(False),
    fillGlobalTrackRefits = cms.bool(False),
    fillIsolation = cms.bool(True),
    fillMatching = cms.bool(True),
    fillTrackerKink = cms.bool(False),
    globalTrackQualityInputTag = cms.InputTag("glbTrackQual"),
    hcalDepositName = cms.string('hcal'),
    hoDepositName = cms.string('ho'),
    inputCollectionLabels = cms.VInputTag("hltPFMuonMerging", "hltMuonLinks", "hltL2Muons"),
    inputCollectionTypes = cms.vstring('inner tracks', 
        'links', 
        'outer tracks'),
    jetDepositName = cms.string('jets'),
    maxAbsDx = cms.double(3.0),
    maxAbsDy = cms.double(9999.0),
    maxAbsEta = cms.double(3.0),
    maxAbsPullX = cms.double(4.0),
    maxAbsPullY = cms.double(9999.0),
    minCaloCompatibility = cms.double(0.6),
    minNumberOfMatches = cms.int32(1),
    minP = cms.double(10.0),
    minPCaloMuon = cms.double(1000000000.0),
    minPt = cms.double(10.0),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    runArbitrationCleaner = cms.bool(False),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    trackDepositName = cms.string('tracker'),
    writeIsoDeposits = cms.bool(False)
)


process.hltOnlineBeamSpot = cms.EDProducer("BeamSpotOnlineProducer",
    changeToCMSCoordinates = cms.bool(False),
    gtEvmLabel = cms.InputTag(""),
    maxRadius = cms.double(2.0),
    maxZ = cms.double(40.0),
    setSigmaZ = cms.double(0.0),
    src = cms.InputTag("hltScalersRawToDigi")
)


process.hltPFJetForBtagJet30Eta2p4 = cms.EDProducer("HLTPFJetCollectionProducer",
    HLTObject = cms.InputTag("hltPFJetForBtagSelectorPFJet30Eta2p4"),
    TriggerTypes = cms.vint32(86)
)


process.hltPFJetForBtagJet40Eta2p4 = cms.EDProducer("HLTPFJetCollectionProducer",
    HLTObject = cms.InputTag("hltPFJetForBtagSelectorPFJet40Eta2p4"),
    TriggerTypes = cms.vint32(86)
)


process.hltPFJetForBtagJet60Eta2p4 = cms.EDProducer("HLTPFJetCollectionProducer",
    HLTObject = cms.InputTag("hltPFJetForBtagSelectorPFJet60Eta2p4"),
    TriggerTypes = cms.vint32(86)
)


process.hltPFJetForBtagJet80Eta2p4 = cms.EDProducer("HLTPFJetCollectionProducer",
    HLTObject = cms.InputTag("hltPFJetForBtagSelectorPFJet80Eta2p4"),
    TriggerTypes = cms.vint32(86)
)


process.hltPFJetsCorrectedMatchedToCaloFwdJets10 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleCaloFwdJet10"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK4PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltPFJetsCorrectedMatchedToCaloFwdJets10AK8 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleCaloFwdJet10AK8"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK8PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltPFJetsCorrectedMatchedToCaloFwdJets110 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleCaloFwdJet110"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK4PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltPFJetsCorrectedMatchedToCaloFwdJets110AK8 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleCaloFwdJet110AK8"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK8PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltPFJetsCorrectedMatchedToCaloFwdJets40AK8 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleCaloFwdJet40AK8"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK8PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltPFJetsCorrectedMatchedToCaloFwdJets5 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleCaloFwdJet5"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK4PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltPFJetsCorrectedMatchedToCaloFwdJets50AK8 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleCaloFwdJet50AK8"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK8PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltPFJetsCorrectedMatchedToCaloFwdJets5AK8 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleCaloFwdJet5AK8"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK8PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltPFJetsCorrectedMatchedToCaloJets10 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleCaloJet10"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK4PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltPFJetsCorrectedMatchedToCaloJets10AK8 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleCaloJet10AK8"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK8PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltPFJetsCorrectedMatchedToCaloJets110 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleCaloJet110"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK4PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltPFJetsCorrectedMatchedToCaloJets110AK8 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleCaloJet110AK8"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK8PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltPFJetsCorrectedMatchedToCaloJets40AK8 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleCaloJet40AK8"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK8PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltPFJetsCorrectedMatchedToCaloJets50AK8 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleCaloJet50AK8"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK8PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltPFJetsCorrectedMatchedToCaloJets5AK8 = cms.EDProducer("PFJetsMatchedToFilteredCaloJetsProducer",
    CaloJetFilter = cms.InputTag("hltSingleCaloJet5AK8"),
    DeltaR = cms.double(0.5),
    PFJetSrc = cms.InputTag("hltAK8PFJetsCorrected"),
    TriggerType = cms.int32(85)
)


process.hltPFMuonMerging = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(20.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag("hltIterL3MuonAndMuonFromL1Merged", "hltMergedTracks"),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(False),
    hasSelector = cms.vint32(0, 0),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag("hltIterL3MuonAndMuonFromL1Merged", "hltMergedTracks"),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(False),
        tLists = cms.vint32(0, 1)
    )),
    trackAlgoPriorityOrder = cms.string('hltESPTrackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hltParticleFlow = cms.EDProducer("PFProducer",
    GedElectronValueMap = cms.InputTag("gedGsfElectronsTmp"),
    GedPhotonValueMap = cms.InputTag("tmpGedPhotons","valMapPFEgammaCandToPhoton"),
    PFEGammaCandidates = cms.InputTag("particleFlowEGamma"),
    X0_Map = cms.string('RecoParticleFlow/PFProducer/data/allX0histos.root'),
    algoType = cms.uint32(0),
    blocks = cms.InputTag("hltParticleFlowBlock"),
    calibHF_a_EMHAD = cms.vdouble(1.42215, 1.00496, 0.68961, 0.81656, 0.98504, 
        0.98504, 1.00802, 1.0593, 1.4576, 1.4576),
    calibHF_a_EMonly = cms.vdouble(0.96945, 0.96701, 0.76309, 0.82268, 0.87583, 
        0.89718, 0.98674, 1.4681, 1.458, 1.458),
    calibHF_b_EMHAD = cms.vdouble(1.27541, 0.85361, 0.86333, 0.89091, 0.94348, 
        0.94348, 0.9437, 1.0034, 1.0444, 1.0444),
    calibHF_b_HADonly = cms.vdouble(1.27541, 0.85361, 0.86333, 0.89091, 0.94348, 
        0.94348, 0.9437, 1.0034, 1.0444, 1.0444),
    calibHF_eta_step = cms.vdouble(0.0, 2.9, 3.0, 3.2, 4.2, 
        4.4, 4.6, 4.8, 5.2, 5.4),
    calibHF_use = cms.bool(False),
    calibPFSCEle_Fbrem_barrel = cms.vdouble(0.6, 6.0, -0.0255975, 0.0576727, 0.975442, 
        -0.000546394, 1.26147, 25.0, -0.02025, 0.04537, 
        0.9728, -0.0008962, 1.172),
    calibPFSCEle_Fbrem_endcap = cms.vdouble(0.9, 6.5, -0.0692932, 0.101776, 0.995338, 
        -0.00236548, 0.874998, 1.653, -0.0750184, 0.147, 
        0.923165, 0.000474665, 1.10782),
    calibPFSCEle_barrel = cms.vdouble(1.004, -1.536, 22.88, -1.467, 0.3555, 
        0.6227, 14.65, 2051.0, 25.0, 0.9932, 
        -0.5444, 0.0, 0.5438, 0.7109, 7.645, 
        0.2904, 0.0),
    calibPFSCEle_endcap = cms.vdouble(1.153, -16.5975, 5.668, -0.1772, 16.22, 
        7.326, 0.0483, -4.068, 9.406),
    calibrationsLabel = cms.string('HLT'),
    cleanedHF = cms.VInputTag("hltParticleFlowRecHitHF:Cleaned", "hltParticleFlowClusterHF:Cleaned"),
    coneEcalIsoForEgammaSC = cms.double(0.3),
    coneTrackIsoForEgammaSC = cms.double(0.3),
    cosmicRejectionDistance = cms.double(1.0),
    debug = cms.untracked.bool(False),
    dptRel_DispVtx = cms.double(10.0),
    dzPV = cms.double(0.2),
    egammaElectrons = cms.InputTag(""),
    electron_iso_combIso_barrel = cms.double(10.0),
    electron_iso_combIso_endcap = cms.double(10.0),
    electron_iso_mva_barrel = cms.double(-0.1875),
    electron_iso_mva_endcap = cms.double(-0.1075),
    electron_iso_pt = cms.double(10.0),
    electron_missinghits = cms.uint32(1),
    electron_noniso_mvaCut = cms.double(-0.1),
    electron_protectionsForJetMET = cms.PSet(
        maxDPhiIN = cms.double(0.1),
        maxE = cms.double(50.0),
        maxEcalEOverPRes = cms.double(0.2),
        maxEcalEOverP_1 = cms.double(0.5),
        maxEcalEOverP_2 = cms.double(0.2),
        maxEeleOverPout = cms.double(0.2),
        maxEeleOverPoutRes = cms.double(0.5),
        maxEleHcalEOverEcalE = cms.double(0.1),
        maxHcalE = cms.double(10.0),
        maxHcalEOverEcalE = cms.double(0.1),
        maxHcalEOverP = cms.double(1.0),
        maxNtracks = cms.double(3.0),
        maxTrackPOverEele = cms.double(1.0)
    ),
    eventFactorForCosmics = cms.double(10.0),
    eventFractionForCleaning = cms.double(0.5),
    eventFractionForRejection = cms.double(0.8),
    factors_45 = cms.vdouble(10.0, 100.0),
    iCfgCandConnector = cms.PSet(
        bCalibPrimary = cms.bool(False),
        bCalibSecondary = cms.bool(False),
        bCorrect = cms.bool(False),
        nuclCalibFactors = cms.vdouble(0.8, 0.15, 0.5, 0.5, 0.05)
    ),
    isolatedElectronID_mvaWeightFile = cms.string('RecoEgamma/ElectronIdentification/data/TMVA_BDTSimpleCat_17Feb2011.weights.xml'),
    maxDPtOPt = cms.double(1.0),
    maxDeltaPhiPt = cms.double(7.0),
    maxSignificance = cms.double(2.5),
    metFactorForCleaning = cms.double(4.0),
    metFactorForFakes = cms.double(4.0),
    metFactorForHighEta = cms.double(25.0),
    metFactorForRejection = cms.double(4.0),
    metSignificanceForCleaning = cms.double(3.0),
    metSignificanceForRejection = cms.double(4.0),
    minDeltaMet = cms.double(0.4),
    minEnergyForPunchThrough = cms.double(100.0),
    minHFCleaningPt = cms.double(5.0),
    minMomentumForPunchThrough = cms.double(100.0),
    minPixelHits = cms.int32(1),
    minPtForPostCleaning = cms.double(20.0),
    minSignificance = cms.double(2.5),
    minSignificanceReduction = cms.double(1.4),
    minTrackerHits = cms.int32(8),
    muon_ECAL = cms.vdouble(0.5, 0.5),
    muon_HCAL = cms.vdouble(3.0, 3.0),
    muon_HO = cms.vdouble(0.9, 0.9),
    muons = cms.InputTag("hltMuons"),
    nTrackIsoForEgammaSC = cms.uint32(2),
    nsigma_TRACK = cms.double(1.0),
    pf_GlobC_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFGlobalCorr_14Dec2011.root'),
    pf_Res_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFRes_14Dec2011.root'),
    pf_convID_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/MVAnalysis_BDT.weights_pfConversionAug0411.txt'),
    pf_conv_mvaCut = cms.double(0.0),
    pf_electronID_crackCorrection = cms.bool(False),
    pf_electronID_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/MVAnalysis_BDT.weights_PfElectrons23Jan_IntToFloat.txt'),
    pf_electron_mvaCut = cms.double(-0.1),
    pf_electron_output_col = cms.string('electrons'),
    pf_locC_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFClusterLCorr_14Dec2011.root'),
    pf_nsigma_ECAL = cms.double(0.0),
    pf_nsigma_HCAL = cms.double(1.0),
    photon_HoE = cms.double(0.05),
    photon_MinEt = cms.double(10.0),
    photon_SigmaiEtaiEta_barrel = cms.double(0.0125),
    photon_SigmaiEtaiEta_endcap = cms.double(0.034),
    photon_combIso = cms.double(10.0),
    photon_protectionsForJetMET = cms.PSet(
        sumPtTrackIso = cms.double(2.0),
        sumPtTrackIsoSlope = cms.double(0.001)
    ),
    postHFCleaning = cms.bool(False),
    postMuonCleaning = cms.bool(True),
    ptErrorScale = cms.double(8.0),
    ptFactorForHighEta = cms.double(2.0),
    pt_Error = cms.double(1.0),
    punchThroughFactor = cms.double(3.0),
    punchThroughMETFactor = cms.double(4.0),
    rejectTracks_Bad = cms.bool(False),
    rejectTracks_Step45 = cms.bool(False),
    sumEtEcalIsoForEgammaSC_barrel = cms.double(1.0),
    sumEtEcalIsoForEgammaSC_endcap = cms.double(2.0),
    sumPtTrackIsoForEgammaSC_barrel = cms.double(4.0),
    sumPtTrackIsoForEgammaSC_endcap = cms.double(4.0),
    sumPtTrackIsoForPhoton = cms.double(-1.0),
    sumPtTrackIsoSlopeForPhoton = cms.double(-1.0),
    trackQuality = cms.string('highPurity'),
    useCalibrationsFromDB = cms.bool(True),
    useEGammaElectrons = cms.bool(False),
    useEGammaFilters = cms.bool(False),
    useEGammaSupercluster = cms.bool(False),
    useHO = cms.bool(False),
    usePFConversions = cms.bool(False),
    usePFDecays = cms.bool(False),
    usePFElectrons = cms.bool(False),
    usePFNuclearInteractions = cms.bool(False),
    usePFPhotons = cms.bool(False),
    usePFSCEleCalib = cms.bool(True),
    usePhotonReg = cms.bool(False),
    useProtectionsForJetMET = cms.bool(True),
    useRegressionFromDB = cms.bool(False),
    useVerticesForNeutral = cms.bool(True),
    verbose = cms.untracked.bool(False),
    vertexCollection = cms.InputTag("hltPixelVertices")
)


process.hltParticleFlowBlock = cms.EDProducer("PFBlockProducer",
    debug = cms.untracked.bool(False),
    elementImporters = cms.VPSet(cms.PSet(
        DPtOverPtCuts_byTrackAlgo = cms.vdouble(0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5),
        NHitCuts_byTrackAlgo = cms.vuint32(3, 3, 3, 3, 3, 
            3),
        importerName = cms.string('GeneralTracksImporter'),
        muonSrc = cms.InputTag("hltMuons"),
        source = cms.InputTag("hltLightPFTracks"),
        useIterativeTracking = cms.bool(False)
    ), 
        cms.PSet(
            BCtoPFCMap = cms.InputTag(""),
            importerName = cms.string('ECALClusterImporter'),
            source = cms.InputTag("hltParticleFlowClusterECALUnseeded")
        ), 
        cms.PSet(
            importerName = cms.string('GenericClusterImporter'),
            source = cms.InputTag("hltParticleFlowClusterHCAL")
        ), 
        cms.PSet(
            importerName = cms.string('GenericClusterImporter'),
            source = cms.InputTag("hltParticleFlowClusterHF")
        ), 
        cms.PSet(
            importerName = cms.string('GenericClusterImporter'),
            source = cms.InputTag("hltParticleFlowClusterPSUnseeded")
        )),
    linkDefinitions = cms.VPSet(cms.PSet(
        linkType = cms.string('PS1:ECAL'),
        linkerName = cms.string('PreshowerAndECALLinker'),
        useKDTree = cms.bool(True)
    ), 
        cms.PSet(
            linkType = cms.string('PS2:ECAL'),
            linkerName = cms.string('PreshowerAndECALLinker'),
            useKDTree = cms.bool(True)
        ), 
        cms.PSet(
            linkType = cms.string('TRACK:ECAL'),
            linkerName = cms.string('TrackAndECALLinker'),
            useKDTree = cms.bool(True)
        ), 
        cms.PSet(
            linkType = cms.string('TRACK:HCAL'),
            linkerName = cms.string('TrackAndHCALLinker'),
            useKDTree = cms.bool(True)
        ), 
        cms.PSet(
            linkType = cms.string('ECAL:HCAL'),
            linkerName = cms.string('ECALAndHCALLinker'),
            useKDTree = cms.bool(False)
        ), 
        cms.PSet(
            linkType = cms.string('HFEM:HFHAD'),
            linkerName = cms.string('HFEMAndHFHADLinker'),
            useKDTree = cms.bool(False)
        )),
    verbose = cms.untracked.bool(False)
)


process.hltParticleFlowClusterECALL1Seeded = cms.EDProducer("CorrectedECALPFClusterProducer",
    energyCorrector = cms.PSet(
        algoName = cms.string('PFClusterEMEnergyCorrector'),
        applyCrackCorrections = cms.bool(False)
    ),
    inputECAL = cms.InputTag("hltParticleFlowClusterECALUncorrectedL1Seeded"),
    inputPS = cms.InputTag("hltParticleFlowClusterPSL1Seeded"),
    minimumPSEnergy = cms.double(0.0)
)


process.hltParticleFlowClusterECALUncorrectedL1Seeded = cms.EDProducer("PFClusterProducer",
    energyCorrector = cms.PSet(

    ),
    initialClusteringStep = cms.PSet(
        algoName = cms.string('Basic2DGenericTopoClusterizer'),
        thresholdsByDetector = cms.VPSet(cms.PSet(
            detector = cms.string('ECAL_BARREL'),
            gatheringThreshold = cms.double(0.08),
            gatheringThresholdPt = cms.double(0.0)
        ), 
            cms.PSet(
                detector = cms.string('ECAL_ENDCAP'),
                gatheringThreshold = cms.double(0.3),
                gatheringThresholdPt = cms.double(0.0)
            )),
        useCornerCells = cms.bool(True)
    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('Basic2DGenericPFlowClusterizer'),
        allCellsPositionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.08),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1),
            timeResolutionCalcBarrel = cms.PSet(
                constantTerm = cms.double(0.428192),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0510871),
                noiseTerm = cms.double(1.10889),
                noiseTermLowE = cms.double(1.31883),
                threshHighE = cms.double(5.0),
                threshLowE = cms.double(0.5)
            ),
            timeResolutionCalcEndcap = cms.PSet(
                constantTerm = cms.double(0.0),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0),
                noiseTerm = cms.double(5.72489999999),
                noiseTermLowE = cms.double(6.92683000001),
                threshHighE = cms.double(10.0),
                threshLowE = cms.double(1.0)
            )
        ),
        excludeOtherSeeds = cms.bool(True),
        maxIterations = cms.uint32(50),
        minFracTot = cms.double(1e-20),
        minFractionToKeep = cms.double(1e-07),
        positionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.08),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(9),
            timeResolutionCalcBarrel = cms.PSet(
                constantTerm = cms.double(0.428192),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0510871),
                noiseTerm = cms.double(1.10889),
                noiseTermLowE = cms.double(1.31883),
                threshHighE = cms.double(5.0),
                threshLowE = cms.double(0.5)
            ),
            timeResolutionCalcEndcap = cms.PSet(
                constantTerm = cms.double(0.0),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0),
                noiseTerm = cms.double(5.72489999999),
                noiseTermLowE = cms.double(6.92683000001),
                threshHighE = cms.double(10.0),
                threshLowE = cms.double(1.0)
            )
        ),
        positionCalcForConvergence = cms.PSet(
            T0_EB = cms.double(7.4),
            T0_EE = cms.double(3.1),
            T0_ES = cms.double(1.2),
            W0 = cms.double(4.2),
            X0 = cms.double(0.89),
            algoName = cms.string('ECAL2DPositionCalcWithDepthCorr'),
            minAllowedNormalization = cms.double(0.0),
            minFractionInCalc = cms.double(0.0)
        ),
        recHitEnergyNorms = cms.VPSet(cms.PSet(
            detector = cms.string('ECAL_BARREL'),
            recHitEnergyNorm = cms.double(0.08)
        ), 
            cms.PSet(
                detector = cms.string('ECAL_ENDCAP'),
                recHitEnergyNorm = cms.double(0.3)
            )),
        showerSigma = cms.double(1.5),
        stoppingTolerance = cms.double(1e-08)
    ),
    positionReCalc = cms.PSet(
        T0_EB = cms.double(7.4),
        T0_EE = cms.double(3.1),
        T0_ES = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89),
        algoName = cms.string('ECAL2DPositionCalcWithDepthCorr'),
        minAllowedNormalization = cms.double(0.0),
        minFractionInCalc = cms.double(0.0)
    ),
    recHitCleaners = cms.VPSet(),
    recHitsSource = cms.InputTag("hltParticleFlowRecHitECALL1Seeded"),
    seedFinder = cms.PSet(
        algoName = cms.string('LocalMaximumSeedFinder'),
        nNeighbours = cms.int32(8),
        thresholdsByDetector = cms.VPSet(cms.PSet(
            detector = cms.string('ECAL_ENDCAP'),
            seedingThreshold = cms.double(0.6),
            seedingThresholdPt = cms.double(0.15)
        ), 
            cms.PSet(
                detector = cms.string('ECAL_BARREL'),
                seedingThreshold = cms.double(0.23),
                seedingThresholdPt = cms.double(0.0)
            ))
    )
)


process.hltParticleFlowClusterECALUncorrectedUnseeded = cms.EDProducer("PFClusterProducer",
    energyCorrector = cms.PSet(

    ),
    initialClusteringStep = cms.PSet(
        algoName = cms.string('Basic2DGenericTopoClusterizer'),
        thresholdsByDetector = cms.VPSet(cms.PSet(
            detector = cms.string('ECAL_BARREL'),
            gatheringThreshold = cms.double(0.08),
            gatheringThresholdPt = cms.double(0.0)
        ), 
            cms.PSet(
                detector = cms.string('ECAL_ENDCAP'),
                gatheringThreshold = cms.double(0.3),
                gatheringThresholdPt = cms.double(0.0)
            )),
        useCornerCells = cms.bool(True)
    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('Basic2DGenericPFlowClusterizer'),
        allCellsPositionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.08),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1),
            timeResolutionCalcBarrel = cms.PSet(
                constantTerm = cms.double(0.428192),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0510871),
                noiseTerm = cms.double(1.10889),
                noiseTermLowE = cms.double(1.31883),
                threshHighE = cms.double(5.0),
                threshLowE = cms.double(0.5)
            ),
            timeResolutionCalcEndcap = cms.PSet(
                constantTerm = cms.double(0.0),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0),
                noiseTerm = cms.double(5.72489999999),
                noiseTermLowE = cms.double(6.92683000001),
                threshHighE = cms.double(10.0),
                threshLowE = cms.double(1.0)
            )
        ),
        excludeOtherSeeds = cms.bool(True),
        maxIterations = cms.uint32(50),
        minFracTot = cms.double(1e-20),
        minFractionToKeep = cms.double(1e-07),
        positionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.08),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(9),
            timeResolutionCalcBarrel = cms.PSet(
                constantTerm = cms.double(0.428192),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0510871),
                noiseTerm = cms.double(1.10889),
                noiseTermLowE = cms.double(1.31883),
                threshHighE = cms.double(5.0),
                threshLowE = cms.double(0.5)
            ),
            timeResolutionCalcEndcap = cms.PSet(
                constantTerm = cms.double(0.0),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0),
                noiseTerm = cms.double(5.72489999999),
                noiseTermLowE = cms.double(6.92683000001),
                threshHighE = cms.double(10.0),
                threshLowE = cms.double(1.0)
            )
        ),
        positionCalcForConvergence = cms.PSet(
            T0_EB = cms.double(7.4),
            T0_EE = cms.double(3.1),
            T0_ES = cms.double(1.2),
            W0 = cms.double(4.2),
            X0 = cms.double(0.89),
            algoName = cms.string('ECAL2DPositionCalcWithDepthCorr'),
            minAllowedNormalization = cms.double(0.0),
            minFractionInCalc = cms.double(0.0)
        ),
        recHitEnergyNorms = cms.VPSet(cms.PSet(
            detector = cms.string('ECAL_BARREL'),
            recHitEnergyNorm = cms.double(0.08)
        ), 
            cms.PSet(
                detector = cms.string('ECAL_ENDCAP'),
                recHitEnergyNorm = cms.double(0.3)
            )),
        showerSigma = cms.double(1.5),
        stoppingTolerance = cms.double(1e-08)
    ),
    positionReCalc = cms.PSet(
        T0_EB = cms.double(7.4),
        T0_EE = cms.double(3.1),
        T0_ES = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89),
        algoName = cms.string('ECAL2DPositionCalcWithDepthCorr'),
        minAllowedNormalization = cms.double(0.0),
        minFractionInCalc = cms.double(0.0)
    ),
    recHitCleaners = cms.VPSet(),
    recHitsSource = cms.InputTag("hltParticleFlowRecHitECALUnseeded"),
    seedFinder = cms.PSet(
        algoName = cms.string('LocalMaximumSeedFinder'),
        nNeighbours = cms.int32(8),
        thresholdsByDetector = cms.VPSet(cms.PSet(
            detector = cms.string('ECAL_ENDCAP'),
            seedingThreshold = cms.double(0.6),
            seedingThresholdPt = cms.double(0.15)
        ), 
            cms.PSet(
                detector = cms.string('ECAL_BARREL'),
                seedingThreshold = cms.double(0.23),
                seedingThresholdPt = cms.double(0.0)
            ))
    )
)


process.hltParticleFlowClusterECALUnseeded = cms.EDProducer("CorrectedECALPFClusterProducer",
    energyCorrector = cms.PSet(
        algoName = cms.string('PFClusterEMEnergyCorrector'),
        applyCrackCorrections = cms.bool(False)
    ),
    inputECAL = cms.InputTag("hltParticleFlowClusterECALUncorrectedUnseeded"),
    inputPS = cms.InputTag("hltParticleFlowClusterPSUnseeded"),
    minimumPSEnergy = cms.double(0.0)
)


process.hltParticleFlowClusterHBHE = cms.EDProducer("PFClusterProducer",
    energyCorrector = cms.PSet(

    ),
    initialClusteringStep = cms.PSet(
        algoName = cms.string('Basic2DGenericTopoClusterizer'),
        thresholdsByDetector = cms.VPSet(cms.PSet(
            detector = cms.string('HCAL_BARREL1'),
            gatheringThreshold = cms.double(0.8),
            gatheringThresholdPt = cms.double(0.0)
        ), 
            cms.PSet(
                detector = cms.string('HCAL_ENDCAP'),
                gatheringThreshold = cms.double(0.8),
                gatheringThresholdPt = cms.double(0.0)
            )),
        useCornerCells = cms.bool(True)
    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('Basic2DGenericPFlowClusterizer'),
        allCellsPositionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.8),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1)
        ),
        clusterTimeResFromSeed = cms.bool(False),
        excludeOtherSeeds = cms.bool(True),
        maxIterations = cms.uint32(50),
        maxNSigmaTime = cms.double(10.0),
        minChi2Prob = cms.double(0.0),
        minFracTot = cms.double(1e-20),
        minFractionToKeep = cms.double(1e-07),
        positionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.8),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(5)
        ),
        recHitEnergyNorms = cms.VPSet(cms.PSet(
            detector = cms.string('HCAL_BARREL1'),
            recHitEnergyNorm = cms.double(0.8)
        ), 
            cms.PSet(
                detector = cms.string('HCAL_ENDCAP'),
                recHitEnergyNorm = cms.double(0.8)
            )),
        showerSigma = cms.double(10.0),
        stoppingTolerance = cms.double(1e-08),
        timeResolutionCalcBarrel = cms.PSet(
            constantTerm = cms.double(2.82),
            constantTermLowE = cms.double(4.24),
            corrTermLowE = cms.double(0.0),
            noiseTerm = cms.double(21.86),
            noiseTermLowE = cms.double(8.0),
            threshHighE = cms.double(15.0),
            threshLowE = cms.double(6.0)
        ),
        timeResolutionCalcEndcap = cms.PSet(
            constantTerm = cms.double(2.82),
            constantTermLowE = cms.double(4.24),
            corrTermLowE = cms.double(0.0),
            noiseTerm = cms.double(21.86),
            noiseTermLowE = cms.double(8.0),
            threshHighE = cms.double(15.0),
            threshLowE = cms.double(6.0)
        ),
        timeSigmaEB = cms.double(10.0),
        timeSigmaEE = cms.double(10.0)
    ),
    positionReCalc = cms.PSet(

    ),
    recHitCleaners = cms.VPSet(),
    recHitsSource = cms.InputTag("hltParticleFlowRecHitHBHE"),
    seedFinder = cms.PSet(
        algoName = cms.string('LocalMaximumSeedFinder'),
        nNeighbours = cms.int32(4),
        thresholdsByDetector = cms.VPSet(cms.PSet(
            detector = cms.string('HCAL_BARREL1'),
            seedingThreshold = cms.double(1.0),
            seedingThresholdPt = cms.double(0.0)
        ), 
            cms.PSet(
                detector = cms.string('HCAL_ENDCAP'),
                seedingThreshold = cms.double(1.1),
                seedingThresholdPt = cms.double(0.0)
            ))
    )
)


process.hltParticleFlowClusterHBHEForEgamma = cms.EDProducer("PFClusterProducer",
    energyCorrector = cms.PSet(

    ),
    initialClusteringStep = cms.PSet(
        algoName = cms.string('Basic2DGenericTopoClusterizer'),
        thresholdsByDetector = cms.VPSet(cms.PSet(
            detector = cms.string('HCAL_BARREL1'),
            gatheringThreshold = cms.double(0.8),
            gatheringThresholdPt = cms.double(0.0)
        ), 
            cms.PSet(
                detector = cms.string('HCAL_ENDCAP'),
                gatheringThreshold = cms.double(0.8),
                gatheringThresholdPt = cms.double(0.0)
            )),
        useCornerCells = cms.bool(True)
    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('Basic2DGenericPFlowClusterizer'),
        allCellsPositionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.8),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1)
        ),
        clusterTimeResFromSeed = cms.bool(False),
        excludeOtherSeeds = cms.bool(True),
        maxIterations = cms.uint32(50),
        maxNSigmaTime = cms.double(10.0),
        minChi2Prob = cms.double(0.0),
        minFracTot = cms.double(1e-20),
        minFractionToKeep = cms.double(1e-07),
        positionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.8),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(5)
        ),
        recHitEnergyNorms = cms.VPSet(cms.PSet(
            detector = cms.string('HCAL_BARREL1'),
            recHitEnergyNorm = cms.double(0.8)
        ), 
            cms.PSet(
                detector = cms.string('HCAL_ENDCAP'),
                recHitEnergyNorm = cms.double(0.8)
            )),
        showerSigma = cms.double(10.0),
        stoppingTolerance = cms.double(1e-08),
        timeResolutionCalcBarrel = cms.PSet(
            constantTerm = cms.double(2.82),
            constantTermLowE = cms.double(4.24),
            corrTermLowE = cms.double(0.0),
            noiseTerm = cms.double(21.86),
            noiseTermLowE = cms.double(8.0),
            threshHighE = cms.double(15.0),
            threshLowE = cms.double(6.0)
        ),
        timeResolutionCalcEndcap = cms.PSet(
            constantTerm = cms.double(2.82),
            constantTermLowE = cms.double(4.24),
            corrTermLowE = cms.double(0.0),
            noiseTerm = cms.double(21.86),
            noiseTermLowE = cms.double(8.0),
            threshHighE = cms.double(15.0),
            threshLowE = cms.double(6.0)
        ),
        timeSigmaEB = cms.double(10.0),
        timeSigmaEE = cms.double(10.0)
    ),
    positionReCalc = cms.PSet(

    ),
    recHitCleaners = cms.VPSet(),
    recHitsSource = cms.InputTag("hltParticleFlowRecHitHBHEForEgamma"),
    seedFinder = cms.PSet(
        algoName = cms.string('LocalMaximumSeedFinder'),
        nNeighbours = cms.int32(4),
        thresholdsByDetector = cms.VPSet(cms.PSet(
            detector = cms.string('HCAL_BARREL1'),
            seedingThreshold = cms.double(1.0),
            seedingThresholdPt = cms.double(0.0)
        ), 
            cms.PSet(
                detector = cms.string('HCAL_ENDCAP'),
                seedingThreshold = cms.double(1.1),
                seedingThresholdPt = cms.double(0.0)
            ))
    )
)


process.hltParticleFlowClusterHCAL = cms.EDProducer("PFMultiDepthClusterProducer",
    clustersSource = cms.InputTag("hltParticleFlowClusterHBHE"),
    energyCorrector = cms.PSet(

    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('PFMultiDepthClusterizer'),
        allCellsPositionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.8),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1)
        ),
        minFractionToKeep = cms.double(1e-07),
        nSigmaEta = cms.double(2.0),
        nSigmaPhi = cms.double(2.0)
    ),
    positionReCalc = cms.PSet(

    )
)


process.hltParticleFlowClusterHCALForEgamma = cms.EDProducer("PFMultiDepthClusterProducer",
    clustersSource = cms.InputTag("hltParticleFlowClusterHBHEForEgamma"),
    energyCorrector = cms.PSet(

    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('PFMultiDepthClusterizer'),
        allCellsPositionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.8),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1)
        ),
        minFractionToKeep = cms.double(1e-07),
        nSigmaEta = cms.double(2.0),
        nSigmaPhi = cms.double(2.0)
    ),
    positionReCalc = cms.PSet(

    )
)


process.hltParticleFlowClusterHF = cms.EDProducer("PFClusterProducer",
    energyCorrector = cms.PSet(

    ),
    initialClusteringStep = cms.PSet(
        algoName = cms.string('Basic2DGenericTopoClusterizer'),
        thresholdsByDetector = cms.VPSet(cms.PSet(
            detector = cms.string('HF_EM'),
            gatheringThreshold = cms.double(0.8),
            gatheringThresholdPt = cms.double(0.0)
        ), 
            cms.PSet(
                detector = cms.string('HF_HAD'),
                gatheringThreshold = cms.double(0.8),
                gatheringThresholdPt = cms.double(0.0)
            )),
        useCornerCells = cms.bool(False)
    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('Basic2DGenericPFlowClusterizer'),
        allCellsPositionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.8),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1)
        ),
        excludeOtherSeeds = cms.bool(True),
        maxIterations = cms.uint32(50),
        minFracTot = cms.double(1e-20),
        minFractionToKeep = cms.double(1e-07),
        positionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.8),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(5)
        ),
        recHitEnergyNorms = cms.VPSet(cms.PSet(
            detector = cms.string('HF_EM'),
            recHitEnergyNorm = cms.double(0.8)
        ), 
            cms.PSet(
                detector = cms.string('HF_HAD'),
                recHitEnergyNorm = cms.double(0.8)
            )),
        showerSigma = cms.double(0.0),
        stoppingTolerance = cms.double(1e-08)
    ),
    positionReCalc = cms.PSet(

    ),
    recHitCleaners = cms.VPSet(),
    recHitsSource = cms.InputTag("hltParticleFlowRecHitHF"),
    seedFinder = cms.PSet(
        algoName = cms.string('LocalMaximumSeedFinder'),
        nNeighbours = cms.int32(0),
        thresholdsByDetector = cms.VPSet(cms.PSet(
            detector = cms.string('HF_EM'),
            seedingThreshold = cms.double(1.4),
            seedingThresholdPt = cms.double(0.0)
        ), 
            cms.PSet(
                detector = cms.string('HF_HAD'),
                seedingThreshold = cms.double(1.4),
                seedingThresholdPt = cms.double(0.0)
            ))
    )
)


process.hltParticleFlowClusterPSL1Seeded = cms.EDProducer("PFClusterProducer",
    energyCorrector = cms.PSet(

    ),
    initialClusteringStep = cms.PSet(
        algoName = cms.string('Basic2DGenericTopoClusterizer'),
        thresholdsByDetector = cms.VPSet(cms.PSet(
            detector = cms.string('PS1'),
            gatheringThreshold = cms.double(6e-05),
            gatheringThresholdPt = cms.double(0.0)
        ), 
            cms.PSet(
                detector = cms.string('PS2'),
                gatheringThreshold = cms.double(6e-05),
                gatheringThresholdPt = cms.double(0.0)
            )),
        useCornerCells = cms.bool(False)
    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('Basic2DGenericPFlowClusterizer'),
        excludeOtherSeeds = cms.bool(True),
        maxIterations = cms.uint32(50),
        minFracTot = cms.double(1e-20),
        minFractionToKeep = cms.double(1e-07),
        positionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(6e-05),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1)
        ),
        recHitEnergyNorms = cms.VPSet(cms.PSet(
            detector = cms.string('PS1'),
            recHitEnergyNorm = cms.double(6e-05)
        ), 
            cms.PSet(
                detector = cms.string('PS2'),
                recHitEnergyNorm = cms.double(6e-05)
            )),
        showerSigma = cms.double(0.3),
        stoppingTolerance = cms.double(1e-08)
    ),
    positionReCalc = cms.PSet(

    ),
    recHitCleaners = cms.VPSet(),
    recHitsSource = cms.InputTag("hltParticleFlowRecHitPSL1Seeded"),
    seedFinder = cms.PSet(
        algoName = cms.string('LocalMaximumSeedFinder'),
        nNeighbours = cms.int32(4),
        thresholdsByDetector = cms.VPSet(cms.PSet(
            detector = cms.string('PS1'),
            seedingThreshold = cms.double(0.00012),
            seedingThresholdPt = cms.double(0.0)
        ), 
            cms.PSet(
                detector = cms.string('PS2'),
                seedingThreshold = cms.double(0.00012),
                seedingThresholdPt = cms.double(0.0)
            ))
    )
)


process.hltParticleFlowClusterPSUnseeded = cms.EDProducer("PFClusterProducer",
    energyCorrector = cms.PSet(

    ),
    initialClusteringStep = cms.PSet(
        algoName = cms.string('Basic2DGenericTopoClusterizer'),
        thresholdsByDetector = cms.VPSet(cms.PSet(
            detector = cms.string('PS1'),
            gatheringThreshold = cms.double(6e-05),
            gatheringThresholdPt = cms.double(0.0)
        ), 
            cms.PSet(
                detector = cms.string('PS2'),
                gatheringThreshold = cms.double(6e-05),
                gatheringThresholdPt = cms.double(0.0)
            )),
        useCornerCells = cms.bool(False)
    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('Basic2DGenericPFlowClusterizer'),
        excludeOtherSeeds = cms.bool(True),
        maxIterations = cms.uint32(50),
        minFracTot = cms.double(1e-20),
        minFractionToKeep = cms.double(1e-07),
        positionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(6e-05),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1)
        ),
        recHitEnergyNorms = cms.VPSet(cms.PSet(
            detector = cms.string('PS1'),
            recHitEnergyNorm = cms.double(6e-05)
        ), 
            cms.PSet(
                detector = cms.string('PS2'),
                recHitEnergyNorm = cms.double(6e-05)
            )),
        showerSigma = cms.double(0.3),
        stoppingTolerance = cms.double(1e-08)
    ),
    positionReCalc = cms.PSet(

    ),
    recHitCleaners = cms.VPSet(),
    recHitsSource = cms.InputTag("hltParticleFlowRecHitPSUnseeded"),
    seedFinder = cms.PSet(
        algoName = cms.string('LocalMaximumSeedFinder'),
        nNeighbours = cms.int32(4),
        thresholdsByDetector = cms.VPSet(cms.PSet(
            detector = cms.string('PS1'),
            seedingThreshold = cms.double(0.00012),
            seedingThresholdPt = cms.double(0.0)
        ), 
            cms.PSet(
                detector = cms.string('PS2'),
                seedingThreshold = cms.double(0.00012),
                seedingThresholdPt = cms.double(0.0)
            ))
    )
)


process.hltParticleFlowRecHitECALL1Seeded = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        barrel = cms.PSet(

        ),
        endcap = cms.PSet(

        ),
        name = cms.string('PFRecHitECALNavigator')
    ),
    producers = cms.VPSet(cms.PSet(
        name = cms.string('PFEBRecHitCreator'),
        qualityTests = cms.VPSet(cms.PSet(
            applySelectionsToAllCrystals = cms.bool(False),
            name = cms.string('PFRecHitQTestECALMultiThreshold'),
            thresholds = cms.vdouble(0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                1.25023, 1.25033, 1.25047, 1.25068, 1.25097, 
                1.25139, 1.25199, 1.25286, 1.2541, 1.25587, 
                1.25842, 1.26207, 1.26729, 1.27479, 1.28553, 
                1.30092, 1.32299, 1.35462, 1.39995, 1.46493, 
                1.55807, 1.69156, 1.88291, 2.15716, 2.55027, 
                3.11371, 3.92131, 5.07887, 6.73803, 9.11615, 
                10.0, 10.0, 10.0, 10.0, 10.0, 
                10.0, 10.0, 10.0, 10.0, 1.25023, 
                1.25033, 1.25047, 1.25068, 1.25097, 1.25139, 
                1.25199, 1.25286, 1.2541, 1.25587, 1.25842, 
                1.26207, 1.26729, 1.27479, 1.28553, 1.30092, 
                1.32299, 1.35462, 1.39995, 1.46493, 1.55807, 
                1.69156, 1.88291, 2.15716, 2.55027, 3.11371, 
                3.92131, 5.07887, 6.73803, 9.11615, 10.0, 
                10.0, 10.0, 10.0, 10.0, 10.0, 
                10.0, 10.0, 10.0)
        ), 
            cms.PSet(
                cleaningThreshold = cms.double(2.0),
                name = cms.string('PFRecHitQTestECAL'),
                skipTTRecoveredHits = cms.bool(True),
                timingCleaning = cms.bool(True),
                topologicalCleaning = cms.bool(True)
            )),
        srFlags = cms.InputTag("hltEcalDigis"),
        src = cms.InputTag("hltRechitInRegionsECAL","EcalRecHitsEB")
    ), 
        cms.PSet(
            name = cms.string('PFEERecHitCreator'),
            qualityTests = cms.VPSet(cms.PSet(
                applySelectionsToAllCrystals = cms.bool(False),
                name = cms.string('PFRecHitQTestECALMultiThreshold'),
                thresholds = cms.vdouble(0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    1.25023, 1.25033, 1.25047, 1.25068, 1.25097, 
                    1.25139, 1.25199, 1.25286, 1.2541, 1.25587, 
                    1.25842, 1.26207, 1.26729, 1.27479, 1.28553, 
                    1.30092, 1.32299, 1.35462, 1.39995, 1.46493, 
                    1.55807, 1.69156, 1.88291, 2.15716, 2.55027, 
                    3.11371, 3.92131, 5.07887, 6.73803, 9.11615, 
                    10.0, 10.0, 10.0, 10.0, 10.0, 
                    10.0, 10.0, 10.0, 10.0, 1.25023, 
                    1.25033, 1.25047, 1.25068, 1.25097, 1.25139, 
                    1.25199, 1.25286, 1.2541, 1.25587, 1.25842, 
                    1.26207, 1.26729, 1.27479, 1.28553, 1.30092, 
                    1.32299, 1.35462, 1.39995, 1.46493, 1.55807, 
                    1.69156, 1.88291, 2.15716, 2.55027, 3.11371, 
                    3.92131, 5.07887, 6.73803, 9.11615, 10.0, 
                    10.0, 10.0, 10.0, 10.0, 10.0, 
                    10.0, 10.0, 10.0)
            ), 
                cms.PSet(
                    cleaningThreshold = cms.double(2.0),
                    name = cms.string('PFRecHitQTestECAL'),
                    skipTTRecoveredHits = cms.bool(True),
                    timingCleaning = cms.bool(True),
                    topologicalCleaning = cms.bool(True)
                )),
            srFlags = cms.InputTag("hltEcalDigis"),
            src = cms.InputTag("hltRechitInRegionsECAL","EcalRecHitsEE")
        ))
)


process.hltParticleFlowRecHitECALUnseeded = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        barrel = cms.PSet(

        ),
        endcap = cms.PSet(

        ),
        name = cms.string('PFRecHitECALNavigator')
    ),
    producers = cms.VPSet(cms.PSet(
        name = cms.string('PFEBRecHitCreator'),
        qualityTests = cms.VPSet(cms.PSet(
            applySelectionsToAllCrystals = cms.bool(False),
            name = cms.string('PFRecHitQTestECALMultiThreshold'),
            thresholds = cms.vdouble(0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                0.25, 0.25, 0.25, 0.25, 0.25, 
                1.25023, 1.25033, 1.25047, 1.25068, 1.25097, 
                1.25139, 1.25199, 1.25286, 1.2541, 1.25587, 
                1.25842, 1.26207, 1.26729, 1.27479, 1.28553, 
                1.30092, 1.32299, 1.35462, 1.39995, 1.46493, 
                1.55807, 1.69156, 1.88291, 2.15716, 2.55027, 
                3.11371, 3.92131, 5.07887, 6.73803, 9.11615, 
                10.0, 10.0, 10.0, 10.0, 10.0, 
                10.0, 10.0, 10.0, 10.0, 1.25023, 
                1.25033, 1.25047, 1.25068, 1.25097, 1.25139, 
                1.25199, 1.25286, 1.2541, 1.25587, 1.25842, 
                1.26207, 1.26729, 1.27479, 1.28553, 1.30092, 
                1.32299, 1.35462, 1.39995, 1.46493, 1.55807, 
                1.69156, 1.88291, 2.15716, 2.55027, 3.11371, 
                3.92131, 5.07887, 6.73803, 9.11615, 10.0, 
                10.0, 10.0, 10.0, 10.0, 10.0, 
                10.0, 10.0, 10.0)
        ), 
            cms.PSet(
                cleaningThreshold = cms.double(2.0),
                name = cms.string('PFRecHitQTestECAL'),
                skipTTRecoveredHits = cms.bool(True),
                timingCleaning = cms.bool(True),
                topologicalCleaning = cms.bool(True)
            )),
        srFlags = cms.InputTag("hltEcalDigis"),
        src = cms.InputTag("hltEcalRecHit","EcalRecHitsEB")
    ), 
        cms.PSet(
            name = cms.string('PFEERecHitCreator'),
            qualityTests = cms.VPSet(cms.PSet(
                applySelectionsToAllCrystals = cms.bool(False),
                name = cms.string('PFRecHitQTestECALMultiThreshold'),
                thresholds = cms.vdouble(0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    0.25, 0.25, 0.25, 0.25, 0.25, 
                    1.25023, 1.25033, 1.25047, 1.25068, 1.25097, 
                    1.25139, 1.25199, 1.25286, 1.2541, 1.25587, 
                    1.25842, 1.26207, 1.26729, 1.27479, 1.28553, 
                    1.30092, 1.32299, 1.35462, 1.39995, 1.46493, 
                    1.55807, 1.69156, 1.88291, 2.15716, 2.55027, 
                    3.11371, 3.92131, 5.07887, 6.73803, 9.11615, 
                    10.0, 10.0, 10.0, 10.0, 10.0, 
                    10.0, 10.0, 10.0, 10.0, 1.25023, 
                    1.25033, 1.25047, 1.25068, 1.25097, 1.25139, 
                    1.25199, 1.25286, 1.2541, 1.25587, 1.25842, 
                    1.26207, 1.26729, 1.27479, 1.28553, 1.30092, 
                    1.32299, 1.35462, 1.39995, 1.46493, 1.55807, 
                    1.69156, 1.88291, 2.15716, 2.55027, 3.11371, 
                    3.92131, 5.07887, 6.73803, 9.11615, 10.0, 
                    10.0, 10.0, 10.0, 10.0, 10.0, 
                    10.0, 10.0, 10.0)
            ), 
                cms.PSet(
                    cleaningThreshold = cms.double(2.0),
                    name = cms.string('PFRecHitQTestECAL'),
                    skipTTRecoveredHits = cms.bool(True),
                    timingCleaning = cms.bool(True),
                    topologicalCleaning = cms.bool(True)
                )),
            srFlags = cms.InputTag("hltEcalDigis"),
            src = cms.InputTag("hltEcalRecHit","EcalRecHitsEE")
        ))
)


process.hltParticleFlowRecHitHBHE = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        name = cms.string('PFRecHitHCALNavigator'),
        sigmaCut = cms.double(4.0),
        timeResolutionCalc = cms.PSet(
            constantTerm = cms.double(1.92),
            constantTermLowE = cms.double(6.0),
            corrTermLowE = cms.double(0.0),
            noiseTerm = cms.double(8.64),
            noiseTermLowE = cms.double(0.0),
            threshHighE = cms.double(8.0),
            threshLowE = cms.double(2.0)
        )
    ),
    producers = cms.VPSet(cms.PSet(
        name = cms.string('PFHBHERecHitCreator'),
        qualityTests = cms.VPSet(cms.PSet(
            name = cms.string('PFRecHitQTestThreshold'),
            threshold = cms.double(0.8)
        ), 
            cms.PSet(
                cleaningThresholds = cms.vdouble(0.0),
                flags = cms.vstring('Standard'),
                maxSeverities = cms.vint32(11),
                name = cms.string('PFRecHitQTestHCALChannel')
            )),
        src = cms.InputTag("hltHbhereco")
    ))
)


process.hltParticleFlowRecHitHBHEForEgamma = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        name = cms.string('PFRecHitHCALNavigator'),
        sigmaCut = cms.double(4.0),
        timeResolutionCalc = cms.PSet(
            constantTerm = cms.double(1.92),
            constantTermLowE = cms.double(6.0),
            corrTermLowE = cms.double(0.0),
            noiseTerm = cms.double(8.64),
            noiseTermLowE = cms.double(0.0),
            threshHighE = cms.double(8.0),
            threshLowE = cms.double(2.0)
        )
    ),
    producers = cms.VPSet(cms.PSet(
        name = cms.string('PFHBHERecHitCreator'),
        qualityTests = cms.VPSet(cms.PSet(
            name = cms.string('PFRecHitQTestThreshold'),
            threshold = cms.double(0.8)
        ), 
            cms.PSet(
                cleaningThresholds = cms.vdouble(0.0),
                flags = cms.vstring('Standard'),
                maxSeverities = cms.vint32(11),
                name = cms.string('PFRecHitQTestHCALChannel')
            )),
        src = cms.InputTag("hltHbherecoMethod2L1EGSeeded")
    ))
)


process.hltParticleFlowRecHitHF = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        barrel = cms.PSet(

        ),
        endcap = cms.PSet(

        ),
        name = cms.string('PFRecHitHCALNavigator')
    ),
    producers = cms.VPSet(cms.PSet(
        EMDepthCorrection = cms.double(22.0),
        HADDepthCorrection = cms.double(25.0),
        HFCalib29 = cms.double(1.07),
        LongFibre_Cut = cms.double(120.0),
        LongFibre_Fraction = cms.double(0.1),
        ShortFibre_Cut = cms.double(60.0),
        ShortFibre_Fraction = cms.double(0.01),
        name = cms.string('PFHFRecHitCreator'),
        qualityTests = cms.VPSet(cms.PSet(
            cleaningThresholds = cms.vdouble(0.0, 120.0, 60.0),
            flags = cms.vstring('Standard', 
                'HFLong', 
                'HFShort'),
            maxSeverities = cms.vint32(11, 9, 9),
            name = cms.string('PFRecHitQTestHCALChannel')
        ), 
            cms.PSet(
                cuts = cms.VPSet(cms.PSet(
                    depth = cms.int32(1),
                    threshold = cms.double(1.2)
                ), 
                    cms.PSet(
                        depth = cms.int32(2),
                        threshold = cms.double(1.8)
                    )),
                name = cms.string('PFRecHitQTestHCALThresholdVsDepth')
            )),
        src = cms.InputTag("hltHfreco"),
        thresh_HF = cms.double(0.4)
    ))
)


process.hltParticleFlowRecHitPSL1Seeded = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        name = cms.string('PFRecHitPreshowerNavigator')
    ),
    producers = cms.VPSet(cms.PSet(
        name = cms.string('PFPSRecHitCreator'),
        qualityTests = cms.VPSet(cms.PSet(
            name = cms.string('PFRecHitQTestThreshold'),
            threshold = cms.double(7e-06)
        )),
        src = cms.InputTag("hltRechitInRegionsES","EcalRecHitsES")
    ))
)


process.hltParticleFlowRecHitPSUnseeded = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        name = cms.string('PFRecHitPreshowerNavigator')
    ),
    producers = cms.VPSet(cms.PSet(
        name = cms.string('PFPSRecHitCreator'),
        qualityTests = cms.VPSet(cms.PSet(
            name = cms.string('PFRecHitQTestThreshold'),
            threshold = cms.double(7e-06)
        )),
        src = cms.InputTag("hltEcalPreshowerRecHit","EcalRecHitsES")
    ))
)


process.hltParticleFlowSuperClusterECALL1Seeded = cms.EDProducer("PFECALSuperClusterProducer",
    BeamSpot = cms.InputTag("hltOnlineBeamSpot"),
    ClusteringType = cms.string('Mustache'),
    ESAssociation = cms.InputTag("hltParticleFlowClusterECALL1Seeded"),
    EnergyWeight = cms.string('Raw'),
    PFBasicClusterCollectionBarrel = cms.string('hltParticleFlowBasicClusterECALBarrel'),
    PFBasicClusterCollectionEndcap = cms.string('hltParticleFlowBasicClusterECALEndcap'),
    PFBasicClusterCollectionPreshower = cms.string('hltParticleFlowBasicClusterECALPreshower'),
    PFClusters = cms.InputTag("hltParticleFlowClusterECALL1Seeded"),
    PFSuperClusterCollectionBarrel = cms.string('hltParticleFlowSuperClusterECALBarrel'),
    PFSuperClusterCollectionEndcap = cms.string('hltParticleFlowSuperClusterECALEndcap'),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string('hltParticleFlowSuperClusterECALEndcapWithPreshower'),
    applyCrackCorrections = cms.bool(False),
    barrelRecHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    doSatelliteClusterMerge = cms.bool(False),
    endcapRecHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etawidth_SuperClusterBarrel = cms.double(0.04),
    etawidth_SuperClusterEndcap = cms.double(0.04),
    isOOTCollection = cms.bool(False),
    phiwidth_SuperClusterBarrel = cms.double(0.6),
    phiwidth_SuperClusterEndcap = cms.double(0.6),
    regressionConfig = cms.PSet(
        ecalRecHitsEB = cms.InputTag("hltEcalRecHit","EcalRecHitsEB"),
        ecalRecHitsEE = cms.InputTag("hltEcalRecHit","EcalRecHitsEE"),
        isHLT = cms.bool(True),
        regressionKeyEB = cms.string('pfscecal_EBCorrection_online'),
        regressionKeyEE = cms.string('pfscecal_EECorrection_online'),
        uncertaintyKeyEB = cms.string('pfscecal_EBUncertainty_online'),
        uncertaintyKeyEE = cms.string('pfscecal_EEUncertainty_online')
    ),
    satelliteClusterSeedThreshold = cms.double(50.0),
    satelliteMajorityFraction = cms.double(0.5),
    seedThresholdIsET = cms.bool(True),
    thresh_PFClusterBarrel = cms.double(0.5),
    thresh_PFClusterES = cms.double(0.5),
    thresh_PFClusterEndcap = cms.double(0.5),
    thresh_PFClusterSeedBarrel = cms.double(1.0),
    thresh_PFClusterSeedEndcap = cms.double(1.0),
    thresh_SCEt = cms.double(4.0),
    useDynamicDPhiWindow = cms.bool(True),
    useRegression = cms.bool(True),
    use_preshower = cms.bool(True),
    verbose = cms.untracked.bool(False)
)


process.hltPixelLayerPairs = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2', 
        'BPix1+BPix3', 
        'BPix1+BPix4', 
        'BPix2+BPix3', 
        'BPix2+BPix4', 
        'BPix3+BPix4', 
        'FPix1_pos+FPix2_pos', 
        'FPix1_pos+FPix3_pos', 
        'FPix2_pos+FPix3_pos', 
        'BPix1+FPix1_pos', 
        'BPix1+FPix2_pos', 
        'BPix1+FPix3_pos', 
        'BPix2+FPix1_pos', 
        'BPix2+FPix2_pos', 
        'BPix2+FPix3_pos', 
        'BPix3+FPix1_pos', 
        'BPix3+FPix2_pos', 
        'BPix3+FPix3_pos', 
        'BPix4+FPix1_pos', 
        'BPix4+FPix2_pos', 
        'BPix4+FPix3_pos', 
        'FPix1_neg+FPix2_neg', 
        'FPix1_neg+FPix3_neg', 
        'FPix2_neg+FPix3_neg', 
        'BPix1+FPix1_neg', 
        'BPix1+FPix2_neg', 
        'BPix1+FPix3_neg', 
        'BPix2+FPix1_neg', 
        'BPix2+FPix2_neg', 
        'BPix2+FPix3_neg', 
        'BPix3+FPix1_neg', 
        'BPix3+FPix2_neg', 
        'BPix3+FPix3_neg', 
        'BPix4+FPix1_neg', 
        'BPix4+FPix2_neg', 
        'BPix4+FPix3_neg')
)


process.hltPixelLayerQuadruplets = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3+BPix4', 
        'BPix1+BPix2+BPix3+FPix1_pos', 
        'BPix1+BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos+FPix2_pos', 
        'BPix1+BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos+FPix3_pos', 
        'BPix1+FPix1_neg+FPix2_neg+FPix3_neg')
)


process.hltPixelLayerTriplets = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix2+BPix3+BPix4', 
        'BPix1+BPix3+BPix4', 
        'BPix1+BPix2+BPix4', 
        'BPix2+BPix3+FPix1_pos', 
        'BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix2+FPix1_pos+FPix2_pos', 
        'BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg', 
        'FPix1_pos+FPix2_pos+FPix3_pos', 
        'FPix1_neg+FPix2_neg+FPix3_neg', 
        'BPix1+BPix3+FPix1_pos', 
        'BPix1+BPix2+FPix2_pos', 
        'BPix1+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix2_neg', 
        'BPix1+FPix2_neg+FPix3_neg', 
        'BPix1+FPix1_neg+FPix3_neg', 
        'BPix1+FPix2_pos+FPix3_pos', 
        'BPix1+FPix1_pos+FPix3_pos')
)


process.hltPixelLayerTripletsWithClustersRemoval = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        skipClusters = cms.InputTag("hltPixelTripletsClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltPixelTripletsClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix2+BPix3+BPix4', 
        'BPix1+BPix3+BPix4', 
        'BPix1+BPix2+BPix4', 
        'BPix2+BPix3+FPix1_pos', 
        'BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix2+FPix1_pos+FPix2_pos', 
        'BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg', 
        'FPix1_pos+FPix2_pos+FPix3_pos', 
        'FPix1_neg+FPix2_neg+FPix3_neg', 
        'BPix1+BPix3+FPix1_pos', 
        'BPix1+BPix2+FPix2_pos', 
        'BPix1+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix2_neg', 
        'BPix1+FPix2_neg+FPix3_neg', 
        'BPix1+FPix1_neg+FPix3_neg', 
        'BPix1+FPix2_pos+FPix3_pos', 
        'BPix1+FPix1_pos+FPix3_pos')
)


process.hltPixelTracks = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('hltPixelTracksCleanerBySharedHits'),
    Filter = cms.InputTag("hltPixelTracksFilter"),
    Fitter = cms.InputTag("hltPixelTracksFitter"),
    SeedingHitSets = cms.InputTag("hltPixelTracksHitQuadruplets"),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltPixelTracksHitQuadruplets__HLT'),
    passLabel = cms.string('')
)


process.hltPixelTracksElectrons = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('hltPixelTracksCleanerBySharedHits'),
    Filter = cms.InputTag("hltPixelTracksElectronsFilter"),
    Fitter = cms.InputTag("hltPixelTracksElectronsFitter"),
    SeedingHitSets = cms.InputTag("hltPixelTracksHitTripletsElectrons"),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltPixelTracksHitTripletsElectrons__HLT', 
        'IntermediateHitDoublets_hltPixelTracksHitDoubletsElectrons__HLT'),
    passLabel = cms.string('')
)


process.hltPixelTracksElectronsFilter = cms.EDProducer("PixelTrackFilterByKinematicsProducer",
    chi2 = cms.double(1000.0),
    nSigmaInvPtTolerance = cms.double(0.0),
    nSigmaTipMaxTolerance = cms.double(0.0),
    ptMin = cms.double(0.1),
    tipMax = cms.double(1.0)
)


process.hltPixelTracksElectronsFitter = cms.EDProducer("PixelFitterByHelixProjectionsProducer",
    scaleErrorsForBPix1 = cms.bool(False),
    scaleFactor = cms.double(0.65)
)


process.hltPixelTracksFilter = cms.EDProducer("PixelTrackFilterByKinematicsProducer",
    chi2 = cms.double(1000.0),
    nSigmaInvPtTolerance = cms.double(0.0),
    nSigmaTipMaxTolerance = cms.double(0.0),
    ptMin = cms.double(0.1),
    tipMax = cms.double(1.0)
)


process.hltPixelTracksFitter = cms.EDProducer("PixelFitterByHelixProjectionsProducer",
    scaleErrorsForBPix1 = cms.bool(False),
    scaleFactor = cms.double(0.65)
)


process.hltPixelTracksForSeedsL3Muon = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('hltPixelTracksCleanerBySharedHits'),
    Filter = cms.InputTag("hltPixelTracksForSeedsL3MuonFilter"),
    Fitter = cms.InputTag("hltPixelTracksForSeedsL3MuonFitter"),
    SeedingHitSets = cms.InputTag("hltPixelTracksHitQuadrupletsForSeedsL3Muon"),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltPixelTracksHitQuadrupletsForSeedsL3Muon__HLT'),
    passLabel = cms.string('')
)


process.hltPixelTracksForSeedsL3MuonFilter = cms.EDProducer("PixelTrackFilterByKinematicsProducer",
    chi2 = cms.double(1000.0),
    nSigmaInvPtTolerance = cms.double(0.0),
    nSigmaTipMaxTolerance = cms.double(0.0),
    ptMin = cms.double(0.1),
    tipMax = cms.double(1.0)
)


process.hltPixelTracksForSeedsL3MuonFitter = cms.EDProducer("PixelFitterByHelixProjectionsProducer",
    scaleErrorsForBPix1 = cms.bool(False),
    scaleFactor = cms.double(0.65)
)


process.hltPixelTracksFromTriplets = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('hltPixelTracksCleanerBySharedHits'),
    Filter = cms.InputTag("hltPixelTracksFilter"),
    Fitter = cms.InputTag("hltPixelTracksFitter"),
    SeedingHitSets = cms.InputTag("hltPixelTracksHitTriplets"),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltPixelTracksHitTriplets__HLT'),
    passLabel = cms.string('')
)


process.hltPixelTracksHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltPixelLayerQuadruplets"),
    trackingRegions = cms.InputTag("hltPixelTracksTrackingRegions")
)


process.hltPixelTracksHitDoubletsElectrons = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltPixelLayerTriplets"),
    trackingRegions = cms.InputTag("hltPixelTracksTrackingRegionsElectrons")
)


process.hltPixelTracksHitDoubletsForSeedsL3Muon = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltPixelLayerQuadruplets"),
    trackingRegions = cms.InputTag("hltPixelTracksTrackingRegionsForSeedsL3Muon")
)


process.hltPixelTracksHitDoubletsForTriplets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0, 1),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltPixelLayerTripletsWithClustersRemoval"),
    trackingRegions = cms.InputTag("hltPixelTracksTrackingRegionsForTriplets")
)


process.hltPixelTracksHitDoubletsL3Muon = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltPixelLayerQuadruplets"),
    trackingRegions = cms.InputTag("hltPixelTracksTrackingRegionsL3Muon")
)


process.hltPixelTracksHitQuadruplets = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0.0),
    CAOnlyOneLastHitPerLayerFilter = cms.bool(False),
    CAPhiCut = cms.double(0.2),
    CAThetaCut = cms.double(0.002),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hltPixelTracksHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.7),
        pt2 = cms.double(2.0),
        value1 = cms.double(200.0),
        value2 = cms.double(50.0)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltPixelTracksHitDoublets__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltPixelTracksHitQuadrupletsForSeedsL3Muon = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0.0),
    CAOnlyOneLastHitPerLayerFilter = cms.bool(False),
    CAPhiCut = cms.double(0.2),
    CAThetaCut = cms.double(0.002),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hltPixelTracksHitDoubletsForSeedsL3Muon"),
    extraHitRPhitolerance = cms.double(0.032),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.7),
        pt2 = cms.double(2.0),
        value1 = cms.double(200.0),
        value2 = cms.double(50.0)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltPixelTracksHitDoubletsForSeedsL3Muon__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltPixelTracksHitQuadrupletsL3Muon = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0.0),
    CAOnlyOneLastHitPerLayerFilter = cms.bool(False),
    CAPhiCut = cms.double(0.2),
    CAThetaCut = cms.double(0.002),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hltPixelTracksHitDoubletsL3Muon"),
    extraHitRPhitolerance = cms.double(0.032),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.7),
        pt2 = cms.double(2.0),
        value1 = cms.double(200.0),
        value2 = cms.double(50.0)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltPixelTracksHitDoubletsL3Muon__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltPixelTracksHitTriplets = cms.EDProducer("CAHitTripletEDProducer",
    CAHardPtCut = cms.double(0.0),
    CAPhiCut = cms.double(0.2),
    CAThetaCut = cms.double(0.002),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hltPixelTracksHitDoubletsForTriplets"),
    extraHitRPhitolerance = cms.double(0.032),
    maxChi2 = cms.PSet(
        enabled = cms.bool(False),
        pt1 = cms.double(0.7),
        pt2 = cms.double(2.0),
        value1 = cms.double(200.0),
        value2 = cms.double(50.0)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltPixelTracksHitDoubletsForTriplets__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltPixelTracksHitTripletsElectrons = cms.EDProducer("PixelTripletHLTEDProducer",
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("hltSiPixelClustersCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hltPixelTracksHitDoubletsElectrons"),
    extraHitRPhitolerance = cms.double(0.06),
    extraHitRZtolerance = cms.double(0.06),
    maxElement = cms.uint32(100000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltPixelTracksHitDoubletsElectrons__HLT'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.hltPixelTracksL3Muon = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('hltPixelTracksCleanerBySharedHits'),
    Filter = cms.InputTag("hltPixelTracksL3MuonFilter"),
    Fitter = cms.InputTag("hltPixelTracksL3MuonFitter"),
    SeedingHitSets = cms.InputTag("hltPixelTracksHitQuadrupletsL3Muon"),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltPixelTracksHitQuadrupletsL3Muon__HLT'),
    passLabel = cms.string('')
)


process.hltPixelTracksL3MuonFilter = cms.EDProducer("PixelTrackFilterByKinematicsProducer",
    chi2 = cms.double(1000.0),
    nSigmaInvPtTolerance = cms.double(0.0),
    nSigmaTipMaxTolerance = cms.double(0.0),
    ptMin = cms.double(0.1),
    tipMax = cms.double(1.0)
)


process.hltPixelTracksL3MuonFitter = cms.EDProducer("PixelFitterByHelixProjectionsProducer",
    scaleErrorsForBPix1 = cms.bool(False),
    scaleFactor = cms.double(0.65)
)


process.hltPixelTracksMerged = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(20.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag("hltPixelTracks", "hltPixelTracksFromTriplets"),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(False),
    hasSelector = cms.vint32(0, 0),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag("hltPixelTracks", "hltPixelTracksFromTriplets"),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(False),
        tLists = cms.vint32(0, 1)
    )),
    trackAlgoPriorityOrder = cms.string('hltESPTrackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hltPixelTracksTrackingRegions = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        nSigmaZ = cms.double(4.0),
        originRadius = cms.double(0.02),
        precise = cms.bool(True),
        ptMin = cms.double(0.8)
    )
)


process.hltPixelTracksTrackingRegionsElectrons = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hltElectronsVertex"),
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        fixedError = cms.double(0.2),
        nSigmaZ = cms.double(4.0),
        originRadius = cms.double(0.2),
        precise = cms.bool(True),
        ptMin = cms.double(0.9),
        sigmaZVertex = cms.double(3.0),
        useFakeVertices = cms.bool(True),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hltPixelTracksTrackingRegionsForSeedsL3Muon = cms.EDProducer("CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        deltaEta = cms.double(0.3),
        deltaPhi = cms.double(0.3),
        input = cms.InputTag("hltIterL3MuonCandidates"),
        maxNRegions = cms.int32(10),
        maxNVertices = cms.int32(1),
        measurementTrackerName = cms.InputTag(""),
        mode = cms.string('VerticesFixed'),
        nSigmaZBeamSpot = cms.double(4.0),
        nSigmaZVertex = cms.double(3.0),
        originRadius = cms.double(0.1),
        precise = cms.bool(True),
        ptMin = cms.double(0.9),
        searchOpt = cms.bool(False),
        vertexCollection = cms.InputTag("hltPixelVerticesL3Muon"),
        whereToUseMeasurementTracker = cms.string('Never'),
        zErrorBeamSpot = cms.double(24.2),
        zErrorVetex = cms.double(0.2)
    )
)


process.hltPixelTracksTrackingRegionsForTriplets = cms.EDProducer("PointSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        deltaEta = cms.double(0.4),
        deltaPhi = cms.double(0.4),
        maxNRegions = cms.int32(100),
        maxNVertices = cms.int32(10),
        measurementTrackerName = cms.InputTag("hltDoubletRecoveryMaskedMeasurementTrackerEvent"),
        mode = cms.string('BeamSpotFixed'),
        nSigmaZBeamSpot = cms.double(3.0),
        nSigmaZVertex = cms.double(3.0),
        originRadius = cms.double(0.1),
        points = cms.PSet(
            eta = cms.vdouble(2.1, -0.8),
            phi = cms.vdouble(1.8, -3.2)
        ),
        precise = cms.bool(True),
        ptMin = cms.double(0.8),
        searchOpt = cms.bool(False),
        vertexCollection = cms.InputTag("none"),
        whereToUseMeasurementTracker = cms.string('never'),
        zErrorBeamSpot = cms.double(15.0),
        zErrorVetex = cms.double(0.1)
    )
)


process.hltPixelTracksTrackingRegionsL3Muon = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hltL3MuonVertex"),
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        fixedError = cms.double(0.5),
        nSigmaZ = cms.double(4.0),
        originRadius = cms.double(0.2),
        precise = cms.bool(True),
        ptMin = cms.double(0.9),
        sigmaZVertex = cms.double(4.0),
        useFakeVertices = cms.bool(True),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hltPixelTripletsClustersRefRemoval = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('undefQuality'),
    maxChi2 = cms.double(3000.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag(""),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClusters"),
    stripClusters = cms.InputTag(""),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltPixelTracks")
)


process.hltPixelVertices = cms.EDProducer("PixelVertexProducer",
    Finder = cms.string('DivisiveVertexFinder'),
    Method2 = cms.bool(True),
    NTrkMin = cms.int32(2),
    PVcomparer = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPvClusterComparerForIT')
    ),
    PtMin = cms.double(1.0),
    TrackCollection = cms.InputTag("hltPixelTracksMerged"),
    UseError = cms.bool(True),
    Verbosity = cms.int32(0),
    WtAverage = cms.bool(True),
    ZOffset = cms.double(5.0),
    ZSeparation = cms.double(0.05),
    beamSpot = cms.InputTag("hltOnlineBeamSpot")
)


process.hltPixelVerticesElectrons = cms.EDProducer("PixelVertexProducer",
    Finder = cms.string('DivisiveVertexFinder'),
    Method2 = cms.bool(True),
    NTrkMin = cms.int32(2),
    PVcomparer = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPvClusterComparer')
    ),
    PtMin = cms.double(1.0),
    TrackCollection = cms.InputTag("hltPixelTracksElectrons"),
    UseError = cms.bool(True),
    Verbosity = cms.int32(0),
    WtAverage = cms.bool(True),
    ZOffset = cms.double(5.0),
    ZSeparation = cms.double(0.05),
    beamSpot = cms.InputTag("hltOnlineBeamSpot")
)


process.hltPixelVerticesL3Muon = cms.EDProducer("PixelVertexProducer",
    Finder = cms.string('DivisiveVertexFinder'),
    Method2 = cms.bool(True),
    NTrkMin = cms.int32(2),
    PVcomparer = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPvClusterComparer')
    ),
    PtMin = cms.double(1.0),
    TrackCollection = cms.InputTag("hltPixelTracksL3Muon"),
    UseError = cms.bool(True),
    Verbosity = cms.int32(0),
    WtAverage = cms.bool(True),
    ZOffset = cms.double(5.0),
    ZSeparation = cms.double(0.05),
    beamSpot = cms.InputTag("hltOnlineBeamSpot")
)


process.hltRechitInRegionsECAL = cms.EDProducer("HLTEcalRecHitInAllL1RegionsProducer",
    l1InputRegions = cms.VPSet(cms.PSet(
        inputColl = cms.InputTag("hltGtStage2Digis","EGamma"),
        maxEt = cms.double(999999.0),
        minEt = cms.double(5.0),
        regionEtaMargin = cms.double(0.9),
        regionPhiMargin = cms.double(1.2),
        type = cms.string('EGamma')
    ), 
        cms.PSet(
            inputColl = cms.InputTag("hltGtStage2Digis","Jet"),
            maxEt = cms.double(999999.0),
            minEt = cms.double(170.0),
            regionEtaMargin = cms.double(0.9),
            regionPhiMargin = cms.double(1.2),
            type = cms.string('Jet')
        ), 
        cms.PSet(
            inputColl = cms.InputTag("hltGtStage2Digis","Tau"),
            maxEt = cms.double(999999.0),
            minEt = cms.double(100.0),
            regionEtaMargin = cms.double(0.9),
            regionPhiMargin = cms.double(1.2),
            type = cms.string('Tau')
        )),
    productLabels = cms.vstring('EcalRecHitsEB', 
        'EcalRecHitsEE'),
    recHitLabels = cms.VInputTag("hltEcalRecHit:EcalRecHitsEB", "hltEcalRecHit:EcalRecHitsEE")
)


process.hltRechitInRegionsES = cms.EDProducer("HLTEcalRecHitInAllL1RegionsProducer",
    l1InputRegions = cms.VPSet(cms.PSet(
        inputColl = cms.InputTag("hltGtStage2Digis","EGamma"),
        maxEt = cms.double(999999.0),
        minEt = cms.double(5.0),
        regionEtaMargin = cms.double(0.9),
        regionPhiMargin = cms.double(1.2),
        type = cms.string('EGamma')
    ), 
        cms.PSet(
            inputColl = cms.InputTag("hltGtStage2Digis","Jet"),
            maxEt = cms.double(999999.0),
            minEt = cms.double(170.0),
            regionEtaMargin = cms.double(0.9),
            regionPhiMargin = cms.double(1.2),
            type = cms.string('Jet')
        ), 
        cms.PSet(
            inputColl = cms.InputTag("hltGtStage2Digis","Tau"),
            maxEt = cms.double(999999.0),
            minEt = cms.double(100.0),
            regionEtaMargin = cms.double(0.9),
            regionPhiMargin = cms.double(1.2),
            type = cms.string('Tau')
        )),
    productLabels = cms.vstring('EcalRecHitsES'),
    recHitLabels = cms.VInputTag("hltEcalPreshowerRecHit:EcalRecHitsES")
)


process.hltRecoHIEcalWithCleaningCandidate = cms.EDProducer("EgammaHLTRecoEcalCandidateProducers",
    recoEcalCandidateCollection = cms.string(''),
    scHybridBarrelProducer = cms.InputTag("hltCleanedHiCorrectedIslandBarrelSuperClustersHI"),
    scIslandEndcapProducer = cms.InputTag("hltHiCorrectedIslandEndcapSuperClustersHI")
)


process.hltRegionalTowerForEgamma = cms.EDProducer("EgammaHLTCaloTowerProducer",
    EMin = cms.double(0.8),
    EtMin = cms.double(0.5),
    L1IsoCand = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1NonIsoCand = cms.InputTag("hltGtStage2Digis","EGamma"),
    towerCollection = cms.InputTag("hltTowerMakerMethod2L1EGSeeded"),
    useTowersInCone = cms.double(0.8)
)


process.hltRpcRecHits = cms.EDProducer("RPCRecHitProducer",
    deadSource = cms.string('File'),
    deadvecfile = cms.FileInPath('RecoLocalMuon/RPCRecHit/data/RPCDeadVec.dat'),
    maskSource = cms.string('File'),
    maskvecfile = cms.FileInPath('RecoLocalMuon/RPCRecHit/data/RPCMaskVec.dat'),
    recAlgo = cms.string('RPCRecHitStandardAlgo'),
    recAlgoConfig = cms.PSet(

    ),
    rpcDigiLabel = cms.InputTag("hltMuonRPCDigis")
)


process.hltScalersRawToDigi = cms.EDProducer("ScalersRawToDigi",
    scalersInputTag = cms.InputTag("rawDataCollector")
)


process.hltSecondaryVertexTagInfosPFJet30Eta2p4 = cms.EDProducer("SecondaryVertexProducer",
    beamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    extSVCollection = cms.InputTag("hltInclusiveMergedVerticesPF"),
    extSVDeltaRToJet = cms.double(0.3),
    minimumTrackWeight = cms.double(0.5),
    trackIPTagInfos = cms.InputTag("hltBLifetimeTagInfosPFJet30Eta2p4"),
    trackSelection = cms.PSet(
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(2),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(2)
    ),
    trackSort = cms.string('sip3dSig'),
    useExternalSV = cms.bool(True),
    usePVError = cms.bool(True),
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(2.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.79),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.5),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    ),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    )
)


process.hltSecondaryVertexTagInfosPFJet40Eta2p4 = cms.EDProducer("SecondaryVertexProducer",
    beamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    extSVCollection = cms.InputTag("hltInclusiveMergedVerticesPF"),
    extSVDeltaRToJet = cms.double(0.3),
    minimumTrackWeight = cms.double(0.5),
    trackIPTagInfos = cms.InputTag("hltBLifetimeTagInfosPFJet40Eta2p4"),
    trackSelection = cms.PSet(
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(2),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(2)
    ),
    trackSort = cms.string('sip3dSig'),
    useExternalSV = cms.bool(True),
    usePVError = cms.bool(True),
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(2.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.79),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.5),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    ),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    )
)


process.hltSecondaryVertexTagInfosPFJet60Eta2p4 = cms.EDProducer("SecondaryVertexProducer",
    beamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    extSVCollection = cms.InputTag("hltInclusiveMergedVerticesPF"),
    extSVDeltaRToJet = cms.double(0.3),
    minimumTrackWeight = cms.double(0.5),
    trackIPTagInfos = cms.InputTag("hltBLifetimeTagInfosPFJet60Eta2p4"),
    trackSelection = cms.PSet(
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(2),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(2)
    ),
    trackSort = cms.string('sip3dSig'),
    useExternalSV = cms.bool(True),
    usePVError = cms.bool(True),
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(2.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.79),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.5),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    ),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    )
)


process.hltSecondaryVertexTagInfosPFJet80Eta2p4 = cms.EDProducer("SecondaryVertexProducer",
    beamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    extSVCollection = cms.InputTag("hltInclusiveMergedVerticesPF"),
    extSVDeltaRToJet = cms.double(0.3),
    minimumTrackWeight = cms.double(0.5),
    trackIPTagInfos = cms.InputTag("hltBLifetimeTagInfosPFJet80Eta2p4"),
    trackSelection = cms.PSet(
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(2),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(2)
    ),
    trackSort = cms.string('sip3dSig'),
    useExternalSV = cms.bool(True),
    usePVError = cms.bool(True),
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(2.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.79),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.5),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    ),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    )
)


process.hltSiPixelClusters = cms.EDProducer("SiPixelClusterProducer",
    ChannelThreshold = cms.int32(1000),
    ClusterThreshold = cms.int32(4000),
    ClusterThreshold_L1 = cms.int32(2000),
    MissCalibrate = cms.untracked.bool(True),
    SeedThreshold = cms.int32(1000),
    SplitClusters = cms.bool(False),
    VCaltoElectronGain = cms.int32(47),
    VCaltoElectronGain_L1 = cms.int32(50),
    VCaltoElectronOffset = cms.int32(-60),
    VCaltoElectronOffset_L1 = cms.int32(-670),
    maxNumberOfClusters = cms.int32(40000),
    payloadType = cms.string('HLT'),
    src = cms.InputTag("hltSiPixelDigis")
)


process.hltSiPixelClustersAfterSplittingForRefPP = cms.EDProducer("JetCoreClusterSplitter",
    centralMIPCharge = cms.double(26000.0),
    chargeFractionMin = cms.double(2.0),
    chargePerUnit = cms.double(2000.0),
    cores = cms.InputTag("hltJetsForCoreTracking"),
    deltaRmax = cms.double(0.05),
    forceXError = cms.double(100.0),
    forceYError = cms.double(150.0),
    fractionalWidth = cms.double(0.4),
    pixelCPE = cms.string('hltESPPixelCPEGeneric'),
    pixelClusters = cms.InputTag("hltSiPixelClustersForRefPP"),
    ptMin = cms.double(200.0),
    verbose = cms.bool(False),
    vertices = cms.InputTag("hltFullIter0PrimaryVerticesPreSplittingForRefPP")
)


process.hltSiPixelClustersCache = cms.EDProducer("SiPixelClusterShapeCacheProducer",
    onDemand = cms.bool(False),
    src = cms.InputTag("hltSiPixelClusters")
)


process.hltSiPixelClustersCacheAfterSplittingForRefPP = cms.EDProducer("SiPixelClusterShapeCacheProducer",
    onDemand = cms.bool(False),
    src = cms.InputTag("hltSiPixelClustersAfterSplittingForRefPP")
)


process.hltSiPixelClustersCacheForRefPP = cms.EDProducer("SiPixelClusterShapeCacheProducer",
    onDemand = cms.bool(False),
    src = cms.InputTag("hltSiPixelClustersForRefPP")
)


process.hltSiPixelClustersForRefPP = cms.EDProducer("SiPixelClusterProducer",
    ChannelThreshold = cms.int32(250),
    ClusterThreshold = cms.int32(4000),
    ClusterThreshold_L1 = cms.int32(2000),
    MissCalibrate = cms.untracked.bool(True),
    SeedThreshold = cms.int32(1000),
    SplitClusters = cms.bool(False),
    VCaltoElectronGain = cms.int32(47),
    VCaltoElectronGain_L1 = cms.int32(50),
    VCaltoElectronOffset = cms.int32(-60),
    VCaltoElectronOffset_L1 = cms.int32(-670),
    maxNumberOfClusters = cms.int32(-1),
    payloadType = cms.string('Offline'),
    src = cms.InputTag("hltSiPixelDigis")
)


process.hltSiPixelDigis = cms.EDProducer("SiPixelRawToDigi",
    CablingMapLabel = cms.string(''),
    ErrorList = cms.vint32(),
    IncludeErrors = cms.bool(False),
    InputLabel = cms.InputTag("rawDataCollector"),
    Regions = cms.PSet(

    ),
    Timing = cms.untracked.bool(False),
    UsePhase1 = cms.bool(True),
    UsePilotBlade = cms.bool(False),
    UseQualityInfo = cms.bool(False),
    UserErrorList = cms.vint32()
)


process.hltSiPixelRecHits = cms.EDProducer("SiPixelRecHitConverter",
    CPE = cms.string('hltESPPixelCPEGeneric'),
    VerboseLevel = cms.untracked.int32(0),
    src = cms.InputTag("hltSiPixelClusters")
)


process.hltSiPixelRecHitsAfterSplittingForRefPP = cms.EDProducer("SiPixelRecHitConverter",
    CPE = cms.string('hltESPPixelCPEGeneric'),
    VerboseLevel = cms.untracked.int32(0),
    src = cms.InputTag("hltSiPixelClustersAfterSplittingForRefPP")
)


process.hltSiPixelRecHitsForRefPP = cms.EDProducer("SiPixelRecHitConverter",
    CPE = cms.string('hltESPPixelCPEGeneric'),
    VerboseLevel = cms.untracked.int32(0),
    src = cms.InputTag("hltSiPixelClustersForRefPP")
)


process.hltSiStripClusters = cms.EDProducer("MeasurementTrackerEventProducer",
    inactivePixelDetectorLabels = cms.VInputTag(),
    inactiveStripDetectorLabels = cms.VInputTag("hltSiStripExcludedFEDListProducer"),
    measurementTracker = cms.string('hltESPMeasurementTracker'),
    pixelClusterProducer = cms.string('hltSiPixelClusters'),
    skipClusters = cms.InputTag(""),
    stripClusterProducer = cms.string('hltSiStripRawToClustersFacility'),
    switchOffPixelsIfEmpty = cms.bool(True)
)


process.hltSiStripClustersForRefPP = cms.EDProducer("MeasurementTrackerEventProducer",
    inactivePixelDetectorLabels = cms.VInputTag(),
    inactiveStripDetectorLabels = cms.VInputTag("hltSiStripExcludedFEDListProducer"),
    measurementTracker = cms.string('hltESPMeasurementTracker'),
    pixelClusterProducer = cms.string('hltSiPixelClustersForRefPP'),
    skipClusters = cms.InputTag(""),
    stripClusterProducer = cms.string('hltSiStripRawToClustersFacility'),
    switchOffPixelsIfEmpty = cms.bool(True)
)


process.hltSiStripClustersFullForRefPP = cms.EDProducer("MeasurementTrackerEventProducer",
    inactivePixelDetectorLabels = cms.VInputTag(),
    inactiveStripDetectorLabels = cms.VInputTag("hltSiStripExcludedFEDListProducer"),
    measurementTracker = cms.string('hltESPMeasurementTracker'),
    pixelClusterProducer = cms.string('hltSiPixelClustersForRefPP'),
    skipClusters = cms.InputTag(""),
    stripClusterProducer = cms.string('hltSiStripRawToClustersFacilityFull'),
    switchOffPixelsIfEmpty = cms.bool(True)
)


process.hltSiStripExcludedFEDListProducer = cms.EDProducer("SiStripExcludedFEDListProducer",
    ProductLabel = cms.InputTag("rawDataCollector")
)


process.hltSiStripMatchedRecHitsFull = cms.EDProducer("SiStripRecHitConverter",
    ClusterProducer = cms.InputTag("hltSiStripRawToClustersFacilityFull"),
    MaskBadAPVFibers = cms.bool(False),
    Matcher = cms.ESInputTag("SiStripRecHitMatcherESProducer","StandardMatcher"),
    StripCPE = cms.ESInputTag("hltESPStripCPEfromTrackAngle","hltESPStripCPEfromTrackAngle"),
    VerbosityLevel = cms.untracked.int32(1),
    matchedRecHits = cms.string('matchedRecHit'),
    rphiRecHits = cms.string('rphiRecHit'),
    siStripQualityLabel = cms.ESInputTag(""),
    stereoRecHits = cms.string('stereoRecHit'),
    useSiStripQuality = cms.bool(False)
)


process.hltSiStripRawToClustersFacility = cms.EDProducer("SiStripClusterizerFromRaw",
    Algorithms = cms.PSet(
        CommonModeNoiseSubtractionMode = cms.string('Median'),
        PedestalSubtractionFedMode = cms.bool(True),
        SiStripFedZeroSuppressionMode = cms.uint32(4),
        TruncateInSuppressor = cms.bool(True),
        doAPVRestore = cms.bool(False),
        useCMMeanMap = cms.bool(False)
    ),
    Clusterizer = cms.PSet(
        Algorithm = cms.string('ThreeThresholdAlgorithm'),
        ChannelThreshold = cms.double(2.0),
        ClusterThreshold = cms.double(5.0),
        MaxAdjacentBad = cms.uint32(0),
        MaxSequentialBad = cms.uint32(1),
        MaxSequentialHoles = cms.uint32(0),
        QualityLabel = cms.string(''),
        RemoveApvShots = cms.bool(True),
        SeedThreshold = cms.double(3.0),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
        ),
        setDetId = cms.bool(True)
    ),
    DoAPVEmulatorCheck = cms.bool(False),
    ProductLabel = cms.InputTag("rawDataCollector"),
    onDemand = cms.bool(True)
)


process.hltSiStripRawToClustersFacilityFull = cms.EDProducer("SiStripClusterizerFromRaw",
    Algorithms = cms.PSet(
        CommonModeNoiseSubtractionMode = cms.string('Median'),
        PedestalSubtractionFedMode = cms.bool(True),
        SiStripFedZeroSuppressionMode = cms.uint32(4),
        TruncateInSuppressor = cms.bool(True),
        doAPVRestore = cms.bool(False),
        useCMMeanMap = cms.bool(False)
    ),
    Clusterizer = cms.PSet(
        Algorithm = cms.string('ThreeThresholdAlgorithm'),
        ChannelThreshold = cms.double(2.0),
        ClusterThreshold = cms.double(5.0),
        MaxAdjacentBad = cms.uint32(0),
        MaxSequentialBad = cms.uint32(1),
        MaxSequentialHoles = cms.uint32(0),
        QualityLabel = cms.string(''),
        RemoveApvShots = cms.bool(True),
        SeedThreshold = cms.double(3.0),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
        ),
        setDetId = cms.bool(True)
    ),
    DoAPVEmulatorCheck = cms.bool(False),
    ProductLabel = cms.InputTag("rawDataCollector"),
    onDemand = cms.bool(False)
)


process.hltSimple3x3Clusters = cms.EDProducer("EgammaHLTNxNClusterProducer",
    barrelClusterCollection = cms.string('Simple3x3ClustersBarrel'),
    barrelHitProducer = cms.InputTag("hltEcalRecHit","EcalRecHitsEB"),
    clusEtaSize = cms.int32(3),
    clusPhiSize = cms.int32(3),
    clusSeedThr = cms.double(0.5),
    clusSeedThrEndCap = cms.double(1.0),
    debugLevel = cms.int32(0),
    doBarrel = cms.bool(True),
    doEndcaps = cms.bool(True),
    endcapClusterCollection = cms.string('Simple3x3ClustersEndcap'),
    endcapHitProducer = cms.InputTag("hltEcalRecHit","EcalRecHitsEE"),
    flagLevelRecHitsToUse = cms.int32(1),
    maxNumberofClusters = cms.int32(300),
    maxNumberofSeeds = cms.int32(700),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    statusLevelRecHitsToUse = cms.int32(1),
    useDBStatus = cms.bool(True),
    useRecoFlag = cms.bool(False)
)


process.hltTowerMakerForAll = cms.EDProducer("CaloTowersCreator",
    AllowMissingInputs = cms.bool(False),
    EBGrid = cms.vdouble(),
    EBSumThreshold = cms.double(0.2),
    EBThreshold = cms.double(0.07),
    EBWeight = cms.double(1.0),
    EBWeights = cms.vdouble(),
    EEGrid = cms.vdouble(),
    EESumThreshold = cms.double(0.45),
    EEThreshold = cms.double(0.3),
    EEWeight = cms.double(1.0),
    EEWeights = cms.vdouble(),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring('kTime', 
        'kWeird', 
        'kBad'),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(),
    EcutTower = cms.double(-1000.0),
    HBGrid = cms.vdouble(),
    HBThreshold = cms.double(0.7),
    HBWeight = cms.double(1.0),
    HBWeights = cms.vdouble(),
    HEDGrid = cms.vdouble(),
    HEDThreshold = cms.double(0.8),
    HEDWeight = cms.double(1.0),
    HEDWeights = cms.vdouble(),
    HESGrid = cms.vdouble(),
    HESThreshold = cms.double(0.8),
    HESWeight = cms.double(1.0),
    HESWeights = cms.vdouble(),
    HF1Grid = cms.vdouble(),
    HF1Threshold = cms.double(0.5),
    HF1Weight = cms.double(1.0),
    HF1Weights = cms.vdouble(),
    HF2Grid = cms.vdouble(),
    HF2Threshold = cms.double(0.85),
    HF2Weight = cms.double(1.0),
    HF2Weights = cms.vdouble(),
    HOGrid = cms.vdouble(),
    HOThreshold0 = cms.double(3.5),
    HOThresholdMinus1 = cms.double(3.5),
    HOThresholdMinus2 = cms.double(3.5),
    HOThresholdPlus1 = cms.double(3.5),
    HOThresholdPlus2 = cms.double(3.5),
    HOWeight = cms.double(1e-99),
    HOWeights = cms.vdouble(),
    HcalAcceptSeverityLevel = cms.uint32(9),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HcalPhase = cms.int32(0),
    HcalThreshold = cms.double(-1000.0),
    MomConstrMethod = cms.int32(1),
    MomEBDepth = cms.double(0.3),
    MomEEDepth = cms.double(0.0),
    MomHBDepth = cms.double(0.2),
    MomHEDepth = cms.double(0.4),
    UseEcalRecoveredHits = cms.bool(False),
    UseEtEBTreshold = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    UseHO = cms.bool(False),
    UseHcalRecoveredHits = cms.bool(False),
    UseRejectedHitsOnly = cms.bool(False),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseRejectedRecoveredHcalHits = cms.bool(False),
    UseSymEBTreshold = cms.bool(False),
    UseSymEETreshold = cms.bool(False),
    ecalInputs = cms.VInputTag("hltEcalRecHit:EcalRecHitsEB", "hltEcalRecHit:EcalRecHitsEE"),
    hbheInput = cms.InputTag("hltHbhereco"),
    hfInput = cms.InputTag("hltHfreco"),
    hoInput = cms.InputTag("hltHoreco")
)


process.hltTowerMakerMethod2L1EGSeeded = cms.EDProducer("CaloTowersCreator",
    AllowMissingInputs = cms.bool(False),
    EBGrid = cms.vdouble(),
    EBSumThreshold = cms.double(0.2),
    EBThreshold = cms.double(0.07),
    EBWeight = cms.double(1.0),
    EBWeights = cms.vdouble(),
    EEGrid = cms.vdouble(),
    EESumThreshold = cms.double(0.45),
    EEThreshold = cms.double(0.3),
    EEWeight = cms.double(1.0),
    EEWeights = cms.vdouble(),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring('kTime', 
        'kWeird', 
        'kBad'),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(),
    EcutTower = cms.double(-1000.0),
    HBGrid = cms.vdouble(),
    HBThreshold = cms.double(0.7),
    HBWeight = cms.double(1.0),
    HBWeights = cms.vdouble(),
    HEDGrid = cms.vdouble(),
    HEDThreshold = cms.double(0.8),
    HEDWeight = cms.double(1.0),
    HEDWeights = cms.vdouble(),
    HESGrid = cms.vdouble(),
    HESThreshold = cms.double(0.8),
    HESWeight = cms.double(1.0),
    HESWeights = cms.vdouble(),
    HF1Grid = cms.vdouble(),
    HF1Threshold = cms.double(0.5),
    HF1Weight = cms.double(1.0),
    HF1Weights = cms.vdouble(),
    HF2Grid = cms.vdouble(),
    HF2Threshold = cms.double(0.85),
    HF2Weight = cms.double(1.0),
    HF2Weights = cms.vdouble(),
    HOGrid = cms.vdouble(),
    HOThreshold0 = cms.double(3.5),
    HOThresholdMinus1 = cms.double(3.5),
    HOThresholdMinus2 = cms.double(3.5),
    HOThresholdPlus1 = cms.double(3.5),
    HOThresholdPlus2 = cms.double(3.5),
    HOWeight = cms.double(1.0),
    HOWeights = cms.vdouble(),
    HcalAcceptSeverityLevel = cms.uint32(9),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HcalPhase = cms.int32(0),
    HcalThreshold = cms.double(-1000.0),
    MomConstrMethod = cms.int32(1),
    MomEBDepth = cms.double(0.3),
    MomEEDepth = cms.double(0.0),
    MomHBDepth = cms.double(0.2),
    MomHEDepth = cms.double(0.4),
    UseEcalRecoveredHits = cms.bool(False),
    UseEtEBTreshold = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    UseHO = cms.bool(False),
    UseHcalRecoveredHits = cms.bool(False),
    UseRejectedHitsOnly = cms.bool(False),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseRejectedRecoveredHcalHits = cms.bool(False),
    UseSymEBTreshold = cms.bool(False),
    UseSymEETreshold = cms.bool(False),
    ecalInputs = cms.VInputTag("hltEcalRecHit:EcalRecHitsEB", "hltEcalRecHit:EcalRecHitsEE"),
    hbheInput = cms.InputTag("hltHbherecoMethod2L1EGSeeded"),
    hfInput = cms.InputTag("hltHfreco"),
    hoInput = cms.InputTag("hltHoreco")
)


process.hltTrackVertexArbitratorPF = cms.EDProducer("TrackVertexArbitrator",
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    dLenFraction = cms.double(0.333),
    dRCut = cms.double(0.4),
    distCut = cms.double(0.04),
    fitterRatio = cms.double(0.25),
    fitterSigmacut = cms.double(3.0),
    fitterTini = cms.double(256.0),
    primaryVertices = cms.InputTag("hltVerticesPFFilter"),
    secondaryVertices = cms.InputTag("hltInclusiveSecondaryVerticesPF"),
    sigCut = cms.double(5.0),
    trackMinLayers = cms.int32(4),
    trackMinPixels = cms.int32(1),
    trackMinPt = cms.double(0.4),
    tracks = cms.InputTag("hltPFMuonMerging")
)


process.hltTracksIter = cms.EDProducer("ConcreteChargedCandidateProducer",
    particleType = cms.string('mu+'),
    src = cms.InputTag("hltIterL3MuonAndMuonFromL1Merged")
)


process.hltTriggerSummaryAOD = cms.EDProducer("TriggerSummaryProducerAOD",
    moduleLabelPatternsToMatch = cms.vstring('hlt*'),
    moduleLabelPatternsToSkip = cms.vstring(),
    processName = cms.string('@'),
    throw = cms.bool(False)
)


process.hltTriggerSummaryRAW = cms.EDProducer("TriggerSummaryProducerRAW",
    processName = cms.string('@')
)


process.hltTrimmedPixelVertices = cms.EDProducer("PixelVertexCollectionTrimmer",
    PVcomparer = cms.PSet(
        refToPSet_ = cms.string('HLTPSetPvClusterComparerForIT')
    ),
    fractionSumPt2 = cms.double(0.3),
    maxVtx = cms.uint32(100),
    minSumPt2 = cms.double(0.0),
    src = cms.InputTag("hltPixelVertices")
)


process.hltTripletRecoveryClustersRefRemoval = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(16.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hltIter2ClustersRefRemoval"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("hltSiPixelClusters"),
    stripClusters = cms.InputTag("hltSiStripRawToClustersFacility"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("hltIter2PFlowTrackSelectionHighPurity")
)


process.hltTripletRecoveryMaskedMeasurementTrackerEvent = cms.EDProducer("MaskedMeasurementTrackerEventProducer",
    OnDemand = cms.bool(False),
    clustersToSkip = cms.InputTag("hltTripletRecoveryClustersRefRemoval"),
    src = cms.InputTag("hltSiStripClusters")
)


process.hltTripletRecoveryMerged = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(20.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag("hltIter2Merged", "hltTripletRecoveryPFlowTrackSelectionHighPurity"),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(False),
    hasSelector = cms.vint32(0, 0),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag("hltIter2Merged", "hltTripletRecoveryPFlowTrackSelectionHighPurity"),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(False),
        tLists = cms.vint32(0, 1)
    )),
    trackAlgoPriorityOrder = cms.string('hltESPTrackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hltTripletRecoveryPFlowCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("hltTripletRecoveryMaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TrajectoryBuilder = cms.string(''),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('HLTIter2GroupedCkfTrajectoryBuilderIT')
    ),
    TrajectoryCleaner = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterialParabolicMf'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialParabolicMfOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(False),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(100000),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    produceSeedStopReasons = cms.bool(False),
    src = cms.InputTag("hltTripletRecoveryPFlowPixelSeeds"),
    useHitsSplitting = cms.bool(False)
)


process.hltTripletRecoveryPFlowCtfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hltTripletRecovery'),
    Fitter = cms.string('hltESPFittingSmootherIT'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("hltTripletRecoveryMaskedMeasurementTrackerEvent"),
    NavigationSchool = cms.string(''),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hltTripletRecoveryPFlowCkfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(True)
)


process.hltTripletRecoveryPFlowPixelClusterCheck = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("hltSiStripClusters"),
    MaxNumberOfCosmicClusters = cms.uint32(50000),
    MaxNumberOfPixelClusters = cms.uint32(40000),
    PixelClusterCollectionLabel = cms.InputTag("hltSiPixelClusters"),
    cut = cms.string(''),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hltTripletRecoveryPFlowPixelHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hltTripletRecoveryPFlowPixelClusterCheck"),
    layerPairs = cms.vuint32(0, 1),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hltTripletRecoveryPixelLayerTriplets"),
    trackingRegions = cms.InputTag("hltTripletRecoveryPFlowPixelTrackingRegions")
)


process.hltTripletRecoveryPFlowPixelHitTriplets = cms.EDProducer("CAHitTripletEDProducer",
    CAHardPtCut = cms.double(0.3),
    CAPhiCut = cms.double(0.1),
    CAThetaCut = cms.double(0.004),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("hltTripletRecoveryPFlowPixelHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.8),
        pt2 = cms.double(8.0),
        value1 = cms.double(100.0),
        value2 = cms.double(50.0)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hltTripletRecoveryPFlowPixelHitDoublets__HLT'),
    useBendingCorrection = cms.bool(True)
)


process.hltTripletRecoveryPFlowPixelSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1.0),
    OriginTransverseErrorMultiplier = cms.double(1.0),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5.0),
    TTRHBuilder = cms.string('hltESPTTRHBWithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hltTripletRecoveryPFlowPixelHitTriplets__HLT'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hltTripletRecoveryPFlowPixelHitTriplets")
)


process.hltTripletRecoveryPFlowPixelTrackingRegions = cms.EDProducer("PointSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("hltOnlineBeamSpot"),
        deltaEta = cms.double(2.1),
        deltaPhi = cms.double(0.55),
        maxNRegions = cms.int32(100),
        maxNVertices = cms.int32(10),
        measurementTrackerName = cms.InputTag("hltTripletRecoveryMaskedMeasurementTrackerEvent"),
        mode = cms.string('VerticesFixed'),
        nSigmaZBeamSpot = cms.double(3.0),
        nSigmaZVertex = cms.double(3.0),
        originRadius = cms.double(0.05),
        points = cms.PSet(
            eta = cms.vdouble(0.4, -0.8, 4.4),
            phi = cms.vdouble(1.7, -3.1, -2.0)
        ),
        precise = cms.bool(True),
        ptMin = cms.double(0.8),
        searchOpt = cms.bool(False),
        vertexCollection = cms.InputTag("hltTrimmedPixelVertices"),
        whereToUseMeasurementTracker = cms.string('ForSiStrips'),
        zErrorBeamSpot = cms.double(15.0),
        zErrorVetex = cms.double(0.1)
    )
)


process.hltTripletRecoveryPFlowTrackCutClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("hltOnlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 0.003),
            d0err_par = cms.vdouble(0.001, 0.001, 0.001),
            dr_exp = cms.vint32(4, 4, 4),
            dr_par1 = cms.vdouble(3.40282346639e+38, 0.4, 0.4),
            dr_par2 = cms.vdouble(3.40282346639e+38, 0.3, 0.3)
        ),
        dz_par = cms.PSet(
            dz_exp = cms.vint32(4, 4, 4),
            dz_par1 = cms.vdouble(3.40282346639e+38, 0.4, 0.4),
            dz_par2 = cms.vdouble(3.40282346639e+38, 0.35, 0.35)
        ),
        maxChi2 = cms.vdouble(9999.0, 25.0, 16.0),
        maxChi2n = cms.vdouble(1.2, 1.0, 0.7),
        maxDr = cms.vdouble(0.5, 0.03, 3.40282346639e+38),
        maxDz = cms.vdouble(0.5, 0.2, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24.0, 15.0),
        maxLostLayers = cms.vint32(1, 1, 1),
        min3DLayers = cms.vint32(0, 0, 0),
        minLayers = cms.vint32(3, 3, 3),
        minNVtxTrk = cms.int32(3),
        minNdof = cms.vdouble(1e-05, 1e-05, 1e-05),
        minPixelHits = cms.vint32(0, 0, 0)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("hltTripletRecoveryPFlowCtfWithMaterialTracks"),
    vertices = cms.InputTag("hltTrimmedPixelVertices")
)


process.hltTripletRecoveryPFlowTrackSelectionHighPurity = cms.EDProducer("TrackCollectionFilterCloner",
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    minQuality = cms.string('highPurity'),
    originalMVAVals = cms.InputTag("hltTripletRecoveryPFlowTrackCutClassifier","MVAValues"),
    originalQualVals = cms.InputTag("hltTripletRecoveryPFlowTrackCutClassifier","QualityMasks"),
    originalSource = cms.InputTag("hltTripletRecoveryPFlowCtfWithMaterialTracks")
)


process.hltTripletRecoveryPixelLayerTriplets = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        skipClusters = cms.InputTag("hltTripletRecoveryClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('hltSiPixelRecHits'),
        TTRHBuilder = cms.string('hltESPTTRHBuilderPixelOnly'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        skipClusters = cms.InputTag("hltTripletRecoveryClustersRefRemoval"),
        useErrorsFromParam = cms.bool(True)
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix2+BPix3+BPix4', 
        'BPix1+BPix3+BPix4', 
        'BPix1+BPix2+BPix4', 
        'BPix2+BPix3+FPix1_pos', 
        'BPix2+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix2+FPix1_pos+FPix2_pos', 
        'BPix2+FPix1_neg+FPix2_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg', 
        'FPix1_pos+FPix2_pos+FPix3_pos', 
        'FPix1_neg+FPix2_neg+FPix3_neg', 
        'BPix1+BPix3+FPix1_pos', 
        'BPix1+BPix2+FPix2_pos', 
        'BPix1+BPix3+FPix1_neg', 
        'BPix1+BPix2+FPix2_neg', 
        'BPix1+FPix2_neg+FPix3_neg', 
        'BPix1+FPix1_neg+FPix3_neg', 
        'BPix1+FPix2_pos+FPix3_pos', 
        'BPix1+FPix1_pos+FPix3_pos')
)


process.hltVerticesPF = cms.EDProducer("PrimaryVertexProducer",
    TkClusParameters = cms.PSet(
        TkDAClusParameters = cms.PSet(
            Tmin = cms.double(2.4),
            Tpurge = cms.double(2.0),
            Tstop = cms.double(0.5),
            coolingFactor = cms.double(0.6),
            d0CutOff = cms.double(999.0),
            dzCutOff = cms.double(4.0),
            uniquetrkweight = cms.double(0.9),
            use_vdt = cms.untracked.bool(True),
            vertexSize = cms.double(0.15),
            zmerge = cms.double(0.01)
        ),
        algorithm = cms.string('DA_vect')
    ),
    TkFilterParameters = cms.PSet(
        algorithm = cms.string('filter'),
        maxD0Significance = cms.double(999.0),
        maxEta = cms.double(100.0),
        maxNormalizedChi2 = cms.double(20.0),
        minPixelLayersWithHits = cms.int32(2),
        minPt = cms.double(0.0),
        minSiliconLayersWithHits = cms.int32(5),
        trackQuality = cms.string('any')
    ),
    TrackLabel = cms.InputTag("hltPFMuonMerging"),
    beamSpotLabel = cms.InputTag("hltOnlineBeamSpot"),
    verbose = cms.untracked.bool(False),
    vertexCollections = cms.VPSet(cms.PSet(
        algorithm = cms.string('AdaptiveVertexFitter'),
        chi2cutoff = cms.double(3.0),
        label = cms.string(''),
        maxDistanceToBeam = cms.double(1.0),
        minNdof = cms.double(0.0),
        useBeamConstraint = cms.bool(False)
    ), 
        cms.PSet(
            algorithm = cms.string('AdaptiveVertexFitter'),
            chi2cutoff = cms.double(3.0),
            label = cms.string('WithBS'),
            maxDistanceToBeam = cms.double(1.0),
            minNdof = cms.double(0.0),
            useBeamConstraint = cms.bool(True)
        ))
)


process.hlttktkVtxForDmesonDpt10 = cms.EDProducer("HLTDisplacedtktkVtxProducer",
    ChargeOpt = cms.int32(-1),
    MaxEta = cms.double(2.5),
    MaxInvMass = cms.double(2.27),
    MinInvMass = cms.double(1.47),
    MinPt = cms.double(0.0),
    MinPtPair = cms.double(10.0),
    PreviousCandTag = cms.InputTag("hltFullTrackFilterForDmeson"),
    Src = cms.InputTag("hltFullCandsForRefPP"),
    massParticle1 = cms.double(0.1396),
    massParticle2 = cms.double(0.4937),
    triggerTypeDaughters = cms.int32(91)
)


process.hlttktkVtxForDmesonDpt15 = cms.EDProducer("HLTDisplacedtktkVtxProducer",
    ChargeOpt = cms.int32(-1),
    MaxEta = cms.double(2.5),
    MaxInvMass = cms.double(2.27),
    MinInvMass = cms.double(1.47),
    MinPt = cms.double(0.0),
    MinPtPair = cms.double(15.0),
    PreviousCandTag = cms.InputTag("hltFullTrackFilterForDmeson"),
    Src = cms.InputTag("hltFullCandsForRefPP"),
    massParticle1 = cms.double(0.1396),
    massParticle2 = cms.double(0.4937),
    triggerTypeDaughters = cms.int32(91)
)


process.hlttktkVtxForDmesonDpt30 = cms.EDProducer("HLTDisplacedtktkVtxProducer",
    ChargeOpt = cms.int32(-1),
    MaxEta = cms.double(2.5),
    MaxInvMass = cms.double(2.27),
    MinInvMass = cms.double(1.47),
    MinPt = cms.double(0.0),
    MinPtPair = cms.double(30.0),
    PreviousCandTag = cms.InputTag("hltFullTrackFilterForDmeson"),
    Src = cms.InputTag("hltFullCandsForRefPP"),
    massParticle1 = cms.double(0.1396),
    massParticle2 = cms.double(0.4937),
    triggerTypeDaughters = cms.int32(91)
)


process.hlttktkVtxForDmesonDpt40 = cms.EDProducer("HLTDisplacedtktkVtxProducer",
    ChargeOpt = cms.int32(-1),
    MaxEta = cms.double(2.5),
    MaxInvMass = cms.double(2.27),
    MinInvMass = cms.double(1.47),
    MinPt = cms.double(0.0),
    MinPtPair = cms.double(40.0),
    PreviousCandTag = cms.InputTag("hltFullTrackFilterForDmeson"),
    Src = cms.InputTag("hltFullCandsForRefPP"),
    massParticle1 = cms.double(0.1396),
    massParticle2 = cms.double(0.4937),
    triggerTypeDaughters = cms.int32(91)
)


process.hlttktkVtxForDmesonDpt50 = cms.EDProducer("HLTDisplacedtktkVtxProducer",
    ChargeOpt = cms.int32(-1),
    MaxEta = cms.double(2.5),
    MaxInvMass = cms.double(2.27),
    MinInvMass = cms.double(1.47),
    MinPt = cms.double(0.0),
    MinPtPair = cms.double(50.0),
    PreviousCandTag = cms.InputTag("hltFullTrackFilterForDmeson"),
    Src = cms.InputTag("hltFullCandsForRefPP"),
    massParticle1 = cms.double(0.1396),
    massParticle2 = cms.double(0.4937),
    triggerTypeDaughters = cms.int32(91)
)


process.hlttktkVtxForDmesonDpt60 = cms.EDProducer("HLTDisplacedtktkVtxProducer",
    ChargeOpt = cms.int32(-1),
    MaxEta = cms.double(2.5),
    MaxInvMass = cms.double(2.27),
    MinInvMass = cms.double(1.47),
    MinPt = cms.double(0.0),
    MinPtPair = cms.double(60.0),
    PreviousCandTag = cms.InputTag("hltFullTrackFilterForDmeson"),
    Src = cms.InputTag("hltFullCandsForRefPP"),
    massParticle1 = cms.double(0.1396),
    massParticle2 = cms.double(0.4937),
    triggerTypeDaughters = cms.int32(91)
)


process.hlttktkVtxForDmesonDpt8 = cms.EDProducer("HLTDisplacedtktkVtxProducer",
    ChargeOpt = cms.int32(-1),
    MaxEta = cms.double(2.5),
    MaxInvMass = cms.double(2.27),
    MinInvMass = cms.double(1.47),
    MinPt = cms.double(0.0),
    MinPtPair = cms.double(8.0),
    PreviousCandTag = cms.InputTag("hltFullTrackFilterForDmeson"),
    Src = cms.InputTag("hltFullCandsForRefPP"),
    massParticle1 = cms.double(0.1396),
    massParticle2 = cms.double(0.4937),
    triggerTypeDaughters = cms.int32(91)
)


process.iterativeCone5HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('IterativeCone'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.5),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.iterativeCone7HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('IterativeCone'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.7),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.kt4HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('Kt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.kt6HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('Kt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.6),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.me0RecHits = cms.EDProducer("ME0RecHitProducer",
    me0DigiLabel = cms.InputTag("simMuonME0PseudoReDigis"),
    recAlgo = cms.string('ME0RecHitStandardAlgo'),
    recAlgoConfig = cms.PSet(

    )
)


process.me0RecHitsCoarse = cms.EDProducer("ME0RecHitProducer",
    me0DigiLabel = cms.InputTag("simMuonME0PseudoReDigisCoarse"),
    recAlgo = cms.string('ME0RecHitStandardAlgo'),
    recAlgoConfig = cms.PSet(

    )
)


process.me0Segments = cms.EDProducer("ME0SegmentProducer",
    algo_psets = cms.VPSet(cms.PSet(
        algo_name = cms.string('ME0SegmentAlgorithm'),
        algo_pset = cms.PSet(
            ME0Debug = cms.untracked.bool(True),
            dEtaChainBoxMax = cms.double(0.05),
            dPhiChainBoxMax = cms.double(0.02),
            dTimeChainBoxMax = cms.double(15.0),
            dXclusBoxMax = cms.double(1.0),
            dYclusBoxMax = cms.double(5.0),
            maxRecHitsInCluster = cms.int32(6),
            minHitsPerSegment = cms.uint32(3),
            preClustering = cms.bool(True),
            preClusteringUseChaining = cms.bool(True)
        )
    ), 
        cms.PSet(
            algo_name = cms.string('ME0SegAlgoRU'),
            algo_pset = cms.PSet(
                allowWideSegments = cms.bool(True),
                doCollisions = cms.bool(True),
                maxChi2Additional = cms.double(100.0),
                maxChi2GoodSeg = cms.double(50),
                maxChi2Prune = cms.double(50),
                maxETASeeds = cms.double(0.1),
                maxPhiAdditional = cms.double(0.001096605744),
                maxPhiSeeds = cms.double(0.001096605744),
                maxTOFDiff = cms.double(25),
                minNumberOfHits = cms.uint32(4),
                requireCentralBX = cms.bool(True)
            )
        )),
    algo_type = cms.int32(2),
    me0RecHitLabel = cms.InputTag("me0RecHits")
)


process.me0TriggerPseudoDigis = cms.EDProducer("ME0SegmentProducer",
    algo_psets = cms.VPSet(cms.PSet(
        algo_name = cms.string('ME0SegmentAlgorithm'),
        algo_pset = cms.PSet(
            ME0Debug = cms.untracked.bool(True),
            dEtaChainBoxMax = cms.double(0.05),
            dPhiChainBoxMax = cms.double(0.02),
            dTimeChainBoxMax = cms.double(15.0),
            dXclusBoxMax = cms.double(1.0),
            dYclusBoxMax = cms.double(5.0),
            maxRecHitsInCluster = cms.int32(6),
            minHitsPerSegment = cms.uint32(3),
            preClustering = cms.bool(True),
            preClusteringUseChaining = cms.bool(True)
        )
    ), 
        cms.PSet(
            algo_name = cms.string('ME0SegAlgoRU'),
            algo_pset = cms.PSet(
                allowWideSegments = cms.bool(True),
                doCollisions = cms.bool(True),
                maxChi2Additional = cms.double(100.0),
                maxChi2GoodSeg = cms.double(50),
                maxChi2Prune = cms.double(50),
                maxETASeeds = cms.double(0.1),
                maxPhiAdditional = cms.double(0.0021875),
                maxPhiSeeds = cms.double(0.0021875),
                maxTOFDiff = cms.double(25),
                minNumberOfHits = cms.uint32(4),
                requireCentralBX = cms.bool(True)
            )
        )),
    algo_type = cms.int32(2),
    me0RecHitLabel = cms.InputTag("me0RecHitsCoarse")
)


process.mix = cms.EDProducer("MixingModule",
    LabelPlayback = cms.string(''),
    bunchspace = cms.int32(25),
    digitizers = cms.PSet(
        castor = cms.PSet(
            accumulatorType = cms.string('CastorDigiProducer'),
            castor = cms.PSet(
                binOfMaximum = cms.int32(5),
                doPhotoStatistics = cms.bool(True),
                photoelectronsToAnalog = cms.double(4.009),
                readoutFrameSize = cms.int32(6),
                samplingFactor = cms.double(0.062577),
                simHitToPhotoelectrons = cms.double(1000.0),
                syncPhase = cms.bool(True),
                timePhase = cms.double(-4.0)
            ),
            doNoise = cms.bool(True),
            doTimeSlew = cms.bool(True),
            hitsProducer = cms.InputTag("g4SimHits","CastorFI"),
            makeDigiSimLinks = cms.untracked.bool(False)
        ),
        ecal = cms.PSet(
            ConstantTerm = cms.double(0.003),
            EBCorrNoiseMatrixG01 = cms.vdouble(1.0, 0.73354, 0.64442, 0.58851, 0.55425, 
                0.53082, 0.51916, 0.51097, 0.50732, 0.50409),
            EBCorrNoiseMatrixG06 = cms.vdouble(1.0, 0.70946, 0.58021, 0.49846, 0.45006, 
                0.41366, 0.39699, 0.38478, 0.37847, 0.37055),
            EBCorrNoiseMatrixG12 = cms.vdouble(1.0, 0.71073, 0.55721, 0.46089, 0.40449, 
                0.35931, 0.33924, 0.32439, 0.31581, 0.30481),
            EBdigiCollection = cms.string(''),
            EBs25notContainment = cms.double(0.9675),
            EECorrNoiseMatrixG01 = cms.vdouble(1.0, 0.72698, 0.62048, 0.55691, 0.51848, 
                0.49147, 0.47813, 0.47007, 0.46621, 0.46265),
            EECorrNoiseMatrixG06 = cms.vdouble(1.0, 0.71217, 0.47464, 0.34056, 0.26282, 
                0.20287, 0.17734, 0.16256, 0.15618, 0.14443),
            EECorrNoiseMatrixG12 = cms.vdouble(1.0, 0.71373, 0.44825, 0.30152, 0.21609, 
                0.14786, 0.11772, 0.10165, 0.09465, 0.08098),
            EEdigiCollection = cms.string(''),
            EEs25notContainment = cms.double(0.968),
            ESdigiCollection = cms.string(''),
            EcalPreMixStage1 = cms.bool(False),
            EcalPreMixStage2 = cms.bool(False),
            UseLCcorrection = cms.untracked.bool(True),
            accumulatorType = cms.string('EcalDigiProducer'),
            apdAddToBarrel = cms.bool(False),
            apdDigiTag = cms.string('APD'),
            apdDoPEStats = cms.bool(True),
            apdNonlParms = cms.vdouble(1.48, -3.75, 1.81, 1.26, 2.0, 
                45, 1.0),
            apdSeparateDigi = cms.bool(True),
            apdShapeTau = cms.double(40.5),
            apdShapeTstart = cms.double(74.5),
            apdSimToPEHigh = cms.double(88200000.0),
            apdSimToPELow = cms.double(2450000.0),
            apdTimeOffWidth = cms.double(0.8),
            apdTimeOffset = cms.double(-13.5),
            applyConstantTerm = cms.bool(True),
            binOfMaximum = cms.int32(6),
            cosmicsPhase = cms.bool(False),
            cosmicsShift = cms.double(0.0),
            doEB = cms.bool(True),
            doEE = cms.bool(True),
            doENoise = cms.bool(True),
            doES = cms.bool(True),
            doESNoise = cms.bool(True),
            doFast = cms.bool(True),
            doPhotostatistics = cms.bool(True),
            hitsProducer = cms.string('g4SimHits'),
            makeDigiSimLinks = cms.untracked.bool(False),
            photoelectronsToAnalogBarrel = cms.double(0.000444444),
            photoelectronsToAnalogEndcap = cms.double(0.000555555),
            readoutFrameSize = cms.int32(10),
            samplingFactor = cms.double(1.0),
            simHitToPhotoelectronsBarrel = cms.double(2250.0),
            simHitToPhotoelectronsEndcap = cms.double(1800.0),
            syncPhase = cms.bool(True),
            timePhase = cms.double(0.0)
        ),
        hcal = cms.PSet(
            DelivLuminosity = cms.double(0),
            HBDarkening = cms.bool(False),
            HEDarkening = cms.bool(False),
            HFDarkening = cms.bool(False),
            HFRecalParameterBlock = cms.PSet(
                HFdepthOneParameterA = cms.vdouble(0.004123, 0.00602, 0.008201, 0.010489, 0.013379, 
                    0.016997, 0.021464, 0.027371, 0.034195, 0.044807, 
                    0.058939, 0.125497),
                HFdepthOneParameterB = cms.vdouble(-4e-06, -2e-06, 0.0, 4e-06, 1.5e-05, 
                    2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107, 
                    0.000425, 0.000209),
                HFdepthTwoParameterA = cms.vdouble(0.002861, 0.004168, 0.0064, 0.008388, 0.011601, 
                    0.014425, 0.018633, 0.023232, 0.028274, 0.035447, 
                    0.051579, 0.086593),
                HFdepthTwoParameterB = cms.vdouble(-2e-06, -0.0, -7e-06, -6e-06, -2e-06, 
                    1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05, 
                    0.000157, -3e-06)
            ),
            HcalPreMixStage1 = cms.bool(False),
            HcalPreMixStage2 = cms.bool(False),
            TestNumbering = cms.bool(True),
            accumulatorType = cms.string('HcalDigiProducer'),
            debugCaloSamples = cms.bool(False),
            doEmpty = cms.bool(True),
            doHFWindow = cms.bool(False),
            doIonFeedback = cms.bool(True),
            doNeutralDensityFilter = cms.bool(True),
            doNoise = cms.bool(True),
            doThermalNoise = cms.bool(True),
            doTimeSlew = cms.bool(True),
            hb = cms.PSet(
                binOfMaximum = cms.int32(5),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                firstRing = cms.int32(1),
                readoutFrameSize = cms.int32(10),
                samplingFactors = cms.vdouble(125.44, 125.54, 125.32, 125.13, 124.46, 
                    125.01, 125.22, 125.48, 124.45, 125.9, 
                    125.83, 127.01, 126.82, 129.73, 131.83, 
                    143.52),
                simHitToPhotoelectrons = cms.double(2000.0),
                sipmTau = cms.double(0.0),
                syncPhase = cms.bool(True),
                timePhase = cms.double(6.0),
                timeSmearing = cms.bool(True)
            ),
            he = cms.PSet(
                binOfMaximum = cms.int32(5),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(True),
                firstRing = cms.int32(16),
                readoutFrameSize = cms.int32(10),
                samplingFactors = cms.vdouble(210.55, 197.93, 186.12, 189.64, 189.63, 
                    190.28, 189.61, 189.6, 190.12, 191.22, 
                    190.9, 193.06, 188.42, 188.42),
                simHitToPhotoelectrons = cms.double(2000.0),
                sipmTau = cms.double(10.0),
                syncPhase = cms.bool(True),
                timePhase = cms.double(6.0),
                timeSmearing = cms.bool(True)
            ),
            hf1 = cms.PSet(
                binOfMaximum = cms.int32(2),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                photoelectronsToAnalog = cms.double(2.79),
                readoutFrameSize = cms.int32(3),
                samplingFactor = cms.double(0.67),
                simHitToPhotoelectrons = cms.double(6.0),
                sipmTau = cms.double(0.0),
                syncPhase = cms.bool(True),
                timePhase = cms.double(14.0)
            ),
            hf2 = cms.PSet(
                binOfMaximum = cms.int32(2),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                photoelectronsToAnalog = cms.double(1.843),
                readoutFrameSize = cms.int32(3),
                samplingFactor = cms.double(0.67),
                simHitToPhotoelectrons = cms.double(6.0),
                sipmTau = cms.double(0.0),
                syncPhase = cms.bool(True),
                timePhase = cms.double(13.0)
            ),
            hitsProducer = cms.string('g4SimHits'),
            ho = cms.PSet(
                binOfMaximum = cms.int32(5),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                firstRing = cms.int32(1),
                readoutFrameSize = cms.int32(10),
                samplingFactors = cms.vdouble(231.0, 231.0, 231.0, 231.0, 360.0, 
                    360.0, 360.0, 360.0, 360.0, 360.0, 
                    360.0, 360.0, 360.0, 360.0, 360.0),
                siPMCode = cms.int32(1),
                simHitToPhotoelectrons = cms.double(4000.0),
                sipmTau = cms.double(5.0),
                syncPhase = cms.bool(True),
                timePhase = cms.double(5.0),
                timeSmearing = cms.bool(False)
            ),
            hoHamamatsu = cms.PSet(
                binOfMaximum = cms.int32(5),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                firstRing = cms.int32(1),
                readoutFrameSize = cms.int32(10),
                samplingFactors = cms.vdouble(231.0, 231.0, 231.0, 231.0, 360.0, 
                    360.0, 360.0, 360.0, 360.0, 360.0, 
                    360.0, 360.0, 360.0, 360.0, 360.0),
                siPMCode = cms.int32(2),
                simHitToPhotoelectrons = cms.double(4000.0),
                sipmTau = cms.double(5.0),
                syncPhase = cms.bool(True),
                timePhase = cms.double(5.0),
                timeSmearing = cms.bool(False)
            ),
            hoZecotek = cms.PSet(
                binOfMaximum = cms.int32(5),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                firstRing = cms.int32(1),
                readoutFrameSize = cms.int32(10),
                samplingFactors = cms.vdouble(231.0, 231.0, 231.0, 231.0, 360.0, 
                    360.0, 360.0, 360.0, 360.0, 360.0, 
                    360.0, 360.0, 360.0, 360.0, 360.0),
                siPMCode = cms.int32(2),
                simHitToPhotoelectrons = cms.double(4000.0),
                sipmTau = cms.double(5.0),
                syncPhase = cms.bool(True),
                timePhase = cms.double(5.0),
                timeSmearing = cms.bool(False)
            ),
            ignoreGeantTime = cms.bool(False),
            injectTestHits = cms.bool(False),
            injectTestHitsCells = cms.vint32(),
            injectTestHitsEnergy = cms.vdouble(),
            injectTestHitsTime = cms.vdouble(),
            killHE = cms.bool(False),
            makeDigiSimLinks = cms.untracked.bool(False),
            minFCToDelay = cms.double(5.0),
            zdc = cms.PSet(
                binOfMaximum = cms.int32(5),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                photoelectronsToAnalog = cms.double(1.843),
                readoutFrameSize = cms.int32(10),
                samplingFactor = cms.double(1.0),
                simHitToPhotoelectrons = cms.double(6.0),
                sipmTau = cms.double(0.0),
                syncPhase = cms.bool(True),
                timePhase = cms.double(-4.0)
            )
        ),
        mergedtruth = cms.PSet(
            HepMCProductLabel = cms.InputTag("generatorSmeared"),
            accumulatorType = cms.string('TrackingTruthAccumulator'),
            allowDifferentSimHitProcesses = cms.bool(False),
            alwaysAddAncestors = cms.bool(True),
            createInitialVertexCollection = cms.bool(False),
            createMergedBremsstrahlung = cms.bool(True),
            createUnmergedCollection = cms.bool(True),
            genParticleCollection = cms.InputTag("genParticles"),
            ignoreTracksOutsideVolume = cms.bool(False),
            maximumPreviousBunchCrossing = cms.uint32(9999),
            maximumSubsequentBunchCrossing = cms.uint32(9999),
            removeDeadModules = cms.bool(False),
            select = cms.PSet(
                chargedOnlyTP = cms.bool(True),
                intimeOnlyTP = cms.bool(False),
                lipTP = cms.double(1000),
                maxRapidityTP = cms.double(5.0),
                minHitTP = cms.int32(0),
                minRapidityTP = cms.double(-5.0),
                pdgIdTP = cms.vint32(),
                ptMaxTP = cms.double(1e+100),
                ptMinTP = cms.double(0.1),
                signalOnlyTP = cms.bool(True),
                stableOnlyTP = cms.bool(False),
                tipTP = cms.double(1000)
            ),
            simHitCollections = cms.PSet(
                muon = cms.VInputTag(cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","MuonGEMHits")),
                pixel = cms.VInputTag(cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof")),
                tracker = cms.VInputTag(cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"), 
                    cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof"))
            ),
            simTrackCollection = cms.InputTag("g4SimHits"),
            simVertexCollection = cms.InputTag("g4SimHits"),
            vertexDistanceCut = cms.double(0.003),
            volumeRadius = cms.double(120.0),
            volumeZ = cms.double(300.0)
        ),
        pixel = cms.PSet(
            AdcFullScale = cms.int32(255),
            AdcFullScaleStack = cms.int32(255),
            AddNoise = cms.bool(True),
            AddNoisyPixels = cms.bool(True),
            AddPixelInefficiency = cms.bool(True),
            AddThresholdSmearing = cms.bool(True),
            Alpha2Order = cms.bool(True),
            BPix_SignalResponse_p0 = cms.double(0.00171),
            BPix_SignalResponse_p1 = cms.double(0.711),
            BPix_SignalResponse_p2 = cms.double(203.0),
            BPix_SignalResponse_p3 = cms.double(148.0),
            ChargeVCALSmearing = cms.bool(True),
            DeadModules_DB = cms.bool(True),
            DoPixelAging = cms.bool(False),
            ElectronPerAdc = cms.double(135.0),
            ElectronsPerVcal = cms.double(47),
            ElectronsPerVcal_L1 = cms.double(50),
            ElectronsPerVcal_L1_Offset = cms.double(-670),
            ElectronsPerVcal_Offset = cms.double(-60),
            FPix_SignalResponse_p0 = cms.double(0.00171),
            FPix_SignalResponse_p1 = cms.double(0.711),
            FPix_SignalResponse_p2 = cms.double(203.0),
            FPix_SignalResponse_p3 = cms.double(148.0),
            FirstStackLayer = cms.int32(5),
            GainSmearing = cms.double(0.0),
            LorentzAngle_DB = cms.bool(True),
            MissCalibrate = cms.bool(True),
            NoiseInElectrons = cms.double(175.0),
            NumPixelBarrel = cms.int32(4),
            NumPixelEndcap = cms.int32(3),
            OffsetSmearing = cms.double(0.0),
            PixGeometryType = cms.string('idealForDigi'),
            ReadoutNoiseInElec = cms.double(350.0),
            RoutList = cms.vstring('TrackerHitsPixelBarrelLowTof', 
                'TrackerHitsPixelBarrelHighTof', 
                'TrackerHitsPixelEndcapLowTof', 
                'TrackerHitsPixelEndcapHighTof'),
            TanLorentzAnglePerTesla_BPix = cms.double(0.106),
            TanLorentzAnglePerTesla_FPix = cms.double(0.106),
            ThresholdInElectrons_BPix = cms.double(2000.0),
            ThresholdInElectrons_BPix_L1 = cms.double(3000.0),
            ThresholdInElectrons_BPix_L2 = cms.double(2600.0),
            ThresholdInElectrons_FPix = cms.double(2000.0),
            ThresholdSmearing_BPix = cms.double(245.0),
            ThresholdSmearing_BPix_L1 = cms.double(245.0),
            ThresholdSmearing_BPix_L2 = cms.double(245.0),
            ThresholdSmearing_FPix = cms.double(210.0),
            TofLowerCut = cms.double(-12.5),
            TofUpperCut = cms.double(12.5),
            accumulatorType = cms.string('SiPixelDigitizer'),
            deltaProductionCut = cms.double(0.03),
            hitsProducer = cms.string('g4SimHits'),
            killModules = cms.bool(True),
            makeDigiSimLinks = cms.untracked.bool(True),
            useDB = cms.bool(False)
        ),
        puVtx = cms.PSet(
            accumulatorType = cms.string('PileupVertexAccumulator'),
            hitsProducer = cms.string('generator'),
            makeDigiSimLinks = cms.untracked.bool(False),
            saveVtxTimes = cms.bool(False),
            vtxFallbackTag = cms.InputTag("generator"),
            vtxTag = cms.InputTag("generatorSmeared")
        ),
        strip = cms.PSet(
            APVProbabilityFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVProbaList.txt'),
            APVSaturationFromHIP = cms.bool(False),
            APVSaturationProbScaling = cms.double(1.0),
            APVpeakmode = cms.bool(False),
            AppliedVoltage = cms.double(300.0),
            BaselineShift = cms.bool(True),
            ChargeDistributionRMS = cms.double(6.5e-10),
            ChargeMobility = cms.double(310.0),
            CommonModeNoise = cms.bool(True),
            CosmicDelayShift = cms.untracked.double(0.0),
            CouplingConstantDecIB1 = cms.vdouble(0.7748, 0.0962, 0.0165),
            CouplingConstantDecIB2 = cms.vdouble(0.83, 0.0756, 0.0094),
            CouplingConstantDecOB1 = cms.vdouble(0.6871, 0.1222, 0.0342),
            CouplingConstantDecOB2 = cms.vdouble(0.725, 0.1102, 0.0273),
            CouplingConstantDecW1a = cms.vdouble(0.786, 0.093, 0.014),
            CouplingConstantDecW1b = cms.vdouble(0.822, 0.08, 0.009),
            CouplingConstantDecW2a = cms.vdouble(0.7962, 0.0914, 0.0104),
            CouplingConstantDecW2b = cms.vdouble(0.888, 0.05, 0.006),
            CouplingConstantDecW3a = cms.vdouble(0.8164, 0.09, 0.0018),
            CouplingConstantDecW3b = cms.vdouble(0.848, 0.06, 0.016),
            CouplingConstantDecW4 = cms.vdouble(0.876, 0.06, 0.002),
            CouplingConstantDecW5 = cms.vdouble(0.7565, 0.0913, 0.0304),
            CouplingConstantDecW6 = cms.vdouble(0.758, 0.093, 0.026),
            CouplingConstantDecW7 = cms.vdouble(0.7828, 0.0862, 0.0224),
            CouplingConstantPeakIB1 = cms.vdouble(0.9006, 0.0497),
            CouplingConstantPeakIB2 = cms.vdouble(0.9342, 0.0328),
            CouplingConstantPeakOB1 = cms.vdouble(0.8542, 0.0729),
            CouplingConstantPeakOB2 = cms.vdouble(0.8719, 0.064),
            CouplingConstantPeakW1a = cms.vdouble(0.996, 0.002),
            CouplingConstantPeakW1b = cms.vdouble(0.976, 0.012),
            CouplingConstantPeakW2a = cms.vdouble(1.0, 0.0),
            CouplingConstantPeakW2b = cms.vdouble(0.998, 0.001),
            CouplingConstantPeakW3a = cms.vdouble(0.996, 0.002),
            CouplingConstantPeakW3b = cms.vdouble(0.992, 0.004),
            CouplingConstantPeakW4 = cms.vdouble(0.992, 0.004),
            CouplingConstantPeakW5 = cms.vdouble(0.968, 0.016),
            CouplingConstantPeakW6 = cms.vdouble(0.972, 0.014),
            CouplingConstantPeakW7 = cms.vdouble(0.964, 0.018),
            DeltaProductionCut = cms.double(0.120425),
            DepletionVoltage = cms.double(170.0),
            DigiModeList = cms.PSet(
                PRDigi = cms.string('ProcessedRaw'),
                SCDigi = cms.string('ScopeMode'),
                VRDigi = cms.string('VirginRaw'),
                ZSDigi = cms.string('ZeroSuppressed')
            ),
            FedAlgorithm = cms.int32(4),
            FedAlgorithm_PM = cms.int32(4),
            Gain = cms.string(''),
            GeometryType = cms.string('idealForDigi'),
            GevPerElectron = cms.double(3.61e-09),
            Inefficiency = cms.double(0.0),
            LandauFluctuations = cms.bool(True),
            LorentzAngle = cms.string(''),
            Noise = cms.bool(True),
            NoiseSigmaThreshold = cms.double(2.0),
            PedestalsOffset = cms.double(128),
            PreMixingMode = cms.bool(False),
            ROUList = cms.vstring('TrackerHitsTIBLowTof', 
                'TrackerHitsTIBHighTof', 
                'TrackerHitsTIDLowTof', 
                'TrackerHitsTIDHighTof', 
                'TrackerHitsTOBLowTof', 
                'TrackerHitsTOBHighTof', 
                'TrackerHitsTECLowTof', 
                'TrackerHitsTECHighTof'),
            RealPedestals = cms.bool(True),
            SingleStripNoise = cms.bool(True),
            TOFCutForDeconvolution = cms.double(50.0),
            TOFCutForPeak = cms.double(100.0),
            Temperature = cms.double(273.0),
            TrackerConfigurationFromDB = cms.bool(False),
            ZeroSuppression = cms.bool(True),
            accumulatorType = cms.string('SiStripDigitizer'),
            chargeDivisionsPerStrip = cms.int32(10),
            cmnRMStec = cms.double(2.44),
            cmnRMStib = cms.double(5.92),
            cmnRMStid = cms.double(3.08),
            cmnRMStob = cms.double(1.08),
            electronPerAdcDec = cms.double(247.0),
            electronPerAdcPeak = cms.double(262.0),
            hitsProducer = cms.string('g4SimHits'),
            makeDigiSimLinks = cms.untracked.bool(True),
            noDiffusion = cms.bool(False)
        )
    ),
    input = cms.SecSource("EmbeddedRootSource",
        fileNames = cms.untracked.vstring( ('/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/16705CBF-3561-E811-B4F3-141877642ECF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1C8D2E2F-5861-E811-BBF8-002590D8C77A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/80F59576-0F61-E811-86F2-44A84225C629.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5C7E562E-5A61-E811-BAC0-20CF3027A5CC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FEFEA57A-5A61-E811-8002-0026B9532A81.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/186E2699-5A61-E811-B064-D48564594F36.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/1E7B8265-2961-E811-BC22-00259073E39C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/024D097A-3261-E811-9915-44A84225CFF0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FE0CFF83-6261-E811-B8BD-002590D5FFF2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/72A5BB79-6261-E811-8310-002590D8C800.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7498ABB9-4261-E811-83C5-141877642F9D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/9C74004E-2D61-E811-87CE-00259073BB58.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E45551BB-6861-E811-B388-00259073E4F4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D44E51D7-6861-E811-B40D-002590D8C71A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FE3B4CBB-6861-E811-8A6F-002590743042.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2630E2B3-6861-E811-8126-44A84224053C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/92C97CC0-1661-E811-84F8-141877637B68.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/663022AC-3161-E811-A2A0-141877638F39.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/38054732-7161-E811-B93D-44A84225C827.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E2602738-7161-E811-8F0A-44A84225C827.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C4ACA3FF-7761-E811-9A0E-141877641875.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CACF7400-7861-E811-96E9-14187763B811.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/72FBB044-5B61-E811-8489-141877642F9D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8AE23C50-7E61-E811-903F-002590D60036.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0404D213-8061-E811-8BF7-141877641875.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/24E27746-8B61-E811-8257-00259057492E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C81750FB-0B61-E811-8611-0025907276DA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/78145B37-3B61-E811-BA38-00266CFF0608.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/F6DFDC6B-1861-E811-A2B0-00266CFFBC74.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/8C0A9B9A-1F61-E811-B5DC-A0369F8363EE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/B6908BCB-2061-E811-9FFD-AC1F6B1E2F5C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/BEED8CA1-2F61-E811-A730-A0369F836296.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4A93F02F-4861-E811-B61B-AC1F6B1E2F5C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9E6B8137-5661-E811-A3EC-00266CFEFCE8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3013F56E-6261-E811-951B-C4346BC08440.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/742D4615-7161-E811-9109-00266CFFC7E4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/58B399AB-5E61-E811-B6D1-00266CFEFC5C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/3AC6078E-2861-E811-9615-10983627C3DB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/88B56883-4961-E811-B7CD-A0369F5BD8FC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9E058FAB-4961-E811-AC5C-7CD30AC0311A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1078125E-4861-E811-AD1B-A0369F5BD8FC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C6722D5B-4861-E811-B46E-44A842BFA94B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/AE776A96-2961-E811-866A-7CD30ABD2EEA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/2A2D622A-2B61-E811-BC20-A0369F6369D2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5E9C7C11-4A61-E811-8561-7CD30ABD295A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/CA5A3EE1-2961-E811-997D-00266CF83D7C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/36FDEB66-4C61-E811-BBD0-7CD30AC0301A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/209F116F-4C61-E811-B0CA-7CD30ABD295A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7242235E-4C61-E811-85C9-7CD30AC0311A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B0576F8B-4D61-E811-8164-44A842BE8F98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4CDECC46-4E61-E811-8DAF-7CD30AC0311A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D40D5769-4E61-E811-81C5-7CD30AC0301A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BCF5F4AF-4E61-E811-A4CE-7CD30ABD295A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/42F0FD72-2F61-E811-9EDE-44A842BE8F71.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/50B0E19A-3261-E811-AF98-44A842BE8F71.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/DC465087-3261-E811-ABF0-000E1EB004E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/8A301C5F-3361-E811-A5C4-44A842B42118.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/62C3D81F-5061-E811-B16E-7CD30ABD2EEA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E4AFECA7-2261-E811-AF42-F04DA27541F0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4E7113CA-4E61-E811-AFE2-44A842BE8F98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B839F667-5061-E811-AF4D-44A842B4D8BE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8E6CFB57-5261-E811-BCB8-7CD30AC0311A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8263AA5E-5261-E811-9C9D-7CD30AC03016.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F45E7B57-5261-E811-ADD7-44A842BECCBE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A2B9530F-9661-E811-827C-002590D6016A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/1ECBA8B4-3161-E811-8B6D-00259073E522.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/364F0F4A-8A61-E811-BB12-141877638819.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BACB9B4D-A961-E811-88F0-20CF307C98DC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/BE5A2D72-9261-E811-A089-141877640173.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B8259E59-B161-E811-9BA5-44A84225C827.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/94D1E5C0-E361-E811-89D6-44A84225CDA4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/76351510-F860-E811-89C8-F4CE46B27A1A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/52C7AD09-F860-E811-837F-E4115BE5F180.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/92FA7D45-EB61-E811-BBDC-002590D6012E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/22AB2362-0261-E811-8960-D4856459AC30.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2E31236E-F061-E811-990B-002590D8C68A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/42D8B34E-9C61-E811-9A1B-002590D8C724.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B473530F-F261-E811-BC06-0025907276DA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1C796F7B-F761-E811-B611-002590D60062.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DEAE4A5D-F761-E811-B797-141877642ECF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/5484F37F-1861-E811-8385-D48564593F64.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/4680E5C4-1661-E811-A352-D485645943AC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/56B7530B-0162-E811-904C-D485645943AC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AC8AA875-FF61-E811-ACC2-00259073E3B6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F88F3EDE-0561-E811-BA48-D48564591BF4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/C6E73120-F660-E811-8E2C-20CF3027A613.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D26EED74-0B62-E811-B1BB-20CF3027A5EB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8C64CED6-0E62-E811-9E00-44A84225C893.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D27EEAAA-FB60-E811-8083-20CF3027A613.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C259CC62-1862-E811-A0D8-D48564594F36.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7091EF57-0261-E811-9A8A-001D09FD0D10.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/462ED1EA-6061-E811-B566-00266CFFC13C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/440A0CA9-8D61-E811-8433-00266CFF0ACC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/96ABD80A-6C61-E811-999D-00266CFEFDE0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/7E731559-6861-E811-91A7-00266CFFCB28.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/12397002-9261-E811-9863-00266CFFBFC0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/129F77DF-9761-E811-81CD-001E67E5E8B6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DAF7CA00-6C61-E811-AA9E-7CD30ACE0FE7.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C2C07FA8-B861-E811-9752-A0369F836430.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/8E098000-9261-E811-BCA7-7CD30AC03712.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FA2C2652-FB61-E811-8FAF-AC1F6B1B23C6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/7AA7A3F6-9C62-E811-B000-1CC1DE048FD0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/82291DC2-9662-E811-8B37-A0369F8363F0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/F80559BF-3461-E811-9D6B-7CD30AC030F8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/D4487DD2-3361-E811-9758-7CD30AC03016.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/648BC6A9-5461-E811-95B7-7CD30AC03016.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/A6C0AB73-2961-E811-86F4-10983627C3CE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/AEEF852B-3361-E811-AB41-F04DA274BBF6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F44E34F2-5461-E811-A67F-44A842BE8F98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A02642A5-5661-E811-AA7B-7CD30AC03016.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9AE7FA68-5661-E811-AAC9-008CFAF5592A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F60F2D5D-5661-E811-9DF7-F04DA27540BB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/E80069D1-3B61-E811-91A0-3417EBE46396.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EA744EFF-5761-E811-9DF2-44A842BE8F98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/C00A5698-3261-E811-83C6-00266CF83A28.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8687F95C-5A61-E811-B8A2-44A842BE8F98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/1684B199-3361-E811-BFEA-00266CF85940.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/46C884FD-4161-E811-BE74-44A842B45218.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A6FA9D7C-6261-E811-8AB5-44A842B46A98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F698FC93-6261-E811-AAC4-7845C4FC3B78.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DE7EE17C-6261-E811-8C7C-F4E9D497BBE0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F0AE3082-6261-E811-9C8B-00266CF85838.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1C6F98B9-6861-E811-830F-A0369F63681A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1E30509F-7161-E811-A93F-44A842B2D658.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/729EC21C-7E61-E811-8D9D-7845C4FB82F2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0E1B822B-7E61-E811-94B6-44A842BE8F98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E4C5320D-6161-E811-A591-7CD30ABD2EE8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CE9AE6DC-8261-E811-BFE9-44A842B451F1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/367E18E0-8461-E811-AF77-44A842BECCBE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/54696785-9661-E811-BBAE-7845C4FC3BD2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/FC7D8DA3-2F63-E811-BB7D-90E2BACBB038.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/064F1AE8-BF62-E811-9769-509A4C747778.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/8CAE0EFF-6963-E811-8D98-008CFAFBFB94.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8C34D048-2062-E811-B0C7-002590D8C746.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/A8F1D543-2E61-E811-9647-D48564591B64.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/16063BDB-2162-E811-B117-1CC1DE782F02.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/38C52933-2C62-E811-A5FF-B083FED138B3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A44CB624-2E62-E811-8353-002590D60036.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FE2A5A5B-0361-E811-A349-20CF3027A5BF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6CD9D15E-0261-E811-ADC4-20CF3027A5CA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/8EB6E537-2A61-E811-92FC-20CF3027A5A2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/005D00CB-3A62-E811-9DF3-20CF3027A5CA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7A9D7315-3B62-E811-B6F7-D4856459C3E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/2669E83A-2A61-E811-85A1-20CF3027A582.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/366C3A82-4062-E811-A6A4-141877638F39.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/DA218366-2961-E811-9B04-20CF3027A61A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B88F0B89-4F62-E811-B33D-D48564594F36.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/223577EC-1C61-E811-AFAA-20CF3027A5EB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/DA9544CB-2A61-E811-B919-20CF3027A59F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/92B68B02-5562-E811-B05A-14187763663C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/74696F87-6B62-E811-ACD4-141877639F59.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A0A1A487-6D62-E811-B8D1-D48564599C64.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/4ECEF91B-8B62-E811-B0D0-44A84225D36F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/9A0B6B15-8862-E811-B33E-44A84225CDFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/5EED2BE1-7E61-E811-A275-44A842B4B3F1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2A4F0039-A761-E811-98C6-001D09FDE107.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AEC09169-A961-E811-9E93-A0369F6367C2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/5015AEAB-9061-E811-8E05-44A842B45218.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6A721ABE-B861-E811-922E-10983627C3E8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7069A57C-D161-E811-860F-7CD30AC0313C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EC305A86-DE61-E811-A5B8-3417EBE46396.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/BCC1A177-DB61-E811-A7B4-44A842BFA958.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8EE6E76E-0B62-E811-BA3C-10983627C3DB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/163D2CBA-F261-E811-B9E8-44A842B4210B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/22934F6A-F461-E811-853D-F04DA27541B7.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/52059D44-1162-E811-8161-F04DA274BB9C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3A90DA70-4D62-E811-A622-44A842BE8F7E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C07B6F8B-4F62-E811-B034-44A842BE8F7E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0616E22E-8662-E811-9A90-44A842B420FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A46C4CC3-EE60-E811-8396-3417EBE46396.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B846AAA3-EF60-E811-8B28-7CD30AC03006.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/22A11D1A-F660-E811-A4B7-3417EBE46601.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/888207DF-FA60-E811-B7A0-44A842BE7718.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/DE8D7925-F560-E811-B4BF-A0369F5BD8FC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C8193083-FC60-E811-AE8C-3417EBE465FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6CC7A23B-0261-E811-B3D9-44A842B2D658.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/347F1795-F560-E811-AC8A-00266CF830FC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BA1D5813-F960-E811-8DA3-7CD30ABD2EE8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/58704163-0661-E811-A0C7-44A842B4D8CB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FE0BDBBA-0561-E811-B7C7-10983627C3C1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6250286E-0761-E811-AFF3-44A842B4CC8B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EC2FA5E2-0661-E811-B10E-7CD30AC0313C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BE388FEB-0661-E811-A40E-10983627C3DB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/06667EB8-0761-E811-B4A5-7CD30AC0313C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8C053E65-0261-E811-8807-7CD30ABD2EE8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3AA371F5-0661-E811-8505-7CD30AC0301A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/18C35548-0961-E811-8D86-A0369F6369D2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1695B6BB-2861-E811-8437-7CD30ABD295A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7E8285A6-2861-E811-AA94-000E1E878860.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0AB90509-2961-E811-A747-44A842B4B3F1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A864E5A8-2861-E811-B94E-44A842BFA93E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E254D0AC-2861-E811-9B92-F4E9D497BBE0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BC1CC1A6-2861-E811-A2F5-44A842B420FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DEA93F3D-0F61-E811-8DCD-44A842B4D8BE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/54793D8C-0E61-E811-88C2-44A842B4D8BE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CA75F32F-2961-E811-B338-10983627C3E8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/58468336-2A61-E811-9EA7-008CFAF5592A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/92134833-2A61-E811-B13F-001D09FDE107.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/F0FD203A-1161-E811-A506-44A842BE8F71.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/46D66400-FC60-E811-B01D-B083FED12B5C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4AE781A3-0361-E811-B3A9-141877640173.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D2C28A7F-0661-E811-86E9-B083FED138B3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/80BE1B2D-0061-E811-9CD4-00259073BB58.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/86ACCA48-2D61-E811-8D16-141877642ECF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/889A05A6-2C61-E811-B833-44A84225C629.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C0424829-2C61-E811-AC66-141877642ECF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B4928754-2D61-E811-AA59-B083FED03632.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/785A221B-3161-E811-8D58-44A84225C851.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F49B4AD7-F860-E811-9C1A-44A84225CDFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2E77DCF2-0861-E811-9F69-002590D60038.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F2010244-3961-E811-8D30-14187763B750.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5CF43147-2C61-E811-B261-7CD30ABD2EEA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0A0D0C2E-2C61-E811-8E62-44A842BFA93E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3AC3B8C7-2C61-E811-94FD-10983627C3E8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FC9B7F4D-0961-E811-B0A1-00266CF85940.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9A695F82-2E61-E811-98BE-44A842BFA94B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3A5202CF-2E61-E811-89D4-44A842BFA93E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/24BCF8DE-2E61-E811-8238-7CD30ABD2EEA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/B6CB188E-0E61-E811-8CA5-F04DA274BBF6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/C84687AC-1261-E811-9D9D-7CD30AC03006.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9C20A3B1-2F61-E811-8920-10983627C3E8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/483BF56F-3061-E811-BCCB-44A842BE8F98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C0BC4D6E-3061-E811-A615-44A842BE8F98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/80D0AC1D-0D61-E811-B2F6-F04DA274BB9C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/6E32BE65-1861-E811-B052-44A842BE76F1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/72FA047D-F860-E811-B2A9-F04DA2753F56.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B89BA49D-3261-E811-B1E6-10983627C3E8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3C4B50C8-3261-E811-AD6B-7CD30ABD2EEA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/789FDBCA-3261-E811-83FF-7CD30AC0311A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/9C222A76-1461-E811-8322-10983627C3DB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/CCCBBA62-1861-E811-BFD9-44A842BE8F8B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/F8DF4992-1961-E811-B180-44A842B46A7E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B6529043-3761-E811-913F-44A842BE8F7E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/CE08B867-1861-E811-93FA-7CD30ABD2776.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A80B67F2-3861-E811-876E-44A842BE8F7E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6E14C781-3961-E811-B2F4-10983627C3E8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/14603551-1461-E811-8319-44A842B451F1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/F87F89A0-1761-E811-9ABD-A0369F5BD8D4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D2106344-3961-E811-9929-1418776375C9.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/942A43E6-1C61-E811-9D8D-B083FED04276.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/304E7C38-3B61-E811-B9E8-001E4F1C5820.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4C627CB0-3D61-E811-AD84-001E4F1C5820.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/F427B739-1B61-E811-9407-B083FED03632.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6E7C4A1F-4261-E811-936C-0025907276DA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/44E3B918-4261-E811-8D3F-44A842240F8D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/5CDA4BCF-2661-E811-98DE-44A84225CFF0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/92A9B1E2-4361-E811-8BE9-D4856459AE7C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8047C40C-4461-E811-80F9-44A84225D36F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6ACE170F-4661-E811-9B96-44A84225D36F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1A5097A8-4661-E811-9B76-D4856459AE7C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/080387CB-1561-E811-AE53-002590D4FC42.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/143BFC33-1C61-E811-BDC5-002590D60090.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D4338B0E-4A61-E811-92E8-1418776420DF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E8A8CA9A-4A61-E811-A3AB-002590207C28.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D2C679D0-4E61-E811-B35E-14187764311A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/52929620-5061-E811-A841-44A84225D36F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/98C2CAAC-2861-E811-9B8B-141877638F39.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A08E555B-5261-E811-A57F-002590D5FFF2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/06D22032-5261-E811-8CFB-44A84225D36F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/EA3079EA-1C61-E811-B37A-00259073E36C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/50C7995D-2D61-E811-9527-B083FED03632.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DA0C3F3F-5461-E811-B4F1-44A84225D36F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/BC19C532-2861-E811-A0CB-B083FED1321B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/5E68182A-2E61-E811-A4E8-B083FED0FFCF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/22549B4C-5661-E811-A93B-44A84225D36F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C6F5512A-3B61-E811-BF53-44A842BFA94B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0232C728-3B61-E811-9F9F-44A842B4D8D8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/60C22851-3B61-E811-B4D6-44A842B451FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/CA9E6506-2161-E811-867D-44A842B2D658.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BE26CDD3-3D61-E811-8D51-10983627C3E8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F06004D1-3D61-E811-AA94-10983627C3E8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8446F33A-3E61-E811-A011-44A842B451FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/E0DDA814-1B61-E811-AB26-A0369F5BD8FC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/EA9C6FFF-2261-E811-ABE4-44A842BE8F8B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/D25A1CAC-2361-E811-AC99-44A842B2990B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/F643F21C-2561-E811-AA79-44A842BFA958.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/78B6F824-4061-E811-BB2A-44A842BFA94B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BE46871F-4061-E811-8E92-44A842BECCB1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/1845D151-1B61-E811-BF79-44A842BE7718.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/9A9573E5-2661-E811-8450-44A842B46A98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6CD98A8F-4061-E811-BB34-44A842BE76FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/960106AD-4161-E811-9D65-10983627C3E8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/C4903848-1161-E811-B2C7-7CD30ABD278A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/AA3A8AB0-1761-E811-A28C-F04DA27542B9.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/E67098A3-2161-E811-9305-3417EBE465FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/863D4E7F-2861-E811-94CE-44A842BE770B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/32638014-4461-E811-9E17-F04DA274BCCE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/94CE7C5E-4461-E811-806B-44A842B4D8BE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/5CF28F0F-2B61-E811-AE4D-44A842B2D631.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/6E2AC392-2561-E811-88D1-10983627C3C1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/74B9FC9D-4661-E811-9F14-A0369F5BD8FC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/801AEFEA-2661-E811-B2A5-7CD30AC0313C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/02F383F0-6663-E811-A798-0CC47A7E6820.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/16E8CDDF-7661-E811-B63B-C81F66B78624.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/A0F7ED8D-7361-E811-BFA1-1866DAEB40CC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1AF8AD11-9761-E811-B076-141877410522.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E8A18470-AD61-E811-9334-801844DEF100.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/08FF319D-9261-E811-AE1C-14187740D279.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/9660D44E-9561-E811-B3A5-1418774121A1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/704BA46D-B961-E811-AE58-1866DAEB4100.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/781B3546-E161-E811-937F-549F3525A184.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D08FEC35-E661-E811-BF12-B083FED024B1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F0DF8F79-D561-E811-95FF-842B2B42B2AF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A6B0AF78-D561-E811-8ACD-1866DAEA6E1C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/D6E81B54-D561-E811-85DB-1866DAEA8394.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D8099A3E-4962-E811-BA21-90B11C0BCBD6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E69683AD-3262-E811-92C0-549F3525CD78.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DC9CB7C4-5E62-E811-B865-1418774118F6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/62EEA7EA-1B62-E811-9C1F-842B2B17EA35.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/E48F5455-F660-E811-B77B-0CC47A7E6972.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E88D206F-1861-E811-B785-40F2E9C6ADA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/54DEDC57-0261-E811-9D03-0CC47A7FC6D0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E0869DF9-F760-E811-8DC4-3417EBE706A2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/526855D2-FF60-E811-AD2E-002590DE6E28.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/260A7C67-0061-E811-BE49-002590DD7C9E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CE8ABA62-0261-E811-8880-00266CF3E4B8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FC28EA92-3061-E811-A73D-0025904B5F96.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3827DD6A-3061-E811-9B11-0CC47A7E6B14.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B4E7456B-3061-E811-A508-0CC47A7E6B14.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FC6457DB-3461-E811-B949-0CC47A7E6B14.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/62A0E68B-2161-E811-BEE4-0CC47A7FC6D0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5A372837-3761-E811-AA63-3417EBE743C0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/50FBEFF9-1561-E811-AA44-0CC47A7E6972.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E014A74D-3961-E811-8989-0025904B5FEE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/5890B8BA-1261-E811-A441-3417EBE705CD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/808BB8BA-1261-E811-82C4-3417EBE705CD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/E25EF1BA-1261-E811-AD82-3417EBE705CD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EE120F28-3B61-E811-BB59-3417EBE7062D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1AE0551F-4061-E811-88BD-3417EBE743C0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/3253FD32-2761-E811-8AD4-0CC47A7E6A5C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/32F8328D-2461-E811-9EAA-3417EBE706A2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B053B30E-4461-E811-B517-0CC47A7E6B14.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B4F67D0A-4A61-E811-9ED1-002590DE6E6E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B495D30B-4A61-E811-AB06-00266CF3323C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E4246E62-2B61-E811-B246-00266CF94A4C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EAF13858-4C61-E811-9F24-002590DE6E3C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/AC7907A4-2461-E811-BDFD-002590494BE2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9ACFE93E-4F61-E811-9976-002590DE6E3C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/741804A1-2861-E811-8EE3-002590DD7C9E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/F2448FBD-3561-E811-8DFC-0CC47A7FC6D0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/40DF9558-4C61-E811-9FB6-3417EBE743C0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/3CDC8164-2961-E811-A13C-002590DE3A92.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E498686D-2A61-E811-90B4-002590DE3A92.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C4BEB196-5261-E811-8B82-3417EBE706ED.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5264669F-5261-E811-A648-0CC47A7FC72C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/52902859-2D61-E811-8E01-002590DE6E34.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/6A8D2259-2D61-E811-A91C-002590DE6E34.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/8E74F66E-2E61-E811-A2ED-00266CF3E4B8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/36B9BD0E-5861-E811-B7C3-0CC47A7FC73A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/B09723CC-2761-E811-8D83-0025904B6004.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/147F2C4D-2A61-E811-8C48-002590494C88.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1666FC86-5A61-E811-916A-002590DBE1D8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/3CD8FA53-4761-E811-A2B8-3417EBE70663.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/4CE74B32-2161-E811-AB6C-0CC47A7E6A5C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/7687D6E7-2A61-E811-9A57-0025904B11EA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/78AF4A80-6261-E811-B04E-40F2E9C6AE74.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7EF6357A-6261-E811-9FDF-002590DE38C8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/28867281-6261-E811-9B2C-0025904B5FEE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/3C7BF20E-F760-E811-AF63-3417EBE705EB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/325FE5B1-6861-E811-91BD-002590DE39F0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/08900477-0F61-E811-9BC3-002590494C84.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/22B5332E-3561-E811-8542-3417EBE700A2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AC7DAE06-7161-E811-9A19-002590DE6E52.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/345874EE-5661-E811-8225-3417EBE7446B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A0B00497-7761-E811-AB4B-0CC47A7E6A5C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/982327B7-6F61-E811-9ABC-002590DD7E50.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B899AA7F-8D61-E811-868F-3417EBE70729.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B04A6F3C-6861-E811-BFDA-0025904B1342.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/6E183C7A-7C61-E811-9058-00266CF3DDB4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A4C82B26-A561-E811-ADB4-002590DE6DE4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/36D67662-9261-E811-B7D6-0CC47A7FC74A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/98C5A1E0-B061-E811-8DEC-002590DD61E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F2218C00-C861-E811-9292-0CC47A7FC6F8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BC815BF8-C761-E811-9BA7-002590DE6E6E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/787DD5A9-F460-E811-94F5-0CC47AC52FC2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/087A9619-F660-E811-BEC2-0CC47AC52CFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8A2BC269-0061-E811-98E5-0CC47AC52D78.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/3219C374-F560-E811-9843-001E672489F3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/26444DB5-1A61-E811-9506-0CC47AC52AFC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D250294B-0461-E811-9843-0CC47A4C7340.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D437774B-0461-E811-9A56-0CC47A4F1C2E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B06878B7-1661-E811-9D52-0CC47AC52E2C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AA48A471-1F61-E811-9E41-0CC47A4F1DA4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2ADF9169-0061-E811-A634-0CC47AC17470.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5434EB56-0361-E811-BB7C-0CC47AC17678.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B4E9F856-FE60-E811-BFDE-001E6724839F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/60E8DF5C-0261-E811-80B3-001E672486B0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/40B2A9A9-2861-E811-BEDE-0CC47AC1757C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CC4CEFB6-2C61-E811-82B5-001E67247B8E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/ACB0496F-3061-E811-9D81-003048F35116.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2CF7462E-3561-E811-8634-0CC47AC1757C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/184A3B47-3961-E811-856A-003048F35116.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/64C19EC1-1A61-E811-8C17-0CC47AC52D6A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/A8084381-2161-E811-8BCD-0CC47A4F1C2E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/78518095-1B61-E811-ABD2-0CC47AC52CFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/E076C751-2161-E811-B711-0CC47AC52FCE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/B097EF51-2161-E811-9E78-0CC47AC52C8E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/84C9B9A8-2261-E811-B0C5-0CC47AC52A82.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/12B7F680-2861-E811-96BE-0CC47A4C6F0E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/7CA58DF2-2161-E811-A019-001E672489D5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/32C235A9-2261-E811-86B7-001E67248A43.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/1CB5034B-2661-E811-9C9D-0CC47AC577E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/6C4359AC-2261-E811-BA67-001E6724804D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/4A68D114-2B61-E811-918E-0CC47AC30F14.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/5AE67629-2E61-E811-8BF6-0CC47A4F1CF6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/AA7F7D9C-2A61-E811-8345-0CC47AC52F98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/9C1C03A6-2A61-E811-A7A3-001E672486B0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/4A880B15-2B61-E811-BC6A-0CC47AC174BC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/327C8058-2D61-E811-963A-0CC47AC52D6A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/82F7EE78-0F61-E811-9378-0CC47AC17678.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/6AB4E3C1-2761-E811-A81B-001E67248331.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/24BE9B15-5861-E811-9E8A-001E6724862E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/928B641E-5A61-E811-9428-0CC47AC30F14.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D8501B48-5A61-E811-8880-001E6724862E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/42CDA402-3061-E811-A377-001E67248142.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/105AB684-3261-E811-A6DF-001E674613C3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CA2DB117-5861-E811-B689-0CC47AC52C8E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0AB3D4FB-F960-E811-A796-001E6724862E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/96F329DE-5E61-E811-983C-0CC47AC52CFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/68FCFBDB-5E61-E811-AAA7-003048F351EE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/02C7E48F-6261-E811-BE9E-001E67247D28.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/189D2716-6761-E811-93B6-003048F351EE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/60551D11-6761-E811-BFEB-001E67247D28.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/80B4B116-6761-E811-A047-003048F351EE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A6C8126D-6B61-E811-80BB-0CC47A4F1CF6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/04CDE668-4D61-E811-B446-0CC47A713996.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/26657B14-6761-E811-9F75-0CC47AC52CFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/569C3813-6761-E811-8971-0CC47AC52CFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A2DD276F-6B61-E811-A58E-001E6724804D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/CA6F4FAE-3161-E811-8721-0CC47A4C6F6E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F67C64F9-6A61-E811-85F1-0CC47AC52FCC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FCB99471-6B61-E811-8053-003048F351EE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/10B6D4F0-6E61-E811-BF3F-001E6724804D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/74748D10-6F61-E811-82DF-001E6724804D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5CA26711-6F61-E811-BEF9-001E6724804D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F2BB5814-6761-E811-B9FE-0CC47AC52CFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/02C64A6D-6B61-E811-8EC0-0CC47AC52CFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4A521C6D-6B61-E811-95DD-003048F351EE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4C707274-6B61-E811-B7AD-0CC47AC52CFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CE4DE813-6F61-E811-81C9-0CC47AC52BDE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/62E6C976-7161-E811-85FB-001E6724804D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/469B050C-7161-E811-8862-0CC47AC52CFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A4643055-7161-E811-9BBD-001E6724804D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BC25BF88-7161-E811-BDFD-001E6724804D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/340FE569-0961-E811-A43F-001E67248732.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5E358FE6-6E61-E811-B91D-0CC47AC52CFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D8CD9513-6F61-E811-BB8F-0CC47AC174BC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FC67BA12-6F61-E811-BDC6-0CC47AC17672.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A8A3C59F-7161-E811-9FE2-003048F351EE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C4565EA1-7161-E811-B72B-0CC47AC52FC2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/9CB5B1EE-1C61-E811-8213-0CC47AC52A94.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/56A71226-2461-E811-8DD3-0CC47AC52A7C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FAEBA76F-6B61-E811-90C3-0CC47AC52CFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/944EB011-6F61-E811-A6C7-0CC47AC52CFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8E0F2CA1-7161-E811-B441-0CC47AC52FC2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/CC869E51-2161-E811-8B80-0CC47AC17678.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B0C9D461-7761-E811-B824-0CC47AC52FC2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/28262055-7D61-E811-B882-0CC47A7139C4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/FCC23627-2461-E811-970E-0CC47AC1757C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B4738B64-8361-E811-8EE0-003048F3521E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FADD6E85-8D61-E811-9D90-002590FCB3E2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/0893BCE2-3861-E811-BD5D-001E67247DF0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/ECF518D4-CB61-E811-95DA-0CC47AC52A82.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DC5B44FB-CD61-E811-ABC4-0CC47AC52E2C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/70DDE141-ED61-E811-A188-001E672486E2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/16093642-F560-E811-B4E4-0CC47A54529A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C292E0A6-FB60-E811-8A65-AC1F6B23C832.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F4EEE75A-0261-E811-958A-AC1F6B23C830.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FC8C9156-0261-E811-99B6-B4E10FA3213D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/56804F55-0261-E811-B20F-0CC47A5450D8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FC4A2A49-0461-E811-9506-0CC47AB64EF4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C8EEFE35-0F61-E811-BB6F-AC1F6B23C832.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/EE12D5A1-0F61-E811-B3D7-0CC47A545062.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/A66152A5-1961-E811-BF89-AC1F6B23C970.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A01B5C65-0061-E811-AD80-B4E10FD217E1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/62BE265C-2561-E811-934C-AC1F6B23C832.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/B2C20B9F-1761-E811-B9CC-AC1F6B23C592.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/CE29838C-2061-E811-9688-0025904CFB8A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/0AF27DFF-2661-E811-83A4-0CC47A54529A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/EC76E35C-2A61-E811-8744-0CC47A545062.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/92F90ED7-2E61-E811-8FCA-B4E10FA3213D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1A1E2F24-4261-E811-82CE-AC1F6B23C9D6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/62CE4123-4261-E811-8BF2-AC1F6B23C9D6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B2AD0A21-4261-E811-8136-AC1F6B23C7DC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A0784316-4261-E811-A5AB-0CC47A5450D8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7C0B6A17-4261-E811-99EF-AC1F6B23C82E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3ED0541E-4261-E811-BCF9-AC1F6B23C80C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E22A4223-4261-E811-8FED-AC1F6B23C9D6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/384EC116-4261-E811-9BB8-0CC47A5450D8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/26D6611E-4261-E811-8CEC-AC1F6B23C80C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7CE88339-4261-E811-98F0-0025904CEBF2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C09E8821-4261-E811-ADB2-0025904CEBF2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/C021AC6E-0663-E811-88F2-0025905C5474.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/D60CD9F4-6563-E811-8A15-0025905C54F6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A0E4281F-4261-E811-A3A9-AC1F6B23C736.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4A6E3D1D-4261-E811-B153-0CC47A5451E6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D27C4123-4261-E811-9365-AC1F6B23C9D6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/ACDC5917-4261-E811-B217-AC1F6B23C82E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/10E1606C-1E61-E811-BA7C-0025904B26E8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C0D1E0CB-4361-E811-98B0-AC1F6B23C80C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4E0363CB-4361-E811-94C4-AC1F6B23C80C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/A6BC77C3-1661-E811-8113-AC1F6B23C592.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/50E8EB70-3361-E811-8D7D-0CC47A5450FA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BE707B58-4861-E811-B459-AC1F6B23C80C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A0542269-4861-E811-BA4D-AC1F6B23C834.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7ADF9E54-0361-E811-84BB-0025904CEBF2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/B037E324-2E61-E811-BAC4-B4E10FA326F5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/447575CD-4E61-E811-9A09-0CC47A5451E6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/448DA51A-5061-E811-9B4E-0CC47A545096.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/1A2314FB-4461-E811-B0A3-B4E10FA3213D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B4A9EA39-5A61-E811-83C8-B4E10FD217E1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/3066D4A3-4B61-E811-AE99-0CC47A5450FA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/4AD7B20F-2B61-E811-AB80-0CC47AB64EF6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0CA134B4-6461-E811-B02E-0CC47AB58E9C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8ADC24B1-6861-E811-A084-0CC47AB58E9C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8CF1FA87-9A61-E811-970C-0CC47A206FCA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/56F7538A-A661-E811-AF3E-AC1F6B23C88C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/1C4C8CA3-F460-E811-B920-801844DF001C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/329A83D2-F160-E811-8406-549F3525DD6C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/725977DB-1D61-E811-9BBB-B083FED406AC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/080B7B4F-0961-E811-B19D-549F3525BF58.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CEF50497-0461-E811-85CB-1866DAEA8230.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/10CEA6BD-2661-E811-BB47-B083FED046D8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/56E775E3-FF60-E811-AB7E-1866DAEECFD0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FEB73C9A-0461-E811-86A0-801844DEF0E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/AC3399EF-0F61-E811-904D-1866DAEA7D94.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/AAE72E7D-1261-E811-85C0-1866DAEB3370.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/04CD1ED9-0E61-E811-B670-1866DAEEB364.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/FE6BDBEB-0F61-E811-9B88-1866DAEEB364.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FEE4FD26-2F61-E811-B7A9-B083FED42487.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/C4D08696-1161-E811-9A8D-549F3525BF58.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/ECDD2492-1061-E811-9ED1-B083FED42A6D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BC629A29-3161-E811-AB50-1866DAEA79D0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/9E34C498-1161-E811-9C06-B083FED42A19.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/26D378D3-1461-E811-BC21-141877344D39.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/F42A53E7-1961-E811-AA0D-1866DAEA7E28.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/329BFE95-1161-E811-B8FC-B083FED42FC3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/787941CD-1861-E811-8DBB-801844DEE7F8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/92D5D658-3661-E811-884B-782BCB20FB9D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/220D5D27-3861-E811-A009-141877411FED.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/28865294-1061-E811-8421-B083FED18B9F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8C4E4B36-3A61-E811-90A7-141877411FED.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/20727B53-3A61-E811-9C72-141877411C7F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/005391D3-1A61-E811-9ABE-141877411C7F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DC942AEC-3B61-E811-B847-1866DAEA6CC4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F2EA8AED-3B61-E811-95FD-1866DAEA8220.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8A714541-3C61-E811-879E-782BCB20FDE8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/66C46D0B-3E61-E811-95B1-1866DAEA6CC4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E4A1022D-4061-E811-9F15-14187741136B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1893BD2E-4061-E811-95E0-B083FED3F4E2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/2AAEE497-2361-E811-8D88-1866DAEB1FCC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/5E17C504-2561-E811-A471-1866DAEB40CC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9CF5EDBA-4261-E811-B35A-549F3525D084.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/C61022B4-2561-E811-B39B-B083FECF837A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/3A9408ED-2761-E811-9891-1866DAEA79D0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/10001B90-4461-E811-8557-B083FED40670.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2CC9278F-4461-E811-8E59-782BCB530522.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B466D4FB-4661-E811-890E-782BCB530522.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/58EECD26-4761-E811-9BBD-B083FED046D8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/04868427-4761-E811-92F6-141877411936.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/4AF42E31-2561-E811-8800-801844E561B0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/EC9F3A7A-2861-E811-99AB-1866DAEB5D80.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/70D7B01F-2961-E811-8028-801844DF001C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D419E632-4961-E811-8E97-141877411936.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/7C557EAA-2361-E811-9F98-B083FED18B9F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CE5303C7-4A61-E811-A684-001EC951439E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9C1C5439-4B61-E811-8EB8-141877411936.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0650F348-0E61-E811-B5D2-1866DAEB5230.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/A6FBB65A-2E61-E811-B1FF-1866DAEB40CC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/CA90515C-2E61-E811-BB58-1866DAEB4100.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/AED1BA5A-2E61-E811-B7E9-1866DAEB5C74.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E2068DCA-2D61-E811-989F-1866DAEA6D0C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6CCA97C4-4E61-E811-9938-001EC94BFB14.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/92AFDFB7-4E61-E811-AEAF-001EC94BA3CA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DEDFD2AC-4E61-E811-90AA-1866DAEB5C94.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/1EDE727E-1261-E811-A699-1866DAEA6CF0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/3CFF7F49-3261-E811-B846-1866DAEA79D4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/508A7EA1-5061-E811-9D60-1866DAEB5C94.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FED1C9B0-5061-E811-9AA3-141877411EA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/70D6EEB0-5061-E811-AC19-141877411EA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/EEF87DBD-3261-E811-BDF7-801844DEEF1C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/165E5CD2-5261-E811-8AE1-141877411EA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6E835CD2-5261-E811-B497-141877411EA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/02D73D59-5361-E811-8DC2-14187741013C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/14856FCE-2D61-E811-AD09-801844DEF0E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/1E80D7C8-3461-E811-84D4-1866DAEA8190.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CE0234D8-5461-E811-85BA-141877411EA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D0E34EF8-5461-E811-8346-90B11C0BCDAD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0C774EDE-5461-E811-8C60-801844DEF4E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A43AE8CD-5661-E811-B1E1-C81F66DD6742.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D2227DCD-5661-E811-9003-14187741013C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/8A23DC48-3261-E811-A3B9-B083FED429D5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BC694E14-5961-E811-B674-1866DAEA6CF0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BEB12E12-5961-E811-9269-1866DAEA6D08.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/14AF8715-5961-E811-9685-549F3525A184.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/E0DBEE46-3661-E811-ACE4-801844DEF358.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/74B8B839-5961-E811-98D0-A4BADB22A4AC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/FC16D94F-3261-E811-A7FC-B083FED00117.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C2BD39D6-6061-E811-B09B-141877410B4D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/306BC4DA-6061-E811-A687-141877411FCD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/38B96DD1-6061-E811-93B5-141877410316.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F2CC31DB-6061-E811-8B67-782BCB530522.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/746C8DD1-6061-E811-93ED-1866DAEA7E64.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8EE17AD7-6061-E811-8FF9-141877411EA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/40AABBDA-6061-E811-9B21-141877411FCD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F2B013E3-6061-E811-B0FE-782BCB20E48A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AE1D241C-F960-E811-A6E1-001C23C103E9.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/DC38F01C-4261-E811-AF9A-801844DEEF1C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DCAE73CB-4461-E811-AEBD-1866DAEA79D4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5A8C8409-6861-E811-8A8C-B083FED42FE3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3EE87208-6861-E811-8716-549F3525C0BC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/16985A07-6861-E811-BA44-1418774118F6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DCE0412F-6861-E811-9A00-D4AE527EEA1D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EC6ADB02-FD60-E811-8672-A4BADB1C5D40.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/44F9217C-6F61-E811-B47B-14187741208F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/500A8A1A-0161-E811-9DE6-A4BADB22A4AC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/002CDE11-5761-E811-B8C6-C81F66B78624.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/7CF3E215-4261-E811-ACC6-1866DAEA8808.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DEEE80D0-5461-E811-A433-1866DAEA79A4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/56585995-7661-E811-8F13-782BCB204C3E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B810EB8E-7661-E811-A9F4-141877411367.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0233945F-7C61-E811-8085-44A84224BE51.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BE2D39F2-7E61-E811-A236-B083FED42FC3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BE65790E-6861-E811-AE49-14187741013C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7A012126-8361-E811-B3E7-1866DAEEB364.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/28810162-2061-E811-9823-782BCB538FDD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8EA422EF-8D61-E811-AE67-782BCB20E305.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5CC54731-F260-E811-A5B2-0CC47A5FC679.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/1E8B1921-F460-E811-ACFB-002481CFD184.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/78F7B7DF-F860-E811-8FFC-6CC2173D6E60.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E013866A-F360-E811-9B11-90B11CBCFFEA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FC59FAD5-FC60-E811-BCFD-90B11CBCFF8F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/86C89152-FF60-E811-911F-0CC47A5FC495.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9E3C8CA7-0561-E811-A993-6CC2173D8740.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/22C68DA7-0561-E811-911D-6CC2173C39E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4C5D65A6-FA60-E811-A3E6-00269E95ACF8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/6A2E0F17-F660-E811-B0F7-0CC47A5FC619.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D442556D-FE60-E811-8BE1-B499BAA6776E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E0F91CEE-0B61-E811-9229-002481DE4C6E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7A5F5E62-0161-E811-AA18-00269E95ACE8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2847E2AB-2561-E811-B0B2-0017A4770458.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C8AE1FAD-2561-E811-B6F5-0017A4770454.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E4291EDE-2761-E811-83E6-0017A4770458.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E21DB6E5-2761-E811-B017-0017A4770454.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AAB831B0-1061-E811-9934-0CC47A5FC2A1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8EFE2E6E-FE60-E811-950D-6CC2173D8740.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/42CB33ED-FE60-E811-9F48-0017A477046C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/100C4148-1461-E811-A22C-6CC2173D44D0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/2C9CDC50-1461-E811-A865-ECB1D79E5C40.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FAE74CA9-2C61-E811-8A1B-0017A4770468.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C219CFA0-3161-E811-A19B-0CC47A5FC495.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/187294A5-3161-E811-AAE5-002481D20912.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/CEDB7587-1C61-E811-A509-0CC47A5FC61D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/522A37DE-1D61-E811-AC9B-6CC2173D4980.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E6AA7F3E-3361-E811-8DF7-0CC47A5FC495.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/66E7A7A4-F260-E811-974D-3417EBE65F65.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/203A304A-F460-E811-BE07-509A4C74806A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B25233FD-F260-E811-8BBE-008CFAF721CA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4CAA00ED-F860-E811-8117-509A4C74D0CD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B4FC3532-F160-E811-9960-3417EBE64B25.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/2A24CAEB-F660-E811-9EA4-509A4C7489E7.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/04A19F5C-FA60-E811-A9C7-008CFAFBFCF0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F8E3A348-FB60-E811-A052-008CFAFBF6CC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/08844145-F760-E811-81A6-3417EBE64BAF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/907C4985-FC60-E811-BB9C-ECB1D79E5C40.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/54C03259-1E61-E811-961B-6CC2173C39E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/A67B760C-F760-E811-91BA-0CC47A5FA3B9.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/640887C3-3461-E811-8A74-0CC47A5FC495.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/42A953CF-3761-E811-821A-0CC47A5FBE31.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/A08CBA3C-1861-E811-A34F-0017A4771078.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/4CBE0367-1C61-E811-8E5F-AC1F6B1AF03C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/803A137F-3A61-E811-8111-0CC47A5FBE35.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7EA5B07D-3A61-E811-BA69-0CC47A5FBE25.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1617666A-3961-E811-81AA-0CC47A5FBE31.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/5859CF78-2461-E811-98CE-0CC47A5FC679.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BEDD331D-3B61-E811-BEC8-0CC47A5FBE31.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/583E4467-1861-E811-8091-90B11CBCFFEA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/1643D675-1E61-E811-9646-00269E95B1BC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6413F743-3E61-E811-BF50-90B11CBCFFC3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/78118B48-3E61-E811-863B-ECB1D7B67E10.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/A45454EB-1C61-E811-BA45-6CC2173CAAE0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/3CE25495-2961-E811-8E2D-6CC2173C4580.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/B838E2A8-2961-E811-8395-6CC2173D6E60.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7834B6B7-3F61-E811-A377-ECB1D7B67E10.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/188B7732-2B61-E811-B47E-6CC2173C9150.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/40C4DC18-4261-E811-9842-6CC2173D6B10.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1A4F761A-4261-E811-B57D-0CC47A5FC281.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2A931E19-4261-E811-94BE-0CC47A5FA3BD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/5AF9B90E-2061-E811-ADE3-90B11CBCFF75.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/8A687B55-2D61-E811-A2FE-0CC47A5FBDC1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/3E95D132-3261-E811-8E0A-0CC47A5FBDC5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/EE152F8A-F760-E811-B096-509A4C72D497.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/92387271-1F61-E811-850E-7CD30AD08C4A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3652986F-1F61-E811-AB6B-3417EBE6450D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8A7B2E70-1F61-E811-9AF8-509A4C748136.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/58BF701A-2161-E811-8E57-7CD30AB190AE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C29E0E36-2361-E811-94C7-7CD30AB190AE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2234B25E-2561-E811-9876-7CD30AB190AE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/54D90F04-0561-E811-ADBE-509A4C748146.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C0F74AA2-2861-E811-B56F-7CD30AB18982.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CAB2CC7D-2E61-E811-B789-7CD30ACE15D0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/32A44F7E-2E61-E811-9999-7CD30AD08EB4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/72F1E780-2E61-E811-AA30-509A4C78137D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5C2B27BF-3261-E811-B234-008CFAF7350E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/125C68BF-3261-E811-9F73-509A4C72D4F7.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/721FC859-0161-E811-B44E-7CD30AD090D0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9E1ECF37-3761-E811-8A9F-7CD30AD08C4A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/18F12337-3761-E811-96AF-509A4C74808D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/9EBC45BF-1861-E811-9B7B-509A4C74806A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/621773B2-1A61-E811-8E13-008CFAF721CA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/D0A9A0E5-1861-E811-A9C6-7CD30AD09E02.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4A443AAA-FB60-E811-BF23-7CD30ACDCACA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/4C9F3214-1961-E811-8A66-3417EBE65F65.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FEDDE9C6-4061-E811-BE6E-7CD30AD09FDC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/228B9DB6-1C61-E811-936D-7CD30ACE1B58.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FE190B18-4261-E811-968F-7CD30AD09D48.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7A65DA17-4261-E811-B547-008CFAF72A28.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/A609867E-1E61-E811-A5C2-3417EBE644F2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A24E3E6E-4961-E811-A21B-0017A4770440.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/30B1A66A-4961-E811-B66B-6CC2173C3E80.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B4E79C6E-4961-E811-8E3E-002481CFE888.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7C660B8B-0E61-E811-AE95-6CC2173D6E60.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/44811DBF-3561-E811-ABC5-6CC2173D4980.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AEB1C26B-4961-E811-9F6E-B499BAA53EC2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/90DBE608-4A61-E811-B0B6-90B11CBCFFC3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/92629909-4A61-E811-9352-002481DE4C6E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/4EAD4AE0-3361-E811-A591-0CC47A5FC67D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/0CE44BE0-3361-E811-B5A2-0CC47A5FC67D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/5CE04AE0-3361-E811-A4D6-0CC47A5FC67D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2092875B-4C61-E811-B97A-6CC2173C3DD0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/947510A3-4C61-E811-AC4E-B499BAA53EC2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/B4A02660-2961-E811-82C6-90B11CBCFFF7.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EC91F592-4E61-E811-87D8-B499BAA53EC2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/386165CB-4E61-E811-BACC-90B11CBD0004.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/78CE248B-2761-E811-8E97-0CC47A5FA3BD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/943D539E-5061-E811-8855-B499BAA53EC2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BA697D57-5261-E811-B8BE-90B11CBCFFD0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/48202975-FE60-E811-8FF8-0025B3E0142E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/364E9488-5461-E811-B614-90B11CBCFFD0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E48F6D02-F960-E811-8F56-90B11CBCFF68.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/160923DE-2A61-E811-A3D0-6CC2173D6140.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/12D6B529-4261-E811-A74D-6CC2173D6B10.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CABBD253-0361-E811-80AF-90B11CBCFF5B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8C2F2E19-3E61-E811-BF2C-1CC1DE1CF44E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/96BAD62A-2161-E811-BE42-ECB1D7B67E10.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/86E44826-2161-E811-8044-008CFAFBF6CC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/28009253-1F61-E811-9CB8-7CD30ACE1744.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B41A419A-4661-E811-A0B1-7CD30AB15AD8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/ECDFDA99-4661-E811-8566-7CD30AD08C4A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/38FC08AC-2561-E811-9DEB-7CD30AB04FE6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/584A1D57-4861-E811-AE42-008CFAF7350E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/06E7B1EB-2461-E811-A4B2-008CFAFC03F8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DABFF809-4A61-E811-9D79-509A4C749155.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/14A0560A-4A61-E811-AA25-3417EBE6456D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E6D91D34-2A61-E811-B497-7CD30ACDCACA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4898A839-4C61-E811-AE1D-509A4C749155.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/A436FDF8-F760-E811-989D-7CD30AD0A354.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1E24E75A-4E61-E811-A4BB-509A4C749155.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/36A59255-2D61-E811-8915-509A4C7812F4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CCCF841B-5061-E811-B131-008CFAFBFB94.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A028631A-5061-E811-A3CF-7CD30ACE1732.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/76C1CA05-5261-E811-9D41-7CD30AD0A77A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/D4AF74C9-2961-E811-AA0C-008CFAFBF2BE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/6E1BEA15-3061-E811-8254-7CD30AB05490.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A21A8762-5461-E811-BB53-008CFAFFEA48.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FE8B0B0D-5861-E811-8A03-008CFAF74B22.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/560284D1-3361-E811-A8F8-509A4C74811B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D4E76169-5A61-E811-909B-7CD30AB049DA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/76333A85-0061-E811-BBCA-7CD30AD09D1E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9037EF77-6261-E811-9B92-7CD30AD090D0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AA56047A-6261-E811-8F87-7CD30AD09E26.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0866C078-6261-E811-8241-7CD30AB0522C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CE51E068-5A61-E811-AD8A-6CC2173D6140.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/44606E71-4961-E811-AB93-AC1F6B1AEF94.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/FE780338-2A61-E811-BEAC-6CC2173D5F20.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E67294B7-6461-E811-A8BF-0CC47A5FBE31.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/282207B8-6461-E811-8EE9-0CC47A5FBE31.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/96C58CB7-6461-E811-9427-0CC47A5FBE31.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5ED497B7-6461-E811-A6BD-0CC47A5FBE31.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/42DE82D0-3B61-E811-B374-90B11CBCFFB6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CA6A66B0-7C61-E811-A184-0CC47A5FBE35.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/46577DC0-9C61-E811-8950-002481DE4AA6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/148D77F5-A061-E811-B8EC-002481DE4BFC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1C2F92AB-BC61-E811-8357-0CC47A5FBDC5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/4E09F604-AD61-E811-9578-0025B3268576.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0CD7F6A1-E261-E811-8105-0CC47A5FBDC1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E6990DC5-E361-E811-B050-0CC47A5FC285.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5A9A5799-6462-E811-83CD-002481CFE672.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4C50A30C-7B62-E811-9B22-00269E95ACE4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EA116BB7-7B62-E811-A2EE-0CC47A5FBE21.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C061B3A7-8B62-E811-AE58-A4BF01125498.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/FCD6DAFF-AA62-E811-BEB8-001E67E6F616.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CE142A2F-9062-E811-8553-001E677924BA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/5C107D32-BA62-E811-BB93-001E677925B4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/C01E29D9-DB62-E811-9484-001E67792574.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1874A778-6261-E811-BAEE-3417EBE64B9D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6CCEE577-6261-E811-90C2-7CD30AD09C52.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/44C1CEB3-6861-E811-AA97-509A4C749086.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B0DECDB2-6861-E811-8D3C-008CFAFBFB94.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DE8E3C9E-7161-E811-8D7F-7CD30AD09B02.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BC9F0D9D-7161-E811-A94F-509A4C74D08E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BE4BE197-7761-E811-A8DC-008CFAFBE8F2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C866B416-7E61-E811-955A-509A4C72D497.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AA524F17-7E61-E811-95FF-008CFAF750B6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1C42CE3E-9461-E811-9A85-008CFAF51358.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/D26662F2-7661-E811-A686-008CFAF72476.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DEFFB50F-9861-E811-AF8C-008CFAFBE0DC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3E75EB0D-A361-E811-8860-7CD30AD0A696.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3E4ABBD1-C161-E811-8A54-008CFAFC02A8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/4C36849E-AA61-E811-9AB3-008CFAFBFB94.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/48EFE074-A461-E811-961E-7CD30ACE241C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B4A4D049-CD61-E811-BE87-3417EBE645A9.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/1A7D16CC-B261-E811-8DC6-008CFAF2018E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0AC53348-D761-E811-9D67-509A4C74811B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/203D5379-BC61-E811-8BA2-008CFAFBE8F2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/ACAE1E57-F761-E811-881C-008CFAFBF7C8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/34C6EE31-0D61-E811-A07E-0CC47A009148.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/C445D87C-1461-E811-8431-1866DA87AC15.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/76174592-7761-E811-95B1-1866DA852F52.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9CE7BB8E-7761-E811-8AFC-0CC47A7EEDB0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0E0D7D47-5261-E811-998A-1866DA890B10.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1EA89014-8061-E811-B8AF-842B2B766242.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/161B1ED6-1661-E811-AC40-842B2B760921.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C62A2351-8B61-E811-80F3-D4AE526A091F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/088B428A-9A61-E811-9112-D4AE526A0A60.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/08064E26-7D61-E811-B36C-1866DA87AB73.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/EC4F7289-8161-E811-90D0-1866DA879B33.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/24854C2D-A561-E811-8ED2-D4AE526A0CFB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/D4CE9B21-8661-E811-9CB9-1866DA87AF6C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E0075AF4-AA61-E811-8C9C-D4AE526A1654.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/64143BB1-AE61-E811-A359-0CC47A7EEE0E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/4CDD3D06-8D61-E811-B875-1866DA87C2CD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4EBAF2F5-BD61-E811-9E64-D4AE526A03AD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7E1EB86B-D561-E811-BE7F-1866DA879EDE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/14707DF5-C661-E811-BA57-D4AE526A0CEC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7C5F784F-0162-E811-A8DF-0CC47A01CAEA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/32031356-C561-E811-BB60-782BCB1612C0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CA0169D9-0E62-E811-96DF-AC1F6B0F39FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AE432920-3762-E811-B6E6-0CC47A7EEE92.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/16F11F34-F060-E811-AE46-1866DA87AF6C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6A521847-1661-E811-93B4-1866DA87B0FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D882EDF8-F060-E811-BB7C-1866DA879B33.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/40D64D1F-F560-E811-AB1E-782BCB161F1B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BE47AAF7-F860-E811-91FC-782BCB161F1B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A8CE5677-1F61-E811-BA41-1866DA8903B2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EA8A5B34-0A61-E811-A99E-0090FAA58B64.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/04F9CB22-2861-E811-B413-0CC47A4DEECE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3416188C-3961-E811-ACE3-0CC47A4DED90.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/04AACF75-1161-E811-A68B-0CC47A4DEDEE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FE08704D-4F61-E811-BF21-A0369FD0B374.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B81F724D-4F61-E811-98E1-A0369FD0B374.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/2A83F34C-3561-E811-8265-A0369FD0B374.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/BA8A4D42-2B61-E811-B9DC-0CC47A4DED90.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E46D57BB-3161-E811-A5AA-0090FAA58084.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/54731A1B-8061-E811-84B3-0CC47A4DEE50.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8AA98A28-1362-E811-9C74-0CC47A4D9A3C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1E56A209-1B62-E811-A36A-A0369FD0B38E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D436BD66-FE60-E811-A223-0CC47A7EEE32.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/0ED425BB-F660-E811-9108-1866DA890B94.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EEDA6921-F260-E811-8F81-D4AE526A0CEC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/92BFFE57-0261-E811-825E-0CC47A7EED28.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CC44D459-0261-E811-A65A-1866DA87BB03.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D0A41CFF-FB60-E811-B9D1-1866DA87AB31.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/461FC84B-0961-E811-BFE9-0CC47A0109A6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6E94C96C-3061-E811-A5BF-1866DA87931C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1C7B8C6F-3061-E811-A024-0CC47A7EEE80.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4C520E6E-3061-E811-A4C2-1866DA879B75.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F26C8072-3061-E811-BF1F-1866DA890622.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/86BE2574-3061-E811-AE33-842B2B7680D5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/040E3D6C-3061-E811-9E82-0CC47A00A814.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/54C51B7F-0F61-E811-857B-1866DA890388.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/38A21593-0E61-E811-9AF0-1866DA890370.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/80414D2A-3561-E811-8563-1866DA879B75.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/78CDA02A-3561-E811-AE1D-0CC47A7EEE0E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2CA55DBF-3461-E811-80AC-1866DA87A5A4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9EF10E2C-3561-E811-BCC3-1CC1DE18CFF6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0C9AB6E0-F960-E811-BDDD-0CC47A7EEE96.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/46A4428D-0E61-E811-9EDC-0CC47A009258.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/162CF176-0F61-E811-8099-842B2B76832A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C8149248-3961-E811-A359-D4AE526A023A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4A1D2B48-3961-E811-A4BB-D4AE526A109A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BE06352A-3B61-E811-8EF8-0CC47A01035C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EC204A93-FC60-E811-B78F-D4AE526A0A7B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/605178CF-1A61-E811-AC11-1866DA89035E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/5CA64CF5-EC61-E811-91AB-0CC47A4DEF00.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/668473CA-3062-E811-A6DB-A0369FE2C026.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0AA4ED6F-3462-E811-B0FD-A0369FD0B170.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C68D5230-1962-E811-921C-A0369FD0B290.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/8460484C-1C62-E811-BD18-A0369FE2C12A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0AD76691-4362-E811-80DC-A0369FE2C20C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5A569317-4E62-E811-8B20-A0369FD0B170.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4C3A3CD6-5162-E811-8FBD-A0369FE2C082.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B846B1D7-5D62-E811-8D01-A0369FD0B242.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DAD4ADD9-5E62-E811-9E62-A0369FD0B242.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/303BFA51-6562-E811-9712-A0369FD0B132.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/267A8A52-9F62-E811-8E32-A0369FE2C1A0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/68D402A0-BA62-E811-8726-A0369FD0B3EE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EE0B6683-0361-E811-BD51-D4AE526A0C7A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/9230F857-1A61-E811-8B15-1866DA879B33.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2A72E81F-4261-E811-B465-842B2B758AD8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/9E5209A7-1D61-E811-B89A-1866DA890B10.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7C3B6E22-4461-E811-8FFC-D4AE526A05C8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DE44F313-4461-E811-8454-1866DA87A5A4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E27FCA8E-4461-E811-9CBC-1866DA890622.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8290D25B-4661-E811-B17C-D4AE526A05C8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/84C55C56-0361-E811-AD78-D4AE5269F611.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/44390455-2461-E811-A399-0CC47A7EEE32.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/307874E9-1C61-E811-B75A-0CC47A01035C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/08367288-2661-E811-B6B2-0CC47A7EED28.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7EAFF75A-4861-E811-B1E5-D4AE526A023A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1C74AA52-4A61-E811-A1DE-D4AE526A023A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2E950BCD-4A61-E811-B826-1866DA86CCDF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/323176B1-2461-E811-B686-1866DA87A870.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/B8D13D56-2D61-E811-8975-0CC47A7EED28.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7A428369-4C61-E811-A3AD-D4AE526A023A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DC2A7B40-4C61-E811-85FB-D4AE526A023A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/F8CFA45F-2961-E811-A132-1866DA87BB03.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3230FC25-4E61-E811-94FF-D4AE526A023A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/120C5C5F-4E61-E811-8084-D4AE526A023A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/8ACD70A6-2261-E811-9857-D4AE526A0A60.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/EE481E55-2D61-E811-9CD1-1866DA879444.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E2B64D1E-5061-E811-8417-1866DA890370.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D2DCE81C-5061-E811-890A-0CC47A7EEE80.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/0ABF31B1-1261-E811-AA5A-842B2B75FFFD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E072E04C-5261-E811-8054-0CC47A7EEE80.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AA8D3B58-5261-E811-BD94-1866DA89061C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/56CAF438-2A61-E811-8688-0CC47A009E10.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/6E95D0BE-3561-E811-81C8-1866DA87AB73.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2436E561-5461-E811-9471-0CC47A7EEE76.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/58789C9D-5461-E811-81BA-0CC47A7EEE80.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6A48B5BB-5461-E811-8FAA-1866DA890388.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/760C156F-2B61-E811-BFC3-0CC47A0092D0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7ED8F45D-5661-E811-B6BF-0CC47A7EEE80.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/2652F776-0F61-E811-B554-842B2B76832A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/A65F5722-3061-E811-A6C1-0CC47A0107D0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/14804410-5861-E811-B27C-0CC47A0092D0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2A99AF16-5861-E811-84D3-1866DA890388.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/24B45E11-5861-E811-B547-D4AE526A109A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/C6C90A11-2761-E811-979A-842B2B5C2299.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/20E45FDD-2C61-E811-8DCD-D4AE5269FD24.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/60130C65-2F61-E811-82FA-0CC47A0093EC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CE87547A-6261-E811-AC1B-0CC47A01CB76.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0428AA7B-6261-E811-8B32-0CC47A009148.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9A650E7B-6261-E811-8A78-0CC47A00941C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/DA640691-2E61-E811-A95C-842B2B768127.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/568EF1B6-6861-E811-8A89-D4AE526A0A9A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0293B1B4-6861-E811-939E-1866DA87D4B6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F8B975BA-6861-E811-BC81-1866DA87D7BF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/70172F19-2B61-E811-8795-842B2B758BAA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/28A24AF8-0B61-E811-B5A2-1866DA87B21E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/18108432-7161-E811-B1DD-D4AE526A0B03.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D0D07646-B561-E811-8FF7-0CC47AB35EF0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/14820BC9-2F62-E811-94FA-0025901C1B7E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F8E1D143-8762-E811-9B03-002590DE6E5C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/78F9B06A-D062-E811-9D9E-C45444922991.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/FAEFB4F0-AF62-E811-BFE4-C45444922B77.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/049764F8-E262-E811-85A9-C45444922BD1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/B20B4453-6763-E811-8C70-C454449229EB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/8065D240-7F61-E811-BA74-28924A33B9AA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/484EF07E-9561-E811-AE37-1CB72C1B649A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/76C24F12-BA61-E811-BB65-28924A33AF26.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0611EC14-BA61-E811-B600-1CB72C1B6CCA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6A78DD4D-BF61-E811-A81D-0026B9277A32.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3811DE4F-BF61-E811-8BF6-BC305B390A32.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/8A15DEB1-3862-E811-8E7C-0026B927862A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/468788D4-EE60-E811-9CF8-002590E7DE36.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/62653B0A-F860-E811-BE40-002590E7D7C2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/20D77CCB-FC60-E811-B982-002590E7D7DE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/58EFF1BF-F260-E811-BEB7-0CC47ABAC11C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/ACC1D641-3361-E811-A187-0CC47A1DF620.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7841C84B-0061-E811-9997-0CC47A1E0DCE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CCBA54C2-3461-E811-8178-0CC47A1DF620.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E4B7736D-0061-E811-B527-002590E7E02E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9A9B2CAC-0561-E811-9615-002590E7D7EA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/6649B1C7-2261-E811-8DA9-F4E9D4AF0AF0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E4A89E25-4061-E811-BCE0-002590E7DFD6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CAC3B830-4261-E811-862B-002590E7D5A6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/58CB1C17-4461-E811-B637-002590E7DE26.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/000A0AB6-1261-E811-AD9B-002590E7DE70.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/A8149F7B-0F61-E811-976B-002590E7D7D0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/305080A6-1761-E811-8FA3-002590E7DFA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7A0FEDCB-4E61-E811-86ED-0CC47ABAC0CE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/623A0522-5061-E811-8AC5-0CC47A1DF81C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/DE5D19ED-1C61-E811-83A8-0CC47A1E0466.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/3441ACAC-2261-E811-B1F2-002590E7E01A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/F0C00118-2B61-E811-AE34-0CC47A1DF620.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/76AD5083-6261-E811-A5E0-002590E7DFE0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A26B0283-6261-E811-9879-0CC47ABB5178.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/144C19B2-3361-E811-889B-002590E7D7DE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/5AE3CA2D-2E61-E811-8EEB-0CC47A1DF60C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/96614AB4-3161-E811-910C-002590E7DFA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/723880BC-6861-E811-B7C5-002590E7D7E2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B2A00561-6961-E811-B592-0CC47ABD6C6C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/E067D201-1661-E811-AD29-002590E7D5AE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DA9A63EE-6A61-E811-8C81-002590E7DFE0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/086765F2-6A61-E811-91E3-0CC47A1DF620.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/F2D718DA-3361-E811-B68C-0CC47ABB5178.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5A38C941-7161-E811-B355-002590E7DFA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E4C1C6A6-7361-E811-B212-002590E7DFA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/942D47AE-7561-E811-8D66-0CC47ABB518A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5CB7466F-7761-E811-9C32-0CC47A1DF7FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9A8A751E-7E61-E811-8654-002590E7E00A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3247971E-8061-E811-946C-002590E7D5A6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0423A4FD-FA60-E811-ADDA-002590E7DD98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/22E43CC9-1661-E811-B862-0CC47A1E0DC8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B8A9B1C3-9161-E811-8537-002590E7D7EA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/C42BCD1D-6161-E811-BE6A-0CC47A1DF818.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/66C6D514-9861-E811-846B-002590E7E00A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/A8EC9967-6461-E811-8F59-0CC47A1E046C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4C970A09-6861-E811-8718-002590E7D7DE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/547CF6E8-0961-E811-918B-002590E7DEBE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FCB2D42B-A561-E811-B9ED-0CC47A1DF7E8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/10FFB785-B261-E811-B61A-002590E7D7CE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CE06CADA-C161-E811-8446-002590E7DFA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/609274C6-E561-E811-ABF4-002590E7DD98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D2A47274-E761-E811-B05F-002590E7DE70.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E255F8B9-EC61-E811-AD03-0CC47A1DF818.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E4FD691F-0762-E811-AB2E-002590E7D5A6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BCBBE7C8-2662-E811-BD39-0CC47A1DF800.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/0A974126-0062-E811-B831-0CC47A1E046C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/32938928-7862-E811-B59C-002590E7DD98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7A003AFC-EF60-E811-8777-AC1F6B0F3506.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7E1A8017-FD60-E811-B4F7-AC1F6B0F75D4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1681460A-F060-E811-A60A-C454449229AF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/66EEB000-F060-E811-8927-0CC47A703326.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6E8D3401-F260-E811-933A-C454449229AF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6AE3197F-0A61-E811-BE6E-AC1F6B0F3506.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/B4B1BBAE-F860-E811-ACEF-089E01DC6B5C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/08939F32-0B61-E811-90A6-AC1F6B56768A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E29C8823-F860-E811-BB97-C45444922958.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/CC213177-0F61-E811-9089-AC1F6B567730.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9200F865-0061-E811-BDA7-C45444922ADE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/42D764AB-1261-E811-90B5-AC1F6B0F3A26.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/22CE70FC-F760-E811-A4AB-C45444922988.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7CE6C917-0261-E811-8063-C45444922BFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5E798B3C-3361-E811-AEEF-0025904B7FC4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8828AF3F-3361-E811-964B-0025904B7FC4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8498A573-3361-E811-9A34-002590DE6E88.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/524A97BF-3461-E811-AAC9-002590DE6E86.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F0D2D142-0A61-E811-AD6F-C45444922991.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/028D0926-3761-E811-A9F7-0025904B7FC4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A0C3F33E-3761-E811-9E97-AC1F6B0F757C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/50A574AA-2C61-E811-B28E-6CC2173DA2F0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/AE8561E3-2261-E811-8EB6-6CC2173DC380.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B8611631-3561-E811-BC00-6CC2173D9300.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0E3F81B8-0561-E811-B981-6CC2173DAD00.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/447C6915-2561-E811-8028-6CC2173DCB90.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/28627FBF-3161-E811-B7AE-6CC2173DA350.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/7CF4DE93-2161-E811-8B65-6CC2173D93F0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/EAAA5A69-3361-E811-A106-6CC2173DC380.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/4A9D83E3-3361-E811-818C-6CC2173DABE0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/26336B7F-3461-E811-9459-6CC2173DAD00.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/A003E9B5-1261-E811-819B-6CC2173DA9E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/287E1C28-1561-E811-9154-6CC2173DC2E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/68DB0B16-4A61-E811-992A-6CC2173D9AB0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/6086338C-3661-E811-97D2-6CC2173DABE0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D653C821-5061-E811-9BB9-6CC2173DA2F0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BC784EE2-F960-E811-9B10-6CC2173D9EB0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/88F05AB9-6861-E811-8B5A-6CC2173DC2E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/740CC040-BA61-E811-85BA-6CC2173DBF20.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/10D7A761-FF61-E811-B1A0-6CC2173DA2F0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2C692B2B-3761-E811-85E4-002590DE6E88.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/485C3B46-3961-E811-83DE-0025901D4B0A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4CD7EB55-0961-E811-804D-002590DE6E2E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1401D2E9-0B61-E811-A913-0025904C7DF8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/46075BD6-0D61-E811-B3DA-C45444922C46.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/A058E981-0F61-E811-898C-0CC47A706CDE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/40C7D021-1561-E811-A043-AC1F6B5676C4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/4A211CA6-2261-E811-AE45-AC1F6B567730.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9AEB5026-EF60-E811-9C70-0CC47AC08B24.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A457F25A-3961-E811-8B25-AC1F6B0F757C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D413382C-3B61-E811-A646-AC1F6B0F3A26.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F214568A-0E61-E811-980D-AC1F6B0F3506.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/60573CF8-FF60-E811-9399-AC1F6B0F3506.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/A8AA7B76-1061-E811-A321-002590DE6E78.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D0F79E35-3B61-E811-86D1-AC1F6B567680.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/56A87685-2861-E811-87FC-AC1F6B56768A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D692A011-4461-E811-B49B-0025901D4446.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/8E2EB7C4-2B61-E811-87FD-AC1F6B56768C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3A9E3611-4461-E811-858D-0025904B7FC4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CA528613-4461-E811-9743-002590DE6C96.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/56486B2A-4461-E811-9447-0025904C7DF6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E4647011-4461-E811-900F-0025901D4446.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CC8EECA8-4661-E811-A033-AC1F6B0F39FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F4611CBF-4661-E811-89FC-0CC47A706CDE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/807D01A1-4661-E811-AD22-AC1F6B0F757C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DC7CB06C-4861-E811-8E60-C45444922988.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4EEF6B0C-4A61-E811-A9E7-AC1F6B0F3A26.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/56464D0D-4A61-E811-9CE1-AC1F6B0F39FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C6A33B9B-FB60-E811-896C-0CC47AC08BC8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/8636C414-1A61-E811-AB3A-0CC47A706D26.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9EF7EC6C-4C61-E811-9A8B-C45444922988.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/54080AC8-4E61-E811-A4F4-AC1F6B0F3506.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/20B894D5-F960-E811-8808-002590DE6E3A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/184B1F28-2361-E811-BB2B-0CC47A706FF4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/96A71CE3-2161-E811-91AC-0CC47A703326.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BCDD8EC9-4E61-E811-8588-002590DE6C96.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8020D11A-5061-E811-AEB8-1866DA8F73E2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9CB55224-5061-E811-B6B8-002590DE6E88.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E2015EE1-0461-E811-934E-0CC47A706DC0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/7A303067-1861-E811-87E3-0025904C7A60.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D2039858-5261-E811-AED9-1866DA8F73E2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/047C8661-5661-E811-B612-C45444922BFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E27FED5E-5661-E811-8DEE-AC1F6B0F39FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D40D615C-5661-E811-AABA-AC1F6B0F39FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5E4A0E5C-5661-E811-81CE-AC1F6B0F39FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4A9B73F5-0B61-E811-B354-0CC47AC08C1A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/44B2B82D-5A61-E811-87B3-AC1F6B0F39FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/10AF1F0A-0D61-E811-81A8-0CC47AC08BFA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/AEA433E9-1C61-E811-880C-0025904C7F72.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/68027A78-3461-E811-A54D-002590DE6E92.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/F82A8AA9-1761-E811-A78C-0CC47AC08C1A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/84BE23EB-1C61-E811-84FB-0CC47A706FD6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FCBE93BA-6461-E811-9207-AC1F6B56762A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/909227BA-6461-E811-8B69-C45444922C46.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AE72FFB6-6461-E811-88BB-AC1F6B0F757C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/A2C8240B-F760-E811-845D-002590DE6C96.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A6767985-6661-E811-AA48-AC1F6B0F757C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C468AE9A-6661-E811-8BED-AC1F6B0F3A26.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/18826336-6761-E811-99B1-0CC47A703326.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/429BFC14-3E61-E811-AC52-C45444922C46.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B2068E15-6761-E811-9E58-0025904C7A5A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/589AA2B6-6861-E811-92AE-002590DE6E92.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/587361F2-1C61-E811-956A-0CC47AC08BF8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D09A0FD1-6861-E811-B180-0CC47A706FF4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/46EDE0E6-6861-E811-B0AF-002590DE6E88.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/706B019D-7161-E811-A149-C45444922AFC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7436FA17-0C61-E811-ADB6-0CC47AC08904.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/BE18A200-3661-E811-B9CB-0CC47A706FFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F858F736-7B61-E811-BEB5-0025904B8708.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DE95EA2C-7E61-E811-8ED4-0CC47A706E5E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/EA45EB4C-3361-E811-B08B-0CC47AC08B24.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/EA5BB883-3261-E811-A575-0CC47AC08816.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/48C746E8-8461-E811-839D-AC1F6B567680.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/B2B85433-3561-E811-89D9-C454449229AF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/14183CE2-8761-E811-AA37-AC1F6B56768A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/02F106B6-5461-E811-A579-0CC47AC08BFA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/044960CE-9C61-E811-86F9-AC1F6B0F3506.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/26C31C2C-A561-E811-9FC8-0025904C7FC2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/ACAE03ED-0E61-E811-B6DD-0CC47AC08BF8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/809A1CDE-C661-E811-B518-0025904C7C24.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D0F1C7D2-E361-E811-954C-002590DE6E5C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0C480FC5-E561-E811-BFFC-AC1F6B567730.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0486F41B-E261-E811-BF53-AC1F6B56768A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/089F757E-4062-E811-9E6B-AC1F6B5676C4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A0D1FE97-6962-E811-B3CC-AC1F6B0F3A26.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D6AF8348-EF60-E811-BC34-484D7E8DF0ED.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/805E9F1A-2161-E811-B268-44A842CFC9F3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/EECC0D70-F460-E811-9A8B-6C3BE5B5A088.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/C0028E59-F660-E811-89F7-6C3BE5B5F210.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B0872947-3961-E811-829A-484D7E8DF078.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/DA320EB3-1861-E811-B580-484D7E8DF0AC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9A160B9E-4661-E811-A2F5-484D7E8DF092.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/54E1C25F-4861-E811-B1CA-001CC47D5DA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B2CBF9B5-5461-E811-AF85-001CC47D8D40.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C620934F-0461-E811-B404-6C3BE5B52368.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6AF0107D-6261-E811-A95A-6C3BE5B50170.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/B80D1DB0-1261-E811-8F50-484D7E8DF114.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/12486E0A-7861-E811-A195-B499BAAC09BE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/D60F5AA1-AA61-E811-9A07-001E0BED0560.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/2A0183F8-C661-E811-81A8-44A842CFC9CC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/04AE000A-9262-E811-B93B-44A842CF05B2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D2E2A8B0-FB60-E811-B03D-008CFAF558E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5EB313B2-FB60-E811-BC3C-28924A33B9AA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/20A52955-0261-E811-9581-3417EBE47FE5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0E9DD5EB-0B61-E811-AFFC-28924A33B062.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6C2BD750-0961-E811-AEC8-7CD30AC030B4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/54C5F438-2C61-E811-90D3-0026B9278610.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B69DE8AA-2C61-E811-8629-3417EBE47EBC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1A2E39AC-2C61-E811-9C8D-1CB72C1B6574.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DE2F3CA3-F960-E811-93F8-BC305B390A0B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EC231C6C-3061-E811-9755-1CB72C1B6574.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/ACEA0AC6-1561-E811-9CA4-0023AEEEB703.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/7821B7BA-1261-E811-8405-0026B94DBE24.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/D4ABEF9A-0E61-E811-9704-BC305B390AA7.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/1AF37B04-1D61-E811-A0CF-0026B94DBDA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/8299A1FD-1C61-E811-B3F3-0026B9278692.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/168D163D-2761-E811-AAF9-28924A33AF26.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/66D16F4C-2A61-E811-8F7D-28924A35056E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/6C3A44F3-1C61-E811-A5E6-BC305B390A80.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/1473AF9B-2D61-E811-AA3A-7CD30AC030B4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/C41829BC-3361-E811-9D88-1CB72C1B6CCA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/C6CD8CDD-3861-E811-9A31-1CB72C1B649A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/0800F62D-2461-E811-BF5C-0026B927866B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/16ED77D5-3B61-E811-96A9-0023AEEEB6FA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/92784D7C-3A61-E811-B2C9-009C02AAB554.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D25E7FD2-5E61-E811-868A-1CB72C1B6C4A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B0DC93D5-5E61-E811-8870-28924A38DC1E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D0C0CDD3-5E61-E811-90CD-0023AEEEB208.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/26C6B4D7-5E61-E811-B389-1CB72C1B6C46.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6AA208D2-5E61-E811-ABC2-0023AEEEB538.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F09933D4-5E61-E811-841A-28924A33AFC2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/94CC21D3-5E61-E811-A3B1-0023AEEEB6FA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C4AC27D1-5E61-E811-8BE8-28924A35056E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CE160ED1-5E61-E811-99B3-28924A33BBAA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/06D8917D-6261-E811-A8ED-0023AEEEB226.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/38569373-FC60-E811-8A24-001A649D475D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C6AEA402-1B61-E811-8B1A-001A649D4F21.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B85649B7-2C61-E811-AAE0-001A649D4D89.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EC8F79B0-2C61-E811-A4C1-5CB901E1BCA4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/7E1FE002-1B61-E811-94A6-001A6494A734.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/0A39C59E-2161-E811-8BF9-001A6496579D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/0CED86F2-2861-E811-9D8D-001A649D500D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/4252AFC4-2961-E811-B423-001A649D4DDD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B42AC2FC-F860-E811-B5CF-001A647A94FA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/6E6B11F6-3261-E811-AD6E-001A649D4C0D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B4FEF83B-7261-E811-9619-001A649D4319.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C4E2E73A-7261-E811-A932-001A647A947A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/329CB53B-7261-E811-9784-001A649D4EF9.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6E152972-7261-E811-8804-001A649D4925.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A6D06BFF-7261-E811-8A31-001A649D4319.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D0E4BD4D-9461-E811-A695-001A64100997.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/E0DF6C0C-E362-E811-8407-001A649D4E41.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/70E3151F-2761-E811-964A-FA163E4064D8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/66400C6F-6F61-E811-8466-FA163E1D8326.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/566E2B64-6F61-E811-A0DC-FA163EB6C63A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7CEFE49A-4B61-E811-9385-FA163E9A1F1A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D2C97AC2-7661-E811-81D8-FA163E058622.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3C9B3F8A-5961-E811-9986-FA163E385EBB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/5EE34716-1A61-E811-83B4-FA163E0D6C88.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1EA9AFC1-7661-E811-9892-FA163E07E434.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/F80184DE-1B61-E811-89CF-FA163E9278F5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/1C8684C7-1B61-E811-910C-0242AC110002.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/30B10C81-7C61-E811-9FD3-FA163E5DCB90.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FC2B908E-7C61-E811-9249-FA163EE34B55.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F849B4E1-7C61-E811-8A26-FA163EDE2579.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8A2BB9CC-7D61-E811-A639-FA163E83EFA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F6E11D1D-7E61-E811-8767-FA163EC0DFF4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EC09BB28-8061-E811-A579-02163E012E68.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4C4C5C65-8761-E811-B3BC-FA163E89DED2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9685CC7B-8761-E811-A132-FA163E5DCB90.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/BEDFEE2B-2E61-E811-973F-FA163E109EFD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/220B6553-6F61-E811-96B4-FA163ECEBCC1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AE250A44-6F61-E811-879E-FA163E1668DA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CA05D628-9061-E811-8EAF-FA163E83EFA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D45BFC63-9261-E811-A5E0-FA163ECB670C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DA4AD796-9461-E811-8A9B-FA163E15BE49.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/923E52A1-9561-E811-862B-FA163E306A91.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/543AB706-7761-E811-BF1B-FA163E382F9A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/36294491-9861-E811-B582-FA163E89DED2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/7E8B8672-0563-E811-8718-0CC47AC52D78.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FEBBB9F2-9861-E811-AF40-FA163E14FFF4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A8914577-7C61-E811-BBE7-FA163E014C20.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C8913516-9B61-E811-BFF9-FA163E3B3CCD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F0941BEB-9B61-E811-9645-FA163E7CD7F7.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E845679E-7661-E811-AFCB-FA163EFFD94B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/36BAEB74-7C61-E811-BE52-FA163EFD4DDE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1C2BE81C-9F61-E811-ADDA-FA163EFD5FFC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C0E67F34-9F61-E811-9585-FA163EC53BD6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/467EE042-9F61-E811-AAC2-FA163E4A0B55.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/8C18EC6B-8561-E811-93AE-FA163EF70DE3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7025E1DD-A061-E811-963F-FA163E4A52AF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/4286A6FA-7C61-E811-AD4F-FA163EE2E135.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7CEBFA97-A561-E811-84CD-FA163EA33CE7.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/66EA67C4-A561-E811-A3D5-FA163E3DEF97.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/DC76DDD2-8D61-E811-AB7F-FA163E27D8ED.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/50E21D26-B161-E811-97D3-FA163E14FFF4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0422036E-BD61-E811-A19D-FA163E9A8CBB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/58F9AFF4-C261-E811-90D1-FA163E0C654D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/20903132-8C61-E811-8C57-FA163E2DF940.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/765A424F-C561-E811-B1FF-FA163E77F342.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4C1F766D-AB61-E811-AE0B-FA163E842C05.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DE94B51D-CD61-E811-8264-FA163EBAE630.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/F4F14F48-B861-E811-A7CA-FA163E4D2590.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D8143605-D261-E811-9713-FA163ECD9B21.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B2EC4DEE-D361-E811-8C3D-FA163EA89CE0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6846A93D-D861-E811-82D0-FA163E5BD4D5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/28B1E6C2-E561-E811-B3CF-FA163E976974.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D85FDE9F-FD61-E811-BC05-FA163E2D3D67.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A421B2B8-E261-E811-AF78-FA163E2B148A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AEE0DEE3-D061-E811-91B9-FA163E75284A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/721ACDAE-BF61-E811-B50C-FA163EF70DE3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C8EE7758-1362-E811-810C-FA163E1D8326.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/964A0C02-D961-E811-9CF8-FA163EF87070.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/64AD12E2-1B62-E811-93DE-FA163EDDEBC3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/04F3A488-3462-E811-B232-FA163EF9EB21.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5EB1F4CE-6262-E811-9D85-FA163EE2A16D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/24264C4D-1162-E811-BD36-FA163E28CBC2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9CC622B4-9C62-E811-B081-FA163E099A9A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0046D869-F060-E811-A833-FA163E856E42.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FCAC59E9-F060-E811-AC14-FA163EF059FC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AEEA4C77-EE60-E811-A64A-FA163EFEE82F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6CEB4C77-EE60-E811-88F1-FA163EFEE82F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1E752BF7-EF60-E811-9E0A-FA163E1F41C3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/423DA857-1261-E811-99C5-FA163E8C680A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/80A877EE-EE60-E811-A381-FA163E764E9F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4AD4E174-FE60-E811-AF64-FA163E5349AC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E404957A-1661-E811-A0E0-FA163E2EE035.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7A39D775-F060-E811-A905-FA163EBEBCFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/06B0897D-0161-E811-B8A4-FA163E15BE49.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FC6575DF-0761-E811-A536-FA163E5F2F00.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/22E28A76-F060-E811-A94D-FA163E7E5492.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/708D9D5C-F960-E811-838F-FA163EB4BF49.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/402879B8-1A61-E811-B817-FA163EF73476.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B82D82B4-1A61-E811-91E6-FA163E2666A4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8CD7B5E6-FF60-E811-9E0E-FA163EFB6A40.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/92A92F89-0161-E811-845D-FA163EDDEBC3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AE353F65-0961-E811-81AD-FA163EA33CE7.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BCC40041-1F61-E811-8BE6-FA163E248AF7.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A00B247F-1F61-E811-B336-FA163EB62D85.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A85E5AB1-1F61-E811-B06B-FA163EC53114.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B86D4702-0461-E811-9877-FA163EE566BA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B02A9AB8-0461-E811-B451-FA163EE242AF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4E55D543-0761-E811-8FB9-FA163E9B3E61.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E6A1F494-0C61-E811-B7FC-FA163E92384D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/0E3E29FD-F660-E811-9997-FA163E095FB4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/005629FD-F660-E811-B306-FA163E095FB4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/92D1C223-0661-E811-83AB-FA163E1DAE83.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/44559C1E-0661-E811-9A0F-FA163EE1659E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DC13DE31-0F61-E811-8021-FA163E82CF22.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E46D2575-0E61-E811-B831-FA163EB5A31B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0CB86CCE-2361-E811-A2A6-FA163ED2FA09.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/28847028-F260-E811-AAF1-FA163E268CDF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/7497319E-1061-E811-9D7F-FA163EA2F461.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/9A0C5070-1161-E811-A033-FA163E373CC4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B49D1F5A-2561-E811-BCBD-FA163E73E806.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/90B0296B-2561-E811-8001-FA163E6C430C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FA7A77B8-0561-E811-926A-0242AC110002.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/36DF1D96-1361-E811-B957-FA163E9239E3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6667422C-2861-E811-8DF8-FA163ED6E568.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5CE77124-0D61-E811-81B2-FA163E5C5D07.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C80E4183-2861-E811-9464-FA163E109EFD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B4A11723-2961-E811-B8F0-FA163E109EFD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EEBE976F-2861-E811-A522-FA163E109EFD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F4CA5548-2A61-E811-ADC3-FA163E8006EF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A0D3E238-2A61-E811-B6EC-FA163E8006EF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/346CCC36-2A61-E811-9C66-FA163E585D1E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4C98BB67-2A61-E811-AC63-FA163E771FA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FA130A4F-0761-E811-A2FA-FA163E1E165A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/3CC0E44F-1061-E811-A753-FA163ED6E568.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/38624ABE-2A61-E811-9561-FA163E109EFD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AE8924AE-2C61-E811-AF38-FA163E109EFD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/409BC21C-2C61-E811-BD11-FA163EEE21BE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/826EB3FD-0361-E811-A531-FA163EC53114.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9C856D60-2E61-E811-B97F-FA163E962411.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8C257B68-2E61-E811-85E3-FA163EEBD149.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/523B7880-2E61-E811-864A-FA163E8C680A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/163DD967-1B61-E811-B9C4-FA163E15BE49.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D2CC368F-3161-E811-875B-FA163E089CC6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1A777812-1161-E811-A2F7-FA163EB507C2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/90B85A90-1C61-E811-BA3E-FA163E4B44F5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/926B6CA9-3261-E811-AD4C-FA163EE49D4F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/621976A9-3261-E811-8C4D-FA163ED0F258.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3837C7D2-3261-E811-B678-02163E01A076.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F4037CE7-0361-E811-9D87-FA163E605F3F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CAA70828-0D61-E811-AAAD-FA163EB84B93.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B0BBD566-1161-E811-9E5F-FA163EF059FC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3805E778-3561-E811-A4C5-FA163E43251F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1075950A-3561-E811-86FE-FA163EF5EC59.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7E77D536-3561-E811-BA0F-02163E01A047.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D84C8D9C-0661-E811-8FC1-FA163E3A8FD9.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B2C6F9C1-FD60-E811-9E0F-FA163EB308B9.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/7E27B72B-1D61-E811-AF18-FA163E27D8ED.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/4006E759-2361-E811-8DA3-FA163E6ED8A3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/D4733A64-2361-E811-83EF-FA163EBD2D00.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3A8EB05E-3761-E811-B042-FA163EAA6F31.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B407BB51-3761-E811-A6B9-FA163EAA6F31.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AC55ED83-3761-E811-8EE3-FA163EF5EC59.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1E40189C-0661-E811-AB4B-FA163E7414F7.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/EEF290D3-1E61-E811-ACBD-FA163EE0AA7D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/54C5D9B6-2361-E811-BB52-FA163E3F57D2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/1A0FBF2E-2561-E811-A174-FA163E72BD86.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/027EA618-3961-E811-BC5F-FA163EDDEBC3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F04E221A-3961-E811-A8BF-FA163E764E9F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F06DC70A-3961-E811-BD70-FA163E3FD20C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DA7F4A18-3961-E811-A7FC-FA163E88F8F0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/70F319BA-1361-E811-BD46-FA163E1F41C3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/B03BA0C8-1E61-E811-9FF2-FA163EFB6A40.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/225EF6C0-3B61-E811-B4DB-FA163EDDEBC3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/52C607E0-3B61-E811-BC21-FA163E7FD764.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4E906E5E-3B61-E811-B8C8-FA163E33AA22.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/029A845D-3B61-E811-A9E2-FA163E09B580.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/14AE07BE-3B61-E811-8B0C-FA163E4A853D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/56982948-3B61-E811-9372-FA163EF26B2D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D86F1119-0661-E811-9545-FA163E2DF940.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8E32D505-FB60-E811-816E-FA163E5067E7.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/46BD3E9D-1661-E811-9482-FA163E3A64BD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/24B7F5BD-2061-E811-8833-FA163EDDEBC3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/F0AE919C-2361-E811-8D88-FA163EE566BA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AAF56782-F360-E811-8DC8-001E67396A8B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/66BF839A-F360-E811-8FAA-A4BF0112BD22.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D2EB2F19-0361-E811-A330-A4BF0112BC82.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/48831AAD-1761-E811-A68F-001E67E6F544.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8241AB11-1161-E811-878F-001E67792650.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/14DA22AD-1461-E811-B86D-A4BF0112BCC6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/80CE7CD8-1561-E811-B501-A4BF0112BE14.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/849B8809-3561-E811-B493-001E677923A6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E014C506-3561-E811-8251-A4BF010F104E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DEB95A19-3561-E811-9472-001E67E69879.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DAC93618-3561-E811-9AAB-001E67E69879.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/02F5BAA9-1761-E811-8C8E-001E677923F8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A6849240-3961-E811-BBAC-001E67E33C6A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/9EDF9F59-1A61-E811-B31C-A4BF01125718.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/F4704AE7-1861-E811-A5CD-001E677928DC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5CF5DE5F-3D61-E811-A979-FA163E07A318.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/642DA365-3D61-E811-8469-FA163E89BD5B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D4C65AFE-3D61-E811-AE16-FA163EC707FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/14E4026D-3D61-E811-A583-FA163EB6E169.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/EEF64118-1B61-E811-83D3-FA163E5DCB90.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/182F7AA9-3F61-E811-86A7-FA163E6E7F09.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/30BA94B4-3F61-E811-8B3C-FA163E591599.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E893F490-3F61-E811-8FD6-FA163E6E7F09.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EE48E1B1-3F61-E811-9959-FA163E591599.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CAAC62D8-0C61-E811-9490-FA163E095FB4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/46C8FB71-1A61-E811-9E55-FA163EA0182C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/1ACC6771-1D61-E811-8C0F-FA163E7E5492.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/0E1B80B0-2361-E811-8039-FA163E61E6BA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/50614030-2461-E811-99BD-FA163EC53114.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/0204D72B-2461-E811-A655-FA163E7D4826.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/7E7B5924-2961-E811-9A73-FA163EB80D7A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E2D64E06-4261-E811-817A-FA163E3FE3B6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/52A4C7FF-4161-E811-B957-FA163E537474.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/FE709686-1E61-E811-9E73-FA163E7DCFAB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/8EDA175E-2661-E811-84C3-FA163EF9EB21.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/1280A0FC-2A61-E811-B7A7-FA163E4A03F1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/18859C76-2C61-E811-9429-FA163E5C5D07.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EC144C14-4461-E811-94C4-FA163EC8E165.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7898A311-4461-E811-9A8C-FA163EE95506.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0C074FFF-4361-E811-8009-FA163ECEF674.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/76146E55-1B61-E811-85DA-FA163E0DDC4B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/7035E28D-2B61-E811-824E-FA163E1A0589.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9AC5958B-3D61-E811-BD94-001E67792494.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/202F6685-3D61-E811-8809-001E677923EE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8A7D9A84-3D61-E811-91A4-A4BF0108B532.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9A824C8B-3D61-E811-BB08-001E67E33C6A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/6CDDB1FC-1661-E811-8A9C-001E67E7136D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/14C21C7C-1D61-E811-B4F0-001E67E33C10.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/68B1EADC-4161-E811-B7B3-002590A82B8E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/CADBEF79-1D61-E811-AD19-A4BF01125E5E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/3464C034-2261-E811-9252-A4BF011259E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/102C1D3F-2B61-E811-8A1C-002590A80E08.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/48B073DE-4161-E811-AE76-A4BF01125B70.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AA6C3BE2-4361-E811-B462-A4BF01125B70.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/E8999F2A-2261-E811-B53D-001E67792702.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/DC880D53-2661-E811-A0CE-A4BF0112BC82.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/9A2D459D-2D61-E811-B138-A4BF01158B40.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D2A3A706-4A61-E811-B774-A4BF01125548.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/5ABB4B5F-3061-E811-A897-001E677925D6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/F0F54A01-3261-E811-A857-001E677927B0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/34566719-4A61-E811-892A-001E67E68677.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/52EBC502-4A61-E811-B00A-001E6779257C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E0AC75F1-2E61-E811-9E81-A4BF01125AD0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/988C0794-3561-E811-948A-A4BF01158CF8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4EDF7533-4C61-E811-81B6-001E67C8050C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CC3BE2F6-4B61-E811-85D4-001E6779257C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2E3A9722-4C61-E811-AB3E-001E67E68677.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/38042F2A-4C61-E811-8303-A4BF01125548.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/90152AAC-2E61-E811-B30A-A4BF01159534.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/480CDEEB-6663-E811-AFFF-001E675043AD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/2C11F96E-6263-E811-AD27-801844DEE7F8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/4CB6551D-A262-E811-AF9B-A0369FD0B362.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/CA68878F-3163-E811-A376-A0369FE2C026.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/A4CCECF7-4363-E811-B629-A0369FD0B38E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E652C2D5-2E61-E811-957A-FA163ED6E568.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/34885241-4661-E811-B20B-FA163E8C680A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7888603F-4661-E811-A4AA-FA163EBEBCFE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B4ACD541-4661-E811-BEE9-FA163ECEF674.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5621A655-4661-E811-A468-FA163E3DFCCB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/741B702C-4761-E811-AAB5-FA163E1F7104.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DEDCC96A-4761-E811-9C88-FA163EEA238B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/EE91E448-1B61-E811-9BE3-FA163E9A1F1A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/DAE5B788-2761-E811-AFD0-FA163E79DCB4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A0C79B2D-4761-E811-AE49-FA163EC8E165.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EC1678BF-4761-E811-BCF7-FA163E816F3E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8E5DD385-4761-E811-B952-FA163E43251F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F2E1C035-4961-E811-BA46-FA163E1F7104.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/22B5A156-4961-E811-85BB-FA163E8C680A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/00247450-4961-E811-AF28-FA163E109EFD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/0214D9EF-1B61-E811-AD6C-FA163E802403.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4CC7B452-4961-E811-AA2F-FA163E089CC6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5A516A96-4961-E811-8A31-FA163E1746EB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FE71E993-4961-E811-A41A-FA163E3D488E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3C1381DA-4A61-E811-8F36-FA163EE95506.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DAAC7526-4B61-E811-90E4-FA163E1A0589.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/ECCFD427-2E61-E811-B5F9-FA163E394FFC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E0060AEB-4B61-E811-AD65-FA163EB9CE9F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5C20F202-4D61-E811-AACE-FA163EE11F72.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F467AF4C-4D61-E811-AB83-FA163E7CAD4F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/580C3F19-4D61-E811-9E6F-FA163EAFB047.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/508CB516-2561-E811-88DC-FA163E8C680A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/60C7A6A8-2E61-E811-8EF9-A4BF0112DF50.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/9A076DEF-2E61-E811-8E13-A4BF0112BC3C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/2A636E06-3061-E811-8963-A4BF01159060.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/6CF9E2A9-3061-E811-85EC-001E677925C2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/5609D397-3061-E811-8901-A4BF0112BD6A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/46E2CC70-4E61-E811-A8AF-002590A37120.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7CD00B7C-4E61-E811-8B09-001E67E71B14.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F2541D23-5061-E811-99F8-002590A37120.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/D46EE301-3261-E811-976A-A4BF0112BC7A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/40FC5202-3261-E811-9917-A4BF0112DE3C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/C683954F-3561-E811-909C-A4BF01125D86.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/62FF8B03-3261-E811-A253-A4BF0112BDD6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6407F231-5261-E811-9846-A4BF0115A138.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2AC77929-5261-E811-8BE5-A4BF0115A138.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5A65F331-5261-E811-97B2-A4BF0115A138.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/0633CE4F-3061-E811-BFD5-001E677924BA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/62238479-5461-E811-842E-001E67C8050C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C4C83282-5461-E811-82AE-001E67E6F616.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8A5A2989-5461-E811-A094-001E67E71B14.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C8546C72-5461-E811-A6C1-A4BF0108B0FA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/20006691-3361-E811-A61B-A4BF011588E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/6AF3CD01-3261-E811-82C1-001E67E34165.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FC8E3025-5661-E811-AD1C-001E67E6F616.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B46AFE3B-5661-E811-974C-001E6779257C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/36B6053F-5661-E811-B437-A4BF0108B60A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9449AD3C-5661-E811-AC9B-A4BF0112BD58.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/62264769-5861-E811-9A3D-A4BF0112BCA0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/32DD3026-3561-E811-9444-FA163E0E7AB7.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C23BAF64-4D61-E811-A127-02163E019F44.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DAF02F76-4D61-E811-B118-FA163E814B6A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DED8B7D3-4E61-E811-9660-FA163ECCE6F0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/80255BC9-4E61-E811-B2AE-FA163E862C57.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/820AA9AD-4E61-E811-B3B3-FA163E9340CB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EC0575B3-4E61-E811-AC9E-FA163E417E96.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/F2FFBFE3-2361-E811-AC7D-FA163E771FA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5ED166AF-5061-E811-ABBA-FA163EBE4CE4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/061ED8C4-FD60-E811-A7A7-FA163EE5D78D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/CA05BDF6-3061-E811-B4C8-FA163EE1659E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/56C97F84-3161-E811-9DC3-FA163EC53114.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9C5F5C47-5161-E811-AB1A-FA163E7D2619.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0C7164F3-5261-E811-9BC0-FA163EC53114.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8A1BD9D8-5261-E811-91F2-FA163EA45FDA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/42A1E5C8-1D61-E811-BD0E-FA163E2DF940.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/DC3D748D-2061-E811-8B47-FA163E65673E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E4DF7581-5361-E811-A46D-FA163E6237D8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7C97AE26-5361-E811-AC44-FA163E4E7FD0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/18FB49CB-5461-E811-B268-FA163EDECB26.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FC1F2FE2-5461-E811-AF95-FA163E7D24B5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/96BD5047-3C61-E811-BA18-FA163E72BD86.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8E852589-5661-E811-8CD9-FA163E62FAB2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CAC9FF88-5661-E811-85F9-FA163E0E25F8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/A4F3C0C3-3361-E811-9F88-FA163E0F0F4B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8CAAD7EF-2461-E811-8D20-FA163E680A01.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/28D7D7EF-2461-E811-BA19-FA163E680A01.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/28B24A58-5A61-E811-B92F-001E67E34165.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D804D982-6261-E811-BD2C-001E677927CE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FADD9994-6261-E811-BEFF-001E67E6F869.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/64D794DA-6861-E811-AD95-002590A4FFA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/78847918-7161-E811-B8DB-A4BF0112BCA4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E2AC0218-5161-E811-B3DD-A4BF0112DF50.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DEB5819A-7761-E811-AA47-001E677927CE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/7CEEC022-6161-E811-9B73-A4BF01159268.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F08F4E72-8761-E811-9BFE-A4BF010F104E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/00005DC9-8D61-E811-80FC-001E677925AC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7462383E-D561-E811-9F49-002590A887AC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/C2A96F94-9E61-E811-958D-001E677924BA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B4893D8A-F961-E811-9489-A4BF01125620.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AABD5302-0562-E811-B7C2-001E677923DE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/44CABFDF-2362-E811-AA9C-001E67E71D03.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F6DCCC22-5562-E811-8BBA-A4BF011590D8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9289FD27-7262-E811-89DF-001E677928D4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B421D9EF-2461-E811-9DCB-FA163E680A01.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/A0635430-3161-E811-B144-FA163E650AB7.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/905678AE-1561-E811-B17C-FA163EE11F72.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/3CC73FFD-2861-E811-A25B-FA163E268CDF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/22F56CEA-FF60-E811-8806-FA163EC53301.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/265AB167-6161-E811-B70C-FA163EA83FDB.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CC941145-6161-E811-9B30-FA163E7CF739.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/54416D1E-6161-E811-A732-FA163E072CEE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B095DC1C-6161-E811-BDBE-FA163E0C7D37.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/56623B14-6161-E811-812F-FA163EFA0B3E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7A951042-6161-E811-87D6-FA163E0D11E3.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/020A4912-6161-E811-AEA5-FA163E2FAD1B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BAFA7023-6161-E811-AA0D-FA163E205A29.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8A879529-6161-E811-9D8C-FA163E52F703.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CEA55F52-6161-E811-9297-FA163E8092C9.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1CBECA25-FE60-E811-BED1-FA163EE907F1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F8BF446A-6161-E811-9161-FA163E406A25.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/E20577CB-2061-E811-B319-FA163ECCD816.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/5ACD175E-2661-E811-B004-FA163EF9EB21.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/64C3BB09-3161-E811-BF4D-FA163E268CDF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EE95DE4D-6861-E811-84E9-FA163E5F2F00.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F0A30260-6861-E811-A281-FA163E095FB4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0802785B-6861-E811-8820-FA163EE0AA7D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7C958D66-6861-E811-AAD9-FA163EE6FA77.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/34B9C014-1A61-E811-96E8-FA163E49D8B1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/ECFD167D-1D61-E811-ABC3-FA163E4E6571.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/BEB9D65A-1561-E811-ACF6-FA163E575B8E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D67617F7-5262-E811-AED3-0026B9F8CCAC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/80E6FDA4-E562-E811-8E98-A0369FC52350.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/8E90F028-F560-E811-AEEE-90E2BACBAB00.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/9ACC9527-F560-E811-A2E9-AC1F6B8DBE36.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/98BFEA5F-F460-E811-A6A8-1CB72C0A3DC5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BA314D24-2F61-E811-BB8C-68CC6EA5BE6A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/5677BF17-F760-E811-89B8-0425C5DE7BF2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/DE2A6C79-2A61-E811-A421-34E6D7BEAF01.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E28489E6-2D61-E811-9892-1CB72C0A3DC5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1C24C6CD-6C61-E811-BCAB-C0BFC0E5685E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7A8F9D40-6D61-E811-8B37-90E2BAD1BDF0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4E78E6CC-6C61-E811-A18B-C0BFC0E56826.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/72C3EF44-6D61-E811-95D4-C0BFC0E567FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/62923446-6D61-E811-A6A9-1CB72C0A3D89.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/96D2484A-6D61-E811-8068-0425C5DE7BE6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/18924142-6D61-E811-B3E5-002590FD0F20.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9CB7BE93-7761-E811-AC0C-34E6D7E3879B.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EE083C1C-7E61-E811-963D-002590FD5E80.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A255A11D-8061-E811-8308-C0BFC0E5681E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B2E4221B-8061-E811-A867-1CB72C1B64E2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/901C78D5-8261-E811-B74E-90E2BAD57CD0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/24C2AA37-8761-E811-836F-68CC6EA5BD22.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/2687007F-0F61-E811-8EB9-AC1F6B8DD212.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9EECEE07-8D61-E811-9F17-68B59972BF74.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6A3DC465-0161-E811-9D8A-0425C5DE7BE6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/94A6FBF3-F860-E811-9D82-68CC6EA5BE22.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6CC829B6-AE61-E811-8A7D-90E2BACC5EEC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A44C16B8-AE61-E811-A65D-AC1F6B8DBEC2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F80D80B6-AE61-E811-BFC8-AC1F6B8DD244.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/306CDCB9-AE61-E811-B47C-AC1F6B8DD2A0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AAAA87D4-CB61-E811-9594-90E2BACBAB00.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/4A637736-6861-E811-9439-68CC6EA5BD22.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8214029D-6462-E811-9810-B499BAABCF1A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/90B11DD6-F260-E811-AF4B-001E675043AD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/40C48015-FC60-E811-AA99-001E67580BAC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/326DE0B7-FF60-E811-9E3B-20CF3027A5C5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3C698E63-FF60-E811-BE46-00144F461C52.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8219D346-5461-E811-8C77-901B0E542962.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7EF9F628-0461-E811-8CAF-00144F4525AE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/1AA56E77-F660-E811-AD8E-10BF481A0263.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E892A513-2B61-E811-A3B3-001E6750507D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B6E647BB-6461-E811-8D28-20CF300E9EC2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/22098EE2-6861-E811-B9E1-00259021A076.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/C83588AC-2261-E811-A0EA-001E67504F1D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/62CDF46A-7561-E811-9E73-00259021A4BE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DCA23D82-FD60-E811-93DD-001E6757CD34.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/A8071265-2961-E811-B8E5-901B0E542756.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AAF2F1E6-8461-E811-854E-20CF3019DEEF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/82AE79D6-3361-E811-B4F1-001E675045FD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/14C57B40-2E61-E811-82F8-00259021A3D2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/F8218B6A-D062-E811-B20B-90B11CBCFF68.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/84BAE04E-6763-E811-8DC8-6CC2173C3DD0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/88DBD118-9861-E811-BF6C-00259021A03A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B2FD3AE9-9E61-E811-8EF1-0CC47AFC3C18.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/94DEA98A-A861-E811-BBC0-20CF305B050E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E6A0209F-AE61-E811-BF49-901B0E5427A4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/D674766E-2561-E811-BAEF-001E67504B25.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5E97C20F-B561-E811-BC7E-10BF481A01ED.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D60AFED3-8361-E811-B068-901B0E5427A6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EE311DFF-C761-E811-B6DB-00259021A4C2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/04D3FB0C-D961-E811-9556-001E675050F5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/661932D1-E561-E811-AAB5-0CC47AFC3C98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EA914CD8-E561-E811-BE10-901B0E5427BA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/602DC648-0461-E811-87BD-001E675050F5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C81A353D-EB61-E811-B984-901B0E5427B0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DC485051-F261-E811-8C5F-002590207C08.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E89A2CB4-F561-E811-BFC6-20CF305616D1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/589EC78B-FC60-E811-9BCA-901B0E6459CE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/60A2CA56-FF60-E811-A638-901B0E542974.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/6A52AF7A-0F61-E811-9794-001E6757CD34.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EC324F03-0162-E811-83E9-901B0E5427B0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3AACB127-0362-E811-8298-901B0E5427A6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C4D59D1A-0762-E811-871A-001E67504AA5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/3A6049C2-2761-E811-A16A-001E67504D2D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B4536D35-0962-E811-A550-00259021A262.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2A91E908-0B62-E811-9504-001E67504D2D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/88871B1F-2461-E811-8814-001E6757F1D4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CC54C6D8-0C62-E811-959D-20CF3019DF14.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/E2F83CBA-1E61-E811-9CC2-001E67581344.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/B037962E-2161-E811-BE93-901B0E542804.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FA7962A1-0E62-E811-8A24-001E6750489D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A2A17C6A-1062-E811-A64A-001E6757F1D4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7AA2895A-1262-E811-9B24-001E67580BAC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/8CCF28BD-2761-E811-AC92-001E67581344.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E2934F0C-F760-E811-AA4B-001E675047A5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/269E9AAE-1462-E811-80E6-001E675813C4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7259E8C7-1462-E811-BCB9-901B0E542804.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BE7E08A5-1462-E811-85F8-10BF481A01F1.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/BA16E72B-2161-E811-9352-901B0E6459E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F21D6B25-1862-E811-AACB-901B0E542974.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FA7EB753-0361-E811-AB83-001E67580724.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/087E1A57-0361-E811-80A9-001E67580724.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F4212160-1C62-E811-964E-00259021A4A2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B88870FA-1B62-E811-BF9D-901B0E542962.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8CE2E3E1-F860-E811-8DC7-001E67504A65.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F80D7E5B-0261-E811-9AC7-001E675043AD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2A71C4C7-1D62-E811-A413-901B0E5427A6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/64ABD82F-2E61-E811-BAF5-001E675811CC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/D4278655-1461-E811-B4C0-001E675827DC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/8A9A6E66-2961-E811-8DEF-901B0E6459E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/4EBF0353-1461-E811-B89C-901B0E6459DE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/3C853C2E-1561-E811-A58D-901B0E6459DE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3CC3964A-2362-E811-B75B-901B0E6459DE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/282ABD62-2362-E811-98D9-20CF3027A5AC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BA274974-2362-E811-B0F3-20CF3019DEEF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/1E91E215-2B61-E811-97FC-901B0E542962.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/FE9FAD64-1861-E811-ABEF-001E675827DC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C25276A7-2662-E811-98E5-20CF3019DEEE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A6F8E0D5-2662-E811-BA95-0CC47AFC3C7C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3CB5176A-0061-E811-9512-001E675827BC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/567C135F-2961-E811-A393-901B0E5427BA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/764AEF71-2862-E811-A2C4-001E675827DC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/4AE1DF55-0361-E811-BFF4-001E675827BC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7EDB9283-2A62-E811-B4F2-0CC47AFC3C7C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/449C9C75-2A62-E811-8208-001E675827DC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/5C83D7A3-2261-E811-922F-001E6757E03C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/28356213-2C62-E811-B8A2-001E67580724.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/06F594D7-2D62-E811-9B3F-001E6757E03C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/54A374FB-1561-E811-AF6E-001E675051BD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/C0EAD7FD-1561-E811-99E4-001E67580704.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/5C5C03E6-1C61-E811-92AD-001E6757EAA4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/225C385D-3162-E811-94E0-0CC47AFC3C7C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A2289D56-3162-E811-8A17-20CF3019DEEE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EAECBE5A-3162-E811-B432-001E675051BD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/34A52E62-1861-E811-88AE-001E675051BD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C8AEAAA9-3362-E811-A9D8-001E67504FFD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/08418857-3562-E811-B4B6-0CC47AFC3C9C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/7012A753-1461-E811-AE13-001E67504B25.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5A2F52FB-3662-E811-B570-001E675825D4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C004B3E9-3862-E811-ADEC-001E675050FD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/683F367E-3E62-E811-A75F-001E675050F5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B4FC8771-4062-E811-AAFF-001E675050F5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/78E2812A-2161-E811-98FA-001E675050FD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/10F3147E-3261-E811-A570-001E675047A5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/DA645211-2B61-E811-8A09-001E675051BD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AECD710E-4462-E811-BC74-901B0E5427A4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/AC7F3CEC-4562-E811-B9AB-001E675813C4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4039BE0E-4A62-E811-9B74-00259021A28E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/A0131A44-2061-E811-A1D3-001E67504685.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/585766B1-4B62-E811-A2B9-0CC47AFC3CA6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/86512E33-4D62-E811-93ED-0CC47AFC3CA4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7869E088-4F62-E811-B973-0CC47AFC3C72.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/266F7205-5162-E811-A925-0CC47AFC3C74.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D0F286EE-5262-E811-BA17-901B0E6459DE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7A7AD3ED-5262-E811-A033-001E67504AA5.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/A6917A1F-2461-E811-9AEB-001E67505105.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/B8DD6D5F-2961-E811-98BF-001E675045FD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/26221B12-2B61-E811-BA8D-001E675045FD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7AF55FAD-0561-E811-A988-00259021A3D2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/54AFF325-F760-E811-860D-0CC47AFC3C6E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E0AF4072-5C62-E811-A0D1-901B0E5427B0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/00443D67-5C62-E811-B1E2-001E675050FD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F0BC4407-6062-E811-95B0-001E675045FD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B47B2111-6062-E811-8E65-20CF3019DF10.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/B62D9427-2E61-E811-9E65-001E67505105.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F265E78D-0F61-E811-BFB6-0CC47AFC3C74.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6E4F3703-F960-E811-86CE-0CC47AFC3C7C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2CE2149A-FC60-E811-A855-0CC47AFC3C7C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3AC33B0C-6462-E811-BFCF-901B0E5427BA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7EC2D661-0961-E811-A478-0CC47AFC3C9C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8C2A0B8F-6762-E811-9B43-001E6757F1D4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/E81E7220-1661-E811-9D8B-0CC47AFC3C74.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E88FE6B9-0561-E811-900D-0CC47AFC3C6E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/985D1EB9-0561-E811-B244-0CC47AFC3C98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/94646070-FF60-E811-9C8D-0CC47AFC3CA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/28F08888-6B62-E811-B90A-001E67504255.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D45BCD9D-6D62-E811-A7E5-485B3989725A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/DC4BEF18-1661-E811-83BB-00259021A4C2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EAA40EAB-6F62-E811-B257-901B0E542804.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7AB145B9-6F62-E811-8D0F-0CC47AFC3C9C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D0C92BB5-6F62-E811-ADD2-0CC47AFC3CA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/12B1E3A6-6F62-E811-92F4-001E67581344.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1A18A9CA-7162-E811-9B40-0CC47AFC3C7C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8C0964D4-7162-E811-A18E-0CC47AFC3CA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9EEFF7F2-7162-E811-A3F0-00259021A4C2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/48E2D8ED-7162-E811-ACF7-001E67581344.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/16A91404-7262-E811-BADA-0CC47AFC3CA4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/E0D0742C-2161-E811-8235-20CF300E9EC6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/94E465DD-1661-E811-9FE2-0CC47AFC3C7C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/68D4413E-2061-E811-9965-00259021A04E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/668CCD09-7662-E811-9CFC-20CF3027A5EF.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1E660F36-7662-E811-A95F-001E67581344.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E4C9A039-7662-E811-A230-001E67504C05.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/1815EA79-1461-E811-8629-0CC47AFC3CA2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/48A2FEC8-1661-E811-AB17-00259021A262.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/F27A2EC4-2261-E811-A182-0CC47AFC3C72.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9499DC26-7862-E811-B042-001E675050FD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/EA8A9D28-7862-E811-A4C7-20CF300E9ED0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/D2FE06CA-1261-E811-A8FC-00259021A03A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B2D84CB1-7A62-E811-B648-0CC47AFC3C9A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CE81A799-0F61-E811-9B76-0CC47AFC3C9A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/345052C0-2261-E811-B04E-0CC47AFC3CA0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2230699D-7D62-E811-ACE9-485B398972FC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/06122892-0F61-E811-9CEC-0CC47AFC3C18.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/BEE4EB3D-1561-E811-94C1-0CC47AFC3CA6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/62F9EC31-7F62-E811-BC45-00259021A2AA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8601AB74-7F62-E811-A45E-001E675825D4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/1AAA1B99-1361-E811-A0BF-00259021A53E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D6AA3FB2-8162-E811-B364-00259021A0E2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/584936D0-1661-E811-A181-00259021A53E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9A09AC16-8462-E811-90E9-00259021A0E2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A087A020-8462-E811-985A-001E675827BC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/268DC628-8462-E811-B364-901B0E542962.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5ABF57E1-8362-E811-9BDD-001E67504A65.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D8E52DDA-8362-E811-9B1C-001E675811CC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/748ABF07-8462-E811-834B-00259021A4C2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DEAFA046-8462-E811-84F2-0CC47AFC3C18.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/720A3340-2E61-E811-BDF7-0CC47AFC3CA4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3E2A691F-8662-E811-B175-002590207B90.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/2A28872F-2461-E811-A030-00259021A03A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/F4FD1D6C-2961-E811-AF27-002590207B90.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D227B1CF-8862-E811-9A6E-0CC47AFC3CA4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/5C1D52F5-8862-E811-84A2-00259021A4BE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/38909EE6-8862-E811-875B-0CC47AFC3C7C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/82D7E704-8B62-E811-848C-0CC47AFC3C86.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/60FC2221-8B62-E811-9AC3-002590207D00.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/78782849-2061-E811-B145-00259021A39E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/40151656-8D62-E811-B4B4-0CC47AFC3C86.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/6A928A6D-2961-E811-AC26-00259021A526.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/9C5FFA9B-8F62-E811-A327-0CC47AFC3CA0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/D60264AA-8F62-E811-AC84-0CC47AFC3C86.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/827FC544-2161-E811-95E2-0CC47AFC3D34.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/CC25CBCD-9162-E811-A755-001E67504FFD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/8442730F-9262-E811-99C3-0CC47AFC3C86.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/486F65CB-9362-E811-9835-001E67504FFD.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/0E2600CC-2761-E811-AE28-00259021A53E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/C0C360CB-2761-E811-8B8D-00259021A39E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/FA0E2422-9662-E811-9F3D-0CC47AFC3C98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/6C6D4998-9862-E811-B4CD-901B0E6459CE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/34CD0EFE-9A62-E811-9714-901B0E6459CE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/6E050B60-9D62-E811-8237-20CF3019DF14.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/205FD4A4-A162-E811-A907-001E67504E7D.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/C64BE67F-BD62-E811-8E2E-20CF3027A561.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/68D2FA33-E562-E811-AAA9-141877641381.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/005BB66F-B962-E811-834D-0CC47ABAC11C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/22C197D4-2861-E811-8F40-0025905D1D52.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/C6352CE1-2861-E811-9B3F-0025905C3E66.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/8CEE0943-2961-E811-BE02-0025904C66A4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/BAF1F73B-2A61-E811-92DD-0025904C669E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/E4BB4B13-2E61-E811-BB7F-0CC47AFB7DEC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E2A309F5-4361-E811-801C-0025905D1D62.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/E4D55BF5-1261-E811-9910-0025905C42A6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/625DFB21-4661-E811-8095-0025905C548A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/007BE5B3-2C61-E811-A32B-0025904C51F0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/9ABDAA54-1761-E811-9418-0025905C3E36.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/2AE235D4-2561-E811-A1C7-0CC47AF9B2E6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C449F2F6-4961-E811-A7CE-0025905C5430.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4CD567BC-0561-E811-A466-0025904C4F50.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/BC2A3444-1961-E811-8346-0025905C4264.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F811171F-4C61-E811-982C-0CC47AFB80D4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/8CF9A588-3261-E811-8F60-0025904C6566.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5C925D56-4E61-E811-BEBC-0025904C67B8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/5EE03650-2661-E811-BBA7-0025904C66A2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/54DA9E6F-0E61-E811-BE20-0025904C5DE2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/2648CAE7-2A61-E811-B746-0CC47AFB7DEC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7C3D8166-5461-E811-A056-0025905C53D0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F4B14031-5661-E811-BA83-0025904B7C26.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/7C130A5E-5861-E811-8CA8-0CC47AFB8104.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/60D6B941-1461-E811-BB2B-0025904C6216.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/4834574B-1861-E811-8DDF-0025905C54C6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/FEC7B96D-6261-E811-BEFB-0025904C6216.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0040748F-6661-E811-AD24-0025905D1C56.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/80D77F0C-7161-E811-8248-0CC47AFB7DCC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6CA5700C-7161-E811-A9B7-0025905C2C86.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/30907390-7761-E811-9823-0CC47AF9B1AA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E8FA8D94-7761-E811-AB97-0025905C2CBC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/5C01E73B-6161-E811-A1A8-0025905D1CB2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6A33F3F6-6861-E811-B74B-0025904C66A4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3EB4DEDA-8A61-E811-9D59-0CC47AF9B1AE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2A20D19D-9161-E811-82D8-0CC47AF9B32A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C6420D77-3562-E811-BCCC-0CC47AFB7D80.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/78254D89-4962-E811-9EFD-0025904C4E28.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6A9A52D3-8362-E811-B4C6-0025905C2CE8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/1E65B629-9B62-E811-97F5-0025905C3DF8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/CCED8481-B662-E811-83C6-0CC47A01CAEA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/AC023B52-6763-E811-8412-1866DA890574.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/04DF798F-7B62-E811-A21D-000E1EB004E0.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/E40C9495-BB62-E811-8871-44A842B4B418.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/9090DAB6-BA62-E811-AD1D-44A842BECCBE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/DA6095D8-F062-E811-9E5C-008CFAF5592A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/48BBFB2F-8863-E811-83E1-7CD30AC031E8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B259F4C7-0561-E811-A064-002481FFC02F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CCCD466A-0061-E811-91F0-001E0BC19954.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D6156A16-2F61-E811-A976-00237DF20360.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4C8B1716-0561-E811-80EC-00215E2EB7D2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/26D38F15-F860-E811-AF5A-00215E2EB72A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C40D7D15-0A61-E811-893A-00215E2EB6EE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/0AE03A81-0961-E811-9AC8-001E0BC1E0AC.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4871315C-0461-E811-8A09-001A648F12C2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/161DBCCD-2961-E811-BD2A-002481FFC02F.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4821641E-4B61-E811-BCB1-001A648F1ADA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/E67C4087-4D61-E811-A477-00215E2EAD28.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/52619CDD-5461-E811-BE4D-001A648F1E0E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/9CAF8716-F860-E811-987D-001A648F1E0E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F67C0CED-6061-E811-B65B-001E0BC1EDC6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100003/2CA49E8C-3661-E811-AA79-001A648F1ACA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1ABC62B8-7C61-E811-8F45-001A648F188E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C23518A5-6C62-E811-B675-001A648F153E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B460A03A-8762-E811-A257-FA163EF9EB21.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/5CDB2762-7962-E811-AC41-FA163EEA6866.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/D4D4B4CA-AD62-E811-8045-FA163E3DEF97.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/B205579A-AF62-E811-942B-FA163E058622.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/E4D47991-B262-E811-87E9-FA163E010862.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/345C7A7C-9062-E811-98F1-FA163E8FA556.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/62CD163E-D962-E811-AE7B-FA163EA4A8A7.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/A8FA7F1B-A262-E811-A32A-FA163EED4FF4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/5072E292-AD62-E811-B69B-FA163EEA6866.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/AC84FBDB-AF62-E811-8FD0-FA163EF49A66.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/0624EBAE-4363-E811-B07A-FA163EDB23E2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/88F72539-4263-E811-89BE-FA163EEB71AA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/44A20E17-C062-E811-B164-FA163ECB670C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/6448DF88-4863-E811-8A76-FA163E017139.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/2056EF2D-EF60-E811-AE76-0025904C66A4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B08DDC04-F060-E811-AAC5-0025904C637E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/742EA298-F060-E811-8753-0025904C669E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F4698416-F360-E811-9036-0025905C3E66.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/DCFAD423-F460-E811-81D9-0025905C2CB8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/481DE16E-0E61-E811-A9F6-0025905C4262.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/205B0739-1261-E811-8F67-0025904C678A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/56A9514D-1661-E811-8428-0025904C6788.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B0ED5497-FD60-E811-A710-0025905C2CE8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8A5A6764-1861-E811-A4B3-0025905D1D78.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C4283497-1A61-E811-9123-0025905C42A6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3047D19C-1A61-E811-BED6-0025905C542C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CA7DE995-1A61-E811-80DA-0025904C678A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C0F2C926-0261-E811-BBC5-0025905C5484.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B890F8CE-1C61-E811-A27D-0025905C3DF6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/72DB042F-1F61-E811-A967-0025905D1D62.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F66F20EB-0B61-E811-B4F2-0CC47AF9B2B6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/4CFA6594-0A61-E811-AC02-0025905C2D9A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/1225B17A-0161-E811-9FE9-0CC47AF9B2E6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5643175D-2E61-E811-A84D-0025905C3D6C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8CCA7F42-0061-E811-A1A2-0025905C3DD8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/8A6CA4AF-3261-E811-8F18-0025905C3D98.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/026837FB-0361-E811-ABFC-0025905C3D6A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3AA03F79-FE60-E811-BA44-0CC47AF9B32A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/32C49F76-0261-E811-9935-0025904CF766.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/9C7DCA1B-3761-E811-A4D8-0025905C3DF6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/DAA02B3F-2461-E811-9CEE-0CC47AF9B2B6.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/3626DDF1-3861-E811-A1FC-0025905C542E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/BCFF852A-3961-E811-9E11-0025905D1E02.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F6837C2A-3961-E811-8537-0025905BA736.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C22DA32E-3961-E811-AB0F-0CC47AF9B1AE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/DAB0612A-3961-E811-980C-0025905C53F2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/3E075A26-2661-E811-819E-0CC47AF9B2FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/860D0B21-3B61-E811-93A2-0025904CDDFA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/0E73D9B6-2561-E811-AA7C-0025905C2D9A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/02BEEE82-2861-E811-9678-0025904C637E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/B6F0A476-3D61-E811-BF72-0CC47AFB8104.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/14B06877-3D61-E811-8DF0-0025905C54C4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/A2A6A777-3D61-E811-9B45-0025904C66E8.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/CA5DE078-3D61-E811-8647-0025904C51F2.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/78292277-3D61-E811-B423-0CC47AFB7D7C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/6069B476-3D61-E811-9364-0025905C2D9A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/58AF0079-3D61-E811-8516-0025904C4E28.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/5EDE3C76-3D61-E811-9251-0025905C548A.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C65FFE75-3D61-E811-BC56-0CC47AFB7CF4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/F8BEADDA-FC60-E811-BC0C-0025905C4264.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100001/421BA2F0-0F61-E811-ADA7-0025905C54FE.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/7E3100B2-2561-E811-AC7D-0025904B9B3E.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100002/EA3C55C7-2561-E811-9246-0025904C68DA.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/78D65869-3F61-E811-87C6-0025904C540C.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/92ECA668-3F61-E811-BC10-0CC47AFB7CF4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/D25CF267-3F61-E811-AC79-0025904C6626.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C0952167-3F61-E811-A5B0-0025905C54C4.root', 
            '/store/himc/RunIIpp5Spring18GS/MinBias_TuneCUETP8M1_2017_5p02TeV-pythia8/GEN-SIM/94X_mc2017_realistic_v10For2017G_v3-v2/100000/C4FC17CC-4161-E811-A0F7-0025904C4F50.root' ) ),
        nbPileupEvents = cms.PSet(
            averageNumber = cms.double(2.0)
        ),
        sequential = cms.untracked.bool(False),
        type = cms.string('poisson')
    )
,
    maxBunch = cms.int32(3),
    minBunch = cms.int32(-5),
    mixObjects = cms.PSet(
        mixCH = cms.PSet(
            crossingFrames = cms.untracked.vstring(),
            input = cms.VInputTag(cms.InputTag("g4SimHits","CastorFI"), cms.InputTag("g4SimHits","EcalHitsEB"), cms.InputTag("g4SimHits","EcalHitsEE"), cms.InputTag("g4SimHits","EcalHitsES"), cms.InputTag("g4SimHits","HcalHits"), 
                cms.InputTag("g4SimHits","ZDCHITS")),
            subdets = cms.vstring('CastorFI', 
                'EcalHitsEB', 
                'EcalHitsEE', 
                'EcalHitsES', 
                'HcalHits', 
                'ZDCHITS'),
            type = cms.string('PCaloHit')
        ),
        mixHepMC = cms.PSet(
            input = cms.VInputTag(cms.InputTag("generatorSmeared"), cms.InputTag("generator")),
            makeCrossingFrame = cms.untracked.bool(True),
            type = cms.string('HepMCProduct')
        ),
        mixSH = cms.PSet(
            crossingFrames = cms.untracked.vstring('MuonCSCHits', 
                'MuonDTHits', 
                'MuonRPCHits', 
                'MuonGEMHits'),
            input = cms.VInputTag(cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), 
                cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), 
                cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"), 
                cms.InputTag("g4SimHits","MuonGEMHits")),
            subdets = cms.vstring('MuonCSCHits', 
                'MuonDTHits', 
                'MuonRPCHits', 
                'TrackerHitsPixelBarrelHighTof', 
                'TrackerHitsPixelBarrelLowTof', 
                'TrackerHitsPixelEndcapHighTof', 
                'TrackerHitsPixelEndcapLowTof', 
                'TrackerHitsTECHighTof', 
                'TrackerHitsTECLowTof', 
                'TrackerHitsTIBHighTof', 
                'TrackerHitsTIBLowTof', 
                'TrackerHitsTIDHighTof', 
                'TrackerHitsTIDLowTof', 
                'TrackerHitsTOBHighTof', 
                'TrackerHitsTOBLowTof', 
                'MuonGEMHits'),
            type = cms.string('PSimHit')
        ),
        mixTracks = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits")),
            makeCrossingFrame = cms.untracked.bool(False),
            type = cms.string('SimTrack')
        ),
        mixVertices = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits")),
            makeCrossingFrame = cms.untracked.bool(False),
            type = cms.string('SimVertex')
        )
    ),
    mixProdStep1 = cms.bool(False),
    mixProdStep2 = cms.bool(False),
    playback = cms.untracked.bool(False),
    useCurrentProcessOnly = cms.bool(False)
)


process.omtfStage2Raw = cms.EDProducer("OmtfPacker",
    cscInputLabel = cms.InputTag("simCscTriggerPrimitiveDigis"),
    dtPhInputLabel = cms.InputTag("simTwinMuxDigis"),
    dtThInputLabel = cms.InputTag("simTwinMuxDigis"),
    rpcInputLabel = cms.InputTag("simMuonRPCDigis")
)


process.randomEngineStateProducer = cms.EDProducer("RandomEngineStateProducer")


process.rawDataCollector = cms.EDProducer("RawDataCollectorByLabel",
    RawCollectionList = cms.VInputTag(cms.InputTag("SiStripDigiToRaw"), cms.InputTag("castorRawData"), cms.InputTag("cscpacker","CSCRawData"), cms.InputTag("csctfpacker","CSCTFRawData"), cms.InputTag("dtpacker"), 
        cms.InputTag("dttfpacker"), cms.InputTag("ecalPacker"), cms.InputTag("esDigiToRaw"), cms.InputTag("gctDigiToRaw"), cms.InputTag("hcalRawDataVME"), 
        cms.InputTag("l1GtEvmPack"), cms.InputTag("l1GtPack"), cms.InputTag("rpcpacker"), cms.InputTag("siPixelRawData"), cms.InputTag("hcalRawDatauHTR"), 
        cms.InputTag("caloLayer1RawFed1354"), cms.InputTag("caloLayer1RawFed1356"), cms.InputTag("caloLayer1RawFed1358"), cms.InputTag("bmtfStage2Raw"), cms.InputTag("caloStage2Raw"), 
        cms.InputTag("gmtStage2Raw"), cms.InputTag("gtStage2Raw")),
    verbose = cms.untracked.int32(0)
)


process.rpcpacker = cms.EDProducer("RPCPackingModule",
    InputLabel = cms.InputTag("simMuonRPCDigis")
)


process.siPixelRawData = cms.EDProducer("SiPixelDigiToRaw",
    InputLabel = cms.InputTag("simSiPixelDigis"),
    Timing = cms.untracked.bool(False),
    UsePhase1 = cms.bool(True)
)


process.simBmtfDigis = cms.EDProducer("L1TMuonBarrelTrackProducer",
    DTDigi_Source = cms.InputTag("simTwinMuxDigis"),
    DTDigi_Theta_Source = cms.InputTag("simDtTriggerPrimitiveDigis"),
    Debug = cms.untracked.int32(0)
)


process.simBscDigis = cms.EDProducer("BSCTrigger",
    bitNames = cms.vstring('L1Tech_BSC_minBias_inner_threshold1', 
        'L1Tech_BSC_minBias_inner_threshold2', 
        'L1Tech_BSC_minBias_OR', 
        'L1Tech_BSC_HighMultiplicity', 
        'L1Tech_BSC_halo_beam2_inner', 
        'L1Tech_BSC_halo_beam2_outer', 
        'L1Tech_BSC_halo_beam1_inner', 
        'L1Tech_BSC_halo_beam1_outer', 
        'L1Tech_BSC_minBias_threshold1', 
        'L1Tech_BSC_minBias_threshold2', 
        'L1Tech_BSC_splash_beam1', 
        'L1Tech_BSC_splash_beam2'),
    bitNumbers = cms.vuint32(32, 33, 34, 35, 36, 
        37, 38, 39, 40, 41, 
        42, 43),
    coincidence = cms.double(72.85),
    resolution = cms.double(3.0),
    theHits = cms.InputTag("mix","g4SimHitsBSCHits")
)


process.simCaloStage2Digis = cms.EDProducer("L1TStage2Layer2Producer",
    firmware = cms.int32(1),
    towerToken = cms.InputTag("simCaloStage2Layer1Digis")
)


process.simCaloStage2Layer1Digis = cms.EDProducer("L1TCaloLayer1",
    ecalToken = cms.InputTag("simEcalTriggerPrimitiveDigis"),
    firmwareVersion = cms.int32(3),
    hcalToken = cms.InputTag("simHcalTriggerPrimitiveDigis"),
    unpackEcalMask = cms.bool(False),
    unpackHcalMask = cms.bool(False),
    useCalib = cms.bool(True),
    useECALLUT = cms.bool(True),
    useHCALLUT = cms.bool(True),
    useHFLUT = cms.bool(True),
    useLSB = cms.bool(True),
    verbose = cms.bool(False)
)


process.simCastorTechTrigDigis = cms.EDProducer("CastorTTRecord",
    CastorDigiCollection = cms.InputTag("simCastorDigis"),
    CastorSignalTS = cms.uint32(4),
    TriggerBitNames = cms.vstring('L1Tech_CASTOR_0.v0', 
        'L1Tech_CASTOR_TotalEnergy.v0', 
        'L1Tech_CASTOR_EM.v0', 
        'L1Tech_CASTOR_HaloMuon.v0'),
    TriggerThresholds = cms.vdouble(50, 48000, 1500, 100, 50, 
        65000),
    ttpBits = cms.vuint32(60, 61, 62, 63)
)


process.simCscTriggerPrimitiveDigis = cms.EDProducer("CSCTriggerPrimitivesProducer",
    CSCComparatorDigiProducer = cms.InputTag("simMuonCSCDigis","MuonCSCComparatorDigi"),
    CSCWireDigiProducer = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigi"),
    MaxBX = cms.int32(9),
    MinBX = cms.int32(3),
    alctParam07 = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(4),
        alctGhostCancellationSideQuality = cms.bool(False),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(False),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(4),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    alctParamMTCC = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(3),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctL1aWindowWidth = cms.uint32(3),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(2),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(2),
        alctTrigMode = cms.uint32(2),
        verbosity = cms.int32(0)
    ),
    alctParamOldMC = cms.PSet(
        alctAccelMode = cms.uint32(1),
        alctDriftDelay = cms.uint32(3),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctL1aWindowWidth = cms.uint32(5),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(2),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(2),
        alctTrigMode = cms.uint32(3),
        verbosity = cms.int32(0)
    ),
    alctSLHC = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(1),
        alctGhostCancellationSideQuality = cms.bool(True),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(True),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(0),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    checkBadChambers = cms.bool(False),
    clctParam07 = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctMinSeparation = cms.uint32(10),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(2),
        clctStartBxShift = cms.int32(0),
        verbosity = cms.int32(0)
    ),
    clctParamMTCC = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(6),
        clctMinSeparation = cms.uint32(10),
        clctNplanesHitPattern = cms.uint32(1),
        clctNplanesHitPretrig = cms.uint32(4),
        clctPidThreshPretrig = cms.uint32(2),
        verbosity = cms.int32(0)
    ),
    clctParamOldMC = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(6),
        clctMinSeparation = cms.uint32(10),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(2),
        clctPidThreshPretrig = cms.uint32(2),
        verbosity = cms.int32(0)
    ),
    clctSLHC = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctMinSeparation = cms.uint32(5),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(4),
        clctPretriggerTriggerZone = cms.uint32(5),
        clctStartBxShift = cms.int32(0),
        clctStateMachineZone = cms.uint32(8),
        clctUseCorrectedBx = cms.bool(True),
        useDeadTimeZoning = cms.bool(True),
        useDynamicStateMachineZone = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    commonParam = cms.PSet(
        disableME1a = cms.bool(False),
        disableME42 = cms.bool(False),
        gangedME1a = cms.bool(False),
        isMTCC = cms.bool(False),
        isSLHC = cms.bool(False),
        isTMB07 = cms.bool(True),
        smartME1aME1b = cms.bool(False)
    ),
    debugParameters = cms.bool(True),
    mpcRun2 = cms.PSet(
        dropInvalidStubs = cms.bool(False),
        dropLowQualityStubs = cms.bool(False),
        sortStubs = cms.bool(False)
    ),
    mpcSLHC = cms.PSet(
        dropInvalidStubs = cms.bool(False),
        dropLowQualityStubs = cms.bool(False),
        mpcMaxStubs = cms.uint32(18),
        sortStubs = cms.bool(False)
    ),
    tmbParam = cms.PSet(
        alctTrigEnable = cms.uint32(0),
        clctTrigEnable = cms.uint32(0),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        mpcBlockMe1a = cms.uint32(0),
        tmbDropUsedAlcts = cms.bool(True),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    tmbSLHC = cms.PSet(
        alctTrigEnable = cms.uint32(0),
        clctToAlct = cms.bool(False),
        clctTrigEnable = cms.uint32(0),
        matchEarliestAlctME11Only = cms.bool(False),
        matchEarliestClctME11Only = cms.bool(False),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(3),
        maxME11LCTs = cms.uint32(2),
        mpcBlockMe1a = cms.uint32(0),
        tmbCrossBxAlgorithm = cms.uint32(1),
        tmbDropUsedAlcts = cms.bool(False),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(False),
        verbosity = cms.int32(0)
    )
)


process.simDtTriggerPrimitiveDigis = cms.EDProducer("DTTrigProd",
    DTTFSectorNumbering = cms.bool(True),
    debug = cms.untracked.bool(False),
    digiTag = cms.InputTag("simMuonDTDigis"),
    lutBtic = cms.untracked.int32(31),
    lutDumpFlag = cms.untracked.bool(False)
)


process.simEcalDigis = cms.EDProducer("EcalSelectiveReadoutProducer",
    EBSRPdigiCollection = cms.string('ebDigis'),
    EBSrFlagCollection = cms.string('ebSrFlags'),
    EBdigiCollection = cms.string(''),
    EESRPdigiCollection = cms.string('eeDigis'),
    EESrFlagCollection = cms.string('eeSrFlags'),
    EEdigiCollection = cms.string(''),
    UseFullReadout = cms.bool(False),
    configFromCondDB = cms.bool(True),
    defaultTtf = cms.int32(4),
    digiProducer = cms.string('simEcalUnsuppressedDigis'),
    dumpFlags = cms.untracked.int32(0),
    produceDigis = cms.untracked.bool(True),
    trigPrimBypass = cms.bool(False),
    trigPrimBypassHTH = cms.double(1.0),
    trigPrimBypassLTH = cms.double(1.0),
    trigPrimBypassMode = cms.int32(0),
    trigPrimBypassWithPeakFinder = cms.bool(True),
    trigPrimCollection = cms.string(''),
    trigPrimProducer = cms.string('simEcalTriggerPrimitiveDigis'),
    writeSrFlags = cms.untracked.bool(True)
)


process.simEcalEBTriggerPrimitiveDigis = cms.EDProducer("EcalEBTrigPrimProducer",
    BarrelOnly = cms.bool(True),
    Debug = cms.bool(False),
    Famos = cms.bool(False),
    TcpOutput = cms.bool(False),
    barrelEcalDigis = cms.InputTag("simEcalUnsuppressedDigis"),
    binOfMaximum = cms.int32(6),
    nOfSamples = cms.int32(1)
)


process.simEcalPreshowerDigis = cms.EDProducer("ESZeroSuppressionProducer",
    ESZSdigiCollection = cms.string(''),
    ESdigiCollection = cms.string(''),
    digiProducer = cms.string('simEcalUnsuppressedDigis')
)


process.simEcalTriggerPrimitiveDigis = cms.EDProducer("EcalTrigPrimProducer",
    BarrelOnly = cms.bool(False),
    Debug = cms.bool(False),
    Famos = cms.bool(False),
    InstanceEB = cms.string(''),
    InstanceEE = cms.string(''),
    Label = cms.string('simEcalUnsuppressedDigis'),
    TcpOutput = cms.bool(False),
    binOfMaximum = cms.int32(6)
)


process.simEmtfDigis = cms.EDProducer("L1TMuonEndCapTrackProducer",
    BXWindow = cms.int32(3),
    CSCEnable = cms.bool(True),
    CSCInput = cms.InputTag("simCscTriggerPrimitiveDigis","MPCSORTED"),
    CSCInputBXShift = cms.int32(-6),
    GEMEnable = cms.bool(False),
    GEMInput = cms.InputTag("simMuonGEMPadDigis"),
    GEMInputBXShift = cms.int32(0),
    MaxBX = cms.int32(3),
    MinBX = cms.int32(-3),
    RPCEnable = cms.bool(True),
    RPCInput = cms.InputTag("simMuonRPCDigis"),
    RPCInputBXShift = cms.int32(0),
    spGCParams16 = cms.PSet(
        BugSameSectorPt0 = cms.bool(False),
        MaxRoadsPerZone = cms.int32(3),
        MaxTracks = cms.int32(3),
        UseSecondEarliest = cms.bool(True)
    ),
    spPAParams16 = cms.PSet(
        Bug9BitDPhi = cms.bool(False),
        BugGMTPhi = cms.bool(False),
        BugMode7CLCT = cms.bool(False),
        BugNegPt = cms.bool(False),
        FixMode15HighPt = cms.bool(True),
        PromoteMode7 = cms.bool(True),
        PtLUTVersion = cms.int32(7),
        ReadPtLUTFile = cms.bool(False)
    ),
    spPCParams16 = cms.PSet(
        DuplicateTheta = cms.bool(True),
        FixME11Edges = cms.bool(True),
        FixZonePhi = cms.bool(True),
        IncludeNeighbor = cms.bool(True),
        UseNewZones = cms.bool(False),
        ZoneBoundaries = cms.vint32(0, 41, 49, 87, 127),
        ZoneOverlap = cms.int32(2)
    ),
    spPRParams16 = cms.PSet(
        PatternDefinitions = cms.vstring('4,15:15,7:7,7:7,7:7', 
            '3,16:16,7:7,7:6,7:6', 
            '3,14:14,7:7,8:7,8:7', 
            '2,18:17,7:7,7:5,7:5', 
            '2,13:12,7:7,10:7,10:7', 
            '1,22:19,7:7,7:0,7:0', 
            '1,11:8,7:7,14:7,14:7', 
            '0,30:23,7:7,7:0,7:0', 
            '0,7:0,7:7,14:7,14:7'),
        SymPatternDefinitions = cms.vstring('4,15:15:15:15,7:7:7:7,7:7:7:7,7:7:7:7', 
            '3,16:16:14:14,7:7:7:7,8:7:7:6,8:7:7:6', 
            '2,18:17:13:12,7:7:7:7,10:7:7:4,10:7:7:4', 
            '1,22:19:11:8,7:7:7:7,14:7:7:0,14:7:7:0', 
            '0,30:23:7:0,7:7:7:7,14:7:7:0,14:7:7:0'),
        UseSymmetricalPatterns = cms.bool(True)
    ),
    spTBParams16 = cms.PSet(
        BugME11Dupes = cms.bool(False),
        BugSt2PhDiff = cms.bool(False),
        ThetaWindow = cms.int32(8),
        ThetaWindowRPC = cms.int32(8),
        UseSingleHits = cms.bool(False)
    ),
    verbosity = cms.untracked.int32(0)
)


process.simEmtfDigisData = cms.EDProducer("L1TMuonEndCapTrackProducer",
    BXWindow = cms.int32(3),
    CSCEnable = cms.bool(True),
    CSCInput = cms.InputTag("emtfStage2Digis"),
    CSCInputBXShift = cms.int32(-6),
    GEMEnable = cms.bool(False),
    GEMInput = cms.InputTag("muonGEMPadDigis"),
    GEMInputBXShift = cms.int32(0),
    MaxBX = cms.int32(3),
    MinBX = cms.int32(-3),
    RPCEnable = cms.bool(True),
    RPCInput = cms.InputTag("muonRPCDigis"),
    RPCInputBXShift = cms.int32(0),
    spGCParams16 = cms.PSet(
        BugSameSectorPt0 = cms.bool(False),
        MaxRoadsPerZone = cms.int32(3),
        MaxTracks = cms.int32(3),
        UseSecondEarliest = cms.bool(True)
    ),
    spPAParams16 = cms.PSet(
        Bug9BitDPhi = cms.bool(False),
        BugGMTPhi = cms.bool(False),
        BugMode7CLCT = cms.bool(False),
        BugNegPt = cms.bool(False),
        FixMode15HighPt = cms.bool(True),
        PromoteMode7 = cms.bool(True),
        PtLUTVersion = cms.int32(7),
        ReadPtLUTFile = cms.bool(False)
    ),
    spPCParams16 = cms.PSet(
        DuplicateTheta = cms.bool(True),
        FixME11Edges = cms.bool(True),
        FixZonePhi = cms.bool(True),
        IncludeNeighbor = cms.bool(True),
        UseNewZones = cms.bool(False),
        ZoneBoundaries = cms.vint32(0, 41, 49, 87, 127),
        ZoneOverlap = cms.int32(2)
    ),
    spPRParams16 = cms.PSet(
        PatternDefinitions = cms.vstring('4,15:15,7:7,7:7,7:7', 
            '3,16:16,7:7,7:6,7:6', 
            '3,14:14,7:7,8:7,8:7', 
            '2,18:17,7:7,7:5,7:5', 
            '2,13:12,7:7,10:7,10:7', 
            '1,22:19,7:7,7:0,7:0', 
            '1,11:8,7:7,14:7,14:7', 
            '0,30:23,7:7,7:0,7:0', 
            '0,7:0,7:7,14:7,14:7'),
        SymPatternDefinitions = cms.vstring('4,15:15:15:15,7:7:7:7,7:7:7:7,7:7:7:7', 
            '3,16:16:14:14,7:7:7:7,8:7:7:6,8:7:7:6', 
            '2,18:17:13:12,7:7:7:7,10:7:7:4,10:7:7:4', 
            '1,22:19:11:8,7:7:7:7,14:7:7:0,14:7:7:0', 
            '0,30:23:7:0,7:7:7:7,14:7:7:0,14:7:7:0'),
        UseSymmetricalPatterns = cms.bool(True)
    ),
    spTBParams16 = cms.PSet(
        BugME11Dupes = cms.bool(False),
        BugSt2PhDiff = cms.bool(False),
        ThetaWindow = cms.int32(8),
        ThetaWindowRPC = cms.int32(8),
        UseSingleHits = cms.bool(False)
    ),
    verbosity = cms.untracked.int32(0)
)


process.simEmtfDigisMC = cms.EDProducer("L1TMuonEndCapTrackProducer",
    BXWindow = cms.int32(3),
    CSCEnable = cms.bool(True),
    CSCInput = cms.InputTag("simCscTriggerPrimitiveDigis","MPCSORTED"),
    CSCInputBXShift = cms.int32(-6),
    GEMEnable = cms.bool(False),
    GEMInput = cms.InputTag("simMuonGEMPadDigis"),
    GEMInputBXShift = cms.int32(0),
    MaxBX = cms.int32(3),
    MinBX = cms.int32(-3),
    RPCEnable = cms.bool(True),
    RPCInput = cms.InputTag("simMuonRPCDigis"),
    RPCInputBXShift = cms.int32(0),
    spGCParams16 = cms.PSet(
        BugSameSectorPt0 = cms.bool(False),
        MaxRoadsPerZone = cms.int32(3),
        MaxTracks = cms.int32(3),
        UseSecondEarliest = cms.bool(True)
    ),
    spPAParams16 = cms.PSet(
        Bug9BitDPhi = cms.bool(False),
        BugGMTPhi = cms.bool(False),
        BugMode7CLCT = cms.bool(False),
        BugNegPt = cms.bool(False),
        FixMode15HighPt = cms.bool(True),
        PromoteMode7 = cms.bool(True),
        PtLUTVersion = cms.int32(7),
        ReadPtLUTFile = cms.bool(False)
    ),
    spPCParams16 = cms.PSet(
        DuplicateTheta = cms.bool(True),
        FixME11Edges = cms.bool(True),
        FixZonePhi = cms.bool(True),
        IncludeNeighbor = cms.bool(True),
        UseNewZones = cms.bool(False),
        ZoneBoundaries = cms.vint32(0, 41, 49, 87, 127),
        ZoneOverlap = cms.int32(2)
    ),
    spPRParams16 = cms.PSet(
        PatternDefinitions = cms.vstring('4,15:15,7:7,7:7,7:7', 
            '3,16:16,7:7,7:6,7:6', 
            '3,14:14,7:7,8:7,8:7', 
            '2,18:17,7:7,7:5,7:5', 
            '2,13:12,7:7,10:7,10:7', 
            '1,22:19,7:7,7:0,7:0', 
            '1,11:8,7:7,14:7,14:7', 
            '0,30:23,7:7,7:0,7:0', 
            '0,7:0,7:7,14:7,14:7'),
        SymPatternDefinitions = cms.vstring('4,15:15:15:15,7:7:7:7,7:7:7:7,7:7:7:7', 
            '3,16:16:14:14,7:7:7:7,8:7:7:6,8:7:7:6', 
            '2,18:17:13:12,7:7:7:7,10:7:7:4,10:7:7:4', 
            '1,22:19:11:8,7:7:7:7,14:7:7:0,14:7:7:0', 
            '0,30:23:7:0,7:7:7:7,14:7:7:0,14:7:7:0'),
        UseSymmetricalPatterns = cms.bool(True)
    ),
    spTBParams16 = cms.PSet(
        BugME11Dupes = cms.bool(False),
        BugSt2PhDiff = cms.bool(False),
        ThetaWindow = cms.int32(8),
        ThetaWindowRPC = cms.int32(8),
        UseSingleHits = cms.bool(False)
    ),
    verbosity = cms.untracked.int32(0)
)


process.simGmtCaloSumDigis = cms.EDProducer("L1TMuonCaloSumProducer",
    caloStage2Layer2Label = cms.InputTag("simCaloStage2Layer1Digis")
)


process.simGmtStage2Digis = cms.EDProducer("L1TMuonProducer",
    autoBxRange = cms.bool(True),
    barrelTFInput = cms.InputTag("simBmtfDigis","BMTF"),
    bxMax = cms.int32(2),
    bxMin = cms.int32(-2),
    forwardTFInput = cms.InputTag("simEmtfDigis","EMTF"),
    overlapTFInput = cms.InputTag("simOmtfDigis","OMTF"),
    triggerTowerInput = cms.InputTag("simGmtCaloSumDigis","TriggerTowerSums")
)


process.simGtExtFakeStage2Digis = cms.EDProducer("L1TExtCondProducer",
    bxFirst = cms.int32(-2),
    bxLast = cms.int32(2),
    setBptxAND = cms.bool(True),
    setBptxMinus = cms.bool(True),
    setBptxOR = cms.bool(True),
    setBptxPlus = cms.bool(True)
)


process.simGtStage2Digis = cms.EDProducer("L1TGlobalProducer",
    AlgorithmTriggersUnmasked = cms.bool(True),
    AlgorithmTriggersUnprescaled = cms.bool(True),
    EGammaInputTag = cms.InputTag("simCaloStage2Digis"),
    EtSumInputTag = cms.InputTag("simCaloStage2Digis"),
    ExtInputTag = cms.InputTag("simGtExtFakeStage2Digis"),
    JetInputTag = cms.InputTag("simCaloStage2Digis"),
    MuonInputTag = cms.InputTag("simGmtStage2Digis"),
    TauInputTag = cms.InputTag("simCaloStage2Digis")
)


process.simHcalDigis = cms.EDProducer("HcalRealisticZS",
    HBlevel = cms.int32(8),
    HBregion = cms.vint32(3, 6),
    HElevel = cms.int32(9),
    HEregion = cms.vint32(3, 6),
    HFlevel = cms.int32(-9999),
    HFregion = cms.vint32(1, 2),
    HOlevel = cms.int32(24),
    HOregion = cms.vint32(1, 8),
    digiLabel = cms.string('simHcalUnsuppressedDigis'),
    markAndPass = cms.bool(False),
    useConfigZSvalues = cms.int32(0)
)


process.simHcalTTPDigis = cms.EDProducer("HcalTTPDigiProducer",
    HFDigiCollection = cms.InputTag("simHcalDigis"),
    HFSoI = cms.int32(4),
    defTT10 = cms.string('hits>=3:hfp>=1:hfm>=1'),
    defTT8 = cms.string('hits>=2'),
    defTT9 = cms.string('hits>=2:hfp>=1:hfm>=1'),
    defTTLocal = cms.string('hits>=4'),
    fwAlgorithm = cms.int32(1),
    iEtaMax = cms.int32(41),
    iEtaMin = cms.int32(33),
    id = cms.untracked.int32(101),
    maskedChannels = cms.vuint32(),
    presamples = cms.int32(2),
    samples = cms.int32(5),
    threshold = cms.uint32(2)
)


process.simHcalTechTrigDigis = cms.EDProducer("HcalTTPTriggerRecord",
    ttpBitNames = cms.vstring('L1Tech_HCAL_HF_MM_or_PP_or_PM.v0', 
        'L1Tech_HCAL_HF_coincidence_PM.v1', 
        'L1Tech_HCAL_HF_MMP_or_MPP.v0'),
    ttpBits = cms.vuint32(8, 9, 10),
    ttpDigiCollection = cms.InputTag("simHcalTTPDigis")
)


process.simHcalTriggerPrimitiveDigis = cms.EDProducer("HcalTrigPrimDigiProducer",
    FG_HF_threshold = cms.uint32(17),
    FG_threshold = cms.uint32(12),
    FrontEndFormatError = cms.bool(False),
    HFTPScaleShift = cms.PSet(
        NCT = cms.int32(2),
        RCT = cms.int32(3)
    ),
    InputTagFEDRaw = cms.InputTag("rawDataCollector"),
    LSConfig = cms.untracked.PSet(
        HcalFeatureHFEMBit = cms.bool(False),
        Long_Short_Offset = cms.double(10.1),
        Long_vrs_Short_Slope = cms.double(100.2),
        Min_Long_Energy = cms.double(10),
        Min_Short_Energy = cms.double(10)
    ),
    MinSignalThreshold = cms.uint32(0),
    PMTNoiseThreshold = cms.uint32(0),
    PeakFinderAlgorithm = cms.int32(2),
    RunZS = cms.bool(False),
    ZS_threshold = cms.uint32(1),
    inputLabel = cms.VInputTag(cms.InputTag("simHcalUnsuppressedDigis"), cms.InputTag("simHcalUnsuppressedDigis")),
    inputUpgradeLabel = cms.VInputTag(cms.InputTag("simHcalUnsuppressedDigis","HBHEQIE11DigiCollection"), cms.InputTag("simHcalUnsuppressedDigis","HFQIE10DigiCollection")),
    latency = cms.int32(1),
    numberOfPresamples = cms.int32(2),
    numberOfPresamplesHF = cms.int32(1),
    numberOfSamples = cms.int32(4),
    numberOfSamplesHF = cms.int32(2),
    peakFilter = cms.bool(True),
    upgradeHB = cms.bool(False),
    upgradeHE = cms.bool(True),
    upgradeHF = cms.bool(True),
    weights = cms.vdouble(1.0, 1.0)
)


process.simMuonCSCDigis = cms.EDProducer("CSCDigiProducer",
    GeometryType = cms.string('idealForDigi'),
    InputCollection = cms.string('g4SimHitsMuonCSCHits'),
    digitizeBadChambers = cms.bool(False),
    doNeutrons = cms.bool(False),
    dumpGasCollisions = cms.untracked.bool(False),
    layersNeeded = cms.uint32(3),
    mixLabel = cms.string('mix'),
    stripConditions = cms.string('Database'),
    strips = cms.PSet(
        CSCUseGasGainCorrections = cms.bool(False),
        CSCUseTimingCorrections = cms.bool(False),
        ampGainSigma = cms.double(0.03),
        bunchTimingOffsets = cms.vdouble(0.0, 37.53, 37.66, 55.4, 48.2, 
            54.45, 53.78, 53.38, 54.12, 51.98, 
            51.28),
        capacativeCrosstalk = cms.double(35.0),
        comparatorSamplingTime = cms.double(25.0),
        comparatorTimeBinOffset = cms.double(3.0),
        comparatorTimeOffset = cms.double(15.0),
        doCorrelatedNoise = cms.bool(True),
        doCrosstalk = cms.bool(True),
        doNoise = cms.bool(True),
        doSuppression = cms.bool(False),
        gain = cms.double(2.0),
        gainsConstant = cms.double(0.27),
        me11gain = cms.double(4.0),
        nScaBins = cms.int32(8),
        peakTimeSigma = cms.double(3.0),
        pedestal = cms.double(600.0),
        pedestalSigma = cms.double(1.5),
        readBadChambers = cms.bool(True),
        readBadChannels = cms.bool(False),
        resistiveCrosstalkScaling = cms.double(1.8),
        samplingTime = cms.double(25.0),
        scaPeakBin = cms.int32(5),
        scaTimingOffsets = cms.vdouble(0.0, 10.0, 10.0, 0.0, 0.0, 
            0.0, 0.0, 0.0, 0.0, 0.0, 
            0.0),
        shapingTime = cms.int32(100),
        signalSpeed = cms.vdouble(0.0, -78, -76, -188, -262, 
            -97, -99, -90, -99, -99, 
            -113),
        signalStartTime = cms.double(-250.0),
        signalStopTime = cms.double(500.0),
        tailShaping = cms.int32(2),
        timeBitForBxZero = cms.int32(6),
        timingCalibrationError = cms.vdouble(0.0, 4.2, 4.2, 0.0, 0.0, 
            0.0, 0.0, 0.0, 0.0, 0.0, 
            0.0)
    ),
    wires = cms.PSet(
        bunchTimingOffsets = cms.vdouble(0.0, 22.88, 22.55, 29.28, 30.0, 
            30.0, 30.5, 31.0, 29.5, 29.1, 
            29.88),
        doNoise = cms.bool(True),
        peakTimeSigma = cms.double(0.0),
        readBadChannels = cms.bool(False),
        samplingTime = cms.double(5.0),
        shapingTime = cms.int32(30),
        signalSpeed = cms.vdouble(0.0, -700, 900, 160, 146, 
            148, 117, 131, 107, 123, 
            123),
        signalStartTime = cms.double(-200.0),
        signalStopTime = cms.double(300.0),
        tailShaping = cms.int32(2),
        timeBitForBxZero = cms.int32(6),
        timingCalibrationError = cms.vdouble(0.0, 6.2, 6.2, 0.0, 0.0, 
            0.0, 0.0, 0.0, 0.0, 0.0, 
            0.0)
    )
)


process.simMuonDTDigis = cms.EDProducer("DTDigitizer",
    GeometryType = cms.string('idealForDigi'),
    IdealModel = cms.bool(False),
    IdealModelConstantDriftVelocity = cms.double(0.0055),
    InputCollection = cms.string('g4SimHitsMuonDTHits'),
    LinksTimeWindow = cms.double(10.0),
    MultipleLinks = cms.bool(True),
    Smearing = cms.double(2.4),
    SyncName = cms.string('DTDigiSyncTOFCorr'),
    deadTime = cms.double(150.0),
    debug = cms.untracked.bool(False),
    interpolate = cms.bool(True),
    mixLabel = cms.string('mix'),
    onlyMuHits = cms.bool(False),
    pset = cms.PSet(
        TOFCorrection = cms.int32(3),
        offset = cms.double(500.0)
    ),
    vPropWire = cms.double(24.4)
)


process.simMuonGEMDigis = cms.EDProducer("GEMDigiProducer",
    GE11ElecBkgParam0 = cms.double(406.249),
    GE11ElecBkgParam1 = cms.double(-2.90939),
    GE11ElecBkgParam2 = cms.double(0.00548191),
    GE11ModNeuBkgParam0 = cms.double(5710.23),
    GE11ModNeuBkgParam1 = cms.double(-43.3928),
    GE11ModNeuBkgParam2 = cms.double(0.0863681),
    GE21ElecBkgParam0 = cms.double(97.0505),
    GE21ElecBkgParam1 = cms.double(-0.452612),
    GE21ElecBkgParam2 = cms.double(0.000550599),
    GE21ModNeuBkgParam0 = cms.double(1440.44),
    GE21ModNeuBkgParam1 = cms.double(-7.48607),
    GE21ModNeuBkgParam2 = cms.double(0.0103078),
    averageEfficiency = cms.double(0.98),
    averageNoiseRate = cms.double(0.001),
    averageShapingTime = cms.double(50.0),
    bxwidth = cms.int32(25),
    digiModelString = cms.string('Simple'),
    digitizeOnlyMuons = cms.bool(False),
    doBkgNoise = cms.bool(False),
    doNoiseCLS = cms.bool(True),
    fixedRollRadius = cms.bool(True),
    inputCollection = cms.string('g4SimHitsMuonGEMHits'),
    instLumi = cms.double(7.5),
    maxBunch = cms.int32(3),
    minBunch = cms.int32(-5),
    mixLabel = cms.string('mix'),
    rateFact = cms.double(1.0),
    referenceInstLumi = cms.double(5.0),
    signalPropagationSpeed = cms.double(0.66),
    simulateElectronBkg = cms.bool(True),
    simulateIntrinsicNoise = cms.bool(False),
    timeJitter = cms.double(1.0),
    timeResolution = cms.double(5)
)


process.simMuonGEMPadDigiClusters = cms.EDProducer("GEMPadDigiClusterProducer",
    InputCollection = cms.InputTag("simMuonGEMPadDigis"),
    maxClusterSize = cms.uint32(8),
    maxClusters = cms.uint32(8)
)


process.simMuonGEMPadDigis = cms.EDProducer("GEMPadDigiProducer",
    InputCollection = cms.InputTag("simMuonGEMDigis")
)


process.simMuonME0Digis = cms.EDProducer("ME0DigiProducer",
    ME0ElecBkgParam0 = cms.double(0.00171409),
    ME0ElecBkgParam1 = cms.double(4900.56),
    ME0ElecBkgParam2 = cms.double(710909),
    ME0ElecBkgParam3 = cms.double(-4327.25),
    ME0NeuBkgParam0 = cms.double(0.00386257),
    ME0NeuBkgParam1 = cms.double(6344.65),
    ME0NeuBkgParam2 = cms.double(16627700),
    ME0NeuBkgParam3 = cms.double(-102098),
    averageEfficiency = cms.double(0.98),
    averageNoiseRate = cms.double(0.001),
    averageShapingTime = cms.double(50.0),
    bxwidth = cms.int32(25),
    digiModelString = cms.string('Simple'),
    digitizeOnlyMuons = cms.bool(False),
    doBkgNoise = cms.bool(False),
    doNoiseCLS = cms.bool(True),
    fixedRollRadius = cms.bool(True),
    inputCollection = cms.string('g4SimHitsMuonME0Hits'),
    instLumi = cms.double(7.5),
    maxBunch = cms.int32(3),
    minBunch = cms.int32(-5),
    mixLabel = cms.string('mix'),
    rateFact = cms.double(1.0),
    referenceInstLumi = cms.double(5.0),
    signalPropagationSpeed = cms.double(0.66),
    simulateElectronBkg = cms.bool(True),
    simulateIntrinsicNoise = cms.bool(False),
    timeJitter = cms.double(1.0),
    timeResolution = cms.double(5)
)


process.simMuonME0PadDigiClusters = cms.EDProducer("ME0PadDigiClusterProducer",
    InputCollection = cms.InputTag("simMuonME0PadDigis"),
    maxClusterSize = cms.uint32(8),
    maxClusters = cms.uint32(8)
)


process.simMuonME0PadDigis = cms.EDProducer("ME0PadDigiProducer",
    InputCollection = cms.InputTag("simMuonME0Digis")
)


process.simMuonME0PseudoDigis = cms.EDProducer("ME0DigiPreRecoProducer",
    averageEfficiency = cms.double(0.98),
    constantPhiSpatialResolution = cms.bool(True),
    digiPreRecoModelString = cms.string('PreRecoGaussian'),
    digitizeOnlyMuons = cms.bool(False),
    etaError = cms.double(0.001),
    etaResolution = cms.double(0.0),
    gaussianSmearing = cms.bool(True),
    inputCollection = cms.string('g4SimHitsMuonME0Hits'),
    instLumi = cms.double(7.5),
    maxBunch = cms.int32(3),
    minBunch = cms.int32(-5),
    mixLabel = cms.string('mix'),
    phiError = cms.double(0.001),
    phiResolution = cms.double(0.0),
    rateFact = cms.double(1.0),
    referenceInstLumi = cms.double(5.0),
    simulateElectronBkg = cms.bool(False),
    simulateNeutralBkg = cms.bool(False),
    timeResolution = cms.double(0.0),
    useCorrelation = cms.bool(False),
    useEtaProjectiveGEO = cms.bool(False)
)


process.simMuonME0PseudoReDigis = cms.EDProducer("ME0ReDigiProducer",
    inputCollection = cms.string('simMuonME0PseudoDigis'),
    layerReadout = cms.vint32(1, 1, 1, 1, 1, 
        1),
    maxBXReadout = cms.int32(1),
    mergeDigis = cms.bool(True),
    minBXReadout = cms.int32(-1),
    neutronAcceptance = cms.double(2.0),
    numberOfPartitions = cms.uint32(8),
    numberOfStrips = cms.uint32(384),
    timeResolution = cms.double(5),
    useCusGeoFor1PartGeo = cms.bool(True),
    usePads = cms.bool(False)
)


process.simMuonME0PseudoReDigisCoarse = cms.EDProducer("ME0ReDigiProducer",
    inputCollection = cms.string('simMuonME0PseudoDigis'),
    layerReadout = cms.vint32(1, 1, 1, 1, 1, 
        1),
    maxBXReadout = cms.int32(1),
    mergeDigis = cms.bool(True),
    minBXReadout = cms.int32(-1),
    neutronAcceptance = cms.double(2.0),
    numberOfPartitions = cms.uint32(8),
    numberOfStrips = cms.uint32(384),
    timeResolution = cms.double(5),
    useCusGeoFor1PartGeo = cms.bool(True),
    usePads = cms.bool(True)
)


process.simMuonRPCDigis = cms.EDProducer("RPCDigiProducer",
    InputCollection = cms.string('g4SimHitsMuonRPCHits'),
    Noise = cms.bool(True),
    Signal = cms.bool(True),
    digiModel = cms.string('RPCSimAsymmetricCls'),
    digiModelConfig = cms.PSet(
        BX_range = cms.int32(5),
        Frate = cms.double(1.0),
        Gate = cms.double(25.0),
        IRPC_electronics_jitter = cms.double(0.025),
        IRPC_time_resolution = cms.double(0.1),
        Nbxing = cms.int32(9),
        Rate = cms.double(0.0),
        averageClusterSize = cms.double(1.5),
        averageEfficiency = cms.double(0.95),
        cosmics = cms.bool(False),
        deltatimeAdjacentStrip = cms.double(3.0),
        digitizeElectrons = cms.bool(False),
        linkGateWidth = cms.double(20.0),
        printOutDigitizer = cms.bool(False),
        signalPropagationSpeed = cms.double(0.66),
        timeJitter = cms.double(1.0),
        timeResolution = cms.double(2.5),
        timingRPCOffset = cms.double(50.0)
    ),
    doBkgNoise = cms.bool(True),
    mixLabel = cms.string('mix')
)


process.simOmtfDigis = cms.EDProducer("L1TMuonOverlapTrackProducer",
    XMLDumpFileName = cms.string('TestEvents.xml'),
    dropCSCPrimitives = cms.bool(False),
    dropDTPrimitives = cms.bool(False),
    dropRPCPrimitives = cms.bool(False),
    dumpDetailedResultToXML = cms.bool(False),
    dumpGPToXML = cms.bool(False),
    dumpResultToXML = cms.bool(False),
    eventsXMLFiles = cms.vstring('TestEvents.xml'),
    readEventsFromXML = cms.bool(False),
    srcCSC = cms.InputTag("simCscTriggerPrimitiveDigis","MPCSORTED"),
    srcDTPh = cms.InputTag("simDtTriggerPrimitiveDigis"),
    srcDTTh = cms.InputTag("simDtTriggerPrimitiveDigis"),
    srcRPC = cms.InputTag("simMuonRPCDigis")
)


process.simRpcTechTrigDigis = cms.EDProducer("RPCTechnicalTrigger",
    BitNames = cms.vstring('L1Tech_RPC_TTU_barrel_Cosmics/v0', 
        'L1Tech_RPC_TTU_pointing_Cosmics/v0', 
        'L1Tech_RPC_TTU_RBplus2_Cosmics/v0', 
        'L1Tech_RPC_TTU_RBplus1_Cosmics/v0', 
        'L1Tech_RPC_TTU_RB0_Cosmics/v0', 
        'L1Tech_RPC_TTU_RBminus1_Cosmics/v0', 
        'L1Tech_RPC_TTU_RBminus2_Cosmics/v0'),
    BitNumbers = cms.vuint32(24, 25, 26, 27, 28, 
        29, 30),
    ConfigFile = cms.string('hardware-pseudoconfig.txt'),
    RPCDigiLabel = cms.InputTag("simMuonRPCDigis"),
    RPCSimLinkInstance = cms.InputTag("RPCDigiSimLink"),
    UseEventSetup = cms.untracked.int32(0),
    UseRPCSimLink = cms.untracked.int32(0),
    Verbosity = cms.untracked.int32(0)
)


process.simTwinMuxDigis = cms.EDProducer("L1TTwinMuxProducer",
    DTDigi_Source = cms.InputTag("simDtTriggerPrimitiveDigis"),
    DTThetaDigi_Source = cms.InputTag("simDtTriggerPrimitiveDigis"),
    RPC_Source = cms.InputTag("simMuonRPCDigis")
)


process.genstepfilter = cms.EDFilter("TriggerResultsFilter",
    hltResults = cms.InputTag("TriggerResults"),
    l1tIgnoreMaskAndPrescale = cms.bool(False),
    l1tResults = cms.InputTag(""),
    throw = cms.bool(True),
    triggerConditions = cms.vstring()
)


process.hltAK4CaloJetsPFEt5 = cms.EDFilter("EtMinCaloJetSelector",
    etMin = cms.double(5.0),
    filter = cms.bool(False),
    src = cms.InputTag("hltAK4CaloJetsPF")
)


process.hltAK8CaloJetsPFEt5 = cms.EDFilter("EtMinCaloJetSelector",
    etMin = cms.double(5.0),
    filter = cms.bool(False),
    src = cms.InputTag("hltAK8CaloJetsPF")
)


process.hltAlCaEtaRecHitsFilterEBonlyRegional = cms.EDFilter("HLTRegionalEcalResonanceFilter",
    barrelClusters = cms.InputTag("hltSimple3x3Clusters","Simple3x3ClustersBarrel"),
    barrelHits = cms.InputTag("hltEcalRecHit","EcalRecHitsEB"),
    barrelSelection = cms.PSet(
        barrelHitCollection = cms.string('etaEcalRecHitsEB'),
        massHighPi0Cand = cms.double(0.156),
        massLowPi0Cand = cms.double(0.084),
        ptMinForIsolation = cms.double(1.0),
        region1_Barrel = cms.double(1.0),
        removePi0CandidatesForEta = cms.bool(True),
        seleBeltDR = cms.double(0.3),
        seleBeltDeta = cms.double(0.1),
        seleIsoBarrel_region1 = cms.double(0.5),
        seleIsoBarrel_region2 = cms.double(0.5),
        seleMinvMaxBarrel = cms.double(0.8),
        seleMinvMinBarrel = cms.double(0.2),
        seleNxtalBarrel_region1 = cms.uint32(6),
        seleNxtalBarrel_region2 = cms.uint32(6),
        selePtGammaBarrel_region1 = cms.double(0.65),
        selePtGammaBarrel_region2 = cms.double(1.4),
        selePtPairBarrel_region1 = cms.double(3.0),
        selePtPairBarrel_region2 = cms.double(3.0),
        seleS4S9GammaBarrel_region1 = cms.double(0.9),
        seleS4S9GammaBarrel_region2 = cms.double(0.9),
        seleS9S25Gamma = cms.double(0.8),
        store5x5RecHitEB = cms.bool(True)
    ),
    debugLevel = cms.int32(0),
    doSelBarrel = cms.bool(True),
    doSelEndcap = cms.bool(False),
    endcapClusters = cms.InputTag("hltSimple3x3Clusters","Simple3x3ClustersEndcap"),
    endcapHits = cms.InputTag("hltEcalRecHit","EcalRecHitsEE"),
    endcapSelection = cms.PSet(
        endcapHitCollection = cms.string('etaEcalRecHitsEE'),
        ptMinForIsolationEndCap = cms.double(0.5),
        region1_EndCap = cms.double(1.8),
        region2_EndCap = cms.double(2.0),
        seleBeltDREndCap = cms.double(0.2),
        seleBeltDetaEndCap = cms.double(0.05),
        seleIsoEndCap_region1 = cms.double(0.5),
        seleIsoEndCap_region2 = cms.double(0.5),
        seleIsoEndCap_region3 = cms.double(0.5),
        seleMinvMaxEndCap = cms.double(0.3),
        seleMinvMinEndCap = cms.double(0.05),
        seleNxtalEndCap_region1 = cms.uint32(6),
        seleNxtalEndCap_region2 = cms.uint32(6),
        seleNxtalEndCap_region3 = cms.uint32(6),
        selePtGammaEndCap_region1 = cms.double(0.5),
        selePtGammaEndCap_region2 = cms.double(0.5),
        selePtGammaEndCap_region3 = cms.double(0.5),
        selePtPairEndCap_region1 = cms.double(1.5),
        selePtPairEndCap_region2 = cms.double(1.5),
        selePtPairEndCap_region3 = cms.double(99.0),
        selePtPairMaxEndCap_region3 = cms.double(2.5),
        seleS4S9GammaEndCap_region1 = cms.double(0.65),
        seleS4S9GammaEndCap_region2 = cms.double(0.65),
        seleS4S9GammaEndCap_region3 = cms.double(0.65),
        seleS9S25GammaEndCap = cms.double(0.0),
        store5x5RecHitEE = cms.bool(False)
    ),
    flagLevelRecHitsToUse = cms.int32(1),
    preshRecHitProducer = cms.InputTag("hltEcalPreshowerRecHit","EcalRecHitsES"),
    preshowerSelection = cms.PSet(
        ESCollection = cms.string('etaEcalRecHitsES'),
        debugLevelES = cms.string(''),
        preshCalibGamma = cms.double(0.024),
        preshCalibMIP = cms.double(9e-05),
        preshCalibPlaneX = cms.double(1.0),
        preshCalibPlaneY = cms.double(0.7),
        preshClusterEnergyCut = cms.double(0.0),
        preshNclust = cms.int32(4),
        preshSeededNstrip = cms.int32(15),
        preshStripEnergyCut = cms.double(0.0)
    ),
    statusLevelRecHitsToUse = cms.int32(1),
    storeRecHitES = cms.bool(False),
    useDBStatus = cms.bool(True),
    useRecoFlag = cms.bool(False)
)


process.hltAlCaEtaRecHitsFilterEEonlyRegional = cms.EDFilter("HLTRegionalEcalResonanceFilter",
    barrelClusters = cms.InputTag("hltSimple3x3Clusters","Simple3x3ClustersBarrel"),
    barrelHits = cms.InputTag("hltEcalRecHit","EcalRecHitsEB"),
    barrelSelection = cms.PSet(
        barrelHitCollection = cms.string('etaEcalRecHitsEB'),
        massHighPi0Cand = cms.double(0.163),
        massLowPi0Cand = cms.double(0.104),
        ptMinForIsolation = cms.double(1.0),
        region1_Barrel = cms.double(1.0),
        removePi0CandidatesForEta = cms.bool(False),
        seleBeltDR = cms.double(0.2),
        seleBeltDeta = cms.double(0.05),
        seleIsoBarrel_region1 = cms.double(0.5),
        seleIsoBarrel_region2 = cms.double(0.5),
        seleMinvMaxBarrel = cms.double(0.8),
        seleMinvMinBarrel = cms.double(0.3),
        seleNxtalBarrel_region1 = cms.uint32(6),
        seleNxtalBarrel_region2 = cms.uint32(6),
        selePtGammaBarrel_region1 = cms.double(1.0),
        selePtGammaBarrel_region2 = cms.double(0.5),
        selePtPairBarrel_region1 = cms.double(1.5),
        selePtPairBarrel_region2 = cms.double(1.5),
        seleS4S9GammaBarrel_region1 = cms.double(0.65),
        seleS4S9GammaBarrel_region2 = cms.double(0.65),
        seleS9S25Gamma = cms.double(0.0),
        store5x5RecHitEB = cms.bool(False)
    ),
    debugLevel = cms.int32(0),
    doSelBarrel = cms.bool(False),
    doSelEndcap = cms.bool(True),
    endcapClusters = cms.InputTag("hltSimple3x3Clusters","Simple3x3ClustersEndcap"),
    endcapHits = cms.InputTag("hltEcalRecHit","EcalRecHitsEE"),
    endcapSelection = cms.PSet(
        endcapHitCollection = cms.string('etaEcalRecHitsEE'),
        ptMinForIsolationEndCap = cms.double(0.5),
        region1_EndCap = cms.double(1.8),
        region2_EndCap = cms.double(2.0),
        seleBeltDREndCap = cms.double(0.3),
        seleBeltDetaEndCap = cms.double(0.1),
        seleIsoEndCap_region1 = cms.double(0.5),
        seleIsoEndCap_region2 = cms.double(0.5),
        seleIsoEndCap_region3 = cms.double(0.5),
        seleMinvMaxEndCap = cms.double(0.8),
        seleMinvMinEndCap = cms.double(0.2),
        seleNxtalEndCap_region1 = cms.uint32(6),
        seleNxtalEndCap_region2 = cms.uint32(6),
        seleNxtalEndCap_region3 = cms.uint32(6),
        selePtGammaEndCap_region1 = cms.double(1.0),
        selePtGammaEndCap_region2 = cms.double(1.0),
        selePtGammaEndCap_region3 = cms.double(1.0),
        selePtPairEndCap_region1 = cms.double(3.0),
        selePtPairEndCap_region2 = cms.double(3.0),
        selePtPairEndCap_region3 = cms.double(3.0),
        selePtPairMaxEndCap_region3 = cms.double(999.0),
        seleS4S9GammaEndCap_region1 = cms.double(0.9),
        seleS4S9GammaEndCap_region2 = cms.double(0.9),
        seleS4S9GammaEndCap_region3 = cms.double(0.9),
        seleS9S25GammaEndCap = cms.double(0.85),
        store5x5RecHitEE = cms.bool(True)
    ),
    flagLevelRecHitsToUse = cms.int32(1),
    preshRecHitProducer = cms.InputTag("hltEcalPreshowerRecHit","EcalRecHitsES"),
    preshowerSelection = cms.PSet(
        ESCollection = cms.string('etaEcalRecHitsES'),
        debugLevelES = cms.string(''),
        preshCalibGamma = cms.double(0.024),
        preshCalibMIP = cms.double(9e-05),
        preshCalibPlaneX = cms.double(1.0),
        preshCalibPlaneY = cms.double(0.7),
        preshClusterEnergyCut = cms.double(0.0),
        preshNclust = cms.int32(4),
        preshSeededNstrip = cms.int32(15),
        preshStripEnergyCut = cms.double(0.0)
    ),
    statusLevelRecHitsToUse = cms.int32(1),
    storeRecHitES = cms.bool(True),
    useDBStatus = cms.bool(True),
    useRecoFlag = cms.bool(False)
)


process.hltAlCaPi0RecHitsFilterEBonlyRegional = cms.EDFilter("HLTRegionalEcalResonanceFilter",
    barrelClusters = cms.InputTag("hltSimple3x3Clusters","Simple3x3ClustersBarrel"),
    barrelHits = cms.InputTag("hltEcalRecHit","EcalRecHitsEB"),
    barrelSelection = cms.PSet(
        barrelHitCollection = cms.string('pi0EcalRecHitsEB'),
        massHighPi0Cand = cms.double(0.163),
        massLowPi0Cand = cms.double(0.104),
        ptMinForIsolation = cms.double(1.0),
        region1_Barrel = cms.double(1.0),
        removePi0CandidatesForEta = cms.bool(False),
        seleBeltDR = cms.double(0.2),
        seleBeltDeta = cms.double(0.05),
        seleIsoBarrel_region1 = cms.double(0.5),
        seleIsoBarrel_region2 = cms.double(0.5),
        seleMinvMaxBarrel = cms.double(0.22),
        seleMinvMinBarrel = cms.double(0.06),
        seleNxtalBarrel_region1 = cms.uint32(6),
        seleNxtalBarrel_region2 = cms.uint32(6),
        selePtGammaBarrel_region1 = cms.double(0.65),
        selePtGammaBarrel_region2 = cms.double(0.65),
        selePtPairBarrel_region1 = cms.double(2.0),
        selePtPairBarrel_region2 = cms.double(1.75),
        seleS4S9GammaBarrel_region1 = cms.double(0.88),
        seleS4S9GammaBarrel_region2 = cms.double(0.9),
        seleS9S25Gamma = cms.double(0.0),
        store5x5RecHitEB = cms.bool(False)
    ),
    debugLevel = cms.int32(0),
    doSelBarrel = cms.bool(True),
    doSelEndcap = cms.bool(False),
    endcapClusters = cms.InputTag("hltSimple3x3Clusters","Simple3x3ClustersEndcap"),
    endcapHits = cms.InputTag("hltEcalRecHit","EcalRecHitsEE"),
    endcapSelection = cms.PSet(
        endcapHitCollection = cms.string('pi0EcalRecHitsEE'),
        ptMinForIsolationEndCap = cms.double(0.5),
        region1_EndCap = cms.double(1.8),
        region2_EndCap = cms.double(2.0),
        seleBeltDREndCap = cms.double(0.2),
        seleBeltDetaEndCap = cms.double(0.05),
        seleIsoEndCap_region1 = cms.double(0.5),
        seleIsoEndCap_region2 = cms.double(0.5),
        seleIsoEndCap_region3 = cms.double(0.5),
        seleMinvMaxEndCap = cms.double(0.3),
        seleMinvMinEndCap = cms.double(0.05),
        seleNxtalEndCap_region1 = cms.uint32(6),
        seleNxtalEndCap_region2 = cms.uint32(6),
        seleNxtalEndCap_region3 = cms.uint32(6),
        selePtGammaEndCap_region1 = cms.double(0.5),
        selePtGammaEndCap_region2 = cms.double(0.5),
        selePtGammaEndCap_region3 = cms.double(0.5),
        selePtPairEndCap_region1 = cms.double(1.5),
        selePtPairEndCap_region2 = cms.double(1.5),
        selePtPairEndCap_region3 = cms.double(99.0),
        selePtPairMaxEndCap_region3 = cms.double(2.5),
        seleS4S9GammaEndCap_region1 = cms.double(0.65),
        seleS4S9GammaEndCap_region2 = cms.double(0.65),
        seleS4S9GammaEndCap_region3 = cms.double(0.65),
        seleS9S25GammaEndCap = cms.double(0.0),
        store5x5RecHitEE = cms.bool(False)
    ),
    flagLevelRecHitsToUse = cms.int32(1),
    preshRecHitProducer = cms.InputTag("hltEcalPreshowerRecHit","EcalRecHitsES"),
    preshowerSelection = cms.PSet(
        ESCollection = cms.string('pi0EcalRecHitsES'),
        debugLevelES = cms.string(''),
        preshCalibGamma = cms.double(0.024),
        preshCalibMIP = cms.double(9e-05),
        preshCalibPlaneX = cms.double(1.0),
        preshCalibPlaneY = cms.double(0.7),
        preshClusterEnergyCut = cms.double(0.0),
        preshNclust = cms.int32(4),
        preshSeededNstrip = cms.int32(15),
        preshStripEnergyCut = cms.double(0.0)
    ),
    statusLevelRecHitsToUse = cms.int32(1),
    storeRecHitES = cms.bool(False),
    useDBStatus = cms.bool(True),
    useRecoFlag = cms.bool(False)
)


process.hltAlCaPi0RecHitsFilterEEonlyRegional = cms.EDFilter("HLTRegionalEcalResonanceFilter",
    barrelClusters = cms.InputTag("hltSimple3x3Clusters","Simple3x3ClustersBarrel"),
    barrelHits = cms.InputTag("hltEcalRecHit","EcalRecHitsEB"),
    barrelSelection = cms.PSet(
        barrelHitCollection = cms.string('pi0EcalRecHitsEB'),
        massHighPi0Cand = cms.double(0.163),
        massLowPi0Cand = cms.double(0.104),
        ptMinForIsolation = cms.double(1.0),
        region1_Barrel = cms.double(1.0),
        removePi0CandidatesForEta = cms.bool(False),
        seleBeltDR = cms.double(0.2),
        seleBeltDeta = cms.double(0.05),
        seleIsoBarrel_region1 = cms.double(0.5),
        seleIsoBarrel_region2 = cms.double(0.5),
        seleMinvMaxBarrel = cms.double(0.22),
        seleMinvMinBarrel = cms.double(0.06),
        seleNxtalBarrel_region1 = cms.uint32(6),
        seleNxtalBarrel_region2 = cms.uint32(6),
        selePtGammaBarrel_region1 = cms.double(0.5),
        selePtGammaBarrel_region2 = cms.double(0.5),
        selePtPairBarrel_region1 = cms.double(1.5),
        selePtPairBarrel_region2 = cms.double(1.5),
        seleS4S9GammaBarrel_region1 = cms.double(0.65),
        seleS4S9GammaBarrel_region2 = cms.double(0.65),
        seleS9S25Gamma = cms.double(0.0),
        store5x5RecHitEB = cms.bool(False)
    ),
    debugLevel = cms.int32(0),
    doSelBarrel = cms.bool(False),
    doSelEndcap = cms.bool(True),
    endcapClusters = cms.InputTag("hltSimple3x3Clusters","Simple3x3ClustersEndcap"),
    endcapHits = cms.InputTag("hltEcalRecHit","EcalRecHitsEE"),
    endcapSelection = cms.PSet(
        endcapHitCollection = cms.string('pi0EcalRecHitsEE'),
        ptMinForIsolationEndCap = cms.double(0.5),
        region1_EndCap = cms.double(1.8),
        region2_EndCap = cms.double(2.0),
        seleBeltDREndCap = cms.double(0.2),
        seleBeltDetaEndCap = cms.double(0.05),
        seleIsoEndCap_region1 = cms.double(0.5),
        seleIsoEndCap_region2 = cms.double(0.5),
        seleIsoEndCap_region3 = cms.double(0.5),
        seleMinvMaxEndCap = cms.double(0.3),
        seleMinvMinEndCap = cms.double(0.05),
        seleNxtalEndCap_region1 = cms.uint32(6),
        seleNxtalEndCap_region2 = cms.uint32(6),
        seleNxtalEndCap_region3 = cms.uint32(6),
        selePtGammaEndCap_region1 = cms.double(1.1),
        selePtGammaEndCap_region2 = cms.double(0.95),
        selePtGammaEndCap_region3 = cms.double(0.95),
        selePtPairEndCap_region1 = cms.double(3.75),
        selePtPairEndCap_region2 = cms.double(2.0),
        selePtPairEndCap_region3 = cms.double(2.0),
        selePtPairMaxEndCap_region3 = cms.double(999.0),
        seleS4S9GammaEndCap_region1 = cms.double(0.85),
        seleS4S9GammaEndCap_region2 = cms.double(0.92),
        seleS4S9GammaEndCap_region3 = cms.double(0.92),
        seleS9S25GammaEndCap = cms.double(0.0),
        store5x5RecHitEE = cms.bool(False)
    ),
    flagLevelRecHitsToUse = cms.int32(1),
    preshRecHitProducer = cms.InputTag("hltEcalPreshowerRecHit","EcalRecHitsES"),
    preshowerSelection = cms.PSet(
        ESCollection = cms.string('pi0EcalRecHitsES'),
        debugLevelES = cms.string(''),
        preshCalibGamma = cms.double(0.024),
        preshCalibMIP = cms.double(9e-05),
        preshCalibPlaneX = cms.double(1.0),
        preshCalibPlaneY = cms.double(0.7),
        preshClusterEnergyCut = cms.double(0.0),
        preshNclust = cms.int32(4),
        preshSeededNstrip = cms.int32(15),
        preshStripEnergyCut = cms.double(0.0)
    ),
    statusLevelRecHitsToUse = cms.int32(1),
    storeRecHitES = cms.bool(True),
    useDBStatus = cms.bool(True),
    useRecoFlag = cms.bool(False)
)


process.hltBTagPFCSV0p80SingleJet40Eta2p4 = cms.EDFilter("HLTPFJetTag",
    JetTags = cms.InputTag("hltCombinedSecondaryVertexBJetTagsPFJet40Eta2p4"),
    Jets = cms.InputTag("hltPFJetForBtagJet40Eta2p4"),
    MaxTag = cms.double(999999.0),
    MinJets = cms.int32(1),
    MinTag = cms.double(0.8),
    TriggerType = cms.int32(86),
    saveTags = cms.bool(True)
)


process.hltBTagPFCSV0p80SingleJet60Eta2p4 = cms.EDFilter("HLTPFJetTag",
    JetTags = cms.InputTag("hltCombinedSecondaryVertexBJetTagsPFJet60Eta2p4"),
    Jets = cms.InputTag("hltPFJetForBtagJet60Eta2p4"),
    MaxTag = cms.double(999999.0),
    MinJets = cms.int32(1),
    MinTag = cms.double(0.8),
    TriggerType = cms.int32(86),
    saveTags = cms.bool(True)
)


process.hltBTagPFCSV0p80SingleJet80Eta2p4 = cms.EDFilter("HLTPFJetTag",
    JetTags = cms.InputTag("hltCombinedSecondaryVertexBJetTagsPFJet80Eta2p4"),
    Jets = cms.InputTag("hltPFJetForBtagJet80Eta2p4"),
    MaxTag = cms.double(999999.0),
    MinJets = cms.int32(1),
    MinTag = cms.double(0.8),
    TriggerType = cms.int32(86),
    saveTags = cms.bool(True)
)


process.hltBTagPFCSVp080SingleJet30Eta2p4 = cms.EDFilter("HLTPFJetTag",
    JetTags = cms.InputTag("hltCombinedSecondaryVertexBJetTagsPFJet30Eta2p4"),
    Jets = cms.InputTag("hltPFJetForBtagJet30Eta2p4"),
    MaxTag = cms.double(999999.0),
    MinJets = cms.int32(1),
    MinTag = cms.double(0.8),
    TriggerType = cms.int32(86),
    saveTags = cms.bool(True)
)


process.hltBoolEnd = cms.EDFilter("HLTBool",
    result = cms.bool(True)
)


process.hltBoolFalse = cms.EDFilter("HLTBool",
    result = cms.bool(False)
)


process.hltCalibrationEventsFilter = cms.EDFilter("HLTTriggerTypeFilter",
    SelectedTriggerType = cms.int32(2)
)


process.hltDiPFJetAve15ForHFJEC = cms.EDFilter("HLTDiPFJetAveEtaFilter",
    inputJetTag = cms.InputTag("hltAK4PFJetsCorrected"),
    maxProbeEta = cms.double(5.5),
    maxTagEta = cms.double(1.4),
    minDphi = cms.double(2.5),
    minProbeEta = cms.double(2.7),
    minPtAve = cms.double(15.0),
    minPtJet = cms.double(10.0),
    minTagEta = cms.double(-1.0),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltDiPFJetAve25ForHFJEC = cms.EDFilter("HLTDiPFJetAveEtaFilter",
    inputJetTag = cms.InputTag("hltAK4PFJetsCorrected"),
    maxProbeEta = cms.double(5.5),
    maxTagEta = cms.double(1.4),
    minDphi = cms.double(2.5),
    minProbeEta = cms.double(2.7),
    minPtAve = cms.double(25.0),
    minPtJet = cms.double(10.0),
    minTagEta = cms.double(-1.0),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltDiPFJetAve35ForHFJEC = cms.EDFilter("HLTDiPFJetAveEtaFilter",
    inputJetTag = cms.InputTag("hltAK4PFJetsCorrected"),
    maxProbeEta = cms.double(5.5),
    maxTagEta = cms.double(1.4),
    minDphi = cms.double(2.5),
    minProbeEta = cms.double(2.7),
    minPtAve = cms.double(35.0),
    minPtJet = cms.double(10.0),
    minTagEta = cms.double(-1.0),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltDimuon0JpsiL3Filtered = cms.EDFilter("HLTMuonDimuonL3Filter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    ChargeOpt = cms.int32(-1),
    CutCowboys = cms.bool(False),
    FastAccept = cms.bool(False),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fL1DoubleMu0SQOSL1Filtered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxAcop = cms.double(999.0),
    MaxDCAMuMu = cms.double(0.5),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxInvMass = cms.vdouble(3.3),
    MaxPtBalance = cms.double(999999.0),
    MaxPtMin = cms.vdouble(1e+125),
    MaxPtPair = cms.vdouble(1e+125),
    MaxRapidityPair = cms.double(999999.0),
    MinAcop = cms.double(-999.0),
    MinInvMass = cms.vdouble(2.9),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinPtBalance = cms.double(-1.0),
    MinPtMax = cms.vdouble(0.0),
    MinPtMin = cms.vdouble(0.0),
    MinPtPair = cms.vdouble(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandIsL2 = cms.bool(True),
    PreviousCandTag = cms.InputTag("hltL2fL1sL1DoubleMu0SQOSL2PreFiltered0"),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    saveTags = cms.bool(True)
)


process.hltDimuon0UpsilonL1sMassL3Filtered = cms.EDFilter("HLTMuonDimuonL3Filter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    ChargeOpt = cms.int32(-1),
    CutCowboys = cms.bool(False),
    FastAccept = cms.bool(False),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fL1sL1DoubleMu0SQOSL1Filtered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxAcop = cms.double(999.0),
    MaxDCAMuMu = cms.double(0.5),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxInvMass = cms.vdouble(11.5),
    MaxPtBalance = cms.double(999999.0),
    MaxPtMin = cms.vdouble(1e+125),
    MaxPtPair = cms.vdouble(1e+125),
    MaxRapidityPair = cms.double(999999.0),
    MinAcop = cms.double(-999.0),
    MinInvMass = cms.vdouble(8.5),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinPtBalance = cms.double(-1.0),
    MinPtMax = cms.vdouble(0.0),
    MinPtMin = cms.vdouble(0.0),
    MinPtPair = cms.vdouble(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandIsL2 = cms.bool(True),
    PreviousCandTag = cms.InputTag("hltL2fL1sL1DoubleMu0SQOSL1f0L2PreFiltered0"),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    saveTags = cms.bool(True)
)


process.hltDisplacedmumuFilterDimuon0Jpsi = cms.EDFilter("HLTDisplacedmumuFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    DisplacedVertexTag = cms.InputTag("hltDisplacedmumuVtxProducerDimuon0Jpsi"),
    FastAccept = cms.bool(True),
    MaxLxySignificance = cms.double(0.0),
    MaxNormalisedChi2 = cms.double(999999.0),
    MinCosinePointingAngle = cms.double(-2.0),
    MinLxySignificance = cms.double(0.0),
    MinVtxProbability = cms.double(0.005),
    MuonTag = cms.InputTag("hltIterL3MuonCandidates"),
    saveTags = cms.bool(True)
)


process.hltDoubleCentralCaloJet10 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(2.6),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(2),
    MinPt = cms.double(10.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltDoublePFJet15 = cms.EDFilter("HLTDiPFJetEtaTopologyFilter",
    applyAbsToProbe = cms.bool(False),
    applyAbsToTag = cms.bool(False),
    atLeastOneJetAbovePT = cms.double(0.0),
    inputJetTag = cms.InputTag("hltAK4PFJetsCorrected"),
    maxProbeEta = cms.double(5.5),
    maxTagEta = cms.double(5.5),
    minDphi = cms.double(-1.0),
    minProbeEta = cms.double(-5.5),
    minPtAve = cms.double(15.0),
    minPtProbe = cms.double(15.0),
    minPtTag = cms.double(15.0),
    minTagEta = cms.double(-5.5),
    oppositeEta = cms.bool(False),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltDoublePFJet15FBEta3 = cms.EDFilter("HLTDiPFJetEtaTopologyFilter",
    applyAbsToProbe = cms.bool(False),
    applyAbsToTag = cms.bool(False),
    atLeastOneJetAbovePT = cms.double(0.0),
    inputJetTag = cms.InputTag("hltAK4PFJetsCorrected"),
    maxProbeEta = cms.double(5.5),
    maxTagEta = cms.double(-3.0),
    minDphi = cms.double(-1.0),
    minProbeEta = cms.double(3.0),
    minPtAve = cms.double(15.0),
    minPtProbe = cms.double(15.0),
    minPtTag = cms.double(15.0),
    minTagEta = cms.double(-5.5),
    oppositeEta = cms.bool(True),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltDoublePFJet25 = cms.EDFilter("HLTDiPFJetEtaTopologyFilter",
    applyAbsToProbe = cms.bool(False),
    applyAbsToTag = cms.bool(False),
    atLeastOneJetAbovePT = cms.double(0.0),
    inputJetTag = cms.InputTag("hltAK4PFJetsCorrected"),
    maxProbeEta = cms.double(5.5),
    maxTagEta = cms.double(5.5),
    minDphi = cms.double(-1.0),
    minProbeEta = cms.double(-5.5),
    minPtAve = cms.double(25.0),
    minPtProbe = cms.double(25.0),
    minPtTag = cms.double(25.0),
    minTagEta = cms.double(-5.5),
    oppositeEta = cms.bool(False),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltDoublePFJet25FBEta3 = cms.EDFilter("HLTDiPFJetEtaTopologyFilter",
    applyAbsToProbe = cms.bool(False),
    applyAbsToTag = cms.bool(False),
    atLeastOneJetAbovePT = cms.double(0.0),
    inputJetTag = cms.InputTag("hltAK4PFJetsCorrected"),
    maxProbeEta = cms.double(5.5),
    maxTagEta = cms.double(-3.0),
    minDphi = cms.double(-1.0),
    minProbeEta = cms.double(3.0),
    minPtAve = cms.double(25.0),
    minPtProbe = cms.double(25.0),
    minPtTag = cms.double(25.0),
    minTagEta = cms.double(-5.5),
    oppositeEta = cms.bool(True),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltDummyConditions = cms.EDFilter("HLTBool",
    result = cms.bool(True)
)


process.hltEG10L1SingleEG2Or5FilterForHI = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(10.0),
    etcutEE = cms.double(10.0),
    inputTag = cms.InputTag("hltEGL1SingleEG2Or5FilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(1),
    saveTags = cms.bool(True)
)


process.hltEG15L1SingleEG15FilterForHI = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(15.0),
    etcutEE = cms.double(15.0),
    inputTag = cms.InputTag("hltEGL1SingleEG15FilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(1),
    saveTags = cms.bool(True)
)


process.hltEG17L1SingleEGLowETOrEtFilterForHI = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(17.0),
    etcutEE = cms.double(17.0),
    inputTag = cms.InputTag("hltEGL1SingleEGLowETOrFilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(1),
    saveTags = cms.bool(True)
)


process.hltEG20EtFilterLooseHoverEForHI = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(20.0),
    etcutEE = cms.double(20.0),
    inputTag = cms.InputTag("hltEGL1SingleEG10FilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(1),
    saveTags = cms.bool(True)
)


process.hltEG20HEFilterLooseHoverEForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEG20EtFilterLooseHoverEForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.5),
    thrOverEEE = cms.vdouble(0.5),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEG20L1SingleEG15EtFilterForHI = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(20.0),
    etcutEE = cms.double(20.0),
    inputTag = cms.InputTag("hltEGL1SingleEG15FilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(1),
    saveTags = cms.bool(True)
)


process.hltEG30EtFilterLooseHoverEForHI = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(30.0),
    etcutEE = cms.double(30.0),
    inputTag = cms.InputTag("hltEGL1SingleEG15FilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(1),
    saveTags = cms.bool(True)
)


process.hltEG30HEFilterLooseHoverEForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEG30EtFilterLooseHoverEForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.5),
    thrOverEEE = cms.vdouble(0.5),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEG30L1SingleEG21EtFilterForHI = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(30.0),
    etcutEE = cms.double(30.0),
    inputTag = cms.InputTag("hltEGL1SingleEG21FilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(1),
    saveTags = cms.bool(True)
)


process.hltEG40EtFilterLooseHoverEForHI = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(40.0),
    etcutEE = cms.double(40.0),
    inputTag = cms.InputTag("hltEGL1SingleEG21FilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(1),
    saveTags = cms.bool(True)
)


process.hltEG40HEFilterLooseHoverEForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEG40EtFilterLooseHoverEForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.5),
    thrOverEEE = cms.vdouble(0.5),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEG40L1SingleEG21EtFilterForHI = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(40.0),
    etcutEE = cms.double(40.0),
    inputTag = cms.InputTag("hltEGL1SingleEG21FilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(1),
    saveTags = cms.bool(True)
)


process.hltEG50EtFilterLooseHoverEForHI = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(50.0),
    etcutEE = cms.double(50.0),
    inputTag = cms.InputTag("hltEGL1SingleEG30FilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(1),
    saveTags = cms.bool(True)
)


process.hltEG50HEFilterLooseHoverEForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEG50EtFilterLooseHoverEForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.5),
    thrOverEEE = cms.vdouble(0.5),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEG60EtFilterLooseHoverEForHI = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(60.0),
    etcutEE = cms.double(60.0),
    inputTag = cms.InputTag("hltEGL1SingleEG30FilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(1),
    saveTags = cms.bool(True)
)


process.hltEG60HEFilterLooseHoverEForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEG60EtFilterLooseHoverEForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.5),
    thrOverEEE = cms.vdouble(0.5),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEGJetForPPRefEtFilter = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(20.0),
    etcutEE = cms.double(20.0),
    inputTag = cms.InputTag("hltEGJetForPPRefFilter"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(1),
    saveTags = cms.bool(True)
)


process.hltEGJetForPPRefFilter = cms.EDFilter("HLTEgammaL1TMatchFilterRegional",
    L1SeedFilterTag = cms.InputTag("hltL1sEGJetForPPRef"),
    barrel_end = cms.double(1.4791),
    candIsolatedTag = cms.InputTag("hltEgammaCandidates"),
    candNonIsolatedTag = cms.InputTag(""),
    doIsolated = cms.bool(False),
    endcap_end = cms.double(2.17),
    l1CenJetsTag = cms.InputTag("hltGtStage2Digis","Jet"),
    l1IsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1NonIsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1TausTag = cms.InputTag("hltGtStage2Digis","Tau"),
    ncandcut = cms.int32(1),
    region_eta_size = cms.double(0.522),
    region_eta_size_ecap = cms.double(1.0),
    region_phi_size = cms.double(1.044),
    saveTags = cms.bool(True)
)


process.hltEGL1LowEG15Filter = cms.EDFilter("HLTEgammaL1TMatchFilterRegional",
    L1SeedFilterTag = cms.InputTag("hltL1sLowEG15"),
    barrel_end = cms.double(1.4791),
    candIsolatedTag = cms.InputTag("hltEgammaCandidates"),
    candNonIsolatedTag = cms.InputTag(""),
    doIsolated = cms.bool(False),
    endcap_end = cms.double(2.65),
    l1CenJetsTag = cms.InputTag("hltGtStage2Digis","Jet"),
    l1IsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1NonIsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1TausTag = cms.InputTag("hltGtStage2Digis","Tau"),
    ncandcut = cms.int32(2),
    region_eta_size = cms.double(0.522),
    region_eta_size_ecap = cms.double(1.0),
    region_phi_size = cms.double(1.044),
    saveTags = cms.bool(True)
)


process.hltEGL1SingleEG10FilterForHI = cms.EDFilter("HLTEgammaL1TMatchFilterRegional",
    L1SeedFilterTag = cms.InputTag("hltL1sSingleEG10"),
    barrel_end = cms.double(1.4791),
    candIsolatedTag = cms.InputTag("hltEgammaCandidates"),
    candNonIsolatedTag = cms.InputTag(""),
    doIsolated = cms.bool(False),
    endcap_end = cms.double(2.65),
    l1CenJetsTag = cms.InputTag("hltGtStage2Digis","Jet"),
    l1IsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1NonIsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1TausTag = cms.InputTag("hltGtStage2Digis","Tau"),
    ncandcut = cms.int32(1),
    region_eta_size = cms.double(0.522),
    region_eta_size_ecap = cms.double(1.0),
    region_phi_size = cms.double(1.044),
    saveTags = cms.bool(True)
)


process.hltEGL1SingleEG15FilterForHI = cms.EDFilter("HLTEgammaL1TMatchFilterRegional",
    L1SeedFilterTag = cms.InputTag("hltL1sSingleEG15"),
    barrel_end = cms.double(1.4791),
    candIsolatedTag = cms.InputTag("hltEgammaCandidates"),
    candNonIsolatedTag = cms.InputTag(""),
    doIsolated = cms.bool(False),
    endcap_end = cms.double(2.65),
    l1CenJetsTag = cms.InputTag("hltGtStage2Digis","Jet"),
    l1IsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1NonIsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1TausTag = cms.InputTag("hltGtStage2Digis","Tau"),
    ncandcut = cms.int32(1),
    region_eta_size = cms.double(0.522),
    region_eta_size_ecap = cms.double(1.0),
    region_phi_size = cms.double(1.044),
    saveTags = cms.bool(True)
)


process.hltEGL1SingleEG21FilterForHI = cms.EDFilter("HLTEgammaL1TMatchFilterRegional",
    L1SeedFilterTag = cms.InputTag("hltL1sSingleEG21"),
    barrel_end = cms.double(1.4791),
    candIsolatedTag = cms.InputTag("hltEgammaCandidates"),
    candNonIsolatedTag = cms.InputTag(""),
    doIsolated = cms.bool(False),
    endcap_end = cms.double(2.65),
    l1CenJetsTag = cms.InputTag("hltGtStage2Digis","Jet"),
    l1IsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1NonIsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1TausTag = cms.InputTag("hltGtStage2Digis","Tau"),
    ncandcut = cms.int32(1),
    region_eta_size = cms.double(0.522),
    region_eta_size_ecap = cms.double(1.0),
    region_phi_size = cms.double(1.044),
    saveTags = cms.bool(True)
)


process.hltEGL1SingleEG2Or5FilterForHI = cms.EDFilter("HLTEgammaL1TMatchFilterRegional",
    L1SeedFilterTag = cms.InputTag("hltL1sSingleEG2Or5"),
    barrel_end = cms.double(1.4791),
    candIsolatedTag = cms.InputTag("hltEgammaCandidates"),
    candNonIsolatedTag = cms.InputTag(""),
    doIsolated = cms.bool(False),
    endcap_end = cms.double(2.65),
    l1CenJetsTag = cms.InputTag("hltGtStage2Digis","Jet"),
    l1IsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1NonIsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1TausTag = cms.InputTag("hltGtStage2Digis","Tau"),
    ncandcut = cms.int32(1),
    region_eta_size = cms.double(0.522),
    region_eta_size_ecap = cms.double(1.0),
    region_phi_size = cms.double(1.044),
    saveTags = cms.bool(True)
)


process.hltEGL1SingleEG30FilterForHI = cms.EDFilter("HLTEgammaL1TMatchFilterRegional",
    L1SeedFilterTag = cms.InputTag("hltL1sSingleEG30"),
    barrel_end = cms.double(1.4791),
    candIsolatedTag = cms.InputTag("hltEgammaCandidates"),
    candNonIsolatedTag = cms.InputTag(""),
    doIsolated = cms.bool(False),
    endcap_end = cms.double(2.65),
    l1CenJetsTag = cms.InputTag("hltGtStage2Digis","Jet"),
    l1IsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1NonIsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1TausTag = cms.InputTag("hltGtStage2Digis","Tau"),
    ncandcut = cms.int32(1),
    region_eta_size = cms.double(0.522),
    region_eta_size_ecap = cms.double(1.0),
    region_phi_size = cms.double(1.044),
    saveTags = cms.bool(True)
)


process.hltEGL1SingleEGLowETOrFilterForHI = cms.EDFilter("HLTEgammaL1TMatchFilterRegional",
    L1SeedFilterTag = cms.InputTag("hltL1sSingleEGLowETor"),
    barrel_end = cms.double(1.4791),
    candIsolatedTag = cms.InputTag("hltEgammaCandidates"),
    candNonIsolatedTag = cms.InputTag(""),
    doIsolated = cms.bool(False),
    endcap_end = cms.double(2.65),
    l1CenJetsTag = cms.InputTag("hltGtStage2Digis","Jet"),
    l1IsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1NonIsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1TausTag = cms.InputTag("hltGtStage2Digis","Tau"),
    ncandcut = cms.int32(1),
    region_eta_size = cms.double(0.522),
    region_eta_size_ecap = cms.double(1.0),
    region_phi_size = cms.double(1.044),
    saveTags = cms.bool(True)
)


process.hltEGL1VLowETSingleAndDoubleEGOrPairFilter = cms.EDFilter("HLTEgammaL1TMatchFilterRegional",
    L1SeedFilterTag = cms.InputTag("hltL1sVLowETSingleAndDoubleEG"),
    barrel_end = cms.double(1.4791),
    candIsolatedTag = cms.InputTag("hltEgammaCandidates"),
    candNonIsolatedTag = cms.InputTag(""),
    doIsolated = cms.bool(False),
    endcap_end = cms.double(2.65),
    l1CenJetsTag = cms.InputTag("hltGtStage2Digis","Jet"),
    l1IsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1NonIsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1TausTag = cms.InputTag("hltGtStage2Digis","Tau"),
    ncandcut = cms.int32(2),
    region_eta_size = cms.double(0.522),
    region_eta_size_ecap = cms.double(1.0),
    region_phi_size = cms.double(1.044),
    saveTags = cms.bool(True)
)


process.hltEcalPhiSymFilter = cms.EDFilter("HLTEcalPhiSymFilter",
    ampCut_barrelM = cms.vdouble(14.7539, 14.8687, 14.9573, 15.0231, 15.0687, 
        15.0967, 15.1093, 15.1086, 15.0962, 15.0739, 
        15.0431, 15.0051, 14.9611, 14.9122, 14.8593, 
        14.8033, 14.7449, 14.6848, 14.6236, 14.5618, 
        14.4999, 14.4382, 14.3771, 14.3168, 14.2575, 
        14.1994, 14.1427, 14.0873, 14.0333, 13.9808, 
        13.9298, 13.8801, 13.8317, 13.7846, 13.7387, 
        13.6938, 13.6499, 13.6069, 13.5646, 13.5229, 
        13.4817, 13.441, 13.4007, 13.3606, 13.3207, 
        13.2809, 13.2413, 13.2017, 13.1622, 13.1228, 
        13.0836, 13.0445, 13.0056, 12.9671, 12.9289, 
        12.8913, 12.8543, 12.818, 12.7828, 12.7486, 
        12.7156, 12.6841, 12.6542, 12.626, 12.5997, 
        12.5756, 12.5536, 12.5339, 12.5167, 12.5019, 
        12.4897, 12.48, 12.4727, 12.4678, 12.4651, 
        12.4644, 12.4654, 12.4677, 12.4708, 12.4744, 
        12.4777, 12.4799, 12.4804, 12.478, 12.4718),
    ampCut_barrelP = cms.vdouble(12.4718, 12.478, 12.4804, 12.4799, 12.4777, 
        12.4744, 12.4708, 12.4677, 12.4654, 12.4644, 
        12.4651, 12.4678, 12.4727, 12.48, 12.4897, 
        12.5019, 12.5167, 12.5339, 12.5536, 12.5756, 
        12.5997, 12.626, 12.6542, 12.6841, 12.7156, 
        12.7486, 12.7828, 12.818, 12.8543, 12.8913, 
        12.9289, 12.9671, 13.0056, 13.0445, 13.0836, 
        13.1228, 13.1622, 13.2017, 13.2413, 13.2809, 
        13.3207, 13.3606, 13.4007, 13.441, 13.4817, 
        13.5229, 13.5646, 13.6069, 13.6499, 13.6938, 
        13.7387, 13.7846, 13.8317, 13.8801, 13.9298, 
        13.9808, 14.0333, 14.0873, 14.1427, 14.1994, 
        14.2575, 14.3168, 14.3771, 14.4382, 14.4999, 
        14.5618, 14.6236, 14.6848, 14.7449, 14.8033, 
        14.8593, 14.9122, 14.9611, 15.0051, 15.0431, 
        15.0739, 15.0962, 15.1086, 15.1093, 15.0967, 
        15.0687, 15.0231, 14.9573, 14.8687, 14.7539),
    ampCut_endcapM = cms.vdouble(14.0, 14.0, 14.0, 14.0, 14.0, 
        14.0, 14.0, 14.0, 14.0, 14.0, 
        14.0, 14.0, 14.0, 14.0, 14.0, 
        14.0, 14.0, 14.0, 14.0, 14.0, 
        14.0, 14.0, 14.0, 14.0, 14.0, 
        14.0, 14.0, 14.0, 14.0, 14.0, 
        14.0, 14.0, 14.0, 14.0, 14.0, 
        14.0, 14.0, 14.0, 14.0),
    ampCut_endcapP = cms.vdouble(14.0, 14.0, 14.0, 14.0, 14.0, 
        14.0, 14.0, 14.0, 14.0, 14.0, 
        14.0, 14.0, 14.0, 14.0, 14.0, 
        14.0, 14.0, 14.0, 14.0, 14.0, 
        14.0, 14.0, 14.0, 14.0, 14.0, 
        14.0, 14.0, 14.0, 14.0, 14.0, 
        14.0, 14.0, 14.0, 14.0, 14.0, 
        14.0, 14.0, 14.0, 14.0),
    barrelDigiCollection = cms.InputTag("hltEcalDigis","ebDigis"),
    barrelHitCollection = cms.InputTag("hltEcalRecHit","EcalRecHitsEB"),
    barrelUncalibHitCollection = cms.InputTag("hltEcalUncalibRecHit","EcalUncalibRecHitsEB"),
    endcapDigiCollection = cms.InputTag("hltEcalDigis","eeDigis"),
    endcapHitCollection = cms.InputTag("hltEcalRecHit","EcalRecHitsEE"),
    endcapUncalibHitCollection = cms.InputTag("hltEcalUncalibRecHit","EcalUncalibRecHitsEE"),
    phiSymBarrelDigiCollection = cms.string('phiSymEcalDigisEB'),
    phiSymEndcapDigiCollection = cms.string('phiSymEcalDigisEE'),
    statusThreshold = cms.uint32(3),
    useRecoFlag = cms.bool(False)
)


process.hltEle10WPLoose1ClusterShapeFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEG10L1SingleEG2Or5FilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.011),
    thrRegularEE = cms.vdouble(0.031),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaClusterShape","sigmaIEtaIEta5x5")
)


process.hltEle10WPLoose1EcalIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle10WPLoose1HEFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.325, 0.296, 0.283, 0.438),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(-0.581),
    thrRegularEB2 = cms.vdouble(-0.698),
    thrRegularEE1 = cms.vdouble(-0.892),
    thrRegularEE2 = cms.vdouble(-0.885),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEcalPFClusterIso")
)


process.hltEle10WPLoose1GsfDetaFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle10WPLoose1GsfOneOEMinusOneOPFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.004),
    thrRegularEE = cms.vdouble(0.0055),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","DetaSeed")
)


process.hltEle10WPLoose1GsfDphiFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle10WPLoose1GsfDetaFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.025),
    thrRegularEE = cms.vdouble(0.025),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","Dphi")
)


process.hltEle10WPLoose1GsfOneOEMinusOneOPFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle10WPLoose1PMS2FilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.016),
    thrRegularEE = cms.vdouble(0.013),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","OneOESuperMinusOneOP")
)


process.hltEle10WPLoose1GsfTrackIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle10WPLoose1GsfDphiFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.029, 0.111, 0.114, 0.032),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(0.838),
    thrRegularEB2 = cms.vdouble(-0.385),
    thrRegularEE1 = cms.vdouble(-0.363),
    thrRegularEE2 = cms.vdouble(0.702),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEleGsfTrackIso")
)


process.hltEle10WPLoose1HEFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle10WPLoose1ClusterShapeFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.098, 0.159, 0.353, 0.423),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.025),
    thrOverEEB2 = cms.vdouble(0.025),
    thrOverEEE1 = cms.vdouble(0.02),
    thrOverEEE2 = cms.vdouble(0.02),
    thrRegularEB1 = cms.vdouble(0.887),
    thrRegularEB2 = cms.vdouble(1.476),
    thrRegularEE1 = cms.vdouble(2.672),
    thrRegularEE2 = cms.vdouble(5.095),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEle10WPLoose1HcalIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle10WPLoose1EcalIsoFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.259, 0.328, 0.414, 0.456),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(0.786),
    thrRegularEB2 = cms.vdouble(0.298),
    thrRegularEE1 = cms.vdouble(0.402),
    thrRegularEE2 = cms.vdouble(-0.061),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaHcalPFClusterIso")
)


process.hltEle10WPLoose1PMS2FilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle10WPLoose1PixelMatchFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(70.0),
    thrRegularEE = cms.vdouble(45.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaPixelMatchVars","s2")
)


process.hltEle10WPLoose1PixelMatchFilterForHI = cms.EDFilter("HLTElectronPixelMatchFilter",
    candTag = cms.InputTag("hltEle10WPLoose1HcalIsoFilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    l1PixelSeedsTag = cms.InputTag("hltEgammaElectronPixelSeeds"),
    ncandcut = cms.int32(1),
    npixelmatchcut = cms.double(1.0),
    pixelVeto = cms.bool(False),
    s2_threshold = cms.double(0.4),
    s_a_phi1B = cms.double(0.0069),
    s_a_phi1F = cms.double(0.0076),
    s_a_phi1I = cms.double(0.0088),
    s_a_phi2B = cms.double(0.00037),
    s_a_phi2F = cms.double(0.00906),
    s_a_phi2I = cms.double(0.0007),
    s_a_rF = cms.double(0.04),
    s_a_rI = cms.double(0.027),
    s_a_zB = cms.double(0.012),
    saveTags = cms.bool(True),
    tanhSO10BarrelThres = cms.double(0.35),
    tanhSO10ForwardThres = cms.double(1.0),
    tanhSO10InterThres = cms.double(1.0),
    useS = cms.bool(False)
)


process.hltEle15CaloIdLTrackIdLIsoVLJet30ClusterShapeFilter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15CaloIdLTrackIdLIsoVLJet30EtFilter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.013),
    thrRegularEE = cms.vdouble(0.035),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaClusterShape","sigmaIEtaIEta5x5")
)


process.hltEle15CaloIdLTrackIdLIsoVLJet30DetaFilter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15CaloIdLTrackIdLIsoVLJet30OneOEMinusOneOPFilter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.01),
    thrRegularEE = cms.vdouble(0.015),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","DetaSeed")
)


process.hltEle15CaloIdLTrackIdLIsoVLJet30DphiFilter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15CaloIdLTrackIdLIsoVLJet30DetaFilter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.07),
    thrRegularEE = cms.vdouble(0.1),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","Dphi")
)


process.hltEle15CaloIdLTrackIdLIsoVLJet30EcalIsoFilter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15CaloIdLTrackIdLIsoVLJet30HEFilter"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.29, 0.21),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.5),
    thrOverEEE = cms.vdouble(0.5),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEcalPFClusterIso")
)


process.hltEle15CaloIdLTrackIdLIsoVLJet30EtFilter = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(15.0),
    etcutEE = cms.double(15.0),
    inputTag = cms.InputTag("hltEle15CaloIdLTrackIdLIsoVLJet30L1MatchFilter"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(1),
    saveTags = cms.bool(True)
)


process.hltEle15CaloIdLTrackIdLIsoVLJet30HEFilter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15CaloIdLTrackIdLIsoVLJet30ClusterShapeFilter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.13),
    thrOverEEE = cms.vdouble(0.13),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEle15CaloIdLTrackIdLIsoVLJet30HcalIsoFilter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15CaloIdLTrackIdLIsoVLJet30EcalIsoFilter"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.2, 0.25),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.3),
    thrOverEEE = cms.vdouble(0.3),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaHcalPFClusterIso")
)


process.hltEle15CaloIdLTrackIdLIsoVLJet30L1MatchFilter = cms.EDFilter("HLTEgammaL1TMatchFilterRegional",
    L1SeedFilterTag = cms.InputTag("hltL1sSingleEG10OR15"),
    barrel_end = cms.double(1.4791),
    candIsolatedTag = cms.InputTag("hltEgammaCandidates"),
    candNonIsolatedTag = cms.InputTag(""),
    doIsolated = cms.bool(False),
    endcap_end = cms.double(2.65),
    l1CenJetsTag = cms.InputTag("hltGtStage2Digis","Jet"),
    l1IsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1NonIsolatedTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    l1TausTag = cms.InputTag("hltGtStage2Digis","Tau"),
    ncandcut = cms.int32(1),
    region_eta_size = cms.double(0.522),
    region_eta_size_ecap = cms.double(1.0),
    region_phi_size = cms.double(1.044),
    saveTags = cms.bool(True)
)


process.hltEle15CaloIdLTrackIdLIsoVLJet30OneOEMinusOneOPFilter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15CaloIdLTrackIdLIsoVLJet30PixelMatchFilter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(999999.0),
    thrRegularEE = cms.vdouble(999999.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","OneOESuperMinusOneOP")
)


process.hltEle15CaloIdLTrackIdLIsoVLJet30PixelMatchFilter = cms.EDFilter("HLTElectronPixelMatchFilter",
    candTag = cms.InputTag("hltEle15CaloIdLTrackIdLIsoVLJet30HcalIsoFilter"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    l1PixelSeedsTag = cms.InputTag("hltEgammaElectronPixelSeeds"),
    ncandcut = cms.int32(1),
    npixelmatchcut = cms.double(1.0),
    pixelVeto = cms.bool(False),
    s2_threshold = cms.double(0.4),
    s_a_phi1B = cms.double(0.0069),
    s_a_phi1F = cms.double(0.0076),
    s_a_phi1I = cms.double(0.0088),
    s_a_phi2B = cms.double(0.00037),
    s_a_phi2F = cms.double(0.00906),
    s_a_phi2I = cms.double(0.0007),
    s_a_rF = cms.double(0.04),
    s_a_rI = cms.double(0.027),
    s_a_zB = cms.double(0.012),
    saveTags = cms.bool(True),
    tanhSO10BarrelThres = cms.double(0.35),
    tanhSO10ForwardThres = cms.double(1.0),
    tanhSO10InterThres = cms.double(1.0),
    useS = cms.bool(False)
)


process.hltEle15CaloIdLTrackIdLIsoVLJet30TrackIsoFilter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15CaloIdLTrackIdLIsoVLJet30DphiFilter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.2),
    thrOverEEE = cms.vdouble(0.2),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEleGsfTrackIso")
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLClusterShapeLeg1Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLEtLeg1Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.013),
    thrRegularEE = cms.vdouble(0.035),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaClusterShape","sigmaIEtaIEta5x5")
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLClusterShapeLeg2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLEtLeg2Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(2),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.013),
    thrRegularEE = cms.vdouble(0.035),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaClusterShape","sigmaIEtaIEta5x5")
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLDetaLeg1Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg1Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.01),
    thrRegularEE = cms.vdouble(0.015),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","DetaSeed")
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLDetaLeg2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg2Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(2),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.01),
    thrRegularEE = cms.vdouble(0.015),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","DetaSeed")
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLDphiLeg1Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLDetaLeg1Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.07),
    thrRegularEE = cms.vdouble(0.1),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","Dphi")
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLDphiLeg2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLDetaLeg2Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(2),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.07),
    thrRegularEE = cms.vdouble(0.1),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","Dphi")
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLEcalIsoLeg1Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLHELeg1Filter"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.29, 0.21),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.5),
    thrOverEEE = cms.vdouble(0.5),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEcalPFClusterIso")
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLEcalIsoLeg2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLHELeg2Filter"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.29, 0.21),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(2),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.5),
    thrOverEEE = cms.vdouble(0.5),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEcalPFClusterIso")
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLEtLeg1Filter = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(15.0),
    etcutEE = cms.double(15.0),
    inputTag = cms.InputTag("hltEGL1VLowETSingleAndDoubleEGOrPairFilter"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(1),
    saveTags = cms.bool(True)
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLEtLeg2Filter = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(8.0),
    etcutEE = cms.double(8.0),
    inputTag = cms.InputTag("hltEGL1VLowETSingleAndDoubleEGOrPairFilter"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(2),
    saveTags = cms.bool(True)
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLHELeg1Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLClusterShapeLeg1Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.13),
    thrOverEEE = cms.vdouble(0.13),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLHELeg2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLClusterShapeLeg2Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(2),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.13),
    thrOverEEE = cms.vdouble(0.13),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLHcalIsoLeg1Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLEcalIsoLeg1Filter"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.2, 0.25),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.3),
    thrOverEEE = cms.vdouble(0.3),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaHcalPFClusterIso")
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLHcalIsoLeg2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLEcalIsoLeg2Filter"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.2, 0.25),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(2),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.3),
    thrOverEEE = cms.vdouble(0.3),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaHcalPFClusterIso")
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg1Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLPixelMatchLeg1Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(999999.0),
    thrRegularEE = cms.vdouble(999999.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","OneOESuperMinusOneOP")
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLPixelMatchLeg2Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(2),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(999999.0),
    thrRegularEE = cms.vdouble(999999.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","OneOESuperMinusOneOP")
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLPixelMatchLeg1Filter = cms.EDFilter("HLTElectronPixelMatchFilter",
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLHcalIsoLeg1Filter"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    l1PixelSeedsTag = cms.InputTag("hltEgammaElectronPixelSeeds"),
    ncandcut = cms.int32(1),
    npixelmatchcut = cms.double(1.0),
    pixelVeto = cms.bool(False),
    s2_threshold = cms.double(0.4),
    s_a_phi1B = cms.double(0.0069),
    s_a_phi1F = cms.double(0.0076),
    s_a_phi1I = cms.double(0.0088),
    s_a_phi2B = cms.double(0.00037),
    s_a_phi2F = cms.double(0.00906),
    s_a_phi2I = cms.double(0.0007),
    s_a_rF = cms.double(0.04),
    s_a_rI = cms.double(0.027),
    s_a_zB = cms.double(0.012),
    saveTags = cms.bool(True),
    tanhSO10BarrelThres = cms.double(0.35),
    tanhSO10ForwardThres = cms.double(1.0),
    tanhSO10InterThres = cms.double(1.0),
    useS = cms.bool(False)
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLPixelMatchLeg2Filter = cms.EDFilter("HLTElectronPixelMatchFilter",
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLHcalIsoLeg2Filter"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    l1PixelSeedsTag = cms.InputTag("hltEgammaElectronPixelSeeds"),
    ncandcut = cms.int32(2),
    npixelmatchcut = cms.double(1.0),
    pixelVeto = cms.bool(False),
    s2_threshold = cms.double(0.4),
    s_a_phi1B = cms.double(0.0069),
    s_a_phi1F = cms.double(0.0076),
    s_a_phi1I = cms.double(0.0088),
    s_a_phi2B = cms.double(0.00037),
    s_a_phi2F = cms.double(0.00906),
    s_a_phi2I = cms.double(0.0007),
    s_a_rF = cms.double(0.04),
    s_a_rI = cms.double(0.027),
    s_a_zB = cms.double(0.012),
    saveTags = cms.bool(True),
    tanhSO10BarrelThres = cms.double(0.35),
    tanhSO10ForwardThres = cms.double(1.0),
    tanhSO10InterThres = cms.double(1.0),
    useS = cms.bool(False)
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLTrackIsoLeg1Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLDphiLeg1Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.2),
    thrOverEEE = cms.vdouble(0.2),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEleGsfTrackIso")
)


process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLTrackIsoLeg2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLDphiLeg2Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(2),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.2),
    thrOverEEE = cms.vdouble(0.2),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEleGsfTrackIso")
)


process.hltEle15PFJet30EleCleaned = cms.EDFilter("HLTPFJetCollectionsFilter",
    MaxAbsJetEta = cms.double(2.5),
    MinJetPt = cms.double(30.0),
    MinNJets = cms.uint32(1),
    inputTag = cms.InputTag("hltEle15JetCollectionsForLeptonPlusPFJets"),
    originalTag = cms.InputTag("hltAK4PFJetsCorrected"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltEle15WPLoose1ClusterShapeFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEG15L1SingleEG15FilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.011),
    thrRegularEE = cms.vdouble(0.031),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaClusterShape","sigmaIEtaIEta5x5")
)


process.hltEle15WPLoose1EcalIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle15WPLoose1HEFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.325, 0.296, 0.283, 0.438),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(20.0),
    thrRegularEB2 = cms.vdouble(20.0),
    thrRegularEE1 = cms.vdouble(20.0),
    thrRegularEE2 = cms.vdouble(20.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEcalPFClusterIso")
)


process.hltEle15WPLoose1GsfDetaFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15WPLoose1GsfOneOEMinusOneOPFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.004),
    thrRegularEE = cms.vdouble(0.0055),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","DetaSeed")
)


process.hltEle15WPLoose1GsfDphiFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15WPLoose1GsfDetaFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.025),
    thrRegularEE = cms.vdouble(0.025),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","Dphi")
)


process.hltEle15WPLoose1GsfOneOEMinusOneOPFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15WPLoose1PMS2FilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.016),
    thrRegularEE = cms.vdouble(0.013),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","OneOESuperMinusOneOP")
)


process.hltEle15WPLoose1GsfTrackIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle15WPLoose1GsfDphiFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.029, 0.111, 0.114, 0.032),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(0.838),
    thrRegularEB2 = cms.vdouble(-0.385),
    thrRegularEE1 = cms.vdouble(-0.363),
    thrRegularEE2 = cms.vdouble(0.702),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEleGsfTrackIso")
)


process.hltEle15WPLoose1HEFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle15WPLoose1ClusterShapeFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.098, 0.159, 0.353, 0.423),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.025),
    thrOverEEB2 = cms.vdouble(0.025),
    thrOverEEE1 = cms.vdouble(0.02),
    thrOverEEE2 = cms.vdouble(0.02),
    thrRegularEB1 = cms.vdouble(0.3),
    thrRegularEB2 = cms.vdouble(0.3),
    thrRegularEE1 = cms.vdouble(0.3),
    thrRegularEE2 = cms.vdouble(0.3),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEle15WPLoose1HcalIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle15WPLoose1EcalIsoFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.259, 0.328, 0.414, 0.456),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(20.0),
    thrRegularEB2 = cms.vdouble(20.0),
    thrRegularEE1 = cms.vdouble(20.0),
    thrRegularEE2 = cms.vdouble(20.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaHcalPFClusterIso")
)


process.hltEle15WPLoose1PMS2FilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle15WPLoose1PixelMatchFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(70.0),
    thrRegularEE = cms.vdouble(45.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaPixelMatchVars","s2")
)


process.hltEle15WPLoose1PixelMatchFilterForHI = cms.EDFilter("HLTElectronPixelMatchFilter",
    candTag = cms.InputTag("hltEle15WPLoose1HcalIsoFilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    l1PixelSeedsTag = cms.InputTag("hltEgammaElectronPixelSeeds"),
    ncandcut = cms.int32(1),
    npixelmatchcut = cms.double(1.0),
    pixelVeto = cms.bool(False),
    s2_threshold = cms.double(0.4),
    s_a_phi1B = cms.double(0.0069),
    s_a_phi1F = cms.double(0.0076),
    s_a_phi1I = cms.double(0.0088),
    s_a_phi2B = cms.double(0.00037),
    s_a_phi2F = cms.double(0.00906),
    s_a_phi2I = cms.double(0.0007),
    s_a_rF = cms.double(0.04),
    s_a_rI = cms.double(0.027),
    s_a_zB = cms.double(0.012),
    saveTags = cms.bool(True),
    tanhSO10BarrelThres = cms.double(0.35),
    tanhSO10ForwardThres = cms.double(1.0),
    tanhSO10InterThres = cms.double(1.0),
    useS = cms.bool(False)
)


process.hltEle17WPLoose1ClusterShapeFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEG17L1SingleEGLowETOrEtFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.011),
    thrRegularEE = cms.vdouble(0.031),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaClusterShape","sigmaIEtaIEta5x5")
)


process.hltEle17WPLoose1EcalIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle17WPLoose1HEFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.325, 0.296, 0.283, 0.438),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(-0.581),
    thrRegularEB2 = cms.vdouble(-0.698),
    thrRegularEE1 = cms.vdouble(-0.892),
    thrRegularEE2 = cms.vdouble(-0.885),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEcalPFClusterIso")
)


process.hltEle17WPLoose1GsfDetaFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle17WPLoose1GsfOneOEMinusOneOPFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.004),
    thrRegularEE = cms.vdouble(0.0055),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","DetaSeed")
)


process.hltEle17WPLoose1GsfDphiFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle17WPLoose1GsfDetaFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.025),
    thrRegularEE = cms.vdouble(0.025),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","Dphi")
)


process.hltEle17WPLoose1GsfOneOEMinusOneOPFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle17WPLoose1PMS2FilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.016),
    thrRegularEE = cms.vdouble(0.013),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","OneOESuperMinusOneOP")
)


process.hltEle17WPLoose1GsfTrackIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle17WPLoose1GsfDphiFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.029, 0.111, 0.114, 0.032),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(0.838),
    thrRegularEB2 = cms.vdouble(-0.385),
    thrRegularEE1 = cms.vdouble(-0.363),
    thrRegularEE2 = cms.vdouble(0.702),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEleGsfTrackIso")
)


process.hltEle17WPLoose1HEFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle17WPLoose1ClusterShapeFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.098, 0.159, 0.353, 0.423),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.025),
    thrOverEEB2 = cms.vdouble(0.025),
    thrOverEEE1 = cms.vdouble(0.02),
    thrOverEEE2 = cms.vdouble(0.02),
    thrRegularEB1 = cms.vdouble(0.887),
    thrRegularEB2 = cms.vdouble(1.476),
    thrRegularEE1 = cms.vdouble(2.672),
    thrRegularEE2 = cms.vdouble(5.095),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEle17WPLoose1HcalIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle17WPLoose1EcalIsoFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.259, 0.328, 0.414, 0.456),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(0.786),
    thrRegularEB2 = cms.vdouble(0.298),
    thrRegularEE1 = cms.vdouble(0.402),
    thrRegularEE2 = cms.vdouble(-0.061),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaHcalPFClusterIso")
)


process.hltEle17WPLoose1PMS2FilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle17WPLoose1PixelMatchFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(70.0),
    thrRegularEE = cms.vdouble(45.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaPixelMatchVars","s2")
)


process.hltEle17WPLoose1PixelMatchFilterForHI = cms.EDFilter("HLTElectronPixelMatchFilter",
    candTag = cms.InputTag("hltEle17WPLoose1HcalIsoFilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    l1PixelSeedsTag = cms.InputTag("hltEgammaElectronPixelSeeds"),
    ncandcut = cms.int32(1),
    npixelmatchcut = cms.double(1.0),
    pixelVeto = cms.bool(False),
    s2_threshold = cms.double(0.4),
    s_a_phi1B = cms.double(0.0069),
    s_a_phi1F = cms.double(0.0076),
    s_a_phi1I = cms.double(0.0088),
    s_a_phi2B = cms.double(0.00037),
    s_a_phi2F = cms.double(0.00906),
    s_a_phi2I = cms.double(0.0007),
    s_a_rF = cms.double(0.04),
    s_a_rI = cms.double(0.027),
    s_a_zB = cms.double(0.012),
    saveTags = cms.bool(True),
    tanhSO10BarrelThres = cms.double(0.35),
    tanhSO10ForwardThres = cms.double(1.0),
    tanhSO10InterThres = cms.double(1.0),
    useS = cms.bool(False)
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg1Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLEtLeg1Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.013),
    thrRegularEE = cms.vdouble(0.035),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaClusterShape","sigmaIEtaIEta5x5")
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLEtLeg2Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(2),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.013),
    thrRegularEE = cms.vdouble(0.035),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaClusterShape","sigmaIEtaIEta5x5")
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLDZFilter = cms.EDFilter("HLT2PhotonPhotonDZ",
    MaxDZ = cms.double(0.2),
    MinDR = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPixHitsForDZ = cms.int32(0),
    checkSC = cms.bool(True),
    electronTag = cms.InputTag("hltEgammaGsfElectrons"),
    inputTag1 = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLTrackIsoLeg1Filter"),
    inputTag2 = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLTrackIsoLeg2Filter"),
    originTag1 = cms.VInputTag("hltEgammaCandidates"),
    originTag2 = cms.VInputTag("hltEgammaCandidates"),
    saveTags = cms.bool(True),
    triggerType1 = cms.int32(81),
    triggerType2 = cms.int32(81)
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLDetaLeg1Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg1Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.01),
    thrRegularEE = cms.vdouble(0.015),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","DetaSeed")
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLDetaLeg2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg2Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(2),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.01),
    thrRegularEE = cms.vdouble(0.015),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","DetaSeed")
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLDphiLeg1Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLDetaLeg1Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.07),
    thrRegularEE = cms.vdouble(0.1),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","Dphi")
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLDphiLeg2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLDetaLeg2Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(2),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.07),
    thrRegularEE = cms.vdouble(0.1),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","Dphi")
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg1Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLHELeg1Filter"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.29, 0.21),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.5),
    thrOverEEE = cms.vdouble(0.5),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEcalPFClusterIso")
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLHELeg2Filter"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.29, 0.21),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(2),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.5),
    thrOverEEE = cms.vdouble(0.5),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEcalPFClusterIso")
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLEtLeg1Filter = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(20.0),
    etcutEE = cms.double(20.0),
    inputTag = cms.InputTag("hltEGL1LowEG15Filter"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(1),
    saveTags = cms.bool(True)
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLEtLeg2Filter = cms.EDFilter("HLTEgammaEtFilter",
    etcutEB = cms.double(12.0),
    etcutEE = cms.double(12.0),
    inputTag = cms.InputTag("hltEGL1LowEG15Filter"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    ncandcut = cms.int32(2),
    saveTags = cms.bool(True)
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLHELeg1Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg1Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.13),
    thrOverEEE = cms.vdouble(0.13),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLHELeg2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg2Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(2),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.13),
    thrOverEEE = cms.vdouble(0.13),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg1Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg1Filter"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.2, 0.25),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.3),
    thrOverEEE = cms.vdouble(0.3),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaHcalPFClusterIso")
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg2Filter"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.2, 0.25),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(2),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.3),
    thrOverEEE = cms.vdouble(0.3),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaHcalPFClusterIso")
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg1Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg1Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(999999.0),
    thrRegularEE = cms.vdouble(999999.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","OneOESuperMinusOneOP")
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg2Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(2),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(999999.0),
    thrRegularEE = cms.vdouble(999999.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","OneOESuperMinusOneOP")
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg1Filter = cms.EDFilter("HLTElectronPixelMatchFilter",
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg1Filter"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    l1PixelSeedsTag = cms.InputTag("hltEgammaElectronPixelSeeds"),
    ncandcut = cms.int32(1),
    npixelmatchcut = cms.double(1.0),
    pixelVeto = cms.bool(False),
    s2_threshold = cms.double(0.4),
    s_a_phi1B = cms.double(0.0069),
    s_a_phi1F = cms.double(0.0076),
    s_a_phi1I = cms.double(0.0088),
    s_a_phi2B = cms.double(0.00037),
    s_a_phi2F = cms.double(0.00906),
    s_a_phi2I = cms.double(0.0007),
    s_a_rF = cms.double(0.04),
    s_a_rI = cms.double(0.027),
    s_a_zB = cms.double(0.012),
    saveTags = cms.bool(True),
    tanhSO10BarrelThres = cms.double(0.35),
    tanhSO10ForwardThres = cms.double(1.0),
    tanhSO10InterThres = cms.double(1.0),
    useS = cms.bool(False)
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg2Filter = cms.EDFilter("HLTElectronPixelMatchFilter",
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg2Filter"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    l1PixelSeedsTag = cms.InputTag("hltEgammaElectronPixelSeeds"),
    ncandcut = cms.int32(2),
    npixelmatchcut = cms.double(1.0),
    pixelVeto = cms.bool(False),
    s2_threshold = cms.double(0.4),
    s_a_phi1B = cms.double(0.0069),
    s_a_phi1F = cms.double(0.0076),
    s_a_phi1I = cms.double(0.0088),
    s_a_phi2B = cms.double(0.00037),
    s_a_phi2F = cms.double(0.00906),
    s_a_phi2I = cms.double(0.0007),
    s_a_rF = cms.double(0.04),
    s_a_rI = cms.double(0.027),
    s_a_zB = cms.double(0.012),
    saveTags = cms.bool(True),
    tanhSO10BarrelThres = cms.double(0.35),
    tanhSO10ForwardThres = cms.double(1.0),
    tanhSO10InterThres = cms.double(1.0),
    useS = cms.bool(False)
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLTrackIsoLeg1Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLDphiLeg1Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.2),
    thrOverEEE = cms.vdouble(0.2),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEleGsfTrackIso")
)


process.hltEle20Ele12CaloIdLTrackIdLIsoVLTrackIsoLeg2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20Ele12CaloIdLTrackIdLIsoVLDphiLeg2Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(2),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(0.2),
    thrOverEEE = cms.vdouble(0.2),
    thrRegularEB = cms.vdouble(-1.0),
    thrRegularEE = cms.vdouble(-1.0),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEleGsfTrackIso")
)


process.hltEle20PFJet15EleCleaned = cms.EDFilter("HLTPFJetCollectionsFilter",
    MaxAbsJetEta = cms.double(2.6),
    MinJetPt = cms.double(15.0),
    MinNJets = cms.uint32(1),
    inputTag = cms.InputTag("hltEle20JetCollectionsForLeptonPlusPFJets"),
    originalTag = cms.InputTag("hltAK4PFJetsCorrected"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltEle20WPLoose1ClusterShapeFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEG20L1SingleEG15EtFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.011),
    thrRegularEE = cms.vdouble(0.031),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaClusterShape","sigmaIEtaIEta5x5")
)


process.hltEle20WPLoose1EcalIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle20WPLoose1HEFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.325, 0.296, 0.283, 0.438),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(-0.581),
    thrRegularEB2 = cms.vdouble(-0.698),
    thrRegularEE1 = cms.vdouble(-0.892),
    thrRegularEE2 = cms.vdouble(-0.885),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEcalPFClusterIso")
)


process.hltEle20WPLoose1GsfDetaFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20WPLoose1GsfOneOEMinusOneOPFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.004),
    thrRegularEE = cms.vdouble(0.0055),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","DetaSeed")
)


process.hltEle20WPLoose1GsfDphiFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20WPLoose1GsfDetaFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.025),
    thrRegularEE = cms.vdouble(0.025),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","Dphi")
)


process.hltEle20WPLoose1GsfOneOEMinusOneOPFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20WPLoose1PMS2FilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.016),
    thrRegularEE = cms.vdouble(0.013),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","OneOESuperMinusOneOP")
)


process.hltEle20WPLoose1GsfTrackIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle20WPLoose1GsfDphiFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.029, 0.111, 0.114, 0.032),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(0.838),
    thrRegularEB2 = cms.vdouble(-0.385),
    thrRegularEE1 = cms.vdouble(-0.363),
    thrRegularEE2 = cms.vdouble(0.702),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEleGsfTrackIso")
)


process.hltEle20WPLoose1HEFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle20WPLoose1ClusterShapeFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.098, 0.159, 0.353, 0.423),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.025),
    thrOverEEB2 = cms.vdouble(0.025),
    thrOverEEE1 = cms.vdouble(0.02),
    thrOverEEE2 = cms.vdouble(0.02),
    thrRegularEB1 = cms.vdouble(0.887),
    thrRegularEB2 = cms.vdouble(1.476),
    thrRegularEE1 = cms.vdouble(2.672),
    thrRegularEE2 = cms.vdouble(5.095),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEle20WPLoose1HcalIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle20WPLoose1EcalIsoFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.259, 0.328, 0.414, 0.456),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(0.786),
    thrRegularEB2 = cms.vdouble(0.298),
    thrRegularEE1 = cms.vdouble(0.402),
    thrRegularEE2 = cms.vdouble(-0.061),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaHcalPFClusterIso")
)


process.hltEle20WPLoose1PMS2FilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20WPLoose1PixelMatchFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(70.0),
    thrRegularEE = cms.vdouble(45.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaPixelMatchVars","s2")
)


process.hltEle20WPLoose1PixelMatchFilterForHI = cms.EDFilter("HLTElectronPixelMatchFilter",
    candTag = cms.InputTag("hltEle20WPLoose1HcalIsoFilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    l1PixelSeedsTag = cms.InputTag("hltEgammaElectronPixelSeeds"),
    ncandcut = cms.int32(1),
    npixelmatchcut = cms.double(1.0),
    pixelVeto = cms.bool(False),
    s2_threshold = cms.double(0.4),
    s_a_phi1B = cms.double(0.0069),
    s_a_phi1F = cms.double(0.0076),
    s_a_phi1I = cms.double(0.0088),
    s_a_phi2B = cms.double(0.00037),
    s_a_phi2F = cms.double(0.00906),
    s_a_phi2I = cms.double(0.0007),
    s_a_rF = cms.double(0.04),
    s_a_rI = cms.double(0.027),
    s_a_zB = cms.double(0.012),
    saveTags = cms.bool(True),
    tanhSO10BarrelThres = cms.double(0.35),
    tanhSO10ForwardThres = cms.double(1.0),
    tanhSO10InterThres = cms.double(1.0),
    useS = cms.bool(False)
)


process.hltEle20erJetC15WPTightClusterShapeFilter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEGJetForPPRefEtFilter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.011),
    thrRegularEE = cms.vdouble(0.0305),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaClusterShape","sigmaIEtaIEta5x5")
)


process.hltEle20erJetC15WPTightEcalIsoFilter = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle20erJetC15WPTightHEFilter"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.325, 0.296, 0.283, 0.438),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.03),
    thrOverEEB2 = cms.vdouble(0.03),
    thrOverEEE1 = cms.vdouble(0.025),
    thrOverEEE2 = cms.vdouble(0.025),
    thrRegularEB1 = cms.vdouble(-0.581),
    thrRegularEB2 = cms.vdouble(-0.698),
    thrRegularEE1 = cms.vdouble(-0.892),
    thrRegularEE2 = cms.vdouble(-0.885),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEcalPFClusterIso")
)


process.hltEle20erJetC15WPTightGsfDetaFilter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20erJetC15WPTightGsfMissingHitsFilter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.004),
    thrRegularEE = cms.vdouble(0.005),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","DetaSeed")
)


process.hltEle20erJetC15WPTightGsfDphiFilter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20erJetC15WPTightGsfDetaFilter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.02),
    thrRegularEE = cms.vdouble(0.023),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","Dphi")
)


process.hltEle20erJetC15WPTightGsfMissingHitsFilter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20erJetC15WPTightGsfOneOEMinusOneOPFilter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(999.0),
    thrRegularEE = cms.vdouble(1.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","MissingHits")
)


process.hltEle20erJetC15WPTightGsfOneOEMinusOneOPFilter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20erJetC15WPTightPMS2Filter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.012),
    thrRegularEE = cms.vdouble(0.011),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","OneOESuperMinusOneOP")
)


process.hltEle20erJetC15WPTightGsfTrackIsoFilter = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle20erJetC15WPTightGsfDphiFilter"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.029, 0.111, 0.114, 0.032),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.03),
    thrOverEEB2 = cms.vdouble(0.03),
    thrOverEEE1 = cms.vdouble(0.025),
    thrOverEEE2 = cms.vdouble(0.025),
    thrRegularEB1 = cms.vdouble(0.838),
    thrRegularEB2 = cms.vdouble(-0.385),
    thrRegularEE1 = cms.vdouble(-0.363),
    thrRegularEE2 = cms.vdouble(0.702),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEleGsfTrackIso")
)


process.hltEle20erJetC15WPTightHEFilter = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle20erJetC15WPTightClusterShapeFilter"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.098, 0.159, 0.353, 0.423),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.02),
    thrOverEEB2 = cms.vdouble(0.02),
    thrOverEEE1 = cms.vdouble(0.015),
    thrOverEEE2 = cms.vdouble(0.015),
    thrRegularEB1 = cms.vdouble(0.887),
    thrRegularEB2 = cms.vdouble(1.476),
    thrRegularEE1 = cms.vdouble(2.672),
    thrRegularEE2 = cms.vdouble(5.095),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEle20erJetC15WPTightHcalIsoFilter = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle20erJetC15WPTightEcalIsoFilter"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.259, 0.328, 0.414, 0.456),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.03),
    thrOverEEB2 = cms.vdouble(0.03),
    thrOverEEE1 = cms.vdouble(0.025),
    thrOverEEE2 = cms.vdouble(0.025),
    thrRegularEB1 = cms.vdouble(0.786),
    thrRegularEB2 = cms.vdouble(0.298),
    thrRegularEE1 = cms.vdouble(0.402),
    thrRegularEE2 = cms.vdouble(-0.061),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaHcalPFClusterIso")
)


process.hltEle20erJetC15WPTightPMS2Filter = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle20erJetC15WPTightPixelMatchFilter"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(70.0),
    thrRegularEE = cms.vdouble(45.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaPixelMatchVars","s2")
)


process.hltEle20erJetC15WPTightPixelMatchFilter = cms.EDFilter("HLTElectronPixelMatchFilter",
    candTag = cms.InputTag("hltEle20erJetC15WPTightHcalIsoFilter"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    l1PixelSeedsTag = cms.InputTag("hltEgammaElectronPixelSeeds"),
    ncandcut = cms.int32(1),
    npixelmatchcut = cms.double(1.0),
    pixelVeto = cms.bool(False),
    s2_threshold = cms.double(0.4),
    s_a_phi1B = cms.double(0.0069),
    s_a_phi1F = cms.double(0.0076),
    s_a_phi1I = cms.double(0.0088),
    s_a_phi2B = cms.double(0.00037),
    s_a_phi2F = cms.double(0.00906),
    s_a_phi2I = cms.double(0.0007),
    s_a_rF = cms.double(0.04),
    s_a_rI = cms.double(0.027),
    s_a_zB = cms.double(0.012),
    saveTags = cms.bool(True),
    tanhSO10BarrelThres = cms.double(0.35),
    tanhSO10ForwardThres = cms.double(1.0),
    tanhSO10InterThres = cms.double(1.0),
    useS = cms.bool(False)
)


process.hltEle30WPLoose1ClusterShapeFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEG30L1SingleEG21EtFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.011),
    thrRegularEE = cms.vdouble(0.031),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaClusterShape","sigmaIEtaIEta5x5")
)


process.hltEle30WPLoose1EcalIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle30WPLoose1HEFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.325, 0.296, 0.283, 0.438),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(-0.581),
    thrRegularEB2 = cms.vdouble(-0.698),
    thrRegularEE1 = cms.vdouble(-0.892),
    thrRegularEE2 = cms.vdouble(-0.885),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEcalPFClusterIso")
)


process.hltEle30WPLoose1GsfDetaFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle30WPLoose1GsfOneOEMinusOneOPFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.004),
    thrRegularEE = cms.vdouble(0.0055),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","DetaSeed")
)


process.hltEle30WPLoose1GsfDphiFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle30WPLoose1GsfDetaFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.025),
    thrRegularEE = cms.vdouble(0.025),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","Dphi")
)


process.hltEle30WPLoose1GsfOneOEMinusOneOPFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle30WPLoose1PMS2FilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.016),
    thrRegularEE = cms.vdouble(0.013),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","OneOESuperMinusOneOP")
)


process.hltEle30WPLoose1GsfTrackIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle30WPLoose1GsfDphiFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.029, 0.111, 0.114, 0.032),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(0.838),
    thrRegularEB2 = cms.vdouble(-0.385),
    thrRegularEE1 = cms.vdouble(-0.363),
    thrRegularEE2 = cms.vdouble(0.702),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEleGsfTrackIso")
)


process.hltEle30WPLoose1HEFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle30WPLoose1ClusterShapeFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.098, 0.159, 0.353, 0.423),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.025),
    thrOverEEB2 = cms.vdouble(0.025),
    thrOverEEE1 = cms.vdouble(0.02),
    thrOverEEE2 = cms.vdouble(0.02),
    thrRegularEB1 = cms.vdouble(0.887),
    thrRegularEB2 = cms.vdouble(1.476),
    thrRegularEE1 = cms.vdouble(2.672),
    thrRegularEE2 = cms.vdouble(5.095),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEle30WPLoose1HcalIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle30WPLoose1EcalIsoFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.259, 0.328, 0.414, 0.456),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(0.786),
    thrRegularEB2 = cms.vdouble(0.298),
    thrRegularEE1 = cms.vdouble(0.402),
    thrRegularEE2 = cms.vdouble(-0.061),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaHcalPFClusterIso")
)


process.hltEle30WPLoose1PMS2FilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle30WPLoose1PixelMatchFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(70.0),
    thrRegularEE = cms.vdouble(45.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaPixelMatchVars","s2")
)


process.hltEle30WPLoose1PixelMatchFilterForHI = cms.EDFilter("HLTElectronPixelMatchFilter",
    candTag = cms.InputTag("hltEle30WPLoose1HcalIsoFilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    l1PixelSeedsTag = cms.InputTag("hltEgammaElectronPixelSeeds"),
    ncandcut = cms.int32(1),
    npixelmatchcut = cms.double(1.0),
    pixelVeto = cms.bool(False),
    s2_threshold = cms.double(0.4),
    s_a_phi1B = cms.double(0.0069),
    s_a_phi1F = cms.double(0.0076),
    s_a_phi1I = cms.double(0.0088),
    s_a_phi2B = cms.double(0.00037),
    s_a_phi2F = cms.double(0.00906),
    s_a_phi2I = cms.double(0.0007),
    s_a_rF = cms.double(0.04),
    s_a_rI = cms.double(0.027),
    s_a_zB = cms.double(0.012),
    saveTags = cms.bool(True),
    tanhSO10BarrelThres = cms.double(0.35),
    tanhSO10ForwardThres = cms.double(1.0),
    tanhSO10InterThres = cms.double(1.0),
    useS = cms.bool(False)
)


process.hltEle40WPLoose1ClusterShapeFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEG40L1SingleEG21EtFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.011),
    thrRegularEE = cms.vdouble(0.031),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaClusterShape","sigmaIEtaIEta5x5")
)


process.hltEle40WPLoose1EcalIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle40WPLoose1HEFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.325, 0.296, 0.283, 0.438),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(-0.581),
    thrRegularEB2 = cms.vdouble(-0.698),
    thrRegularEE1 = cms.vdouble(-0.892),
    thrRegularEE2 = cms.vdouble(-0.885),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEcalPFClusterIso")
)


process.hltEle40WPLoose1GsfDetaFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle40WPLoose1GsfOneOEMinusOneOPFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.004),
    thrRegularEE = cms.vdouble(0.0055),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","DetaSeed")
)


process.hltEle40WPLoose1GsfDphiFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle40WPLoose1GsfDetaFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.025),
    thrRegularEE = cms.vdouble(0.025),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","Dphi")
)


process.hltEle40WPLoose1GsfOneOEMinusOneOPFilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle40WPLoose1PMS2FilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(0.016),
    thrRegularEE = cms.vdouble(0.013),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaGsfTrackVars","OneOESuperMinusOneOP")
)


process.hltEle40WPLoose1GsfTrackIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle40WPLoose1GsfDphiFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.029, 0.111, 0.114, 0.032),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(0.838),
    thrRegularEB2 = cms.vdouble(-0.385),
    thrRegularEE1 = cms.vdouble(-0.363),
    thrRegularEE2 = cms.vdouble(0.702),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaEleGsfTrackIso")
)


process.hltEle40WPLoose1HEFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle40WPLoose1ClusterShapeFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.098, 0.159, 0.353, 0.423),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.025),
    thrOverEEB2 = cms.vdouble(0.025),
    thrOverEEE1 = cms.vdouble(0.02),
    thrOverEEE2 = cms.vdouble(0.02),
    thrRegularEB1 = cms.vdouble(0.887),
    thrRegularEB2 = cms.vdouble(1.476),
    thrRegularEE1 = cms.vdouble(2.672),
    thrRegularEE2 = cms.vdouble(5.095),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaHoverE")
)


process.hltEle40WPLoose1HcalIsoFilterForHI = cms.EDFilter("HLTEgammaGenericQuadraticEtaFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.0, 1.479, 2.1),
    candTag = cms.InputTag("hltEle40WPLoose1EcalIsoFilterForHI"),
    doRhoCorrection = cms.bool(True),
    effectiveAreas = cms.vdouble(0.259, 0.328, 0.414, 0.456),
    energyLowEdges = cms.vdouble(0.0),
    etaBoundaryEB12 = cms.double(1.0),
    etaBoundaryEE12 = cms.double(2.1),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag("hltFixedGridRhoFastjetAllCaloForMuons"),
    saveTags = cms.bool(True),
    thrOverE2EB1 = cms.vdouble(0.0),
    thrOverE2EB2 = cms.vdouble(0.0),
    thrOverE2EE1 = cms.vdouble(0.0),
    thrOverE2EE2 = cms.vdouble(0.0),
    thrOverEEB1 = cms.vdouble(0.035),
    thrOverEEB2 = cms.vdouble(0.035),
    thrOverEEE1 = cms.vdouble(0.03),
    thrOverEEE2 = cms.vdouble(0.03),
    thrRegularEB1 = cms.vdouble(0.786),
    thrRegularEB2 = cms.vdouble(0.298),
    thrRegularEE1 = cms.vdouble(0.402),
    thrRegularEE2 = cms.vdouble(-0.061),
    useEt = cms.bool(True),
    varTag = cms.InputTag("hltEgammaHcalPFClusterIso")
)


process.hltEle40WPLoose1PMS2FilterForHI = cms.EDFilter("HLTEgammaGenericFilter",
    absEtaLowEdges = cms.vdouble(0.0, 1.479),
    candTag = cms.InputTag("hltEle40WPLoose1PixelMatchFilterForHI"),
    doRhoCorrection = cms.bool(False),
    effectiveAreas = cms.vdouble(0.0, 0.0),
    energyLowEdges = cms.vdouble(0.0),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    lessThan = cms.bool(True),
    ncandcut = cms.int32(1),
    rhoMax = cms.double(99999999.0),
    rhoScale = cms.double(1.0),
    rhoTag = cms.InputTag(""),
    saveTags = cms.bool(True),
    thrOverE2EB = cms.vdouble(-1.0),
    thrOverE2EE = cms.vdouble(-1.0),
    thrOverEEB = cms.vdouble(-1.0),
    thrOverEEE = cms.vdouble(-1.0),
    thrRegularEB = cms.vdouble(70.0),
    thrRegularEE = cms.vdouble(45.0),
    useEt = cms.bool(False),
    varTag = cms.InputTag("hltEgammaPixelMatchVars","s2")
)


process.hltEle40WPLoose1PixelMatchFilterForHI = cms.EDFilter("HLTElectronPixelMatchFilter",
    candTag = cms.InputTag("hltEle40WPLoose1HcalIsoFilterForHI"),
    l1EGCand = cms.InputTag("hltEgammaCandidates"),
    l1PixelSeedsTag = cms.InputTag("hltEgammaElectronPixelSeeds"),
    ncandcut = cms.int32(1),
    npixelmatchcut = cms.double(1.0),
    pixelVeto = cms.bool(False),
    s2_threshold = cms.double(0.4),
    s_a_phi1B = cms.double(0.0069),
    s_a_phi1F = cms.double(0.0076),
    s_a_phi1I = cms.double(0.0088),
    s_a_phi2B = cms.double(0.00037),
    s_a_phi2F = cms.double(0.00906),
    s_a_phi2I = cms.double(0.0007),
    s_a_rF = cms.double(0.04),
    s_a_rI = cms.double(0.027),
    s_a_zB = cms.double(0.012),
    saveTags = cms.bool(True),
    tanhSO10BarrelThres = cms.double(0.35),
    tanhSO10ForwardThres = cms.double(1.0),
    tanhSO10InterThres = cms.double(1.0),
    useS = cms.bool(False)
)


process.hltFirstStepGoodPrimaryVerticesForRefPP = cms.EDFilter("PrimaryVertexObjectFilter",
    filterParams = cms.PSet(
        maxRho = cms.double(2.0),
        maxZ = cms.double(15.0),
        minNdof = cms.double(25.0)
    ),
    src = cms.InputTag("hltFullIter0PrimaryVerticesForRefPP")
)


process.hltFullTrackFilterForDmeson = cms.EDFilter("HLTSingleVertexPixelTrackFilter",
    MaxEta = cms.double(9999.0),
    MaxPt = cms.double(10000.0),
    MaxVz = cms.double(9999.0),
    MinPt = cms.double(0.0),
    MinSep = cms.double(999.0),
    MinTrks = cms.int32(0),
    saveTags = cms.bool(True),
    trackCollection = cms.InputTag("hltFullCandsForRefPP"),
    vertexCollection = cms.InputTag("hltFullOnlinePrimaryVerticesForRefPP")
)


process.hltFullTrackHighPt18 = cms.EDFilter("HLTSingleVertexPixelTrackFilter",
    MaxEta = cms.double(2.4),
    MaxPt = cms.double(9999.0),
    MaxVz = cms.double(15.0),
    MinPt = cms.double(18.0),
    MinSep = cms.double(9999.0),
    MinTrks = cms.int32(1),
    saveTags = cms.bool(True),
    trackCollection = cms.InputTag("hltFullCandsForHighPtTrigger"),
    vertexCollection = cms.InputTag("hltFullOnlinePrimaryVerticesForRefPP")
)


process.hltFullTrackHighPt24 = cms.EDFilter("HLTSingleVertexPixelTrackFilter",
    MaxEta = cms.double(2.4),
    MaxPt = cms.double(9999.0),
    MaxVz = cms.double(15.0),
    MinPt = cms.double(24.0),
    MinSep = cms.double(9999.0),
    MinTrks = cms.int32(1),
    saveTags = cms.bool(True),
    trackCollection = cms.InputTag("hltFullCandsForHighPtTrigger"),
    vertexCollection = cms.InputTag("hltFullOnlinePrimaryVerticesForRefPP")
)


process.hltFullTrackHighPt34 = cms.EDFilter("HLTSingleVertexPixelTrackFilter",
    MaxEta = cms.double(2.4),
    MaxPt = cms.double(9999.0),
    MaxVz = cms.double(15.0),
    MinPt = cms.double(34.0),
    MinSep = cms.double(9999.0),
    MinTrks = cms.int32(1),
    saveTags = cms.bool(True),
    trackCollection = cms.InputTag("hltFullCandsForHighPtTrigger"),
    vertexCollection = cms.InputTag("hltFullOnlinePrimaryVerticesForRefPP")
)


process.hltFullTrackHighPt45 = cms.EDFilter("HLTSingleVertexPixelTrackFilter",
    MaxEta = cms.double(2.4),
    MaxPt = cms.double(9999.0),
    MaxVz = cms.double(15.0),
    MinPt = cms.double(45.0),
    MinSep = cms.double(9999.0),
    MinTrks = cms.int32(1),
    saveTags = cms.bool(True),
    trackCollection = cms.InputTag("hltFullCandsForHighPtTrigger"),
    vertexCollection = cms.InputTag("hltFullOnlinePrimaryVerticesForRefPP")
)


process.hltHIDoublePhoton15Eta3p1 = cms.EDFilter("HLT1Photon",
    MaxEta = cms.double(3.1),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(2),
    MinPt = cms.double(15.0),
    inputTag = cms.InputTag("hltRecoHIEcalWithCleaningCandidate"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(81)
)


process.hltHIDoublePhoton15Mass501000FilterEta3p1 = cms.EDFilter("HLTPMMassFilter",
    beamSpot = cms.InputTag("hltOnlineBeamSpot"),
    candTag = cms.InputTag("hltHIDoublePhoton15Eta3p1"),
    isElectron1 = cms.untracked.bool(False),
    isElectron2 = cms.untracked.bool(False),
    l1EGCand = cms.InputTag(""),
    lowerMassCut = cms.double(50.0),
    nZcandcut = cms.int32(1),
    reqOppCharge = cms.untracked.bool(False),
    saveTags = cms.bool(True),
    upperMassCut = cms.double(1000.0)
)


process.hltHIPhoton10Eta1p5 = cms.EDFilter("HLT1Photon",
    MaxEta = cms.double(1.5),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(10.0),
    inputTag = cms.InputTag("hltRecoHIEcalWithCleaningCandidate"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(81)
)


process.hltHIPhoton10Eta3p1 = cms.EDFilter("HLT1Photon",
    MaxEta = cms.double(3.1),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(10.0),
    inputTag = cms.InputTag("hltRecoHIEcalWithCleaningCandidate"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(81)
)


process.hltHIPhoton15Eta1p5 = cms.EDFilter("HLT1Photon",
    MaxEta = cms.double(1.5),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(15.0),
    inputTag = cms.InputTag("hltRecoHIEcalWithCleaningCandidate"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(81)
)


process.hltHIPhoton15Eta3p1 = cms.EDFilter("HLT1Photon",
    MaxEta = cms.double(3.1),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(15.0),
    inputTag = cms.InputTag("hltRecoHIEcalWithCleaningCandidate"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(81)
)


process.hltHIPhoton20Eta1p5 = cms.EDFilter("HLT1Photon",
    MaxEta = cms.double(1.5),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(20.0),
    inputTag = cms.InputTag("hltRecoHIEcalWithCleaningCandidate"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(81)
)


process.hltHIPhoton20Eta3p1 = cms.EDFilter("HLT1Photon",
    MaxEta = cms.double(3.1),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(20.0),
    inputTag = cms.InputTag("hltRecoHIEcalWithCleaningCandidate"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(81)
)


process.hltHIPhoton30Eta1p5 = cms.EDFilter("HLT1Photon",
    MaxEta = cms.double(1.5),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(30.0),
    inputTag = cms.InputTag("hltRecoHIEcalWithCleaningCandidate"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(81)
)


process.hltHIPhoton30Eta3p1 = cms.EDFilter("HLT1Photon",
    MaxEta = cms.double(3.1),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(30.0),
    inputTag = cms.InputTag("hltRecoHIEcalWithCleaningCandidate"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(81)
)


process.hltHIPhoton40Eta1p5 = cms.EDFilter("HLT1Photon",
    MaxEta = cms.double(1.5),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(40.0),
    inputTag = cms.InputTag("hltRecoHIEcalWithCleaningCandidate"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(81)
)


process.hltHIPhoton40Eta3p1 = cms.EDFilter("HLT1Photon",
    MaxEta = cms.double(3.1),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(40.0),
    inputTag = cms.InputTag("hltRecoHIEcalWithCleaningCandidate"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(81)
)


process.hltHIPhoton50Eta1p5 = cms.EDFilter("HLT1Photon",
    MaxEta = cms.double(1.5),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(50.0),
    inputTag = cms.InputTag("hltRecoHIEcalWithCleaningCandidate"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(81)
)


process.hltHIPhoton50Eta3p1 = cms.EDFilter("HLT1Photon",
    MaxEta = cms.double(3.1),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(50.0),
    inputTag = cms.InputTag("hltRecoHIEcalWithCleaningCandidate"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(81)
)


process.hltHIPhoton60Eta1p5 = cms.EDFilter("HLT1Photon",
    MaxEta = cms.double(1.5),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(60.0),
    inputTag = cms.InputTag("hltRecoHIEcalWithCleaningCandidate"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(81)
)


process.hltHIPhoton60Eta3p1 = cms.EDFilter("HLT1Photon",
    MaxEta = cms.double(3.1),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(60.0),
    inputTag = cms.InputTag("hltRecoHIEcalWithCleaningCandidate"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(81)
)


process.hltHT80 = cms.EDFilter("HLTHtMhtFilter",
    htLabels = cms.VInputTag("hltHtMht"),
    meffSlope = cms.vdouble(1.0),
    mhtLabels = cms.VInputTag("hltHtMht"),
    minHt = cms.vdouble(80.0),
    minMeff = cms.vdouble(0.0),
    minMht = cms.vdouble(0.0),
    saveTags = cms.bool(True)
)


process.hltHcalCalibTypeFilter = cms.EDFilter("HLTHcalCalibTypeFilter",
    CalibTypes = cms.vint32(1, 2, 3, 4, 5, 
        6),
    FilterSummary = cms.untracked.bool(False),
    InputTag = cms.InputTag("rawDataCollector")
)


process.hltJetsForCoreTracking = cms.EDFilter("CandPtrSelector",
    cut = cms.string('pt > 100 && abs(eta) < 2.5'),
    src = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed")
)


process.hltL1EventNumberL1Fat = cms.EDFilter("HLTL1NumberFilter",
    fedId = cms.int32(1024),
    invert = cms.bool(False),
    period = cms.uint32(107),
    rawInput = cms.InputTag("rawDataCollector"),
    useTCDSEventNumber = cms.bool(True)
)


process.hltL1fForIterL3L1fL1DoubleMu0SQL1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltIterL3MuonL1MuonNoL2Selector"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1DoubleMu0SQL1Filtered0"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fForIterL3L1fL1DoubleMu0SQOSL1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltIterL3MuonL1MuonNoL2Selector"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1DoubleMu0SQOSL1Filtered0"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fForIterL3L1fL1sDoubleMu0L1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltIterL3MuonL1MuonNoL2Selector"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sDoubleMu0L1Filtered0"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fForIterL3L1fL1sDoubleMu10L1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltIterL3MuonL1MuonNoL2Selector"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sDoubleMu10L1Filtered0"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fForIterL3L1fL1sL1DoubleMu0SQOSL1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltIterL3MuonL1MuonNoL2Selector"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sL1DoubleMu0SQOSL1Filtered0"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fForIterL3L1fL1sMu10lqL1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltIterL3MuonL1MuonNoL2Selector"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sMu10lqL1Filtered0"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fForIterL3L1fL1sSingleMu3L1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltIterL3MuonL1MuonNoL2Selector"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sSingleMu3L1Filtered0"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fForIterL3L1fL1sSingleMu3OR5L1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltIterL3MuonL1MuonNoL2Selector"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sSingleMu3OR5L1Filtered0"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fForIterL3L1fL1sSingleMu7L1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltIterL3MuonL1MuonNoL2Selector"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sSingleMu7L1Filtered0"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fForIterL3L1fMu3OR5TrackFiltered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltIterL3MuonL1MuonNoL2Selector"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fMu3OR5TrackFiltered0"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fForIterL3L1fMu3TrackFiltered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltIterL3MuonL1MuonNoL2Selector"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fMu3TrackFiltered0"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fForIterL3L1fMu7p5TrackFiltered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltIterL3MuonL1MuonNoL2Selector"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fMu7p5TrackFiltered0"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fL1DoubleMu0SQL1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(2),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sDoubleMu0SQ"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fL1DoubleMu0SQOSL1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(2),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sEmuDoubleMu0SQOS"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fL1sDoubleMu0L1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(2),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sDoubleMu0"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fL1sDoubleMu0L1HighQFiltered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(2),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sDoubleMu0"),
    SelectQualities = cms.vint32(11, 12, 13, 14),
    saveTags = cms.bool(True)
)


process.hltL1fL1sDoubleMu10L1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(2),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sDoubleMu10"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fL1sDoubleMuOpenL1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(2),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sDoubleMuOpen"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fL1sDoubleMuOpenOSL1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(2),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sDoubleMuOpenOS"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fL1sDoubleMuOpenSSL1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(2),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sDoubleMuOpenSS"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fL1sL1DoubleMu0SQOSL1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(2),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sDoubleMu0SQOS"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fL1sMu10lqL1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sSingleMu10LowQ"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fL1sSingleMu12L1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sSingleMu12"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fL1sSingleMu16L1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sSingleMu16"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fL1sSingleMu3L1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sSingleMu3"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fL1sSingleMu3OR5L1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sSingleMu3OR5"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fL1sSingleMu7L1Filtered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sSingleMu7"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fMu3OR5TrackFiltered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sSingleMu3OR5"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fMu3TrackFiltered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sSingleMu3"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1fMu7p5TrackFiltered0 = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(2.5),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sSingleMu5IorSingleMu7"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltL1sAlCaEcalPi0EtaForHI = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_AlwaysTrue OR L1_DoubleEG_15_10 OR L1_DoubleEG_18_17 OR L1_DoubleEG_20_18 OR L1_DoubleEG_22_10 OR L1_DoubleEG_22_12 OR L1_DoubleEG_22_15 OR L1_DoubleEG_23_10 OR L1_DoubleEG_24_17 OR L1_DoubleEG_25_12 OR L1_DoubleJet100er2p7 OR L1_DoubleJet112er2p7 OR L1_DoubleJet120er2p7 OR L1_DoubleJet40er2p7 OR L1_DoubleJet50er2p7 OR L1_DoubleJet60er2p7 OR L1_DoubleJet80er2p7 OR L1_IsolatedBunch OR L1_SingleEG10 OR L1_SingleEG15 OR L1_SingleEG18 OR L1_SingleEG24 OR L1_SingleEG26 OR L1_SingleEG28 OR L1_SingleEG30 OR L1_SingleEG32 OR L1_SingleEG34 OR L1_SingleEG36 OR L1_SingleEG38 OR L1_SingleEG40 OR L1_SingleEG42 OR L1_SingleEG45 OR L1_SingleEG5 OR L1_SingleEG50 OR L1_SingleIsoEG18 OR L1_SingleIsoEG20 OR L1_SingleIsoEG22 OR L1_SingleIsoEG24 OR L1_SingleIsoEG26 OR L1_SingleIsoEG28 OR L1_SingleIsoEG30 OR L1_SingleIsoEG32 OR L1_SingleIsoEG34 OR L1_SingleIsoEG36 OR L1_SingleJet120 OR L1_SingleJet140 OR L1_SingleJet150 OR L1_SingleJet16 OR L1_SingleJet160 OR L1_SingleJet170 OR L1_SingleJet180 OR L1_SingleJet20 OR L1_SingleJet200 OR L1_SingleJet35 OR L1_SingleJet60 OR L1_SingleJet90'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sDijet16And12MidEta2p7 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_DoubleJet16And12er2p7'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sDijet16And8MidEta2p7 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_DoubleJet16And8er2p7'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sDijet20And12MidEta2p7 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_DoubleJet20And12er2p7'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sDijet20And8MidEta2p7 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_DoubleJet20And8er2p7'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sDijet28And16MidEta2p7 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_DoubleJet28And16er2p7'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sDoubleMu0 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_DoubleMu0'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sDoubleMu0SQ = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_DoubleMu0_SQ'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sDoubleMu0SQOS = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_DoubleMu0_SQ_OS OR L1_DoubleMu0_SQ'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sDoubleMu10 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_DoubleMu10'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sDoubleMuOpen = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_DoubleMuOpen'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sDoubleMuOpenOS = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_DoubleMuOpen_OS'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sDoubleMuOpenSS = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_DoubleMuOpen_SS'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sEGJetForPPRef = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleEG15er2p1_Jet12er2p7_dR_Min0p3 OR L1_SingleEG18er2p1_Jet16er2p7_dR_Min0p3'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sEmuDoubleMu0SQOS = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_DoubleMu0_SQ_OS'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sHTTForBeamSpotPP5TeV = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_DoubleJet40er2p7 OR L1_DoubleJet50er2p7 OR L1_DoubleJet60er2p7 OR L1_DoubleJet80er2p7 OR L1_DoubleJet100er2p7 OR L1_DoubleJet112er2p7 OR L1_DoubleJet120er2p7 OR L1_DoubleJet150er2p7 OR L1_SingleJet80 OR L1_SingleJet90 OR L1_SingleJet120 OR L1_SingleJet140 OR L1_SingleJet150 OR L1_SingleJet160 OR L1_SingleJet170 OR L1_SingleJet180 OR L1_SingleJet200'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sL1UnpairedBunchBptxMinus = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_UnpairedBunchBptxMinus'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sL1UnpairedBunchBptxPlus = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_UnpairedBunchBptxPlus'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sL1ZeroBiasFirstCollisionAfterAbortGap = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_FirstCollisionInOrbit'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sLowEG15 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleEG10 OR L1_SingleEG15 OR L1_DoubleEG_10_5'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sNotBptxOR = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_NotBptxOR'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleEG10 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleEG10'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleEG10OR15 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleEG10 OR L1_SingleEG15'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleEG15 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleEG15'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleEG21 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleEG21'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleEG2Or5 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleEG2_BptxAND OR L1_SingleEG5'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleEG30 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleEG30'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleEG5 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleEG5'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleEGLowETor = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleEG10 OR L1_SingleEG15 OR L1_SingleEG18'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleJet16 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleJet16'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleJet20FWD = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleJet20_FWD'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleJet24 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleJet24'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleJet32 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleJet32'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleJet35FWD = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleJet35_FWD'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleJet35Fwd = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleJet35_FWD'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleJet44 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleJet44'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleJet60 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleJet60'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleJet60FWD = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleJet60_FWD'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleJet60Fwd = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleJet60_FWD'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleJet80 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleJet80'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleJet8BptxAND = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleJet8_BptxAND'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleJet90 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleJet90'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleJet90Fwd = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleJet90_FWD'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleMu10LowQ = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleMu10_LowQ'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleMu12 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleMu12'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleMu16 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleMu16'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleMu3 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleMu3'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleMu3OR5 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleMu3 OR L1_SingleMu5'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleMu5IorSingleMu7 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleMu5 OR L1_SingleMu7'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleMu7 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleMu7'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sSingleMu7to30 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleMu7 OR L1_SingleMu12 OR L1_SingleMu16 OR L1_SingleMu18 OR L1_SingleMu20 OR L1_SingleMu22 OR L1_SingleMu25 OR L1_SingleMu30'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sVLowETSingleAndDoubleEG = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_SingleEG10 OR L1_SingleEG15 OR L1_SingleEG18 OR L1_DoubleEG_15_10 OR L1_DoubleEG_10_5'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sZeroBias = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_ZeroBias'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sZeroBiasIorAlwaysTrueIorIsolatedBunch = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_ZeroBias OR L1_AlwaysTrue OR L1_IsolatedBunch'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL1sZeroBiasORJet8 = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_ZeroBias OR L1_SingleJet8_BptxAND'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltL2fL1sDoubleMu0L1f0L2Filtered0 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(0.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(0),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sDoubleMu0L1Filtered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fL1sDoubleMu10L1f0L2Filtered0 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(0.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(0),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(10.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sDoubleMu10L1Filtered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fL1sDoubleMu10L1f0L2Filtered10 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(0.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(0),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(10.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sDoubleMu10L1Filtered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fL1sL1DoubleMu0SQOSL1f0L2PreFiltered0 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(0.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(0),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sL1DoubleMu0SQOSL1Filtered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fL1sL1DoubleMu0SQOSL2PreFiltered0 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(0.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(0),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1DoubleMu0SQOSL1Filtered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fL1sMu10lqL1f0L2Filtered10 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(0.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(0),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sMu10lqL1Filtered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fL1sSingleMu3L1f0L2Filtered0 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(0.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(0),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sSingleMu3L1Filtered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fL1sSingleMu3L1f0L2NHitQ10L2Filtered3 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(9999.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(10),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(3.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sSingleMu3L1Filtered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fL1sSingleMu3OR5L1f0L2Filtered0 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(0.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(0),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sSingleMu3OR5L1Filtered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fL1sSingleMu3OR5L1f0L2Filtered7 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(0.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(7.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sSingleMu3OR5L1Filtered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fL1sSingleMu3OR5L1f0L2NHitQ10L2Filtered5 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(9999.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(10),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(5.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sSingleMu3OR5L1Filtered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fL1sSingleMu7L1f0L2Filtered0 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(0.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(0),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sSingleMu7L1Filtered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fL1sSingleMu7L1f0L2Filtered12 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(0.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(12.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sSingleMu7L1Filtered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fL1sSingleMu7L1f0L2Filtered15 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(0.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(15.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sSingleMu7L1Filtered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fL1sSingleMu7L1f0L2Filtered20 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(0.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(20.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1sSingleMu7L1Filtered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fMu3OR5TrackL2Filtered0 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(0.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(0),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fMu3OR5TrackFiltered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fMu3TrackL2Filtered0 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(0.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(0),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fMu3TrackFiltered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fMu7p5TrackL2Filtered7 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(0.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(0),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fMu7p5TrackFiltered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL2fSQDoubleMu2L2PreFiltered2 = cms.EDFilter("HLTMuonL2FromL1TPreFilter",
    AbsEtaBins = cms.vdouble(5.0),
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltL2MuonCandidates"),
    CutOnChambers = cms.bool(False),
    MatchToPreviousCand = cms.bool(True),
    MaxDr = cms.double(9999.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(2),
    MinNchambers = cms.vint32(0),
    MinNhits = cms.vint32(0),
    MinNstations = cms.vint32(0),
    MinPt = cms.double(2.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1fL1DoubleMu0SQL1Filtered0"),
    SeedMapTag = cms.InputTag("hltL2Muons"),
    saveTags = cms.bool(True)
)


process.hltL3fL1sDoubleMu0L1f0L2f0L3Filtered0 = cms.EDFilter("HLTMuonDimuonL3Filter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    ChargeOpt = cms.int32(0),
    CutCowboys = cms.bool(False),
    FastAccept = cms.bool(False),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fL1sDoubleMu0L1Filtered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxAcop = cms.double(999.0),
    MaxDCAMuMu = cms.double(99999.9),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxInvMass = cms.vdouble(9999.0),
    MaxPtBalance = cms.double(999999.0),
    MaxPtMin = cms.vdouble(1e+125),
    MaxPtPair = cms.vdouble(1e+125),
    MaxRapidityPair = cms.double(999999.0),
    MinAcop = cms.double(-999.0),
    MinInvMass = cms.vdouble(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinPtBalance = cms.double(-1.0),
    MinPtMax = cms.vdouble(0.0),
    MinPtMin = cms.vdouble(0.0),
    MinPtPair = cms.vdouble(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandIsL2 = cms.bool(True),
    PreviousCandTag = cms.InputTag("hltL2fL1sDoubleMu0L1f0L2Filtered0"),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    saveTags = cms.bool(True)
)


process.hltL3fL1sDoubleMu10L1f0L2f0L3Filtered10 = cms.EDFilter("HLTMuonDimuonL3Filter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    ChargeOpt = cms.int32(0),
    CutCowboys = cms.bool(False),
    FastAccept = cms.bool(False),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fL1sDoubleMu10L1Filtered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxAcop = cms.double(999.0),
    MaxDCAMuMu = cms.double(99999.9),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxInvMass = cms.vdouble(9999.0),
    MaxPtBalance = cms.double(999999.0),
    MaxPtMin = cms.vdouble(1e+125),
    MaxPtPair = cms.vdouble(1e+125),
    MaxRapidityPair = cms.double(999999.0),
    MinAcop = cms.double(-999.0),
    MinInvMass = cms.vdouble(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinPtBalance = cms.double(-1.0),
    MinPtMax = cms.vdouble(10.0),
    MinPtMin = cms.vdouble(10.0),
    MinPtPair = cms.vdouble(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandIsL2 = cms.bool(True),
    PreviousCandTag = cms.InputTag("hltL2fL1sDoubleMu10L1f0L2Filtered0"),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    saveTags = cms.bool(True)
)


process.hltL3fL1sMu10lqL1f0L2f10L3Filtered12 = cms.EDFilter("HLTMuonL3PreFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fL1sMu10lqL1Filtered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxDXYBeamSpot = cms.double(9999.0),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxNormalizedChi2 = cms.double(9999.0),
    MaxNormalizedChi2_L3FromL1 = cms.double(1e+99),
    MaxPtDifference = cms.double(9999.0),
    MinDXYBeamSpot = cms.double(-1.0),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinNmuonHits = cms.int32(0),
    MinPt = cms.double(12.0),
    MinTrackPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL2fL1sMu10lqL1f0L2Filtered10"),
    allowedTypeMask = cms.uint32(255),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    minMuonHits = cms.int32(-1),
    minMuonStations = cms.int32(2),
    minTrkHits = cms.int32(-1),
    requiredTypeMask = cms.uint32(0),
    saveTags = cms.bool(True),
    trkMuonId = cms.uint32(0)
)


process.hltL3fL1sMu10lqL1f0L2f10L3Filtered15 = cms.EDFilter("HLTMuonL3PreFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fL1sMu10lqL1Filtered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxDXYBeamSpot = cms.double(9999.0),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxNormalizedChi2 = cms.double(9999.0),
    MaxNormalizedChi2_L3FromL1 = cms.double(1e+99),
    MaxPtDifference = cms.double(9999.0),
    MinDXYBeamSpot = cms.double(-1.0),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinNmuonHits = cms.int32(0),
    MinPt = cms.double(15.0),
    MinTrackPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL2fL1sMu10lqL1f0L2Filtered10"),
    allowedTypeMask = cms.uint32(255),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    minMuonHits = cms.int32(-1),
    minMuonStations = cms.int32(2),
    minTrkHits = cms.int32(-1),
    requiredTypeMask = cms.uint32(0),
    saveTags = cms.bool(True),
    trkMuonId = cms.uint32(0)
)


process.hltL3fL1sMu10lqL1f0L2f10L3Filtered17 = cms.EDFilter("HLTMuonL3PreFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fL1sMu10lqL1Filtered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxDXYBeamSpot = cms.double(9999.0),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxNormalizedChi2 = cms.double(9999.0),
    MaxNormalizedChi2_L3FromL1 = cms.double(1e+99),
    MaxPtDifference = cms.double(9999.0),
    MinDXYBeamSpot = cms.double(-1.0),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinNmuonHits = cms.int32(0),
    MinPt = cms.double(17.0),
    MinTrackPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL2fL1sMu10lqL1f0L2Filtered10"),
    allowedTypeMask = cms.uint32(255),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    minMuonHits = cms.int32(-1),
    minMuonStations = cms.int32(2),
    minTrkHits = cms.int32(-1),
    requiredTypeMask = cms.uint32(0),
    saveTags = cms.bool(True),
    trkMuonId = cms.uint32(0)
)


process.hltL3fL1sSingleMu3L1f0L2f0L3Filtered3 = cms.EDFilter("HLTMuonL3PreFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fL1sSingleMu3L1Filtered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxDXYBeamSpot = cms.double(9999.0),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxNormalizedChi2 = cms.double(9999.0),
    MaxNormalizedChi2_L3FromL1 = cms.double(1e+99),
    MaxPtDifference = cms.double(9999.0),
    MinDXYBeamSpot = cms.double(-1.0),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinNmuonHits = cms.int32(0),
    MinPt = cms.double(3.0),
    MinTrackPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL2fL1sSingleMu3L1f0L2Filtered0"),
    allowedTypeMask = cms.uint32(255),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    minMuonHits = cms.int32(-1),
    minMuonStations = cms.int32(-1),
    minTrkHits = cms.int32(-1),
    requiredTypeMask = cms.uint32(0),
    saveTags = cms.bool(True),
    trkMuonId = cms.uint32(0)
)


process.hltL3fL1sSingleMu3L1f0L2f0L3NHitQ10L3Filtered3 = cms.EDFilter("HLTMuonL3PreFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fL1sSingleMu3L1Filtered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxDXYBeamSpot = cms.double(9999.0),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxNormalizedChi2 = cms.double(9999.0),
    MaxNormalizedChi2_L3FromL1 = cms.double(1e+99),
    MaxPtDifference = cms.double(9999.0),
    MinDXYBeamSpot = cms.double(-1.0),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(10),
    MinNmuonHits = cms.int32(0),
    MinPt = cms.double(3.0),
    MinTrackPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL2fL1sSingleMu3L1f0L2Filtered0"),
    allowedTypeMask = cms.uint32(255),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    minMuonHits = cms.int32(-1),
    minMuonStations = cms.int32(-1),
    minTrkHits = cms.int32(-1),
    requiredTypeMask = cms.uint32(0),
    saveTags = cms.bool(True),
    trkMuonId = cms.uint32(0)
)


process.hltL3fL1sSingleMu3OR5L1f0L2f0L3Filtered5 = cms.EDFilter("HLTMuonL3PreFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fL1sSingleMu3OR5L1Filtered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxDXYBeamSpot = cms.double(9999.0),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxNormalizedChi2 = cms.double(9999.0),
    MaxNormalizedChi2_L3FromL1 = cms.double(1e+99),
    MaxPtDifference = cms.double(9999.0),
    MinDXYBeamSpot = cms.double(-1.0),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinNmuonHits = cms.int32(0),
    MinPt = cms.double(5.0),
    MinTrackPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL2fL1sSingleMu3OR5L1f0L2Filtered0"),
    allowedTypeMask = cms.uint32(255),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    minMuonHits = cms.int32(-1),
    minMuonStations = cms.int32(-1),
    minTrkHits = cms.int32(-1),
    requiredTypeMask = cms.uint32(0),
    saveTags = cms.bool(True),
    trkMuonId = cms.uint32(0)
)


process.hltL3fL1sSingleMu3OR5L1f0L2f0L3Filtered7 = cms.EDFilter("HLTMuonL3PreFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fL1sSingleMu3OR5L1Filtered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxDXYBeamSpot = cms.double(9999.0),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxNormalizedChi2 = cms.double(9999.0),
    MaxNormalizedChi2_L3FromL1 = cms.double(1e+99),
    MaxPtDifference = cms.double(9999.0),
    MinDXYBeamSpot = cms.double(-1.0),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinNmuonHits = cms.int32(0),
    MinPt = cms.double(7.0),
    MinTrackPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL2fL1sSingleMu3OR5L1f0L2Filtered0"),
    allowedTypeMask = cms.uint32(255),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    minMuonHits = cms.int32(-1),
    minMuonStations = cms.int32(-1),
    minTrkHits = cms.int32(-1),
    requiredTypeMask = cms.uint32(0),
    saveTags = cms.bool(True),
    trkMuonId = cms.uint32(0)
)


process.hltL3fL1sSingleMu3OR5L1f0L2f0L3NHitQ10L3Filtered5 = cms.EDFilter("HLTMuonL3PreFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fL1sSingleMu3OR5L1Filtered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxDXYBeamSpot = cms.double(9999.0),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxNormalizedChi2 = cms.double(9999.0),
    MaxNormalizedChi2_L3FromL1 = cms.double(1e+99),
    MaxPtDifference = cms.double(9999.0),
    MinDXYBeamSpot = cms.double(-1.0),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(10),
    MinNmuonHits = cms.int32(0),
    MinPt = cms.double(5.0),
    MinTrackPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL2fL1sSingleMu3OR5L1f0L2Filtered0"),
    allowedTypeMask = cms.uint32(255),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    minMuonHits = cms.int32(-1),
    minMuonStations = cms.int32(-1),
    minTrkHits = cms.int32(-1),
    requiredTypeMask = cms.uint32(0),
    saveTags = cms.bool(True),
    trkMuonId = cms.uint32(0)
)


process.hltL3fL1sSingleMu7L1f0L2f0L3Filtered12 = cms.EDFilter("HLTMuonL3PreFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fL1sSingleMu7L1Filtered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxDXYBeamSpot = cms.double(9999.0),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxNormalizedChi2 = cms.double(9999.0),
    MaxNormalizedChi2_L3FromL1 = cms.double(1e+99),
    MaxPtDifference = cms.double(9999.0),
    MinDXYBeamSpot = cms.double(-1.0),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinNmuonHits = cms.int32(0),
    MinPt = cms.double(12.0),
    MinTrackPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL2fL1sSingleMu7L1f0L2Filtered0"),
    allowedTypeMask = cms.uint32(255),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    minMuonHits = cms.int32(-1),
    minMuonStations = cms.int32(-1),
    minTrkHits = cms.int32(-1),
    requiredTypeMask = cms.uint32(0),
    saveTags = cms.bool(True),
    trkMuonId = cms.uint32(0)
)


process.hltL3fL1sSingleMu7L1f0L2f0L3Filtered15 = cms.EDFilter("HLTMuonL3PreFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fL1sSingleMu7L1Filtered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxDXYBeamSpot = cms.double(9999.0),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxNormalizedChi2 = cms.double(9999.0),
    MaxNormalizedChi2_L3FromL1 = cms.double(1e+99),
    MaxPtDifference = cms.double(9999.0),
    MinDXYBeamSpot = cms.double(-1.0),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinNmuonHits = cms.int32(0),
    MinPt = cms.double(15.0),
    MinTrackPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL2fL1sSingleMu7L1f0L2Filtered0"),
    allowedTypeMask = cms.uint32(255),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    minMuonHits = cms.int32(-1),
    minMuonStations = cms.int32(-1),
    minTrkHits = cms.int32(-1),
    requiredTypeMask = cms.uint32(0),
    saveTags = cms.bool(True),
    trkMuonId = cms.uint32(0)
)


process.hltL3fL1sSingleMu7L1f0L2f0L3Filtered20 = cms.EDFilter("HLTMuonL3PreFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fL1sSingleMu7L1Filtered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxDXYBeamSpot = cms.double(9999.0),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxNormalizedChi2 = cms.double(9999.0),
    MaxNormalizedChi2_L3FromL1 = cms.double(1e+99),
    MaxPtDifference = cms.double(9999.0),
    MinDXYBeamSpot = cms.double(-1.0),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinNmuonHits = cms.int32(0),
    MinPt = cms.double(20.0),
    MinTrackPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL2fL1sSingleMu7L1f0L2Filtered0"),
    allowedTypeMask = cms.uint32(255),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    minMuonHits = cms.int32(-1),
    minMuonStations = cms.int32(-1),
    minTrkHits = cms.int32(-1),
    requiredTypeMask = cms.uint32(0),
    saveTags = cms.bool(True),
    trkMuonId = cms.uint32(0)
)


process.hltL3fLMu3OR5TrackL3Filtered5 = cms.EDFilter("HLTMuonL3PreFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fMu3OR5TrackFiltered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxDXYBeamSpot = cms.double(9999.0),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxNormalizedChi2 = cms.double(9999.0),
    MaxNormalizedChi2_L3FromL1 = cms.double(1e+99),
    MaxPtDifference = cms.double(9999.0),
    MinDXYBeamSpot = cms.double(-1.0),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinNmuonHits = cms.int32(0),
    MinPt = cms.double(5.0),
    MinTrackPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL2fMu3OR5TrackL2Filtered0"),
    allowedTypeMask = cms.uint32(255),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    minMuonHits = cms.int32(-1),
    minMuonStations = cms.int32(2),
    minTrkHits = cms.int32(-1),
    requiredTypeMask = cms.uint32(0),
    saveTags = cms.bool(True),
    trkMuonId = cms.uint32(0)
)


process.hltL3fLMu3TrackL3Filtered3 = cms.EDFilter("HLTMuonL3PreFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fMu3TrackFiltered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxDXYBeamSpot = cms.double(9999.0),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxNormalizedChi2 = cms.double(9999.0),
    MaxNormalizedChi2_L3FromL1 = cms.double(1e+99),
    MaxPtDifference = cms.double(9999.0),
    MinDXYBeamSpot = cms.double(-1.0),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinNmuonHits = cms.int32(0),
    MinPt = cms.double(3.0),
    MinTrackPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL2fMu3TrackL2Filtered0"),
    allowedTypeMask = cms.uint32(255),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    minMuonHits = cms.int32(-1),
    minMuonStations = cms.int32(2),
    minTrkHits = cms.int32(-1),
    requiredTypeMask = cms.uint32(0),
    saveTags = cms.bool(True),
    trkMuonId = cms.uint32(0)
)


process.hltL3fLMu7p5TrackL3Filtered7p5 = cms.EDFilter("HLTMuonL3PreFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fMu7p5TrackFiltered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxDXYBeamSpot = cms.double(9999.0),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxNormalizedChi2 = cms.double(9999.0),
    MaxNormalizedChi2_L3FromL1 = cms.double(1e+99),
    MaxPtDifference = cms.double(9999.0),
    MinDXYBeamSpot = cms.double(-1.0),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinNmuonHits = cms.int32(0),
    MinPt = cms.double(7.5),
    MinTrackPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL2fMu7p5TrackL2Filtered7"),
    allowedTypeMask = cms.uint32(255),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    minMuonHits = cms.int32(-1),
    minMuonStations = cms.int32(2),
    minTrkHits = cms.int32(-1),
    requiredTypeMask = cms.uint32(0),
    saveTags = cms.bool(True),
    trkMuonId = cms.uint32(0)
)


process.hltL3fSQMu7p5L2Mu2L3Filtered7p5 = cms.EDFilter("HLTMuonL3PreFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    InputLinks = cms.InputTag("hltL3MuonsIterL3Links"),
    L1CandTag = cms.InputTag("hltL1fForIterL3L1fL1DoubleMu0SQL1Filtered0"),
    L1MatchingdR = cms.double(0.3),
    MatchToPreviousCand = cms.bool(True),
    MaxDXYBeamSpot = cms.double(9999.0),
    MaxDr = cms.double(2.0),
    MaxDz = cms.double(9999.0),
    MaxEta = cms.double(2.5),
    MaxNormalizedChi2 = cms.double(9999.0),
    MaxNormalizedChi2_L3FromL1 = cms.double(1e+99),
    MaxPtDifference = cms.double(9999.0),
    MinDXYBeamSpot = cms.double(-1.0),
    MinDr = cms.double(-1.0),
    MinDxySig = cms.double(-1.0),
    MinN = cms.int32(1),
    MinNhits = cms.int32(0),
    MinNmuonHits = cms.int32(0),
    MinPt = cms.double(7.5),
    MinTrackPt = cms.double(0.0),
    NSigmaPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL2fSQDoubleMu2L2PreFiltered2"),
    allowedTypeMask = cms.uint32(255),
    inputMuonCollection = cms.InputTag("hltIterL3Muons"),
    minMuonHits = cms.int32(-1),
    minMuonStations = cms.int32(2),
    minTrkHits = cms.int32(-1),
    requiredTypeMask = cms.uint32(0),
    saveTags = cms.bool(True),
    trkMuonId = cms.uint32(0)
)


process.hltMu3OR5Track1MassFiltered0 = cms.EDFilter("HLTMuonTrackMassFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    CutCowboys = cms.bool(False),
    MaxDCAMuonTrack = cms.double(0.5),
    MaxMasses = cms.vdouble(9999.0),
    MaxTrackDxy = cms.double(999.0),
    MaxTrackDz = cms.double(999.0),
    MaxTrackEta = cms.double(999.0),
    MaxTrackNormChi2 = cms.double(10.0),
    MinMasses = cms.vdouble(0.0),
    MinTrackHits = cms.int32(8),
    MinTrackP = cms.double(1.0),
    MinTrackPt = cms.double(1.0),
    PreviousCandTag = cms.InputTag("hltL3fLMu3OR5TrackL3Filtered5"),
    TrackTag = cms.InputTag("hltTracksIter"),
    checkCharge = cms.bool(True),
    saveTags = cms.bool(True)
)


process.hltMu3OR5Track1MassFilteredjpsi = cms.EDFilter("HLTMuonTrackMassFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    CutCowboys = cms.bool(False),
    MaxDCAMuonTrack = cms.double(0.5),
    MaxMasses = cms.vdouble(3.35),
    MaxTrackDxy = cms.double(999.0),
    MaxTrackDz = cms.double(999.0),
    MaxTrackEta = cms.double(999.0),
    MaxTrackNormChi2 = cms.double(10.0),
    MinMasses = cms.vdouble(2.8),
    MinTrackHits = cms.int32(8),
    MinTrackP = cms.double(1.0),
    MinTrackPt = cms.double(1.0),
    PreviousCandTag = cms.InputTag("hltL3fLMu3OR5TrackL3Filtered5"),
    TrackTag = cms.InputTag("hltTracksIter"),
    checkCharge = cms.bool(True),
    saveTags = cms.bool(True)
)


process.hltMu3Track1MassFiltered0 = cms.EDFilter("HLTMuonTrackMassFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    CutCowboys = cms.bool(False),
    MaxDCAMuonTrack = cms.double(0.5),
    MaxMasses = cms.vdouble(9999.0),
    MaxTrackDxy = cms.double(999.0),
    MaxTrackDz = cms.double(999.0),
    MaxTrackEta = cms.double(999.0),
    MaxTrackNormChi2 = cms.double(10.0),
    MinMasses = cms.vdouble(0.0),
    MinTrackHits = cms.int32(8),
    MinTrackP = cms.double(1.0),
    MinTrackPt = cms.double(1.0),
    PreviousCandTag = cms.InputTag("hltL3fLMu3TrackL3Filtered3"),
    TrackTag = cms.InputTag("hltTracksIter"),
    checkCharge = cms.bool(True),
    saveTags = cms.bool(True)
)


process.hltMu3Track1MassFilteredjpsi = cms.EDFilter("HLTMuonTrackMassFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    CutCowboys = cms.bool(False),
    MaxDCAMuonTrack = cms.double(0.5),
    MaxMasses = cms.vdouble(3.35),
    MaxTrackDxy = cms.double(999.0),
    MaxTrackDz = cms.double(999.0),
    MaxTrackEta = cms.double(999.0),
    MaxTrackNormChi2 = cms.double(10.0),
    MinMasses = cms.vdouble(2.8),
    MinTrackHits = cms.int32(8),
    MinTrackP = cms.double(1.0),
    MinTrackPt = cms.double(1.0),
    PreviousCandTag = cms.InputTag("hltL3fLMu3TrackL3Filtered3"),
    TrackTag = cms.InputTag("hltTracksIter"),
    checkCharge = cms.bool(True),
    saveTags = cms.bool(True)
)


process.hltMu7p5Track2JpsiTrackMassFiltered = cms.EDFilter("HLTMuonTrackMassFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    CutCowboys = cms.bool(False),
    MaxDCAMuonTrack = cms.double(0.5),
    MaxMasses = cms.vdouble(3.35),
    MaxTrackDxy = cms.double(999.0),
    MaxTrackDz = cms.double(999.0),
    MaxTrackEta = cms.double(999.0),
    MaxTrackNormChi2 = cms.double(10.0),
    MinMasses = cms.vdouble(2.8),
    MinTrackHits = cms.int32(8),
    MinTrackP = cms.double(3.5),
    MinTrackPt = cms.double(2.0),
    PreviousCandTag = cms.InputTag("hltL3fLMu7p5TrackL3Filtered7p5"),
    TrackTag = cms.InputTag("hltTracksIter"),
    checkCharge = cms.bool(True),
    saveTags = cms.bool(True)
)


process.hltMu7p5Track2UpsilonTrackMassFiltered = cms.EDFilter("HLTMuonTrackMassFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    CutCowboys = cms.bool(False),
    MaxDCAMuonTrack = cms.double(0.5),
    MaxMasses = cms.vdouble(11.4),
    MaxTrackDxy = cms.double(999.0),
    MaxTrackDz = cms.double(999.0),
    MaxTrackEta = cms.double(999.0),
    MaxTrackNormChi2 = cms.double(10.0),
    MinMasses = cms.vdouble(8.5),
    MinTrackHits = cms.int32(8),
    MinTrackP = cms.double(3.5),
    MinTrackPt = cms.double(2.0),
    PreviousCandTag = cms.InputTag("hltL3fLMu7p5TrackL3Filtered7p5"),
    TrackTag = cms.InputTag("hltTracksIter"),
    checkCharge = cms.bool(True),
    saveTags = cms.bool(True)
)


process.hltPFJetForBtagSelectorPFJet30Eta2p4 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(2.4),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(30.0),
    inputTag = cms.InputTag("hltAK4PFJetsCorrected"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(86)
)


process.hltPFJetForBtagSelectorPFJet40Eta2p4 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(2.4),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(40.0),
    inputTag = cms.InputTag("hltAK4PFJetsCorrected"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(86)
)


process.hltPFJetForBtagSelectorPFJet60Eta2p4 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(2.4),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(60.0),
    inputTag = cms.InputTag("hltAK4PFJetsCorrected"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(86)
)


process.hltPFJetForBtagSelectorPFJet80Eta2p4 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(2.4),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(80.0),
    inputTag = cms.InputTag("hltAK4PFJetsCorrected"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(86)
)


process.hltPixelTrackerHVOn = cms.EDFilter("DetectorStateFilter",
    DcsStatusLabel = cms.untracked.InputTag("hltScalersRawToDigi"),
    DebugOn = cms.untracked.bool(False),
    DetectorType = cms.untracked.string('pixel')
)


process.hltPreAlCaEcalPhiSym = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreAlCaHIEcalEtaEBonly = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreAlCaHIEcalEtaEEonly = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreAlCaHIEcalPi0EBonly = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreAlCaHIEcalPi0EEonly = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreAlCaHIRPCMuonNormalisation = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreAlCaLumiPixelsRandom = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreAlCaLumiPixelsZeroBias = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreDSTPhysics = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreEcalCalibration = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4CaloJet100 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4CaloJet120 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4CaloJet15 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4CaloJet30 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4CaloJet30FWD = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4CaloJet40 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4CaloJet40FWD = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4CaloJet60 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4CaloJet60FWD = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4CaloJet80 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4CaloJet80FWD = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4PFJet100 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4PFJet120 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4PFJet15 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4PFJet30 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4PFJet30FWD = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4PFJet30bTag = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4PFJet40 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4PFJet40FWD = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4PFJet40bTag = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4PFJet60 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4PFJet60FWD = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4PFJet60bTag = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4PFJet80 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4PFJet80FWD = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK4PFJet80bTag = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK8PFJet140 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK8PFJet15 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK8PFJet25 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK8PFJet40 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK8PFJet60 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK8PFJet80 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK8PFJetFwd140 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK8PFJetFwd15 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK8PFJetFwd25 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK8PFJetFwd40 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK8PFJetFwd60 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIAK8PFJetFwd80 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDiPFJet15FBEta3NoCaloMatched = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDiPFJet15NoCaloMatched = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDiPFJet25FBEta3NoCaloMatched = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDiPFJet25NoCaloMatched = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDiPFJetAve15HFJEC = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDiPFJetAve25HFJEC = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDiPFJetAve35HFJEC = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDijet16And12MidEta2p7Dpt10 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDijet16And8MidEta2p7Dpt8 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDijet20And12MidEta2p7Dpt10 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDijet20And8MidEta2p7Dpt8 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDijet28And16MidEta2p7Dpt15 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDimuon0Jpsi = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDimuon0JpsiNoVertexing = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDimuon0UpsilonNoVertexing = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDmesonPPTrackingGlobalDpt15 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDmesonPPTrackingGlobalDpt30 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDmesonPPTrackingGlobalDpt40 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDmesonPPTrackingGlobalDpt50 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDmesonPPTrackingGlobalDpt60 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDmesonPPTrackingGlobalDpt8 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIDoublePhoton15Eta3p1ForPPRefMass50to1000 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIEle10WPLooseGsf = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIEle15CaloIdLTrackIdLIsoVLPFJet30 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIEle15Ele8CaloIdLTrackIdLIsoVL = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIEle15WPLooseGsf = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIEle17WPLooseGsf = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIEle20Ele12CaloIdLTrackIdLIsoVLDZ = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIEle20WPLooseGsf = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIEle20eta2p1WPTightGsfCentralPFJet15EleCleaned = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIEle30WPLooseGsf = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIEle40WPLooseGsf = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIFullTracksHighPt18 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIFullTracksHighPt24 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIFullTracksHighPt34 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIFullTracksHighPt45 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIHT80BeamspotppRef5TeV = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL1DoubleMu0 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL1DoubleMu0HighQ = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL1DoubleMu10 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL1DoubleMuOpen = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL1DoubleMuOpenOS = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL1DoubleMuOpenSS = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL1Mu12 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL1Mu16 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL1NotBptxOR = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL1UnpairedBunchBptxMinus = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL1UnpairedBunchBptxPlus = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL2DoubleMu0 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL2DoubleMu10 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL2Mu12 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL2Mu15 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL2Mu20 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL2Mu3NHitQ10 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL2Mu5NHitQ10 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL2Mu7 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3DoubleMu0 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3DoubleMu10 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3Mu12 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3Mu15 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3Mu20 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3Mu3 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3Mu3NHitQ10 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3Mu3Track1 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3Mu3Track1Jpsi = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3Mu5 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3Mu5AK4PFJet30 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3Mu5AK4PFJet40 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3Mu5AK4PFJet60 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3Mu5NHitQ10 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3Mu5Track1 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3Mu5Track1Jpsi = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIL3Mu7 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIMu12 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIMu15 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIMu17 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIMu7p5L2Mu2Jpsi = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIMu7p5L2Mu2Upsilon = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIMu7p5Track2Jpsi = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIMu7p5Track2Upsilon = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIPFJet140 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIPFJet25 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIPFJetFwd140 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIPFJetFwd15 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIPFJetFwd25 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIPhoton20HoverELoose = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIPhoton30HoverELoose = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIPhoton40HoverELoose = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIPhoton50HoverELoose = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIPhoton60HoverELoose = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHISinglePhoton10Eta1p5ForPPRef = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHISinglePhoton10Eta3p1ForPPRef = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHISinglePhoton15Eta1p5ForPPRef = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHISinglePhoton15Eta3p1ForPPRef = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHISinglePhoton20Eta1p5ForPPRef = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHISinglePhoton20Eta3p1ForPPRef = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHISinglePhoton30Eta1p5ForPPRef = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHISinglePhoton30Eta3p1ForPPRef = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHISinglePhoton40Eta1p5ForPPRef = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHISinglePhoton40Eta3p1ForPPRef = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHISinglePhoton50Eta1p5ForPPRef = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHISinglePhoton50Eta3p1ForPPRef = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHISinglePhoton60Eta1p5ForPPRef = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHISinglePhoton60Eta3p1ForPPRef = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIZeroBiaspart0 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHIZeroBiaspart1 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(1)
)


process.hltPreHIZeroBiaspart10 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(10)
)


process.hltPreHIZeroBiaspart11 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(11)
)


process.hltPreHIZeroBiaspart2 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(2)
)


process.hltPreHIZeroBiaspart3 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(3)
)


process.hltPreHIZeroBiaspart4 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(4)
)


process.hltPreHIZeroBiaspart5 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(5)
)


process.hltPreHIZeroBiaspart6 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(6)
)


process.hltPreHIZeroBiaspart7 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(7)
)


process.hltPreHIZeroBiaspart8 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(8)
)


process.hltPreHIZeroBiaspart9 = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(9)
)


process.hltPreHLTAnalyzerEndpath = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreHcalCalibration = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPrePhysics = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreRandom = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreZeroBias = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreZeroBiasBeamspot = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreZeroBiasFirstCollisionAfterAbortGap = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltRPCMuonNormaL1Filtered0ForHI = cms.EDFilter("HLTMuonL1TFilter",
    CandTag = cms.InputTag("hltGtStage2Digis","Muon"),
    CentralBxOnly = cms.bool(True),
    MaxEta = cms.double(1.6),
    MinN = cms.int32(1),
    MinPt = cms.double(0.0),
    PreviousCandTag = cms.InputTag("hltL1sSingleMu7to30"),
    SelectQualities = cms.vint32(),
    saveTags = cms.bool(True)
)


process.hltRandomEventsFilter = cms.EDFilter("HLTTriggerTypeFilter",
    SelectedTriggerType = cms.int32(3)
)


process.hltSQMu7p5L2Mu2JpsiTrackMassFiltered = cms.EDFilter("HLTMuonTrackMassFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    CutCowboys = cms.bool(False),
    MaxDCAMuonTrack = cms.double(99999.9),
    MaxMasses = cms.vdouble(4.0),
    MaxTrackDxy = cms.double(999.0),
    MaxTrackDz = cms.double(999.0),
    MaxTrackEta = cms.double(999.0),
    MaxTrackNormChi2 = cms.double(10000000000.0),
    MinMasses = cms.vdouble(2.2),
    MinTrackHits = cms.int32(2),
    MinTrackP = cms.double(0.0),
    MinTrackPt = cms.double(2.0),
    PreviousCandTag = cms.InputTag("hltL3fSQMu7p5L2Mu2L3Filtered7p5"),
    TrackTag = cms.InputTag("hltL2MuonCandidates"),
    checkCharge = cms.bool(True),
    saveTags = cms.bool(True)
)


process.hltSQMu7p5L2Mu2UpsilonTrackMassFiltered = cms.EDFilter("HLTMuonTrackMassFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    CandTag = cms.InputTag("hltIterL3MuonCandidates"),
    CutCowboys = cms.bool(False),
    MaxDCAMuonTrack = cms.double(99999.9),
    MaxMasses = cms.vdouble(11.8),
    MaxTrackDxy = cms.double(999.0),
    MaxTrackDz = cms.double(999.0),
    MaxTrackEta = cms.double(999.0),
    MaxTrackNormChi2 = cms.double(10000000000.0),
    MinMasses = cms.vdouble(8.0),
    MinTrackHits = cms.int32(2),
    MinTrackP = cms.double(0.0),
    MinTrackPt = cms.double(2.0),
    PreviousCandTag = cms.InputTag("hltL3fSQMu7p5L2Mu2L3Filtered7p5"),
    TrackTag = cms.InputTag("hltL2MuonCandidates"),
    checkCharge = cms.bool(True),
    saveTags = cms.bool(True)
)


process.hltSingleAK4CaloJet100 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(100.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4CaloJet120 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(120.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4CaloJet15 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(15.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4CaloJet15FWD = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(15.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4CaloJet30 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(30.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4CaloJet30FWD = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(30.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4CaloJet40 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(40.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4CaloJet40FWD = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(40.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4CaloJet50 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(50.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4CaloJet60 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(60.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4CaloJet60FWD = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(60.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4CaloJet70 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(70.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4CaloJet80 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(80.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4CaloJet80FWD = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(80.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4PFJet100 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(100.0),
    inputTag = cms.InputTag("hltAK4PFJetsCorrectedMatchedToCaloJets70"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4PFJet120 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(120.0),
    inputTag = cms.InputTag("hltAK4PFJetsCorrectedMatchedToCaloJets70"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4PFJet15 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(15.0),
    inputTag = cms.InputTag("hltAK4PFJetsCorrected"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4PFJet30 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(30.0),
    inputTag = cms.InputTag("hltAK4PFJetsCorrectedMatchedToCaloJets15"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4PFJet30FWD = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(30.0),
    inputTag = cms.InputTag("hltAK4PFJetsCorrectedMatchedToCaloJets15FWD"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4PFJet40 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(40.0),
    inputTag = cms.InputTag("hltAK4PFJetsCorrectedMatchedToCaloJets15"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4PFJet40FWD = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(40.0),
    inputTag = cms.InputTag("hltAK4PFJetsCorrectedMatchedToCaloJets15FWD"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4PFJet60 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(60.0),
    inputTag = cms.InputTag("hltAK4PFJetsCorrectedMatchedToCaloJets30"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4PFJet60FWD = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(60.0),
    inputTag = cms.InputTag("hltAK4PFJetsCorrectedMatchedToCaloJets30FWD"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4PFJet80 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(80.0),
    inputTag = cms.InputTag("hltAK4PFJetsCorrectedMatchedToCaloJets50"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleAK4PFJet80FWD = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(80.0),
    inputTag = cms.InputTag("hltAK4PFJetsCorrectedMatchedToCaloJets30FWD"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleCaloFwdJet10 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(10.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleCaloFwdJet10AK8 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(10.0),
    inputTag = cms.InputTag("hltAK8CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleCaloFwdJet110 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(110.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleCaloFwdJet110AK8 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(110.0),
    inputTag = cms.InputTag("hltAK8CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleCaloFwdJet40AK8 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(40.0),
    inputTag = cms.InputTag("hltAK8CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleCaloFwdJet5 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(5.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleCaloFwdJet50AK8 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(50.0),
    inputTag = cms.InputTag("hltAK8CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleCaloFwdJet5AK8 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(5.0),
    inputTag = cms.InputTag("hltAK8CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleCaloJet10 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(10.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleCaloJet10AK8 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(10.0),
    inputTag = cms.InputTag("hltAK8CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleCaloJet110 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(110.0),
    inputTag = cms.InputTag("hltAK4CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleCaloJet110AK8 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(110.0),
    inputTag = cms.InputTag("hltAK8CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleCaloJet40AK8 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(40.0),
    inputTag = cms.InputTag("hltAK8CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleCaloJet50AK8 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(50.0),
    inputTag = cms.InputTag("hltAK8CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSingleCaloJet5AK8 = cms.EDFilter("HLT1CaloJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(5.0),
    inputTag = cms.InputTag("hltAK8CaloJetsCorrectedIDPassed"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSinglePFFwdJet140 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(140.0),
    inputTag = cms.InputTag("hltPFJetsCorrectedMatchedToCaloFwdJets110"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSinglePFFwdJet140AK8 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(140.0),
    inputTag = cms.InputTag("hltPFJetsCorrectedMatchedToCaloFwdJets110AK8"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSinglePFFwdJet15 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(15.0),
    inputTag = cms.InputTag("hltPFJetsCorrectedMatchedToCaloFwdJets5"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSinglePFFwdJet15AK8 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(15.0),
    inputTag = cms.InputTag("hltPFJetsCorrectedMatchedToCaloFwdJets5AK8"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSinglePFFwdJet25 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(25.0),
    inputTag = cms.InputTag("hltPFJetsCorrectedMatchedToCaloFwdJets10"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSinglePFFwdJet25AK8 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(25.0),
    inputTag = cms.InputTag("hltPFJetsCorrectedMatchedToCaloFwdJets10AK8"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSinglePFFwdJet40AK8 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(40.0),
    inputTag = cms.InputTag("hltPFJetsCorrectedMatchedToCaloFwdJets10AK8"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSinglePFFwdJet60AK8 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(60.0),
    inputTag = cms.InputTag("hltPFJetsCorrectedMatchedToCaloFwdJets40AK8"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSinglePFFwdJet80AK8 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(2.7),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(80.0),
    inputTag = cms.InputTag("hltPFJetsCorrectedMatchedToCaloFwdJets50AK8"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSinglePFJet140 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(140.0),
    inputTag = cms.InputTag("hltPFJetsCorrectedMatchedToCaloJets110"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSinglePFJet140AK8 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(140.0),
    inputTag = cms.InputTag("hltPFJetsCorrectedMatchedToCaloJets110AK8"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSinglePFJet15AK8 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(15.0),
    inputTag = cms.InputTag("hltPFJetsCorrectedMatchedToCaloJets5AK8"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSinglePFJet25 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(25.0),
    inputTag = cms.InputTag("hltPFJetsCorrectedMatchedToCaloJets10"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSinglePFJet40AK8 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(40.0),
    inputTag = cms.InputTag("hltPFJetsCorrectedMatchedToCaloJets10AK8"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSinglePFJet60AK8 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(60.0),
    inputTag = cms.InputTag("hltPFJetsCorrectedMatchedToCaloJets40AK8"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltSinglePFJet80AK8 = cms.EDFilter("HLT1PFJet",
    MaxEta = cms.double(5.0),
    MaxMass = cms.double(-1.0),
    MinE = cms.double(-1.0),
    MinEta = cms.double(-1.0),
    MinMass = cms.double(-1.0),
    MinN = cms.int32(1),
    MinPt = cms.double(80.0),
    inputTag = cms.InputTag("hltPFJetsCorrectedMatchedToCaloJets50AK8"),
    saveTags = cms.bool(True),
    triggerType = cms.int32(85)
)


process.hltTriggerType = cms.EDFilter("HLTTriggerTypeFilter",
    SelectedTriggerType = cms.int32(1)
)


process.hltVerticesPFFilter = cms.EDFilter("VertexSelector",
    cut = cms.string('!isFake'),
    filter = cms.bool(True),
    src = cms.InputTag("hltVerticesPFSelector")
)


process.hltVerticesPFSelector = cms.EDFilter("PrimaryVertexObjectFilter",
    filterParams = cms.PSet(
        maxRho = cms.double(2.0),
        maxZ = cms.double(24.0),
        minNdof = cms.double(4.0),
        pvSrc = cms.InputTag("hltVerticesPF")
    ),
    src = cms.InputTag("hltVerticesPF")
)


process.hltZeroBiasForBeamSpot = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_ZeroBias'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hlttktkFilterForDmesonDpt10 = cms.EDFilter("HLTDisplacedtktkFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    DisplacedVertexTag = cms.InputTag("hlttktkVtxForDmesonDpt10"),
    FastAccept = cms.bool(False),
    MaxLxySignificance = cms.double(0.0),
    MaxNormalisedChi2 = cms.double(999.0),
    MinCosinePointingAngle = cms.double(0.8),
    MinLxySignificance = cms.double(1.0),
    MinVtxProbability = cms.double(0.0),
    TrackTag = cms.InputTag("hltFullCandsForRefPP"),
    saveTags = cms.bool(True),
    triggerTypeDaughters = cms.int32(91)
)


process.hlttktkFilterForDmesonDpt15 = cms.EDFilter("HLTDisplacedtktkFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    DisplacedVertexTag = cms.InputTag("hlttktkVtxForDmesonDpt15"),
    FastAccept = cms.bool(False),
    MaxLxySignificance = cms.double(0.0),
    MaxNormalisedChi2 = cms.double(999.0),
    MinCosinePointingAngle = cms.double(0.8),
    MinLxySignificance = cms.double(1.0),
    MinVtxProbability = cms.double(0.0),
    TrackTag = cms.InputTag("hltFullCandsForRefPP"),
    saveTags = cms.bool(True),
    triggerTypeDaughters = cms.int32(91)
)


process.hlttktkFilterForDmesonDpt30 = cms.EDFilter("HLTDisplacedtktkFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    DisplacedVertexTag = cms.InputTag("hlttktkVtxForDmesonDpt30"),
    FastAccept = cms.bool(False),
    MaxLxySignificance = cms.double(0.0),
    MaxNormalisedChi2 = cms.double(999.0),
    MinCosinePointingAngle = cms.double(0.8),
    MinLxySignificance = cms.double(1.0),
    MinVtxProbability = cms.double(0.0),
    TrackTag = cms.InputTag("hltFullCandsForRefPP"),
    saveTags = cms.bool(True),
    triggerTypeDaughters = cms.int32(91)
)


process.hlttktkFilterForDmesonDpt40 = cms.EDFilter("HLTDisplacedtktkFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    DisplacedVertexTag = cms.InputTag("hlttktkVtxForDmesonDpt40"),
    FastAccept = cms.bool(False),
    MaxLxySignificance = cms.double(0.0),
    MaxNormalisedChi2 = cms.double(999.0),
    MinCosinePointingAngle = cms.double(0.8),
    MinLxySignificance = cms.double(1.0),
    MinVtxProbability = cms.double(0.0),
    TrackTag = cms.InputTag("hltFullCandsForRefPP"),
    saveTags = cms.bool(True),
    triggerTypeDaughters = cms.int32(91)
)


process.hlttktkFilterForDmesonDpt50 = cms.EDFilter("HLTDisplacedtktkFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    DisplacedVertexTag = cms.InputTag("hlttktkVtxForDmesonDpt50"),
    FastAccept = cms.bool(False),
    MaxLxySignificance = cms.double(0.0),
    MaxNormalisedChi2 = cms.double(999.0),
    MinCosinePointingAngle = cms.double(0.8),
    MinLxySignificance = cms.double(1.0),
    MinVtxProbability = cms.double(0.0),
    TrackTag = cms.InputTag("hltFullCandsForRefPP"),
    saveTags = cms.bool(True),
    triggerTypeDaughters = cms.int32(91)
)


process.hlttktkFilterForDmesonDpt60 = cms.EDFilter("HLTDisplacedtktkFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    DisplacedVertexTag = cms.InputTag("hlttktkVtxForDmesonDpt60"),
    FastAccept = cms.bool(False),
    MaxLxySignificance = cms.double(0.0),
    MaxNormalisedChi2 = cms.double(999.0),
    MinCosinePointingAngle = cms.double(0.8),
    MinLxySignificance = cms.double(1.0),
    MinVtxProbability = cms.double(0.0),
    TrackTag = cms.InputTag("hltFullCandsForRefPP"),
    saveTags = cms.bool(True),
    triggerTypeDaughters = cms.int32(91)
)


process.hlttktkFilterForDmesonDpt8 = cms.EDFilter("HLTDisplacedtktkFilter",
    BeamSpotTag = cms.InputTag("hltOnlineBeamSpot"),
    DisplacedVertexTag = cms.InputTag("hlttktkVtxForDmesonDpt8"),
    FastAccept = cms.bool(False),
    MaxLxySignificance = cms.double(0.0),
    MaxNormalisedChi2 = cms.double(999.0),
    MinCosinePointingAngle = cms.double(0.8),
    MinLxySignificance = cms.double(1.0),
    MinVtxProbability = cms.double(0.0),
    TrackTag = cms.InputTag("hltFullCandsForRefPP"),
    saveTags = cms.bool(True),
    triggerTypeDaughters = cms.int32(91)
)


process.MEtoMEComparitor = cms.EDAnalyzer("MEtoMEComparitor",
    Diffgoodness = cms.double(0.1),
    KSgoodness = cms.double(0.9),
    MEtoEDMLabel = cms.string('MEtoEDMConverter'),
    OverAllgoodness = cms.double(0.9),
    autoProcess = cms.bool(True),
    dirDepth = cms.uint32(1),
    lumiInstance = cms.string('MEtoEDMConverterLumi'),
    processNew = cms.string('RERECO'),
    processRef = cms.string('HLT'),
    runInstance = cms.string('MEtoEDMConverterRun')
)


process.hltGetConditions = cms.EDAnalyzer("EventSetupRecordDataGetter",
    toGet = cms.VPSet(),
    verbose = cms.untracked.bool(False)
)


process.hltGetRaw = cms.EDAnalyzer("HLTGetRaw",
    RawDataCollection = cms.InputTag("rawDataCollector")
)


process.hltL1TGlobalSummary = cms.EDAnalyzer("L1TGlobalSummary",
    AlgInputTag = cms.InputTag("hltGtStage2Digis"),
    DumpRecord = cms.bool(False),
    DumpTrigResults = cms.bool(False),
    DumpTrigSummary = cms.bool(True),
    ExtInputTag = cms.InputTag("hltGtStage2Digis"),
    MaxBx = cms.int32(0),
    MinBx = cms.int32(0),
    ReadPrescalesFromFile = cms.bool(False),
    psColumn = cms.int32(0),
    psFileName = cms.string('prescale_L1TGlobal.csv')
)


process.hltTrigReport = cms.EDAnalyzer("HLTrigReport",
    HLTriggerResults = cms.InputTag("TriggerResults","","@currentProcess"),
    ReferencePath = cms.untracked.string('HLTriggerFinalPath'),
    ReferenceRate = cms.untracked.double(100.0),
    reportBy = cms.untracked.string('job'),
    resetBy = cms.untracked.string('never'),
    serviceBy = cms.untracked.string('never')
)


process.RAWSIMoutput = cms.OutputModule("PoolOutputModule",
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(9),
    dataset = cms.untracked.PSet(
        dataTier = cms.untracked.string('GEN-SIM-RAW'),
        filterName = cms.untracked.string('')
    ),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    fileName = cms.untracked.string('file:step_DIGI.root'),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_hltFEDSelectorL1_*_*', 
        'keep *_hltScoutingCaloPacker_*_*', 
        'keep *_hltScoutingEgammaPacker_*_*', 
        'keep *_hltScoutingMuonPackerCalo_*_*', 
        'keep *_hltScoutingMuonPacker_*_*', 
        'keep *_hltScoutingPFPacker_*_*', 
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*', 
        'keep *_hltScoutingPrimaryVertexPacker_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep *_simHcalUnsuppressedDigis_*_*', 
        'keep CrossingFramePlaybackInfoNew_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*', 
        'keep int_*_bunchSpacing_*', 
        'keep *_genPUProtons_*_*', 
        'keep *_mix_MergedTrackTruth_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenLumiInfoHeader_generator_*_*', 
        'keep GenLumiInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generatorSmeared_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep *_logErrorHarvester_*_*'),
    splitLevel = cms.untracked.int32(0)
)


process.DQMStore = cms.Service("DQMStore")


process.MessageLogger = cms.Service("MessageLogger",
    FrameworkJobReport = cms.untracked.PSet(
        FwkJob = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000),
            optionalPSet = cms.untracked.bool(True)
        ),
        default = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        optionalPSet = cms.untracked.bool(True)
    ),
    categories = cms.untracked.vstring('FwkJob', 
        'FwkReport', 
        'FwkSummary', 
        'Root_NoDictionary'),
    cerr = cms.untracked.PSet(
        FwkJob = cms.untracked.PSet(
            limit = cms.untracked.int32(0),
            optionalPSet = cms.untracked.bool(True)
        ),
        FwkReport = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000),
            optionalPSet = cms.untracked.bool(True),
            reportEvery = cms.untracked.int32(1)
        ),
        FwkSummary = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000),
            optionalPSet = cms.untracked.bool(True),
            reportEvery = cms.untracked.int32(1)
        ),
        INFO = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        Root_NoDictionary = cms.untracked.PSet(
            limit = cms.untracked.int32(0),
            optionalPSet = cms.untracked.bool(True)
        ),
        default = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000)
        ),
        noTimeStamps = cms.untracked.bool(False),
        optionalPSet = cms.untracked.bool(True),
        threshold = cms.untracked.string('INFO')
    ),
    cerr_stats = cms.untracked.PSet(
        optionalPSet = cms.untracked.bool(True),
        output = cms.untracked.string('cerr'),
        threshold = cms.untracked.string('WARNING')
    ),
    cout = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    debugModules = cms.untracked.vstring(),
    debugs = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    default = cms.untracked.PSet(

    ),
    destinations = cms.untracked.vstring('warnings', 
        'errors', 
        'infos', 
        'debugs', 
        'cout', 
        'cerr'),
    errors = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    fwkJobReports = cms.untracked.vstring('FrameworkJobReport'),
    infos = cms.untracked.PSet(
        Root_NoDictionary = cms.untracked.PSet(
            limit = cms.untracked.int32(0),
            optionalPSet = cms.untracked.bool(True)
        ),
        optionalPSet = cms.untracked.bool(True),
        placeholder = cms.untracked.bool(True)
    ),
    statistics = cms.untracked.vstring('cerr_stats'),
    suppressDebug = cms.untracked.vstring(),
    suppressInfo = cms.untracked.vstring(),
    suppressWarning = cms.untracked.vstring(),
    warnings = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    )
)


process.RandomNumberGeneratorService = cms.Service("RandomNumberGeneratorService",
    CTPPSFastRecHits = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(1357987)
    ),
    LHCTransport = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(87654321)
    ),
    MuonSimHits = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(987346)
    ),
    VtxSmeared = cms.PSet(
        engineName = cms.untracked.string('HepJamesRandom'),
        initialSeed = cms.untracked.uint32(98765432)
    ),
    ecalPreshowerRecHit = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(6541321)
    ),
    ecalRecHit = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(654321)
    ),
    externalLHEProducer = cms.PSet(
        engineName = cms.untracked.string('HepJamesRandom'),
        initialSeed = cms.untracked.uint32(234567)
    ),
    famosPileUp = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(918273)
    ),
    famosSimHits = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(13579)
    ),
    fastTrackerRecHits = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(24680)
    ),
    g4SimHits = cms.PSet(
        engineName = cms.untracked.string('HepJamesRandom'),
        initialSeed = cms.untracked.uint32(11)
    ),
    generator = cms.PSet(
        engineName = cms.untracked.string('HepJamesRandom'),
        initialSeed = cms.untracked.uint32(123456789)
    ),
    hbhereco = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(541321)
    ),
    hfreco = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(541321)
    ),
    hiSignal = cms.PSet(
        engineName = cms.untracked.string('HepJamesRandom'),
        initialSeed = cms.untracked.uint32(123456789)
    ),
    hiSignalG4SimHits = cms.PSet(
        engineName = cms.untracked.string('HepJamesRandom'),
        initialSeed = cms.untracked.uint32(11)
    ),
    hiSignalLHCTransport = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(88776655)
    ),
    horeco = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(541321)
    ),
    l1ParamMuons = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(6453209)
    ),
    mix = cms.PSet(
        engineName = cms.untracked.string('HepJamesRandom'),
        initialSeed = cms.untracked.uint32(12345)
    ),
    mixData = cms.PSet(
        engineName = cms.untracked.string('HepJamesRandom'),
        initialSeed = cms.untracked.uint32(12345)
    ),
    mixGenPU = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(918273)
    ),
    mixRecoTracks = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(918273)
    ),
    mixSimCaloHits = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(918273)
    ),
    paramMuons = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(54525)
    ),
    saveFileName = cms.untracked.string(''),
    simBeamSpotFilter = cms.PSet(
        engineName = cms.untracked.string('HepJamesRandom'),
        initialSeed = cms.untracked.uint32(87654321)
    ),
    simMuonCSCDigis = cms.PSet(
        engineName = cms.untracked.string('HepJamesRandom'),
        initialSeed = cms.untracked.uint32(11223344)
    ),
    simMuonDTDigis = cms.PSet(
        engineName = cms.untracked.string('HepJamesRandom'),
        initialSeed = cms.untracked.uint32(1234567)
    ),
    simMuonGEMDigis = cms.PSet(
        engineName = cms.untracked.string('HepJamesRandom'),
        initialSeed = cms.untracked.uint32(1234567)
    ),
    simMuonRPCDigis = cms.PSet(
        engineName = cms.untracked.string('HepJamesRandom'),
        initialSeed = cms.untracked.uint32(1234567)
    ),
    simSiStripDigiSimLink = cms.PSet(
        engineName = cms.untracked.string('HepJamesRandom'),
        initialSeed = cms.untracked.uint32(1234567)
    )
)


process.ThroughputService = cms.Service("ThroughputService",
    dqmPath = cms.untracked.string('HLT/Throughput'),
    timeRange = cms.untracked.double(60000.0),
    timeResolution = cms.untracked.double(5.828)
)


process.Timing = cms.Service("Timing",
    summaryOnly = cms.untracked.bool(True),
    useJobReport = cms.untracked.bool(True)
)


process.AnyDirectionAnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    ComponentName = cms.string('AnyDirectionAnalyticalPropagator'),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('anyDirection')
)


process.CSCChannelMapperESProducer = cms.ESProducer("CSCChannelMapperESProducer",
    AlgoName = cms.string('CSCChannelMapperPostls1')
)


process.CSCGeometryESModule = cms.ESProducer("CSCGeometryESModule",
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    debugV = cms.untracked.bool(False),
    useCentreTIOffsets = cms.bool(False),
    useDDD = cms.bool(False),
    useGangedStripsInME1a = cms.bool(False),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True)
)


process.CSCIndexerESProducer = cms.ESProducer("CSCIndexerESProducer",
    AlgoName = cms.string('CSCIndexerPostls1')
)


process.CSCObjectMapESProducer = cms.ESProducer("CSCObjectMapESProducer",
    appendToDataLabel = cms.string('')
)


process.CaloGeometryBuilder = cms.ESProducer("CaloGeometryBuilder",
    SelectedCalos = cms.vstring('HCAL', 
        'ZDC', 
        'CASTOR', 
        'EcalBarrel', 
        'EcalEndcap', 
        'EcalPreshower', 
        'TOWER')
)


process.CaloTPGTranscoder = cms.ESProducer("CaloTPGTranscoderULUTs",
    HFTPScaleShift = cms.PSet(
        NCT = cms.int32(2),
        RCT = cms.int32(3)
    ),
    LUTfactor = cms.vint32(1, 2, 5, 0),
    RCTLSB = cms.double(0.25),
    ZS = cms.vint32(4, 2, 1, 0),
    hcalLUT1 = cms.FileInPath('CalibCalorimetry/CaloTPG/data/outputLUTtranscoder_physics.dat'),
    hcalLUT2 = cms.FileInPath('CalibCalorimetry/CaloTPG/data/TPGcalcDecompress2.txt'),
    ietaLowerBound = cms.vint32(1, 18, 27, 29),
    ietaUpperBound = cms.vint32(17, 26, 28, 32),
    nominal_gain = cms.double(0.177),
    read_Ascii_Compression_LUTs = cms.bool(False),
    read_Ascii_RCT_LUTs = cms.bool(False)
)


process.CaloTopologyBuilder = cms.ESProducer("CaloTopologyBuilder")


process.CaloTowerConstituentsMapBuilder = cms.ESProducer("CaloTowerConstituentsMapBuilder",
    MapAuto = cms.untracked.bool(False),
    MapFile = cms.untracked.string('Geometry/CaloTopology/data/CaloTowerEEGeometric.map.gz'),
    SkipHE = cms.untracked.bool(False),
    appendToDataLabel = cms.string('')
)


process.CaloTowerGeometryFromDBEP = cms.ESProducer("CaloTowerGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.CaloTowerTopologyEP = cms.ESProducer("CaloTowerTopologyEP",
    appendToDataLabel = cms.string('')
)


process.CastorDbProducer = cms.ESProducer("CastorDbProducer",
    appendToDataLabel = cms.string('')
)


process.CastorGeometryFromDBEP = cms.ESProducer("CastorGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.ClusterShapeHitFilterESProducer = cms.ESProducer("ClusterShapeHitFilterESProducer",
    ComponentName = cms.string('ClusterShapeHitFilter'),
    PixelShapeFile = cms.string('RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par'),
    PixelShapeFileL1 = cms.string('RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_loose.par'),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    )
)


process.DTGeometryESModule = cms.ESProducer("DTGeometryESModule",
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    fromDDD = cms.bool(False)
)


process.DTObjectMapESProducer = cms.ESProducer("DTObjectMapESProducer",
    appendToDataLabel = cms.string('')
)


process.EcalBarrelGeometryFromDBEP = cms.ESProducer("EcalBarrelGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalElectronicsMappingBuilder = cms.ESProducer("EcalElectronicsMappingBuilder")


process.EcalEndcapGeometryFromDBEP = cms.ESProducer("EcalEndcapGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalLaserCorrectionService = cms.ESProducer("EcalLaserCorrectionService")


process.EcalPreshowerGeometryFromDBEP = cms.ESProducer("EcalPreshowerGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalTrigTowerConstituentsMapBuilder = cms.ESProducer("EcalTrigTowerConstituentsMapBuilder",
    MapFile = cms.untracked.string('Geometry/EcalMapping/data/EndCap_TTMap.txt')
)


process.GEMGeometryESModule = cms.ESProducer("GEMGeometryESModule",
    useDDD = cms.bool(False)
)


process.GlobalParameters = cms.ESProducer("StableParametersTrivialProducer",
    NumberChips = cms.uint32(1),
    NumberL1EGamma = cms.uint32(12),
    NumberL1Jet = cms.uint32(12),
    NumberL1Muon = cms.uint32(8),
    NumberL1Tau = cms.uint32(12),
    NumberPhysTriggers = cms.uint32(512),
    OrderOfChip = cms.vint32(1),
    PinsOnChip = cms.uint32(512)
)


process.GlobalTrackingGeometryESProducer = cms.ESProducer("GlobalTrackingGeometryESProducer")


process.HcalAlignmentEP = cms.ESProducer("HcalAlignmentEP")


process.HcalGeometryFromDBEP = cms.ESProducer("HcalGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.HcalTPGCoderULUT = cms.ESProducer("HcalTPGCoderULUT",
    FGLUTs = cms.FileInPath('CalibCalorimetry/HcalTPGAlgos/data/HBHE_FG_LUT.dat'),
    FG_HF_threshold = cms.uint32(17),
    LUTGenerationMode = cms.bool(True),
    MaskBit = cms.int32(32768),
    RCalibFile = cms.FileInPath('CalibCalorimetry/HcalTPGAlgos/data/RecHit-TPG-calib.dat'),
    inputLUTs = cms.FileInPath('CalibCalorimetry/HcalTPGAlgos/data/inputLUTcoder_physics.dat'),
    read_Ascii_LUTs = cms.bool(False),
    read_FG_LUTs = cms.bool(False),
    read_XML_LUTs = cms.bool(False)
)


process.HcalTrigTowerGeometryESProducer = cms.ESProducer("HcalTrigTowerGeometryESProducer")


process.L1DTConfigFromDB = cms.ESProducer("DTConfigDBProducer",
    DTTPGMap = cms.untracked.PSet(
    **dict(
        [
            ("wh0st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se3" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se4" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se3" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se4" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se3" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se4" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh0st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh0st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh0st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh0st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh0st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh0st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh0st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh1st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se3" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se4" , cms.untracked.vint32(50, 48, 50, 13) ),
            ("wh1st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se3" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se4" , cms.untracked.vint32(60, 48, 60, 15) ),
            ("wh1st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se3" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se4" , cms.untracked.vint32(72, 48, 72, 18) ),
            ("wh1st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh1st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh1st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh1st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh1st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh1st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh1st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh1st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh2st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se3" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se4" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se3" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se4" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se3" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se4" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh2st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh2st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh2st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh2st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh2st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh2st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh2st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("whm1st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se3" , cms.untracked.vint32(50, 48, 50, 13) ),
            ("whm1st1se4" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se3" , cms.untracked.vint32(60, 48, 60, 15) ),
            ("whm1st2se4" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se3" , cms.untracked.vint32(72, 48, 72, 18) ),
            ("whm1st3se4" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("whm1st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("whm1st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("whm1st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("whm1st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("whm1st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("whm1st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("whm1st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
        ] +
        [
            ("whm2st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se3" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se4" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se3" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se4" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se3" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se4" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("whm2st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("whm2st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("whm2st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("whm2st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("whm2st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("whm2st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("whm2st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
            ]
        )
    ),
    DTTPGParameters = cms.PSet(
        Debug = cms.untracked.bool(False),
        SectCollParameters = cms.PSet(
            Debug = cms.untracked.bool(False),
            SCCSP1 = cms.int32(0),
            SCCSP2 = cms.int32(0),
            SCCSP3 = cms.int32(0),
            SCCSP4 = cms.int32(0),
            SCCSP5 = cms.int32(0),
            SCECF1 = cms.bool(False),
            SCECF2 = cms.bool(False),
            SCECF3 = cms.bool(False),
            SCECF4 = cms.bool(False)
        ),
        TUParameters = cms.PSet(
            BtiParameters = cms.PSet(
                AC1 = cms.int32(0),
                AC2 = cms.int32(3),
                ACH = cms.int32(1),
                ACL = cms.int32(2),
                CH = cms.int32(41),
                CL = cms.int32(22),
                DEAD = cms.int32(31),
                Debug = cms.untracked.int32(0),
                KACCTHETA = cms.int32(1),
                KMAX = cms.int32(64),
                LH = cms.int32(21),
                LL = cms.int32(2),
                LTS = cms.int32(3),
                PTMS0 = cms.int32(0),
                PTMS1 = cms.int32(0),
                PTMS10 = cms.int32(1),
                PTMS11 = cms.int32(1),
                PTMS12 = cms.int32(1),
                PTMS13 = cms.int32(1),
                PTMS14 = cms.int32(1),
                PTMS15 = cms.int32(1),
                PTMS16 = cms.int32(1),
                PTMS17 = cms.int32(1),
                PTMS18 = cms.int32(1),
                PTMS19 = cms.int32(1),
                PTMS2 = cms.int32(0),
                PTMS20 = cms.int32(1),
                PTMS21 = cms.int32(1),
                PTMS22 = cms.int32(1),
                PTMS23 = cms.int32(1),
                PTMS24 = cms.int32(1),
                PTMS25 = cms.int32(1),
                PTMS26 = cms.int32(1),
                PTMS27 = cms.int32(1),
                PTMS28 = cms.int32(1),
                PTMS29 = cms.int32(1),
                PTMS3 = cms.int32(0),
                PTMS30 = cms.int32(0),
                PTMS31 = cms.int32(0),
                PTMS4 = cms.int32(1),
                PTMS5 = cms.int32(1),
                PTMS6 = cms.int32(1),
                PTMS7 = cms.int32(1),
                PTMS8 = cms.int32(1),
                PTMS9 = cms.int32(1),
                RE43 = cms.int32(2),
                RH = cms.int32(61),
                RL = cms.int32(42),
                RON = cms.bool(True),
                SET = cms.int32(7),
                ST43 = cms.int32(42),
                WEN0 = cms.int32(1),
                WEN1 = cms.int32(1),
                WEN2 = cms.int32(1),
                WEN3 = cms.int32(1),
                WEN4 = cms.int32(1),
                WEN5 = cms.int32(1),
                WEN6 = cms.int32(1),
                WEN7 = cms.int32(1),
                WEN8 = cms.int32(1),
                XON = cms.bool(False)
            ),
            Debug = cms.untracked.bool(False),
            LutParameters = cms.PSet(
                BTIC = cms.untracked.int32(0),
                D = cms.untracked.double(0),
                Debug = cms.untracked.bool(False),
                WHEEL = cms.untracked.int32(-1),
                XCN = cms.untracked.double(0)
            ),
            TSPhiParameters = cms.PSet(
                Debug = cms.untracked.bool(False),
                TSMCCE1 = cms.bool(True),
                TSMCCE2 = cms.bool(False),
                TSMCCEC = cms.bool(False),
                TSMCGS1 = cms.bool(True),
                TSMCGS2 = cms.bool(True),
                TSMGS1 = cms.int32(1),
                TSMGS2 = cms.int32(1),
                TSMHSP = cms.int32(1),
                TSMHTE1 = cms.bool(True),
                TSMHTE2 = cms.bool(False),
                TSMHTEC = cms.bool(False),
                TSMMSK1 = cms.int32(312),
                TSMMSK2 = cms.int32(312),
                TSMNOE1 = cms.bool(True),
                TSMNOE2 = cms.bool(False),
                TSMNOEC = cms.bool(False),
                TSMWORD = cms.int32(255),
                TSSCCE1 = cms.bool(True),
                TSSCCE2 = cms.bool(False),
                TSSCCEC = cms.bool(False),
                TSSCGS1 = cms.bool(True),
                TSSCGS2 = cms.bool(True),
                TSSGS1 = cms.int32(1),
                TSSGS2 = cms.int32(1),
                TSSHTE1 = cms.bool(True),
                TSSHTE2 = cms.bool(False),
                TSSHTEC = cms.bool(False),
                TSSMSK1 = cms.int32(312),
                TSSMSK2 = cms.int32(312),
                TSSNOE1 = cms.bool(True),
                TSSNOE2 = cms.bool(False),
                TSSNOEC = cms.bool(False),
                TSTREN0 = cms.bool(True),
                TSTREN1 = cms.bool(True),
                TSTREN10 = cms.bool(True),
                TSTREN11 = cms.bool(True),
                TSTREN12 = cms.bool(True),
                TSTREN13 = cms.bool(True),
                TSTREN14 = cms.bool(True),
                TSTREN15 = cms.bool(True),
                TSTREN16 = cms.bool(True),
                TSTREN17 = cms.bool(True),
                TSTREN18 = cms.bool(True),
                TSTREN19 = cms.bool(True),
                TSTREN2 = cms.bool(True),
                TSTREN20 = cms.bool(True),
                TSTREN21 = cms.bool(True),
                TSTREN22 = cms.bool(True),
                TSTREN23 = cms.bool(True),
                TSTREN3 = cms.bool(True),
                TSTREN4 = cms.bool(True),
                TSTREN5 = cms.bool(True),
                TSTREN6 = cms.bool(True),
                TSTREN7 = cms.bool(True),
                TSTREN8 = cms.bool(True),
                TSTREN9 = cms.bool(True)
            ),
            TSThetaParameters = cms.PSet(
                Debug = cms.untracked.bool(False)
            ),
            TracoParameters = cms.PSet(
                BTIC = cms.int32(32),
                DD = cms.int32(18),
                Debug = cms.untracked.int32(0),
                FHISM = cms.int32(0),
                FHTMSK = cms.int32(0),
                FHTPRF = cms.int32(1),
                FLTMSK = cms.int32(1),
                FPRGCOMP = cms.int32(2),
                FSLMSK = cms.int32(0),
                IBTIOFF = cms.int32(0),
                KPRGCOM = cms.int32(255),
                KRAD = cms.int32(0),
                LTF = cms.int32(0),
                LTS = cms.int32(0),
                LVALIDIFH = cms.int32(0),
                REUSEI = cms.int32(1),
                REUSEO = cms.int32(1),
                SHISM = cms.int32(0),
                SHTMSK = cms.int32(0),
                SHTPRF = cms.int32(1),
                SLTMSK = cms.int32(1),
                SPRGCOMP = cms.int32(2),
                SSLMSK = cms.int32(0),
                TRGENB0 = cms.int32(1),
                TRGENB1 = cms.int32(1),
                TRGENB10 = cms.int32(1),
                TRGENB11 = cms.int32(1),
                TRGENB12 = cms.int32(1),
                TRGENB13 = cms.int32(1),
                TRGENB14 = cms.int32(1),
                TRGENB15 = cms.int32(1),
                TRGENB2 = cms.int32(1),
                TRGENB3 = cms.int32(1),
                TRGENB4 = cms.int32(1),
                TRGENB5 = cms.int32(1),
                TRGENB6 = cms.int32(1),
                TRGENB7 = cms.int32(1),
                TRGENB8 = cms.int32(1),
                TRGENB9 = cms.int32(1)
            )
        )
    ),
    TracoLutsFromDB = cms.bool(True),
    UseBtiAcceptParam = cms.bool(True),
    UseT0 = cms.bool(False),
    bxOffset = cms.int32(19),
    cfgConfig = cms.bool(False),
    debug = cms.bool(False),
    debugBti = cms.int32(0),
    debugDB = cms.bool(False),
    debugLUTs = cms.bool(False),
    debugPed = cms.bool(False),
    debugSC = cms.bool(False),
    debugTSP = cms.bool(False),
    debugTST = cms.bool(False),
    debugTU = cms.bool(False),
    debugTraco = cms.int32(0),
    finePhase = cms.double(25.0)
)


process.MaterialPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('PropagatorWithMaterial'),
    Mass = cms.double(0.105),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('alongMomentum'),
    SimpleMagneticField = cms.string(''),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(False)
)


process.MaterialPropagatorForHI = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('PropagatorWithMaterialForHI'),
    Mass = cms.double(0.139),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('alongMomentum'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(False)
)


process.MaterialPropagatorParabolicMF = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('PropagatorWithMaterialParabolicMf'),
    Mass = cms.double(0.105),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('alongMomentum'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(False)
)


process.MuonDetLayerGeometryESProducer = cms.ESProducer("MuonDetLayerGeometryESProducer")


process.OppositeMaterialPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('PropagatorWithMaterialOpposite'),
    Mass = cms.double(0.105),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SimpleMagneticField = cms.string(''),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(False)
)


process.OppositeMaterialPropagatorForHI = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('PropagatorWithMaterialOppositeForHI'),
    Mass = cms.double(0.139),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(False)
)


process.OppositeMaterialPropagatorParabolicMF = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    Mass = cms.double(0.105),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(False)
)


process.OppositePropagatorWithMaterialForMixedStep = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('PropagatorWithMaterialForMixedStepOpposite'),
    Mass = cms.double(0.105),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    ptMin = cms.double(0.1),
    useRungeKutta = cms.bool(False)
)


process.ParabolicParametrizedMagneticFieldProducer = cms.ESProducer("AutoParametrizedMagneticFieldProducer",
    label = cms.untracked.string('ParabolicMf'),
    valueOverride = cms.int32(-1),
    version = cms.string('Parabolic')
)


process.PropagatorWithMaterialForLoopers = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('PropagatorWithMaterialForLoopers'),
    Mass = cms.double(0.1396),
    MaxDPhi = cms.double(4.0),
    PropagationDirection = cms.string('alongMomentum'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(False)
)


process.PropagatorWithMaterialForMixedStep = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('PropagatorWithMaterialForMixedStep'),
    Mass = cms.double(0.105),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('alongMomentum'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    ptMin = cms.double(0.1),
    useRungeKutta = cms.bool(False)
)


process.RPCGeometryESModule = cms.ESProducer("RPCGeometryESModule",
    compatibiltyWith11 = cms.untracked.bool(True),
    useDDD = cms.untracked.bool(False)
)


process.SiStripRecHitMatcherESProducer = cms.ESProducer("SiStripRecHitMatcherESProducer",
    ComponentName = cms.string('StandardMatcher'),
    NSigmaInside = cms.double(3.0),
    PreFilter = cms.bool(False)
)


process.SiStripRegionConnectivity = cms.ESProducer("SiStripRegionConnectivity",
    EtaDivisions = cms.untracked.uint32(20),
    EtaMax = cms.untracked.double(2.5),
    PhiDivisions = cms.untracked.uint32(20)
)


process.SimpleSecondaryVertex3TrkComputer = cms.ESProducer("SimpleSecondaryVertexESProducer",
    minTracks = cms.uint32(3),
    minVertices = cms.uint32(1),
    unBoost = cms.bool(False),
    use3d = cms.bool(True),
    useSignificance = cms.bool(True)
)


process.SteppingHelixPropagatorAny = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorAny'),
    NoErrorPropagation = cms.bool(False),
    PropagationDirection = cms.string('anyDirection'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False)
)


process.StripCPEfromTrackAngleESProducer = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('StripCPEfromTrackAngle'),
    ComponentType = cms.string('StripCPEfromTrackAngle'),
    parameters = cms.PSet(
        mLC_P0 = cms.double(-0.326),
        mLC_P1 = cms.double(0.618),
        mLC_P2 = cms.double(0.3),
        mTEC_P0 = cms.double(-1.885),
        mTEC_P1 = cms.double(0.471),
        mTIB_P0 = cms.double(-0.742),
        mTIB_P1 = cms.double(0.202),
        mTID_P0 = cms.double(-1.427),
        mTID_P1 = cms.double(0.433),
        mTOB_P0 = cms.double(-1.026),
        mTOB_P1 = cms.double(0.253),
        maxChgOneMIP = cms.double(6000.0),
        useLegacyError = cms.bool(False)
    )
)


process.TrackerRecoGeometryESProducer = cms.ESProducer("TrackerRecoGeometryESProducer")


process.TransientTrackBuilderESProducer = cms.ESProducer("TransientTrackBuilderESProducer",
    ComponentName = cms.string('TransientTrackBuilder')
)


process.VolumeBasedMagneticFieldESProducer = cms.ESProducer("VolumeBasedMagneticFieldESProducerFromDB",
    debugBuilder = cms.untracked.bool(False),
    label = cms.untracked.string(''),
    valueOverride = cms.int32(-1)
)


process.ZdcGeometryFromDBEP = cms.ESProducer("ZdcGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.caloDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('CaloDetIdAssociator'),
    etaBinSize = cms.double(0.087),
    hcalRegion = cms.int32(2),
    includeBadChambers = cms.bool(False),
    includeGEM = cms.bool(False),
    includeME0 = cms.bool(False),
    nEta = cms.int32(70),
    nPhi = cms.int32(72)
)


process.cosmicsNavigationSchoolESProducer = cms.ESProducer("NavigationSchoolESProducer",
    ComponentName = cms.string('CosmicNavigationSchool'),
    SimpleMagneticField = cms.string('')
)


process.ecalDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('EcalDetIdAssociator'),
    etaBinSize = cms.double(0.02),
    hcalRegion = cms.int32(2),
    includeBadChambers = cms.bool(False),
    includeGEM = cms.bool(False),
    includeME0 = cms.bool(False),
    nEta = cms.int32(300),
    nPhi = cms.int32(360)
)


process.ecalSeverityLevel = cms.ESProducer("EcalSeverityLevelESProducer",
    dbstatusMask = cms.PSet(
        kBad = cms.vstring('kNonRespondingIsolated', 
            'kDeadVFE', 
            'kDeadFE', 
            'kNoDataNoTP'),
        kGood = cms.vstring('kOk'),
        kProblematic = cms.vstring('kDAC', 
            'kNoLaser', 
            'kNoisy', 
            'kNNoisy', 
            'kNNNoisy', 
            'kNNNNoisy', 
            'kNNNNNoisy', 
            'kFixedG6', 
            'kFixedG1', 
            'kFixedG0'),
        kRecovered = cms.vstring(),
        kTime = cms.vstring(),
        kWeird = cms.vstring()
    ),
    flagMask = cms.PSet(
        kBad = cms.vstring('kFaultyHardware', 
            'kDead', 
            'kKilled'),
        kGood = cms.vstring('kGood'),
        kProblematic = cms.vstring('kPoorReco', 
            'kPoorCalib', 
            'kNoisy', 
            'kSaturated'),
        kRecovered = cms.vstring('kLeadingEdgeRecovered', 
            'kTowerRecovered'),
        kTime = cms.vstring('kOutOfTime'),
        kWeird = cms.vstring('kWeird', 
            'kDiWeird')
    ),
    timeThresh = cms.double(2.0)
)


process.emtfParams = cms.ESProducer("L1TMuonEndCapParamsESProducer",
    FirmwareVersion = cms.int32(123456),
    PrimConvVersion = cms.int32(1),
    PtAssignVersion = cms.int32(7)
)


process.fakeForIdealAlignment = cms.ESProducer("FakeAlignmentProducer",
    appendToDataLabel = cms.string('fakeForIdeal')
)


process.fakeTwinMuxParams = cms.ESProducer("L1TTwinMuxParamsESProducer",
    CorrectDTBxwRPC = cms.bool(True),
    dphiWindowBxShift = cms.uint32(9999),
    fwVersion = cms.uint32(1),
    useLowQDT = cms.bool(False),
    useOnlyDT = cms.bool(False),
    useOnlyRPC = cms.bool(False),
    useRpcBxForDtBelowQuality = cms.uint32(4),
    verbose = cms.bool(False)
)


process.hcalDDDRecConstants = cms.ESProducer("HcalDDDRecConstantsESModule",
    appendToDataLabel = cms.string('')
)


process.hcalDDDSimConstants = cms.ESProducer("HcalDDDSimConstantsESModule",
    appendToDataLabel = cms.string('')
)


process.hcalDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('HcalDetIdAssociator'),
    etaBinSize = cms.double(0.087),
    hcalRegion = cms.int32(2),
    includeBadChambers = cms.bool(False),
    includeGEM = cms.bool(False),
    includeME0 = cms.bool(False),
    nEta = cms.int32(70),
    nPhi = cms.int32(72)
)


process.hcalRecAlgos = cms.ESProducer("HcalRecAlgoESProducer",
    DropChannelStatusBits = cms.vstring('HcalCellMask', 
        'HcalCellOff', 
        'HcalCellDead'),
    RecoveredRecHitBits = cms.vstring(),
    SeverityLevels = cms.VPSet(cms.PSet(
        ChannelStatus = cms.vstring(),
        Level = cms.int32(0),
        RecHitFlags = cms.vstring('TimingFromTDC')
    ), 
        cms.PSet(
            ChannelStatus = cms.vstring('HcalCellCaloTowerProb'),
            Level = cms.int32(1),
            RecHitFlags = cms.vstring()
        ), 
        cms.PSet(
            ChannelStatus = cms.vstring('HcalCellExcludeFromHBHENoiseSummary'),
            Level = cms.int32(5),
            RecHitFlags = cms.vstring()
        ), 
        cms.PSet(
            ChannelStatus = cms.vstring(),
            Level = cms.int32(8),
            RecHitFlags = cms.vstring('HBHEHpdHitMultiplicity', 
                'HBHEIsolatedNoise', 
                'HBHEFlatNoise', 
                'HBHESpikeNoise', 
                'HBHETS4TS5Noise', 
                'HBHENegativeNoise', 
                'HBHEPulseFitBit', 
                'HBHEOOTPU')
        ), 
        cms.PSet(
            ChannelStatus = cms.vstring(),
            Level = cms.int32(11),
            RecHitFlags = cms.vstring('HFLongShort', 
                'HFS8S1Ratio', 
                'HFPET', 
                'HFSignalAsymmetry')
        ), 
        cms.PSet(
            ChannelStatus = cms.vstring('HcalCellHot'),
            Level = cms.int32(15),
            RecHitFlags = cms.vstring()
        ), 
        cms.PSet(
            ChannelStatus = cms.vstring('HcalCellOff', 
                'HcalCellDead'),
            Level = cms.int32(20),
            RecHitFlags = cms.vstring()
        )),
    appendToDataLabel = cms.string(''),
    phase = cms.uint32(1)
)


process.hcalTopologyIdeal = cms.ESProducer("HcalTopologyIdealEP",
    Exclude = cms.untracked.string(''),
    MergePosition = cms.untracked.bool(True),
    appendToDataLabel = cms.string('')
)


process.hcal_db_producer = cms.ESProducer("HcalDbProducer",
    dump = cms.untracked.vstring(''),
    file = cms.untracked.string('')
)


process.hltCombinedSecondaryVertex = cms.ESProducer("CombinedSecondaryVertexESProducer",
    SoftLeptonFlip = cms.bool(False),
    calibrationRecords = cms.vstring('CombinedSVRecoVertex', 
        'CombinedSVPseudoVertex', 
        'CombinedSVNoVertex'),
    categoryVariableName = cms.string('vertexCategory'),
    charmCut = cms.double(1.5),
    correctVertexMass = cms.bool(True),
    minimumTrackWeight = cms.double(0.5),
    pseudoMultiplicityMin = cms.uint32(2),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    recordLabel = cms.string('HLT'),
    trackFlip = cms.bool(False),
    trackMultiplicityMin = cms.uint32(3),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackPseudoSelection = cms.PSet(
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5.0),
        maxDistToAxis = cms.double(0.07),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0)
    ),
    trackSelection = cms.PSet(
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5.0),
        maxDistToAxis = cms.double(0.07),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0)
    ),
    trackSort = cms.string('sip2dSig'),
    useCategories = cms.bool(True),
    useTrackWeights = cms.bool(True),
    vertexFlip = cms.bool(False)
)


process.hltCombinedSecondaryVertexV2 = cms.ESProducer("CombinedSecondaryVertexESProducer",
    SoftLeptonFlip = cms.bool(False),
    calibrationRecords = cms.vstring('CombinedSVIVFV2RecoVertex', 
        'CombinedSVIVFV2PseudoVertex', 
        'CombinedSVIVFV2NoVertex'),
    categoryVariableName = cms.string('vertexCategory'),
    charmCut = cms.double(1.5),
    correctVertexMass = cms.bool(True),
    minimumTrackWeight = cms.double(0.5),
    pseudoMultiplicityMin = cms.uint32(2),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    recordLabel = cms.string('HLT'),
    trackFlip = cms.bool(False),
    trackMultiplicityMin = cms.uint32(3),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackPseudoSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5.0),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500.0),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3.0),
        min_pT = cms.double(120.0),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5.0),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500.0),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3.0),
        min_pT = cms.double(120.0),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip2dSig'),
    useCategories = cms.bool(True),
    useTrackWeights = cms.bool(True),
    vertexFlip = cms.bool(False)
)


process.hltDisplacedDijethltESPPromptTrackCountingESProducer = cms.ESProducer("PromptTrackCountingESProducer",
    deltaR = cms.double(-1.0),
    deltaRmin = cms.double(0.0),
    impactParameterType = cms.int32(1),
    maxImpactParameter = cms.double(0.1),
    maxImpactParameterSig = cms.double(999999.0),
    maximumDecayLength = cms.double(999999.0),
    maximumDistanceToJetAxis = cms.double(999999.0),
    minimumImpactParameter = cms.double(-1.0),
    nthTrack = cms.int32(-1),
    trackQualityClass = cms.string('any'),
    useSignedImpactParameterSig = cms.bool(True)
)


process.hltDisplacedDijethltESPTrackCounting2D1st = cms.ESProducer("TrackCountingESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(1),
    max_pT = cms.double(500.0),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3.0),
    maximumDecayLength = cms.double(999999.0),
    maximumDistanceToJetAxis = cms.double(9999999.0),
    min_pT = cms.double(120.0),
    min_pT_dRcut = cms.double(0.5),
    minimumImpactParameter = cms.double(0.05),
    nthTrack = cms.int32(1),
    trackQualityClass = cms.string('any'),
    useSignedImpactParameterSig = cms.bool(False),
    useVariableJTA = cms.bool(False)
)


process.hltESPAnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    ComponentName = cms.string('hltESPAnalyticalPropagator'),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('alongMomentum')
)


process.hltESPBwdAnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    ComponentName = cms.string('hltESPBwdAnalyticalPropagator'),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('oppositeToMomentum')
)


process.hltESPBwdElectronPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('hltESPBwdElectronPropagator'),
    Mass = cms.double(0.000511),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SimpleMagneticField = cms.string(''),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(False)
)


process.hltESPChi2ChargeLooseMeasurementEstimator16 = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPChi2ChargeLooseMeasurementEstimator16'),
    MaxChi2 = cms.double(16.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(-1.0)
)


process.hltESPChi2ChargeMeasurementEstimator16 = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPChi2ChargeMeasurementEstimator16'),
    MaxChi2 = cms.double(16.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(-1.0)
)


process.hltESPChi2ChargeMeasurementEstimator2000 = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPChi2ChargeMeasurementEstimator2000'),
    MaxChi2 = cms.double(2000.0),
    MaxDisplacement = cms.double(100.0),
    MaxSagitta = cms.double(-1.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(10.0),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(-1.0)
)


process.hltESPChi2ChargeMeasurementEstimator30 = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPChi2ChargeMeasurementEstimator30'),
    MaxChi2 = cms.double(30.0),
    MaxDisplacement = cms.double(100.0),
    MaxSagitta = cms.double(-1.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(10.0),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutNone')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(-1.0)
)


process.hltESPChi2ChargeMeasurementEstimator9 = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPChi2ChargeMeasurementEstimator9'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(15.0)
)


process.hltESPChi2ChargeMeasurementEstimator9ForHI = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPChi2ChargeMeasurementEstimator9ForHI'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(100.0),
    MaxSagitta = cms.double(-1.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(10.0),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutForHI')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(15.0)
)


process.hltESPChi2ChargeTightMeasurementEstimator16 = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPChi2ChargeTightMeasurementEstimator16'),
    MaxChi2 = cms.double(16.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(-1.0)
)


process.hltESPChi2MeasurementEstimator100 = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPChi2MeasurementEstimator100'),
    MaxChi2 = cms.double(40.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1e+12),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(4.0)
)


process.hltESPChi2MeasurementEstimator16 = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPChi2MeasurementEstimator16'),
    MaxChi2 = cms.double(16.0),
    MaxDisplacement = cms.double(100.0),
    MaxSagitta = cms.double(-1.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(10.0),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3.0)
)


process.hltESPChi2MeasurementEstimator30 = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPChi2MeasurementEstimator30'),
    MaxChi2 = cms.double(30.0),
    MaxDisplacement = cms.double(100.0),
    MaxSagitta = cms.double(-1.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(10.0),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3.0)
)


process.hltESPChi2MeasurementEstimator9 = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPChi2MeasurementEstimator9'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(100.0),
    MaxSagitta = cms.double(-1.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(10.0),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3.0)
)


process.hltESPCloseComponentsMerger5D = cms.ESProducer("CloseComponentsMergerESProducer5D",
    ComponentName = cms.string('hltESPCloseComponentsMerger5D'),
    DistanceMeasure = cms.string('hltESPKullbackLeiblerDistance5D'),
    MaxComponents = cms.int32(12)
)


process.hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9 = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(-1.0)
)


process.hltESPDetachedQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('hltESPDetachedQuadStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.13)
)


process.hltESPDetachedStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('hltESPDetachedStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.13)
)


process.hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9 = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(-1.0)
)


process.hltESPDetachedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('hltESPDetachedTripletStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.13)
)


process.hltESPDisplacedDijethltPromptTrackCountingESProducer = cms.ESProducer("PromptTrackCountingESProducer",
    deltaR = cms.double(-1.0),
    deltaRmin = cms.double(0.0),
    impactParameterType = cms.int32(1),
    maxImpactParameter = cms.double(0.1),
    maxImpactParameterSig = cms.double(999999.0),
    maximumDecayLength = cms.double(999999.0),
    maximumDistanceToJetAxis = cms.double(999999.0),
    minimumImpactParameter = cms.double(-1.0),
    nthTrack = cms.int32(-1),
    trackQualityClass = cms.string('any'),
    useSignedImpactParameterSig = cms.bool(True)
)


process.hltESPDisplacedDijethltPromptTrackCountingESProducerLong = cms.ESProducer("PromptTrackCountingESProducer",
    deltaR = cms.double(-1.0),
    deltaRmin = cms.double(0.0),
    impactParameterType = cms.int32(1),
    maxImpactParameter = cms.double(0.2),
    maxImpactParameterSig = cms.double(999999.0),
    maximumDecayLength = cms.double(999999.0),
    maximumDistanceToJetAxis = cms.double(999999.0),
    minimumImpactParameter = cms.double(-1.0),
    nthTrack = cms.int32(-1),
    trackQualityClass = cms.string('any'),
    useSignedImpactParameterSig = cms.bool(True)
)


process.hltESPDisplacedDijethltTrackCounting2D1st = cms.ESProducer("TrackCountingESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(1),
    max_pT = cms.double(500.0),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3.0),
    maximumDecayLength = cms.double(999999.0),
    maximumDistanceToJetAxis = cms.double(9999999.0),
    min_pT = cms.double(120.0),
    min_pT_dRcut = cms.double(0.5),
    minimumImpactParameter = cms.double(0.05),
    nthTrack = cms.int32(1),
    trackQualityClass = cms.string('any'),
    useSignedImpactParameterSig = cms.bool(False),
    useVariableJTA = cms.bool(False)
)


process.hltESPDisplacedDijethltTrackCounting2D2ndLong = cms.ESProducer("TrackCountingESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(1),
    max_pT = cms.double(500.0),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3.0),
    maximumDecayLength = cms.double(999999.0),
    maximumDistanceToJetAxis = cms.double(9999999.0),
    min_pT = cms.double(120.0),
    min_pT_dRcut = cms.double(0.5),
    minimumImpactParameter = cms.double(0.2),
    nthTrack = cms.int32(2),
    trackQualityClass = cms.string('any'),
    useSignedImpactParameterSig = cms.bool(True),
    useVariableJTA = cms.bool(False)
)


process.hltESPDummyDetLayerGeometry = cms.ESProducer("DetLayerGeometryESProducer",
    ComponentName = cms.string('hltESPDummyDetLayerGeometry')
)


process.hltESPElectronMaterialEffects = cms.ESProducer("GsfMaterialEffectsESProducer",
    BetheHeitlerCorrection = cms.int32(2),
    BetheHeitlerParametrization = cms.string('BetheHeitler_cdfmom_nC6_O5.par'),
    ComponentName = cms.string('hltESPElectronMaterialEffects'),
    EnergyLossUpdator = cms.string('GsfBetheHeitlerUpdator'),
    Mass = cms.double(0.000511),
    MultipleScatteringUpdator = cms.string('MultipleScatteringUpdator')
)


process.hltESPFastSteppingHelixPropagatorAny = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('hltESPFastSteppingHelixPropagatorAny'),
    NoErrorPropagation = cms.bool(False),
    PropagationDirection = cms.string('anyDirection'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(True)
)


process.hltESPFastSteppingHelixPropagatorOpposite = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('hltESPFastSteppingHelixPropagatorOpposite'),
    NoErrorPropagation = cms.bool(False),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(True)
)


process.hltESPFittingSmootherIT = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('hltESPFittingSmootherIT'),
    EstimateCut = cms.double(-1.0),
    Fitter = cms.string('hltESPTrajectoryFitterRK'),
    LogPixelProbabilityCut = cms.double(-16.0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(3),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('hltESPTrajectorySmootherRK'),
    appendToDataLabel = cms.string('')
)


process.hltESPFittingSmootherRK = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(False),
    ComponentName = cms.string('hltESPFittingSmootherRK'),
    EstimateCut = cms.double(-1.0),
    Fitter = cms.string('hltESPTrajectoryFitterRK'),
    LogPixelProbabilityCut = cms.double(-16.0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(5),
    NoInvalidHitsBeginEnd = cms.bool(False),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('hltESPTrajectorySmootherRK'),
    appendToDataLabel = cms.string('')
)


process.hltESPFlexibleKFFittingSmoother = cms.ESProducer("FlexibleKFFittingSmootherESProducer",
    ComponentName = cms.string('hltESPFlexibleKFFittingSmoother'),
    appendToDataLabel = cms.string(''),
    looperFitter = cms.string('hltESPKFFittingSmootherForLoopers'),
    standardFitter = cms.string('hltESPKFFittingSmootherWithOutliersRejectionAndRK')
)


process.hltESPFwdElectronPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('hltESPFwdElectronPropagator'),
    Mass = cms.double(0.000511),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('alongMomentum'),
    SimpleMagneticField = cms.string(''),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(False)
)


process.hltESPGlobalDetLayerGeometry = cms.ESProducer("GlobalDetLayerGeometryESProducer",
    ComponentName = cms.string('hltESPGlobalDetLayerGeometry')
)


process.hltESPGsfElectronFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('hltESPGsfElectronFittingSmoother'),
    EstimateCut = cms.double(-1.0),
    Fitter = cms.string('hltESPGsfTrajectoryFitter'),
    LogPixelProbabilityCut = cms.double(-16.0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(5),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('hltESPGsfTrajectorySmoother'),
    appendToDataLabel = cms.string('')
)


process.hltESPGsfTrajectoryFitter = cms.ESProducer("GsfTrajectoryFitterESProducer",
    ComponentName = cms.string('hltESPGsfTrajectoryFitter'),
    GeometricalPropagator = cms.string('hltESPAnalyticalPropagator'),
    MaterialEffectsUpdator = cms.string('hltESPElectronMaterialEffects'),
    Merger = cms.string('hltESPCloseComponentsMerger5D'),
    RecoGeometry = cms.string('hltESPGlobalDetLayerGeometry')
)


process.hltESPGsfTrajectorySmoother = cms.ESProducer("GsfTrajectorySmootherESProducer",
    ComponentName = cms.string('hltESPGsfTrajectorySmoother'),
    ErrorRescaling = cms.double(100.0),
    GeometricalPropagator = cms.string('hltESPBwdAnalyticalPropagator'),
    MaterialEffectsUpdator = cms.string('hltESPElectronMaterialEffects'),
    Merger = cms.string('hltESPCloseComponentsMerger5D'),
    RecoGeometry = cms.string('hltESPGlobalDetLayerGeometry')
)


process.hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30 = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30'),
    MaxChi2 = cms.double(30.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(15.0)
)


process.hltESPInitialStepChi2ChargeMeasurementEstimator30 = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPInitialStepChi2ChargeMeasurementEstimator30'),
    MaxChi2 = cms.double(30.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(15.0)
)


process.hltESPInitialStepChi2MeasurementEstimator36 = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPInitialStepChi2MeasurementEstimator36'),
    MaxChi2 = cms.double(36.0),
    MaxDisplacement = cms.double(100.0),
    MaxSagitta = cms.double(-1.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(10.0),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3.0)
)


process.hltESPKFFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(False),
    ComponentName = cms.string('hltESPKFFittingSmoother'),
    EstimateCut = cms.double(-1.0),
    Fitter = cms.string('hltESPKFTrajectoryFitter'),
    LogPixelProbabilityCut = cms.double(-16.0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(5),
    NoInvalidHitsBeginEnd = cms.bool(False),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('hltESPKFTrajectorySmoother'),
    appendToDataLabel = cms.string('')
)


process.hltESPKFFittingSmootherForL2Muon = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(False),
    ComponentName = cms.string('hltESPKFFittingSmootherForL2Muon'),
    EstimateCut = cms.double(-1.0),
    Fitter = cms.string('hltESPKFTrajectoryFitterForL2Muon'),
    LogPixelProbabilityCut = cms.double(-16.0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(5),
    NoInvalidHitsBeginEnd = cms.bool(False),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('hltESPKFTrajectorySmootherForL2Muon'),
    appendToDataLabel = cms.string('')
)


process.hltESPKFFittingSmootherForLoopers = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('hltESPKFFittingSmootherForLoopers'),
    EstimateCut = cms.double(20.0),
    Fitter = cms.string('hltESPKFTrajectoryFitterForLoopers'),
    LogPixelProbabilityCut = cms.double(-14.0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(3),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('hltESPKFTrajectorySmootherForLoopers'),
    appendToDataLabel = cms.string('')
)


process.hltESPKFFittingSmootherWithOutliersRejectionAndRK = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('hltESPKFFittingSmootherWithOutliersRejectionAndRK'),
    EstimateCut = cms.double(20.0),
    Fitter = cms.string('hltESPRKTrajectoryFitter'),
    LogPixelProbabilityCut = cms.double(-14.0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(3),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('hltESPRKTrajectorySmoother'),
    appendToDataLabel = cms.string('')
)


process.hltESPKFTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('hltESPKFTrajectoryFitter'),
    Estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    Propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    RecoGeometry = cms.string('hltESPDummyDetLayerGeometry'),
    Updator = cms.string('hltESPKFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(3)
)


process.hltESPKFTrajectoryFitterForL2Muon = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('hltESPKFTrajectoryFitterForL2Muon'),
    Estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    Propagator = cms.string('hltESPFastSteppingHelixPropagatorAny'),
    RecoGeometry = cms.string('hltESPDummyDetLayerGeometry'),
    Updator = cms.string('hltESPKFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(3)
)


process.hltESPKFTrajectoryFitterForLoopers = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('hltESPKFTrajectoryFitterForLoopers'),
    Estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    Propagator = cms.string('PropagatorWithMaterialForLoopers'),
    RecoGeometry = cms.string('hltESPGlobalDetLayerGeometry'),
    Updator = cms.string('hltESPKFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(3)
)


process.hltESPKFTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('hltESPKFTrajectorySmoother'),
    Estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    Propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    RecoGeometry = cms.string('hltESPDummyDetLayerGeometry'),
    Updator = cms.string('hltESPKFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3)
)


process.hltESPKFTrajectorySmootherForL2Muon = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('hltESPKFTrajectorySmootherForL2Muon'),
    Estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    Propagator = cms.string('hltESPFastSteppingHelixPropagatorOpposite'),
    RecoGeometry = cms.string('hltESPDummyDetLayerGeometry'),
    Updator = cms.string('hltESPKFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3)
)


process.hltESPKFTrajectorySmootherForLoopers = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('hltESPKFTrajectorySmootherForLoopers'),
    Estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    Propagator = cms.string('PropagatorWithMaterialForLoopers'),
    RecoGeometry = cms.string('hltESPGlobalDetLayerGeometry'),
    Updator = cms.string('hltESPKFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(3)
)


process.hltESPKFTrajectorySmootherForMuonTrackLoader = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('hltESPKFTrajectorySmootherForMuonTrackLoader'),
    Estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    Propagator = cms.string('hltESPSmartPropagatorAnyOpposite'),
    RecoGeometry = cms.string('hltESPDummyDetLayerGeometry'),
    Updator = cms.string('hltESPKFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(3)
)


process.hltESPKFUpdator = cms.ESProducer("KFUpdatorESProducer",
    ComponentName = cms.string('hltESPKFUpdator')
)


process.hltESPKullbackLeiblerDistance5D = cms.ESProducer("DistanceBetweenComponentsESProducer5D",
    ComponentName = cms.string('hltESPKullbackLeiblerDistance5D'),
    DistanceMeasure = cms.string('KullbackLeibler')
)


process.hltESPL3MuKFTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('hltESPL3MuKFTrajectoryFitter'),
    Estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    Propagator = cms.string('hltESPSmartPropagatorAny'),
    RecoGeometry = cms.string('hltESPDummyDetLayerGeometry'),
    Updator = cms.string('hltESPKFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(3)
)


process.hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9 = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(-1.0)
)


process.hltESPLowPtQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('hltESPLowPtQuadStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.16)
)


process.hltESPLowPtStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('hltESPLowPtStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.16)
)


process.hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9 = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(-1.0)
)


process.hltESPLowPtTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('hltESPLowPtTripletStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.16)
)


process.hltESPMeasurementTracker = cms.ESProducer("MeasurementTrackerESProducer",
    ComponentName = cms.string('hltESPMeasurementTracker'),
    DebugPixelModuleQualityDB = cms.untracked.bool(False),
    DebugPixelROCQualityDB = cms.untracked.bool(False),
    DebugStripAPVFiberQualityDB = cms.untracked.bool(False),
    DebugStripModuleQualityDB = cms.untracked.bool(False),
    DebugStripStripQualityDB = cms.untracked.bool(False),
    HitMatcher = cms.string('StandardMatcher'),
    MaskBadAPVFibers = cms.bool(True),
    PixelCPE = cms.string('hltESPPixelCPEGeneric'),
    SiStripQualityLabel = cms.string(''),
    StripCPE = cms.string('hltESPStripCPEfromTrackAngle'),
    UsePixelModuleQualityDB = cms.bool(True),
    UsePixelROCQualityDB = cms.bool(True),
    UseStripAPVFiberQualityDB = cms.bool(True),
    UseStripModuleQualityDB = cms.bool(True),
    UseStripStripQualityDB = cms.bool(True),
    badStripCuts = cms.PSet(
        TEC = cms.PSet(
            maxBad = cms.uint32(4),
            maxConsecutiveBad = cms.uint32(2)
        ),
        TIB = cms.PSet(
            maxBad = cms.uint32(4),
            maxConsecutiveBad = cms.uint32(2)
        ),
        TID = cms.PSet(
            maxBad = cms.uint32(4),
            maxConsecutiveBad = cms.uint32(2)
        ),
        TOB = cms.PSet(
            maxBad = cms.uint32(4),
            maxConsecutiveBad = cms.uint32(2)
        )
    )
)


process.hltESPMixedStepClusterShapeHitFilter = cms.ESProducer("ClusterShapeHitFilterESProducer",
    ComponentName = cms.string('hltESPMixedStepClusterShapeHitFilter'),
    PixelShapeFile = cms.string('RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par'),
    PixelShapeFileL1 = cms.string('RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_loose.par'),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
    )
)


process.hltESPMixedStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('hltESPMixedStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.11)
)


process.hltESPMixedTripletStepChi2ChargeMeasurementEstimator16 = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPMixedTripletStepChi2ChargeMeasurementEstimator16'),
    MaxChi2 = cms.double(16.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(-1.0)
)


process.hltESPMixedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('hltESPMixedTripletStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.11)
)


process.hltESPMuonTransientTrackingRecHitBuilder = cms.ESProducer("MuonTransientTrackingRecHitBuilderESProducer",
    ComponentName = cms.string('hltESPMuonTransientTrackingRecHitBuilder')
)


process.hltESPPixelCPEGeneric = cms.ESProducer("PixelCPEGenericESProducer",
    Alpha2Order = cms.bool(True),
    ClusterProbComputationFlag = cms.int32(0),
    ComponentName = cms.string('hltESPPixelCPEGeneric'),
    DoCosmics = cms.bool(False),
    EdgeClusterErrorX = cms.double(50.0),
    EdgeClusterErrorY = cms.double(85.0),
    IrradiationBiasCorrection = cms.bool(False),
    LoadTemplatesFromDB = cms.bool(True),
    MagneticFieldRecord = cms.ESInputTag(""),
    PixelErrorParametrization = cms.string('NOTcmsim'),
    TruncatePixelCharge = cms.bool(True),
    UseErrorsFromTemplates = cms.bool(True),
    eff_charge_cut_highX = cms.double(1.0),
    eff_charge_cut_highY = cms.double(1.0),
    eff_charge_cut_lowX = cms.double(0.0),
    eff_charge_cut_lowY = cms.double(0.0),
    inflate_all_errors_no_trk_angle = cms.bool(False),
    inflate_errors = cms.bool(False),
    size_cutX = cms.double(3.0),
    size_cutY = cms.double(3.0),
    useLAAlignmentOffsets = cms.bool(False),
    useLAWidthFromDB = cms.bool(False)
)


process.hltESPPixelCPETemplateReco = cms.ESProducer("PixelCPETemplateRecoESProducer",
    Alpha2Order = cms.bool(True),
    ClusterProbComputationFlag = cms.int32(0),
    ComponentName = cms.string('hltESPPixelCPETemplateReco'),
    DoCosmics = cms.bool(False),
    DoLorentz = cms.bool(True),
    LoadTemplatesFromDB = cms.bool(True),
    UseClusterSplitter = cms.bool(False),
    speed = cms.int32(-2)
)


process.hltESPPixelLessStepChi2ChargeMeasurementEstimator16 = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPPixelLessStepChi2ChargeMeasurementEstimator16'),
    MaxChi2 = cms.double(16.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(-1.0)
)


process.hltESPPixelLessStepClusterShapeHitFilter = cms.ESProducer("ClusterShapeHitFilterESProducer",
    ComponentName = cms.string('hltESPPixelLessStepClusterShapeHitFilter'),
    PixelShapeFile = cms.string('RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par'),
    PixelShapeFileL1 = cms.string('RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_loose.par'),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
    )
)


process.hltESPPixelLessStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('hltESPPixelLessStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.11)
)


process.hltESPPixelPairStepChi2ChargeMeasurementEstimator9 = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPPixelPairStepChi2ChargeMeasurementEstimator9'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1e+12),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutLoose')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(15.0)
)


process.hltESPPixelPairStepChi2MeasurementEstimator25 = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPPixelPairStepChi2MeasurementEstimator25'),
    MaxChi2 = cms.double(25.0),
    MaxDisplacement = cms.double(100.0),
    MaxSagitta = cms.double(-1.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(10.0),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3.0)
)


process.hltESPPixelPairTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('hltESPPixelPairTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.19)
)


process.hltESPRKTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('hltESPRKTrajectoryFitter'),
    Estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('hltESPGlobalDetLayerGeometry'),
    Updator = cms.string('hltESPKFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(3)
)


process.hltESPRKTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('hltESPRKTrajectorySmoother'),
    Estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('hltESPGlobalDetLayerGeometry'),
    Updator = cms.string('hltESPKFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3)
)


process.hltESPRungeKuttaTrackerPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('hltESPRungeKuttaTrackerPropagator'),
    Mass = cms.double(0.105),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('alongMomentum'),
    SimpleMagneticField = cms.string(''),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(True)
)


process.hltESPSmartPropagator = cms.ESProducer("SmartPropagatorESProducer",
    ComponentName = cms.string('hltESPSmartPropagator'),
    Epsilon = cms.double(5.0),
    MuonPropagator = cms.string('hltESPSteppingHelixPropagatorAlong'),
    PropagationDirection = cms.string('alongMomentum'),
    TrackerPropagator = cms.string('PropagatorWithMaterial')
)


process.hltESPSmartPropagatorAny = cms.ESProducer("SmartPropagatorESProducer",
    ComponentName = cms.string('hltESPSmartPropagatorAny'),
    Epsilon = cms.double(5.0),
    MuonPropagator = cms.string('SteppingHelixPropagatorAny'),
    PropagationDirection = cms.string('alongMomentum'),
    TrackerPropagator = cms.string('PropagatorWithMaterial')
)


process.hltESPSmartPropagatorAnyOpposite = cms.ESProducer("SmartPropagatorESProducer",
    ComponentName = cms.string('hltESPSmartPropagatorAnyOpposite'),
    Epsilon = cms.double(5.0),
    MuonPropagator = cms.string('SteppingHelixPropagatorAny'),
    PropagationDirection = cms.string('oppositeToMomentum'),
    TrackerPropagator = cms.string('PropagatorWithMaterialOpposite')
)


process.hltESPSoftLeptonByDistance = cms.ESProducer("LeptonTaggerByDistanceESProducer",
    distance = cms.double(0.5)
)


process.hltESPSteppingHelixPropagatorAlong = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('hltESPSteppingHelixPropagatorAlong'),
    NoErrorPropagation = cms.bool(False),
    PropagationDirection = cms.string('alongMomentum'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False)
)


process.hltESPSteppingHelixPropagatorOpposite = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('hltESPSteppingHelixPropagatorOpposite'),
    NoErrorPropagation = cms.bool(False),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False)
)


process.hltESPStripCPEfromTrackAngle = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('hltESPStripCPEfromTrackAngle'),
    ComponentType = cms.string('StripCPEfromTrackAngle'),
    parameters = cms.PSet(
        mLC_P0 = cms.double(-0.326),
        mLC_P1 = cms.double(0.618),
        mLC_P2 = cms.double(0.3),
        mTEC_P0 = cms.double(-1.885),
        mTEC_P1 = cms.double(0.471),
        mTIB_P0 = cms.double(-0.742),
        mTIB_P1 = cms.double(0.202),
        mTID_P0 = cms.double(-1.427),
        mTID_P1 = cms.double(0.433),
        mTOB_P0 = cms.double(-1.026),
        mTOB_P1 = cms.double(0.253),
        maxChgOneMIP = cms.double(6000.0),
        useLegacyError = cms.bool(False)
    )
)


process.hltESPTTRHBWithTrackAngle = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    ComponentName = cms.string('hltESPTTRHBWithTrackAngle'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    Matcher = cms.string('StandardMatcher'),
    PixelCPE = cms.string('hltESPPixelCPEGeneric'),
    StripCPE = cms.string('hltESPStripCPEfromTrackAngle')
)


process.hltESPTTRHBuilderAngleAndTemplate = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    ComponentName = cms.string('hltESPTTRHBuilderAngleAndTemplate'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    Matcher = cms.string('StandardMatcher'),
    PixelCPE = cms.string('hltESPPixelCPETemplateReco'),
    StripCPE = cms.string('hltESPStripCPEfromTrackAngle')
)


process.hltESPTTRHBuilderPixelOnly = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    ComponentName = cms.string('hltESPTTRHBuilderPixelOnly'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    Matcher = cms.string('StandardMatcher'),
    PixelCPE = cms.string('hltESPPixelCPEGeneric'),
    StripCPE = cms.string('Fake')
)


process.hltESPTTRHBuilderWithoutAngle4PixelTriplets = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    ComponentName = cms.string('hltESPTTRHBuilderWithoutAngle4PixelTriplets'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    Matcher = cms.string('StandardMatcher'),
    PixelCPE = cms.string('hltESPPixelCPEGeneric'),
    StripCPE = cms.string('Fake')
)


process.hltESPTobTecStepChi2ChargeMeasurementEstimator16 = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('hltESPTobTecStepChi2ChargeMeasurementEstimator16'),
    MaxChi2 = cms.double(16.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000.0),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(-1.0)
)


process.hltESPTobTecStepClusterShapeHitFilter = cms.ESProducer("ClusterShapeHitFilterESProducer",
    ComponentName = cms.string('hltESPTobTecStepClusterShapeHitFilter'),
    PixelShapeFile = cms.string('RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par'),
    PixelShapeFileL1 = cms.string('RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_loose.par'),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('HLTSiStripClusterChargeCutTight')
    )
)


process.hltESPTobTecStepFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(False),
    ComponentName = cms.string('hltESPTobTecStepFitterSmoother'),
    EstimateCut = cms.double(30.0),
    Fitter = cms.string('hltESPTobTecStepRKFitter'),
    LogPixelProbabilityCut = cms.double(-16.0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(7),
    NoInvalidHitsBeginEnd = cms.bool(False),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('hltESPTobTecStepRKSmoother'),
    appendToDataLabel = cms.string('')
)


process.hltESPTobTecStepFittingSmootherForLoopers = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(False),
    ComponentName = cms.string('hltESPTobTecStepFitterSmootherForLoopers'),
    EstimateCut = cms.double(30.0),
    Fitter = cms.string('hltESPTobTecStepRKFitterForLoopers'),
    LogPixelProbabilityCut = cms.double(-16.0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(7),
    NoInvalidHitsBeginEnd = cms.bool(False),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('hltESPTobTecStepRKSmootherForLoopers'),
    appendToDataLabel = cms.string('')
)


process.hltESPTobTecStepFlexibleKFFittingSmoother = cms.ESProducer("FlexibleKFFittingSmootherESProducer",
    ComponentName = cms.string('hltESPTobTecStepFlexibleKFFittingSmoother'),
    appendToDataLabel = cms.string(''),
    looperFitter = cms.string('hltESPTobTecStepFitterSmootherForLoopers'),
    standardFitter = cms.string('hltESPTobTecStepFitterSmoother')
)


process.hltESPTobTecStepRKTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('hltESPTobTecStepRKFitter'),
    Estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    Propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    RecoGeometry = cms.string('hltESPDummyDetLayerGeometry'),
    Updator = cms.string('hltESPKFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(7)
)


process.hltESPTobTecStepRKTrajectoryFitterForLoopers = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('hltESPTobTecStepRKFitterForLoopers'),
    Estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    Propagator = cms.string('PropagatorWithMaterialForLoopers'),
    RecoGeometry = cms.string('hltESPDummyDetLayerGeometry'),
    Updator = cms.string('hltESPKFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(7)
)


process.hltESPTobTecStepRKTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('hltESPTobTecStepRKSmoother'),
    Estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    Propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    RecoGeometry = cms.string('hltESPDummyDetLayerGeometry'),
    Updator = cms.string('hltESPKFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(7)
)


process.hltESPTobTecStepRKTrajectorySmootherForLoopers = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('hltESPTobTecStepRKSmootherForLoopers'),
    Estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    Propagator = cms.string('PropagatorWithMaterialForLoopers'),
    RecoGeometry = cms.string('hltESPDummyDetLayerGeometry'),
    Updator = cms.string('hltESPKFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(7)
)


process.hltESPTobTecStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('hltESPTobTecStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.09)
)


process.hltESPTrackAlgoPriorityOrder = cms.ESProducer("TrackAlgoPriorityOrderESProducer",
    ComponentName = cms.string('hltESPTrackAlgoPriorityOrder'),
    algoOrder = cms.vstring(),
    appendToDataLabel = cms.string('')
)


process.hltESPTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('hltESPTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(0.0),
    ValidHitBonus = cms.double(100.0),
    allowSharedFirstHit = cms.bool(False),
    fractionShared = cms.double(0.5)
)


process.hltESPTrajectoryCleanerBySharedSeeds = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('hltESPTrajectoryCleanerBySharedSeeds'),
    ComponentType = cms.string('TrajectoryCleanerBySharedSeeds'),
    MissingHitPenalty = cms.double(0.0),
    ValidHitBonus = cms.double(100.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.5)
)


process.hltESPTrajectoryFitterRK = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('hltESPTrajectoryFitterRK'),
    Estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('hltESPDummyDetLayerGeometry'),
    Updator = cms.string('hltESPKFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(3)
)


process.hltESPTrajectorySmootherRK = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('hltESPTrajectorySmootherRK'),
    Estimator = cms.string('hltESPChi2MeasurementEstimator30'),
    Propagator = cms.string('hltESPRungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('hltESPDummyDetLayerGeometry'),
    Updator = cms.string('hltESPKFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3)
)


process.hltPixelTracksCleanerBySharedHits = cms.ESProducer("PixelTrackCleanerBySharedHitsESProducer",
    ComponentName = cms.string('hltPixelTracksCleanerBySharedHits'),
    appendToDataLabel = cms.string(''),
    useQuadrupletAlgo = cms.bool(False)
)


process.hltTrackCleaner = cms.ESProducer("TrackCleanerESProducer",
    ComponentName = cms.string('hltTrackCleaner'),
    appendToDataLabel = cms.string('')
)


process.hoDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('HODetIdAssociator'),
    etaBinSize = cms.double(0.087),
    hcalRegion = cms.int32(2),
    includeBadChambers = cms.bool(False),
    includeGEM = cms.bool(False),
    includeME0 = cms.bool(False),
    nEta = cms.int32(30),
    nPhi = cms.int32(72)
)


process.idealForDigiCSCGeometry = cms.ESProducer("CSCGeometryESModule",
    alignmentsLabel = cms.string('fakeForIdeal'),
    appendToDataLabel = cms.string('idealForDigi'),
    applyAlignment = cms.bool(False),
    debugV = cms.untracked.bool(False),
    useCentreTIOffsets = cms.bool(False),
    useDDD = cms.bool(False),
    useGangedStripsInME1a = cms.bool(False),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True)
)


process.idealForDigiDTGeometry = cms.ESProducer("DTGeometryESModule",
    alignmentsLabel = cms.string('fakeForIdeal'),
    appendToDataLabel = cms.string('idealForDigi'),
    applyAlignment = cms.bool(False),
    fromDDD = cms.bool(False)
)


process.idealForDigiTrackerGeometry = cms.ESProducer("TrackerDigiGeometryESModule",
    alignmentsLabel = cms.string('fakeForIdeal'),
    appendToDataLabel = cms.string('idealForDigi'),
    applyAlignment = cms.bool(False),
    fromDDD = cms.bool(False)
)


process.muonDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('MuonDetIdAssociator'),
    etaBinSize = cms.double(0.125),
    hcalRegion = cms.int32(2),
    includeBadChambers = cms.bool(False),
    includeGEM = cms.bool(False),
    includeME0 = cms.bool(False),
    nEta = cms.int32(48),
    nPhi = cms.int32(48)
)


process.muonSeededTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('muonSeededTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(1.0),
    ValidHitBonus = cms.double(1000.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.1)
)


process.navigationSchoolESProducer = cms.ESProducer("NavigationSchoolESProducer",
    ComponentName = cms.string('SimpleNavigationSchool'),
    SimpleMagneticField = cms.string('ParabolicMf')
)


process.preshowerDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('PreshowerDetIdAssociator'),
    etaBinSize = cms.double(0.1),
    hcalRegion = cms.int32(2),
    includeBadChambers = cms.bool(False),
    includeGEM = cms.bool(False),
    includeME0 = cms.bool(False),
    nEta = cms.int32(60),
    nPhi = cms.int32(30)
)


process.siPixelQualityESProducer = cms.ESProducer("SiPixelQualityESProducer",
    ListOfRecordToMerge = cms.VPSet(cms.PSet(
        record = cms.string('SiPixelQualityFromDbRcd'),
        tag = cms.string('')
    ), 
        cms.PSet(
            record = cms.string('SiPixelDetVOffRcd'),
            tag = cms.string('')
        ))
)


process.siPixelTemplateDBObjectESProducer = cms.ESProducer("SiPixelTemplateDBObjectESProducer")


process.siStripBackPlaneCorrectionDepESProducer = cms.ESProducer("SiStripBackPlaneCorrectionDepESProducer",
    BackPlaneCorrectionDeconvMode = cms.PSet(
        label = cms.untracked.string('deconvolution'),
        record = cms.string('SiStripBackPlaneCorrectionRcd')
    ),
    BackPlaneCorrectionPeakMode = cms.PSet(
        label = cms.untracked.string('peak'),
        record = cms.string('SiStripBackPlaneCorrectionRcd')
    ),
    LatencyRecord = cms.PSet(
        label = cms.untracked.string(''),
        record = cms.string('SiStripLatencyRcd')
    )
)


process.siStripGainESProducer = cms.ESProducer("SiStripGainESProducer",
    APVGain = cms.VPSet(cms.PSet(
        Label = cms.untracked.string(''),
        NormalizationFactor = cms.untracked.double(1.0),
        Record = cms.string('SiStripApvGainRcd')
    ), 
        cms.PSet(
            Label = cms.untracked.string(''),
            NormalizationFactor = cms.untracked.double(1.0),
            Record = cms.string('SiStripApvGain2Rcd')
        )),
    AutomaticNormalization = cms.bool(False),
    appendToDataLabel = cms.string(''),
    printDebug = cms.untracked.bool(False)
)


process.siStripGainSimESProducer = cms.ESProducer("SiStripGainSimESProducer",
    APVGain = cms.VPSet(cms.PSet(
        Label = cms.untracked.string(''),
        NormalizationFactor = cms.untracked.double(1.0),
        Record = cms.string('SiStripApvGainSimRcd')
    )),
    AutomaticNormalization = cms.bool(False),
    appendToDataLabel = cms.string(''),
    printDebug = cms.untracked.bool(False)
)


process.siStripLorentzAngleDepESProducer = cms.ESProducer("SiStripLorentzAngleDepESProducer",
    LatencyRecord = cms.PSet(
        label = cms.untracked.string(''),
        record = cms.string('SiStripLatencyRcd')
    ),
    LorentzAngleDeconvMode = cms.PSet(
        label = cms.untracked.string('deconvolution'),
        record = cms.string('SiStripLorentzAngleRcd')
    ),
    LorentzAnglePeakMode = cms.PSet(
        label = cms.untracked.string('peak'),
        record = cms.string('SiStripLorentzAngleRcd')
    )
)


process.siStripQualityESProducer = cms.ESProducer("SiStripQualityESProducer",
    ListOfRecordToMerge = cms.VPSet(cms.PSet(
        record = cms.string('SiStripDetVOffRcd'),
        tag = cms.string('')
    ), 
        cms.PSet(
            record = cms.string('SiStripDetCablingRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('RunInfoRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadChannelRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadFiberRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadModuleRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadStripRcd'),
            tag = cms.string('')
        )),
    PrintDebugOutput = cms.bool(False),
    ReduceGranularity = cms.bool(False),
    ThresholdForReducedGranularity = cms.double(0.3),
    UseEmptyRunInfo = cms.bool(False),
    appendToDataLabel = cms.string('')
)


process.sistripconn = cms.ESProducer("SiStripConnectivity")


process.stripCPEESProducer = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('stripCPE'),
    ComponentType = cms.string('SimpleStripCPE'),
    parameters = cms.PSet(

    )
)


process.trackerGeometryDB = cms.ESProducer("TrackerDigiGeometryESModule",
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    fromDDD = cms.bool(False)
)


process.trackerNumberingGeometryDB = cms.ESProducer("TrackerGeometricDetESModule",
    appendToDataLabel = cms.string(''),
    fromDDD = cms.bool(False)
)


process.trackerTopology = cms.ESProducer("TrackerTopologyEP",
    appendToDataLabel = cms.string('')
)


process.CSCChannelMapperESSource = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('CSCChannelMapperRecord')
)


process.CSCINdexerESSource = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('CSCIndexerRecord')
)


process.CSCIndexerESSource = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('CSCIndexerRecord')
)


process.GlobalParametersRcdSource = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1TGlobalParametersRcd')
)


process.GlobalTag = cms.ESSource("PoolDBESSource",
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string(''),
        authenticationSystem = cms.untracked.int32(0),
        messageLevel = cms.untracked.int32(0),
        security = cms.untracked.string('')
    ),
    DumpStat = cms.untracked.bool(False),
    ReconnectEachRun = cms.untracked.bool(False),
    RefreshAlways = cms.untracked.bool(False),
    RefreshEachRun = cms.untracked.bool(False),
    RefreshOpenIOVs = cms.untracked.bool(False),
    connect = cms.string('frontier://FrontierProd/CMS_CONDITIONS'),
    globaltag = cms.string('94X_mc2017_realistic_forppRef5TeV'),
    pfnPostfix = cms.untracked.string(''),
    pfnPrefix = cms.untracked.string(''),
    snapshotTime = cms.string(''),
    toGet = cms.VPSet()
)


process.HepPDTESSource = cms.ESSource("HepPDTESSource",
    pdtFileName = cms.FileInPath('SimGeneral/HepPDTESSource/data/pythiaparticle.tbl')
)


process.bmbtfParamsSource = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1TMuonBarrelParamsRcd')
)


process.eegeom = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalMappingRcd')
)


process.emtfForestsDB = cms.ESSource("PoolDBESSource",
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string(''),
        authenticationSystem = cms.untracked.int32(0),
        messageLevel = cms.untracked.int32(0),
        security = cms.untracked.string('')
    ),
    connect = cms.string('frontier://FrontierProd/CMS_CONDITIONS'),
    toGet = cms.VPSet(cms.PSet(
        record = cms.string('L1TMuonEndCapForestRcd'),
        tag = cms.string('L1TMuonEndCapForest_static_Sq_20170613_v7_mc')
    ))
)


process.emtfForestsSource = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1TMuonEndCapForestRcd')
)


process.emtfParamsSource = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1TMuonEndCapParamsRcd')
)


process.es_hardcode = cms.ESSource("HcalHardcodeCalibrations",
    GainWidthsForTrigPrims = cms.bool(False),
    HBRecalibration = cms.bool(False),
    HBmeanenergies = cms.FileInPath('CalibCalorimetry/HcalPlugins/data/meanenergiesHB.txt'),
    HBreCalibCutoff = cms.double(20.0),
    HERecalibration = cms.bool(False),
    HEmeanenergies = cms.FileInPath('CalibCalorimetry/HcalPlugins/data/meanenergiesHE.txt'),
    HEreCalibCutoff = cms.double(20.0),
    HFRecalParameterBlock = cms.PSet(
        HFdepthOneParameterA = cms.vdouble(0.004123, 0.00602, 0.008201, 0.010489, 0.013379, 
            0.016997, 0.021464, 0.027371, 0.034195, 0.044807, 
            0.058939, 0.125497),
        HFdepthOneParameterB = cms.vdouble(-4e-06, -2e-06, 0.0, 4e-06, 1.5e-05, 
            2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107, 
            0.000425, 0.000209),
        HFdepthTwoParameterA = cms.vdouble(0.002861, 0.004168, 0.0064, 0.008388, 0.011601, 
            0.014425, 0.018633, 0.023232, 0.028274, 0.035447, 
            0.051579, 0.086593),
        HFdepthTwoParameterB = cms.vdouble(-2e-06, -0.0, -7e-06, -6e-06, -2e-06, 
            1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05, 
            0.000157, -3e-06)
    ),
    HFRecalibration = cms.bool(False),
    SiPMCharacteristics = cms.VPSet(cms.PSet(
        crosstalk = cms.double(0.0),
        nonlin1 = cms.double(1.0),
        nonlin2 = cms.double(0.0),
        nonlin3 = cms.double(0.0),
        pixels = cms.int32(36000)
    ), 
        cms.PSet(
            crosstalk = cms.double(0.0),
            nonlin1 = cms.double(1.0),
            nonlin2 = cms.double(0.0),
            nonlin3 = cms.double(0.0),
            pixels = cms.int32(2500)
        ), 
        cms.PSet(
            crosstalk = cms.double(0.17),
            nonlin1 = cms.double(1.00985),
            nonlin2 = cms.double(7.84089e-06),
            nonlin3 = cms.double(2.86282e-10),
            pixels = cms.int32(27370)
        ), 
        cms.PSet(
            crosstalk = cms.double(0.196),
            nonlin1 = cms.double(1.00546),
            nonlin2 = cms.double(6.40239e-06),
            nonlin3 = cms.double(1.27011e-10),
            pixels = cms.int32(38018)
        ), 
        cms.PSet(
            crosstalk = cms.double(0.17),
            nonlin1 = cms.double(1.00985),
            nonlin2 = cms.double(7.84089e-06),
            nonlin3 = cms.double(2.86282e-10),
            pixels = cms.int32(27370)
        ), 
        cms.PSet(
            crosstalk = cms.double(0.196),
            nonlin1 = cms.double(1.00546),
            nonlin2 = cms.double(6.40239e-06),
            nonlin3 = cms.double(1.27011e-10),
            pixels = cms.int32(38018)
        ), 
        cms.PSet(
            crosstalk = cms.double(0.0),
            nonlin1 = cms.double(1.0),
            nonlin2 = cms.double(0.0),
            nonlin3 = cms.double(0.0),
            pixels = cms.int32(0)
        )),
    hb = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.19),
        gainWidth = cms.vdouble(0.0),
        mcShape = cms.int32(125),
        pedestal = cms.double(3.285),
        pedestalWidth = cms.double(0.809),
        photoelectronsToAnalog = cms.double(0.3305),
        qieOffset = cms.vdouble(-0.49, 1.8, 7.2, 37.9),
        qieSlope = cms.vdouble(0.912, 0.917, 0.922, 0.923),
        qieType = cms.int32(0),
        recoShape = cms.int32(105)
    ),
    hbUpgrade = cms.PSet(
        darkCurrent = cms.vdouble(0.01, 0.015),
        doRadiationDamage = cms.bool(True),
        gain = cms.vdouble(0.000439367311072),
        gainWidth = cms.vdouble(0),
        mcShape = cms.int32(203),
        pedestal = cms.double(17.3),
        pedestalWidth = cms.double(1.5),
        photoelectronsToAnalog = cms.double(44.0),
        qieOffset = cms.vdouble(0.0, 0.0, 0.0, 0.0),
        qieSlope = cms.vdouble(0.05376, 0.05376, 0.05376, 0.05376),
        qieType = cms.int32(2),
        radiationDamage = cms.PSet(
            depVsNeutrons = cms.vdouble(5.69e-11, 7.9e-11),
            depVsTemp = cms.double(0.0631),
            intlumiOffset = cms.double(150),
            intlumiToNeutrons = cms.double(367000000.0),
            temperatureBase = cms.double(20),
            temperatureNew = cms.double(-5)
        ),
        recoShape = cms.int32(203)
    ),
    he = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.23),
        gainWidth = cms.vdouble(0),
        mcShape = cms.int32(125),
        pedestal = cms.double(3.163),
        pedestalWidth = cms.double(0.9698),
        photoelectronsToAnalog = cms.double(0.3305),
        qieOffset = cms.vdouble(-0.38, 2.0, 7.6, 39.6),
        qieSlope = cms.vdouble(0.912, 0.916, 0.92, 0.922),
        qieType = cms.int32(0),
        recoShape = cms.int32(105)
    ),
    heUpgrade = cms.PSet(
        darkCurrent = cms.vdouble(0.01, 0.015),
        doRadiationDamage = cms.bool(True),
        gain = cms.vdouble(0.000439367311072),
        gainWidth = cms.vdouble(0),
        mcShape = cms.int32(203),
        pedestal = cms.double(17.3),
        pedestalWidth = cms.double(1.5),
        photoelectronsToAnalog = cms.double(44.0),
        qieOffset = cms.vdouble(0.0, 0.0, 0.0, 0.0),
        qieSlope = cms.vdouble(0.05376, 0.05376, 0.05376, 0.05376),
        qieType = cms.int32(2),
        radiationDamage = cms.PSet(
            depVsNeutrons = cms.vdouble(5.69e-11, 7.9e-11),
            depVsTemp = cms.double(0.0631),
            intlumiOffset = cms.double(75),
            intlumiToNeutrons = cms.double(29200000.0),
            temperatureBase = cms.double(20),
            temperatureNew = cms.double(5)
        ),
        recoShape = cms.int32(203)
    ),
    hf = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.14, 0.135),
        gainWidth = cms.vdouble(0.0, 0.0),
        mcShape = cms.int32(301),
        pedestal = cms.double(9.354),
        pedestalWidth = cms.double(2.516),
        photoelectronsToAnalog = cms.double(0.0),
        qieOffset = cms.vdouble(-0.87, 1.4, 7.8, -29.6),
        qieSlope = cms.vdouble(0.359, 0.358, 0.36, 0.367),
        qieType = cms.int32(0),
        recoShape = cms.int32(301)
    ),
    hfUpgrade = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.14, 0.135),
        gainWidth = cms.vdouble(0.0, 0.0),
        mcShape = cms.int32(301),
        pedestal = cms.double(13.33),
        pedestalWidth = cms.double(3.33),
        photoelectronsToAnalog = cms.double(0.0),
        qieOffset = cms.vdouble(0.0697, -0.7405, 12.38, -671.9),
        qieSlope = cms.vdouble(0.297, 0.298, 0.298, 0.313),
        qieType = cms.int32(1),
        recoShape = cms.int32(301)
    ),
    ho = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.006, 0.0087),
        gainWidth = cms.vdouble(0.0, 0.0),
        mcShape = cms.int32(201),
        pedestal = cms.double(12.06),
        pedestalWidth = cms.double(0.6285),
        photoelectronsToAnalog = cms.double(4.0),
        qieOffset = cms.vdouble(-0.44, 1.4, 7.1, 38.5),
        qieSlope = cms.vdouble(0.907, 0.915, 0.92, 0.921),
        qieType = cms.int32(0),
        recoShape = cms.int32(201)
    ),
    iLumi = cms.double(-1.0),
    killHE = cms.bool(False),
    testHEPlan1 = cms.bool(True),
    testHFQIE10 = cms.bool(False),
    toGet = cms.untracked.vstring('GainWidths'),
    useHBUpgrade = cms.bool(False),
    useHEUpgrade = cms.bool(False),
    useHFUpgrade = cms.bool(True),
    useHOUpgrade = cms.bool(True),
    useLayer0Weight = cms.bool(True)
)


process.hltESSBTagRecord = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('JetTagComputerRecord')
)


process.hltESSEcalSeverityLevel = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalSeverityLevelAlgoRcd')
)


process.hltESSHcalSeverityLevel = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('HcalSeverityLevelComputerRcd')
)


process.l1conddb = cms.ESSource("PoolDBESSource",
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string(''),
        authenticationSystem = cms.untracked.int32(0),
        messageLevel = cms.untracked.int32(0),
        security = cms.untracked.string('')
    ),
    connect = cms.string('frontier://FrontierProd/CMS_CONDITIONS'),
    toGet = cms.VPSet(cms.PSet(
        record = cms.string('L1TCaloParamsO2ORcd'),
        tag = cms.string('L1TCaloParams_static_CMSSW_9_2_10_2017_v1_8_2_updateHFSF_v6MET')
    ))
)


process.l1ugmtdb = cms.ESSource("PoolDBESSource",
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string(''),
        authenticationSystem = cms.untracked.int32(0),
        messageLevel = cms.untracked.int32(0),
        security = cms.untracked.string('')
    ),
    connect = cms.string('frontier://FrontierProd/CMS_CONDITIONS'),
    toGet = cms.VPSet(cms.PSet(
        record = cms.string('L1TMuonGlobalParamsO2ORcd'),
        tag = cms.string('L1TMuonGlobalParamsPrototype_Stage2v0_hlt')
    ))
)


process.twinmuxParamsSource = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1TTwinMuxParamsRcd')
)


process.prefer("es_hardcode")

process.patAlgosToolsTask = cms.Task()


process.HLTDoHIEcalClusWithCleaningSequence = cms.Sequence(process.hltIslandBasicClustersHI+process.hltHiIslandSuperClustersHI+process.hltHiCorrectedIslandBarrelSuperClustersHI+process.hltHiCorrectedIslandEndcapSuperClustersHI+process.hltCleanedHiCorrectedIslandBarrelSuperClustersHI+process.hltRecoHIEcalWithCleaningCandidate)


process.HLTDoLocalPixelSequence = cms.Sequence(process.hltSiPixelDigis+process.hltSiPixelClusters+process.hltSiPixelClustersCache+process.hltSiPixelRecHits)


process.HLTFullIterativeTrackingIteration8ForRefPP = cms.Sequence(process.hltFullIter8ClustersRefRemovalForRefPP+process.hltFullIter8MaskedMeasurementTrackerEventForRefPP+process.hltFullIter8PixelLessLayersForRefPP+process.hltFullIter8PixelLessTrackingRegions+process.hltFullIter8PixelLessClusterCheckForRefPP+process.hltFullIter8PixelLessHitDoubletsForRefPP+process.hltFullIter8PixelLessHitTripletsForRefPP+process.hltFullIter8PixelLessSeedsForRefPP+process.hltFullIter8CkfTrackCandidatesForRefPP+process.hltFullIter8CtfWithMaterialTracksForRefPP+process.hltFullIter8TrackMVAClassifierForRefPP+process.hltFullIter8HighPurityTracksForRefPP)


process.muonME0RealDigi = cms.Sequence(process.simMuonME0Digis+process.simMuonME0PadDigis+process.simMuonME0PadDigiClusters)


process.HLTFullIterativeTrackingIteration6ForRefPP = cms.Sequence(process.hltFullIter6ClustersRefRemovalForRefPP+process.hltFullIter6MaskedMeasurementTrackerEventForRefPP+process.hltFullIter6PixelPairsAForRefPP+process.hltFullIter6PixelTrackingRegionsAForRefPP+process.hltFullIter6PixelClusterCheckForRefPP+process.hltFullIter6PixelHitDoubletsAForRefPP+process.hltFullIter6PixelSeedsAForRefPP+process.hltFullIter6PixelPairsBForRefPP+process.hltFullIter6PixelTrackingRegionsBForRefPP+process.hltFullIter6PixelHitDoubletsBForRefPP+process.hltFullIter6PixelSeedsBForRefPP+process.hltFullIter6PixelSeedsForRefPP+process.hltFullIter6CkfTrackCandidatesForRefPP+process.hltFullIter6CtfWithMaterialTracksForRefPP+process.hltFullIter6TrackMVAClassifierForRefPP+process.hltFullIter6HighPurityTracksForRefPP)


process.castorDigiSequence = cms.Sequence()


process.VertexSmearing = cms.Sequence(cms.SequencePlaceholder("VtxSmeared"))


process.HLTIterativeTrackingIteration2ForIterL3FromL1Muon = cms.Sequence(process.hltIter2IterL3FromL1MuonClustersRefRemoval+process.hltIter2IterL3FromL1MuonMaskedMeasurementTrackerEvent+process.hltIter2IterL3FromL1MuonPixelLayerTriplets+process.hltIter2IterL3FromL1MuonPixelClusterCheck+process.hltIter2IterL3FromL1MuonPixelHitDoublets+process.hltIter2IterL3FromL1MuonPixelHitTriplets+process.hltIter2IterL3FromL1MuonPixelSeeds+process.hltIter2IterL3FromL1MuonCkfTrackCandidates+process.hltIter2IterL3FromL1MuonCtfWithMaterialTracks+process.hltIter2IterL3FromL1MuonTrackCutClassifier+process.hltIter2IterL3FromL1MuonTrackSelectionHighPurity)


process.HLTBtagCSVSequencePFJet80Eta2p4 = cms.Sequence(process.hltVerticesPF+process.hltVerticesPFSelector+process.hltVerticesPFFilter+process.hltPFJetForBtagSelectorPFJet80Eta2p4+process.hltPFJetForBtagJet80Eta2p4+process.hltBLifetimeAssociatorPFJet80Eta2p4+process.hltBLifetimeTagInfosPFJet80Eta2p4+process.hltInclusiveVertexFinderPF+process.hltInclusiveSecondaryVerticesPF+process.hltTrackVertexArbitratorPF+process.hltInclusiveMergedVerticesPF+process.hltSecondaryVertexTagInfosPFJet80Eta2p4+process.hltCombinedSecondaryVertexBJetTagsPFJet80Eta2p4)


process.SimL1TGlobal = cms.Sequence(process.simGtStage2Digis)


process.GenSmeared = cms.Sequence(process.generatorSmeared)


process.hcalDigiSequence = cms.Sequence(process.simHcalTriggerPrimitiveDigis+process.simHcalDigis+process.simHcalTTPDigis)


process.recoAllGenJetsNoNu = cms.Sequence(process.ak4GenJetsNoNu+process.ak8GenJetsNoNu)


process.HLTGsfElectronSequence = cms.Sequence(process.hltEgammaCkfTrackCandidatesForGSF+process.hltEgammaGsfTracks+process.hltEgammaGsfElectrons+process.hltEgammaGsfTrackVars)


process.HLTAK4CaloCorrectorProducersSequence = cms.Sequence(process.hltAK4CaloFastJetCorrector+process.hltAK4CaloRelativeCorrector+process.hltAK4CaloAbsoluteCorrector+process.hltAK4CaloResidualCorrector+process.hltAK4CaloCorrector)


process.HLTBtagCSVSequencePFJet60Eta2p4 = cms.Sequence(process.hltVerticesPF+process.hltVerticesPFSelector+process.hltVerticesPFFilter+process.hltPFJetForBtagSelectorPFJet60Eta2p4+process.hltPFJetForBtagJet60Eta2p4+process.hltBLifetimeAssociatorPFJet60Eta2p4+process.hltBLifetimeTagInfosPFJet60Eta2p4+process.hltInclusiveVertexFinderPF+process.hltInclusiveSecondaryVerticesPF+process.hltTrackVertexArbitratorPF+process.hltInclusiveMergedVerticesPF+process.hltSecondaryVertexTagInfosPFJet60Eta2p4+process.hltCombinedSecondaryVertexBJetTagsPFJet60Eta2p4)


process.HLTDoLocalHcalWithTowerL1EGSeededSequence = cms.Sequence(process.hltHcalDigis+process.hltHbhePhase1Reco+process.hltHbhereco+process.hltHfprereco+process.hltHfreco+process.hltHoreco+process.hltTowerMakerForAll+process.hltHcalDigisL1EGSeeded+process.hltHbhePhase1RecoMethod2L1EGSeeded+process.hltHbherecoMethod2L1EGSeeded+process.hltTowerMakerMethod2L1EGSeeded)


process.HLTBeamSpot = cms.Sequence(process.hltScalersRawToDigi+process.hltOnlineBeamSpot)


process.HLTFullIterativeTrackingIteration10ForRefPP = cms.Sequence(process.hltFirstStepGoodPrimaryVerticesForRefPP+process.hltFullIter10JetCoreLayersForRefPP+process.hltFullIter10JetCoreTrackingRegionsForRefPP+process.hltFullIter10JetCoreClusterCheckForRefPP+process.hltFullIter10JetCoreHitDoubletsForRefPP+process.hltFullIter10JetCoreSeedsForRefPP+process.hltFullIter10CkfTrackCandidatesForRefPP+process.hltFullIter10CtfWithMaterialTracksForRefPP+process.hltFullIter10TrackMVAClassifierForRefPP)


process.HLTPFHcalClusteringForEgamma = cms.Sequence(process.hltRegionalTowerForEgamma+process.hltParticleFlowRecHitHBHEForEgamma+process.hltParticleFlowClusterHBHEForEgamma+process.hltParticleFlowClusterHCALForEgamma)


process.SimL1TMuonCommon = cms.Sequence(process.simDtTriggerPrimitiveDigis+process.simCscTriggerPrimitiveDigis)


process.HLTPixelTrackingL3Muon = cms.Sequence(process.hltL3MuonVertex+process.HLTDoLocalPixelSequence+process.hltPixelLayerQuadruplets+process.hltPixelTracksL3MuonFilter+process.hltPixelTracksL3MuonFitter+process.hltPixelTracksTrackingRegionsL3Muon+process.hltPixelTracksHitDoubletsL3Muon+process.hltPixelTracksHitQuadrupletsL3Muon+process.hltPixelTracksL3Muon+process.hltPixelVerticesL3Muon)


process.HLTRecoPixelTracksSequenceForIterL3FromL1Muon = cms.Sequence(process.hltIterL3FromL1MuonPixelTracksTrackingRegions+process.hltIterL3FromL1MuonPixelLayerQuadruplets+process.hltIterL3FromL1MuonPixelTracksHitDoublets+process.hltIterL3FromL1MuonPixelTracksHitQuadruplets+process.hltIterL3FromL1MuonPixelTracks)


process.HLTFullIterativeTrackingIteration4ForRefPP = cms.Sequence(process.hltFullIter4ClustersRefRemovalForRefPP+process.hltFullIter4MaskedMeasurementTrackerEventForRefPP+process.hltFullIter4PixelQuadrupletsForRefPP+process.hltFullIter4PixelTrackingRegions+process.hltFullIter4PixelClusterCheckForRefPP+process.hltFullIter4PixelHitDoubletsForRefPP+process.hltFullIter4PixelHitQuadrupletsForRefPP+process.hltFullIter4PixelSeedsForRefPP+process.hltFullIter4CkfTrackCandidatesForRefPP+process.hltFullIter4CtfWithMaterialTracksForRefPP+process.hltFullIter4TrackMVAClassifierForRefPP+process.hltFullIter4HighPurityTracksForRefPP)


process.HLTRecoPixelTracksSequence = cms.Sequence(process.hltPixelTracksFilter+process.hltPixelTracksFitter+process.hltPixelTracksTrackingRegions+process.hltPixelLayerQuadruplets+process.hltPixelTracksHitDoublets+process.hltPixelTracksHitQuadruplets+process.hltPixelTracks+process.hltPixelTripletsClustersRefRemoval+process.hltPixelTracksTrackingRegionsForTriplets+process.hltPixelLayerTripletsWithClustersRemoval+process.hltPixelTracksHitDoubletsForTriplets+process.hltPixelTracksHitTriplets+process.hltPixelTracksFromTriplets+process.hltPixelTracksMerged)


process.HLTPreshowerSequence = cms.Sequence(process.hltEcalPreshowerDigis+process.hltEcalPreshowerRecHit)


process.HLTDoLocalStripSequenceForRefPP = cms.Sequence(process.hltSiStripExcludedFEDListProducer+process.hltSiStripRawToClustersFacility+process.hltSiStripClustersForRefPP)


process.HLTBtagCSVSequencePFJet40Eta2p4 = cms.Sequence(process.hltVerticesPF+process.hltVerticesPFSelector+process.hltVerticesPFFilter+process.hltPFJetForBtagSelectorPFJet40Eta2p4+process.hltPFJetForBtagJet40Eta2p4+process.hltBLifetimeAssociatorPFJet40Eta2p4+process.hltBLifetimeTagInfosPFJet40Eta2p4+process.hltInclusiveVertexFinderPF+process.hltInclusiveSecondaryVerticesPF+process.hltTrackVertexArbitratorPF+process.hltInclusiveMergedVerticesPF+process.hltSecondaryVertexTagInfosPFJet40Eta2p4+process.hltCombinedSecondaryVertexBJetTagsPFJet40Eta2p4)


process.HLTAK8CaloCorrectorProducersSequence = cms.Sequence(process.hltAK8CaloFastJetCorrector+process.hltAK8CaloRelativeCorrector+process.hltAK8CaloAbsoluteCorrector+process.hltAK8CaloResidualCorrector+process.hltAK8CaloCorrector)


process.endOfProcess = cms.Sequence(process.MEtoEDMConverter)


process.ecalDigiSequence = cms.Sequence(process.simEcalTriggerPrimitiveDigis+process.simEcalDigis+process.simEcalPreshowerDigis)


process.HLTIterativeTrackingL3MuonIteration1 = cms.Sequence(process.hltIter1L3MuonClustersRefRemoval+process.hltIter1L3MuonMaskedMeasurementTrackerEvent+process.hltIter1L3MuonPixelLayerQuadruplets+process.hltIter1L3MuonPixelTrackingRegions+process.hltIter1L3MuonPixelClusterCheck+process.hltIter1L3MuonPixelHitDoublets+process.hltIter1L3MuonPixelHitQuadruplets+process.hltIter1L3MuonPixelSeeds+process.hltIter1L3MuonCkfTrackCandidates+process.hltIter1L3MuonCtfWithMaterialTracks+process.hltIter1L3MuonTrackCutClassifierPrompt+process.hltIter1L3MuonTrackCutClassifierDetached+process.hltIter1L3MuonTrackCutClassifierMerged+process.hltIter1L3MuonTrackSelectionHighPurity)


process.HLTIterativeTrackingL3MuonIteration0 = cms.Sequence(process.hltPixelTracksForSeedsL3MuonFilter+process.hltPixelTracksForSeedsL3MuonFitter+process.hltPixelTracksTrackingRegionsForSeedsL3Muon+process.hltPixelTracksHitDoubletsForSeedsL3Muon+process.hltPixelTracksHitQuadrupletsForSeedsL3Muon+process.hltPixelTracksForSeedsL3Muon+process.hltIter0L3MuonPixelSeedsFromPixelTracks+process.hltIter0L3MuonCkfTrackCandidates+process.hltIter0L3MuonCtfWithMaterialTracks+process.hltIter0L3MuonTrackCutClassifier+process.hltIter0L3MuonTrackSelectionHighPurity)


process.HLTRecopixelvertexingSequenceForIterL3FromL1Muon = cms.Sequence(process.HLTRecoPixelTracksSequenceForIterL3FromL1Muon+process.hltIterL3FromL1MuonPixelVertices+process.hltIterL3FromL1MuonTrimmedPixelVertices)


process.HLTBtagCSVSequencePFJet30Eta2p4 = cms.Sequence(process.hltVerticesPF+process.hltVerticesPFSelector+process.hltVerticesPFFilter+process.hltPFJetForBtagSelectorPFJet30Eta2p4+process.hltPFJetForBtagJet30Eta2p4+process.hltBLifetimeAssociatorPFJet30Eta2p4+process.hltBLifetimeTagInfosPFJet30Eta2p4+process.hltInclusiveVertexFinderPF+process.hltInclusiveSecondaryVerticesPF+process.hltTrackVertexArbitratorPF+process.hltInclusiveMergedVerticesPF+process.hltSecondaryVertexTagInfosPFJet30Eta2p4+process.hltCombinedSecondaryVertexBJetTagsPFJet30Eta2p4)


process.HLTFullIterativeTrackingIteration0PreSplittingForRefPP = cms.Sequence(process.hltFullIter0PixelQuadrupletsPreSplittingForRefPP+process.hltFullIter0PixelTrackingRegionsPreSplitting+process.hltFullIter0PixelClusterCheckPreSplittingForRefPP+process.hltFullIter0PixelHitDoubletsPreSplittingForRefPP+process.hltFullIter0PixelHitQuadrupletsPreSplittingForRefPP+process.hltFullIter0PixelSeedsPreSplittingForRefPP+process.hltFullIter0CkfTrackCandidatesPreSplittingForRefPP+process.hltFullIter0CtfWithMaterialTracksPreSplittingForRefPP+process.hltFullIter0PrimaryVerticesPreSplittingForRefPP)


process.hcalRawData = cms.Sequence(process.hcalRawDataVME+process.hcalRawDatauHTR)


process.caloLayer1Raw = cms.Sequence(process.caloLayer1RawFed1354+process.caloLayer1RawFed1356+process.caloLayer1RawFed1358)


process.SimL1TCalorimeter = cms.Sequence(process.simCaloStage2Layer1Digis+process.simCaloStage2Digis)


process.HLTIterativeTrackingForElectronsIteration1 = cms.Sequence(process.hltIter1ElectronsClustersRefRemoval+process.hltIter1ElectronsMaskedMeasurementTrackerEvent+process.hltIter1ElectronsPixelLayerTriplets+process.hltIter1ElectronsPixelTrackingRegions+process.hltIter1ElectronsPixelClusterCheck+process.hltIter1ElectronsPixelHitDoublets+process.hltIter1ElectronsPixelHitTriplets+process.hltIter1ElectronsPixelSeeds+process.hltIter1ElectronsCkfTrackCandidates+process.hltIter1ElectronsCtfWithMaterialTracks+process.hltIter1ElectronsTrackSelectionHighPurityLoose+process.hltIter1ElectronsTrackSelectionHighPurityTight+process.hltIter1ElectronsTrackSelectionHighPurity)


process.HLTIterativeTrackingForElectronsIteration0 = cms.Sequence(process.hltIter0ElectronsPixelSeedsFromPixelTracks+process.hltIter0ElectronsCkfTrackCandidates+process.hltIter0ElectronsCtfWithMaterialTracks+process.hltIter0ElectronsTrackSelectionHighPurity)


process.HLTIterativeTrackingForElectronsIteration2 = cms.Sequence(process.hltIter2ElectronsClustersRefRemoval+process.hltIter2ElectronsMaskedMeasurementTrackerEvent+process.hltIter2ElectronsPixelLayerPairs+process.hltIter2ElectronsPixelTrackingRegions+process.hltIter2ElectronsPixelClusterCheck+process.hltIter2ElectronsPixelHitDoublets+process.hltIter2ElectronsPixelSeeds+process.hltIter2ElectronsCkfTrackCandidates+process.hltIter2ElectronsCtfWithMaterialTracks+process.hltIter2ElectronsTrackSelectionHighPurity)


process.HLTFullIterativeTrackingIteration0ForRefPP = cms.Sequence(process.hltFullIter0PixelQuadrupletsForRefPP+process.hltFullIter0PixelTrackingRegions+process.hltFullIter0PixelClusterCheckForRefPP+process.hltFullIter0PixelHitDoubletsForRefPP+process.hltFullIter0PixelHitQuadrupletsForRefPP+process.hltFullIter0PixelSeedsForRefPP+process.hltFullIter0CkfTrackCandidatesForRefPP+process.hltFullIter0CtfWithMaterialTracksForRefPP+process.hltFullIter0PrimaryVerticesForRefPP+process.hltFullIter0TrackMVAClassifierForRefPP+process.hltFullIter0HighPurityTracksForRefPP)


process.endOfProcess_withComparison = cms.Sequence(process.MEtoEDMConverter+process.MEtoMEComparitor)


process.SimL1TMuon = cms.Sequence(process.SimL1TMuonCommon+process.simTwinMuxDigis+process.simBmtfDigis+process.simEmtfDigis+process.simOmtfDigis+process.simGmtCaloSumDigis+process.simGmtStage2Digis)


process.GeneInfo = cms.Sequence(process.genParticles)


process.muonGEMDigi = cms.Sequence(process.simMuonGEMDigis+process.simMuonGEMPadDigis+process.simMuonGEMPadDigiClusters)


process.me0TriggerPseudoDigiSequence = cms.Sequence(process.simMuonME0PseudoReDigisCoarse+process.me0RecHitsCoarse+process.me0TriggerPseudoDigis)


process.muonDigi = cms.Sequence(process.simMuonCSCDigis+process.simMuonDTDigis+process.simMuonRPCDigis+process.muonGEMDigi)


process.HLTIter1TrackAndTauJets4Iter2Sequence = cms.Sequence(process.hltIter1TrackRefsForJets4Iter2+process.hltAK4Iter1TrackJets4Iter2+process.hltIter1TrackAndTauJets4Iter2)


process.genJetParticles = cms.Sequence(process.genParticlesForJets+process.genParticlesForJetsNoNu)


process.HLTAK4PFCorrectorProducersSequence = cms.Sequence(process.hltAK4PFFastJetCorrector+process.hltAK4PFRelativeCorrector+process.hltAK4PFAbsoluteCorrector+process.hltAK4PFResidualCorrector+process.hltAK4PFCorrector)


process.HLTPFClusteringForEgamma = cms.Sequence(process.hltRechitInRegionsECAL+process.hltRechitInRegionsES+process.hltParticleFlowRecHitECALL1Seeded+process.hltParticleFlowRecHitPSL1Seeded+process.hltParticleFlowClusterPSL1Seeded+process.hltParticleFlowClusterECALUncorrectedL1Seeded+process.hltParticleFlowClusterECALL1Seeded+process.hltParticleFlowSuperClusterECALL1Seeded)


process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerSequence = cms.Sequence(process.hltEcalDigis+process.hltEcalUncalibRecHit+process.hltEcalDetIdToBeRecovered+process.hltEcalRecHit)


process.SimL1TechnicalTriggers = cms.Sequence(process.simGtExtFakeStage2Digis)


process.HLTAK8PFCorrectorProducersSequence = cms.Sequence(process.hltAK8PFFastJetCorrector+process.hltAK8PFRelativeCorrector+process.hltAK8PFAbsoluteCorrector+process.hltAK8PFResidualCorrector+process.hltAK8PFCorrector)


process.HLTFastJetForEgamma = cms.Sequence(process.hltFixedGridRhoFastjetAllCaloForMuons)


process.HLTIterativeTrackingTripletRecovery = cms.Sequence(process.hltTripletRecoveryClustersRefRemoval+process.hltTripletRecoveryMaskedMeasurementTrackerEvent+process.hltTripletRecoveryPixelLayerTriplets+process.hltTripletRecoveryPFlowPixelTrackingRegions+process.hltTripletRecoveryPFlowPixelClusterCheck+process.hltTripletRecoveryPFlowPixelHitDoublets+process.hltTripletRecoveryPFlowPixelHitTriplets+process.hltTripletRecoveryPFlowPixelSeeds+process.hltTripletRecoveryPFlowCkfTrackCandidates+process.hltTripletRecoveryPFlowCtfWithMaterialTracks+process.hltTripletRecoveryPFlowTrackCutClassifier+process.hltTripletRecoveryPFlowTrackSelectionHighPurity)


process.genMETParticles = cms.Sequence(process.genCandidatesForMET+process.genParticlesForMETAllVisible)


process.HLTParticleFlowSequence = cms.Sequence(process.HLTPreshowerSequence+process.hltParticleFlowRecHitECALUnseeded+process.hltParticleFlowRecHitHBHE+process.hltParticleFlowRecHitHF+process.hltParticleFlowRecHitPSUnseeded+process.hltParticleFlowClusterECALUncorrectedUnseeded+process.hltParticleFlowClusterPSUnseeded+process.hltParticleFlowClusterECALUnseeded+process.hltParticleFlowClusterHBHE+process.hltParticleFlowClusterHCAL+process.hltParticleFlowClusterHF+process.hltLightPFTracks+process.hltParticleFlowBlock+process.hltParticleFlow)


process.HLTBeginSequenceRandom = cms.Sequence(process.hltRandomEventsFilter+process.hltGtStage2Digis)


process.HLTL1UnpackerSequence = cms.Sequence(process.hltGtStage2Digis+process.hltGtStage2ObjectMap)


process.HLTMuonLocalRecoSequence = cms.Sequence(process.hltMuonDTDigis+process.hltDt1DRecHits+process.hltDt4DSegments+process.hltMuonCSCDigis+process.hltCsc2DRecHits+process.hltCscSegments+process.hltMuonRPCDigis+process.hltRpcRecHits)


process.HLTAK4CaloJetsCorrectionSequence = cms.Sequence(process.hltFixedGridRhoFastjetAllCalo+process.HLTAK4CaloCorrectorProducersSequence+process.hltAK4CaloJetsCorrected+process.hltAK4CaloJetsCorrectedIDPassed)


process.HLTFullIterativeTrackingIteration9ForRefPP = cms.Sequence(process.hltFullIter9ClustersRefRemovalForRefPP+process.hltFullIter9MaskedMeasurementTrackerEventForRefPP+process.hltFullIter9TobTecLayersTriplForRefPP+process.hltFullIter9TobTecTrackingRegionsTriplForRefPP+process.hltFullIter9TobTecClusterCheckForRefPP+process.hltFullIter9TobTecHitDoubletsTriplForRefPP+process.hltFullIter9TobTecHitTripletsTriplForRefPP+process.hltFullIter9TobTecSeedsTriplForRefPP+process.hltFullIter9TobTecLayersPairForRefPP+process.hltFullIter9TobTecTrackingRegionsPairForRefPP+process.hltFullIter9TobTecHitDoubletsPairForRefPP+process.hltFullIter9TobTecSeedsPairForRefPP+process.hltFullIter9TobTecSeedsForRefPP+process.hltFullIter9CkfTrackCandidatesForRefPP+process.hltFullIter9CtfWithMaterialTracksForRefPP+process.hltFullIter9TrackMVAClassifierForRefPP)


process.HLTDoLocalHcalSequence = cms.Sequence(process.hltHcalDigis+process.hltHbhePhase1Reco+process.hltHbhereco+process.hltHfprereco+process.hltHfreco+process.hltHoreco)


process.HLTFullIterativeTrackingIteration7ForRefPP = cms.Sequence(process.hltFullIter7ClustersRefRemovalForRefPP+process.hltFullIter7MaskedMeasurementTrackerEventForRefPP+process.hltFullIter7MixedLayersAForRefPP+process.hltFullIter7MixedTrackingRegionsA+process.hltFullIter7MixedClusterCheckForRefPP+process.hltFullIter7MixedHitDoubletsAForRefPP+process.hltFullIter7MixedHitTripletsAForRefPP+process.hltFullIter7MixedSeedsAForRefPP+process.hltFullIter7MixedLayersBForRefPP+process.hltFullIter7MixedTrackingRegionsB+process.hltFullIter7MixedHitDoubletsBForRefPP+process.hltFullIter7MixedHitTripletsBForRefPP+process.hltFullIter7MixedSeedsBForRefPP+process.hltFullIter7MixedSeedsForRefPP+process.hltFullIter7CkfTrackCandidatesForRefPP+process.hltFullIter7CtfWithMaterialTracksForRefPP+process.hltFullIter7TrackMVAClassifierForRefPP+process.hltFullIter7HighPurityTracksForRefPP)


process.recoGenJets = cms.Sequence(process.ak4GenJets+process.ak8GenJets+process.ak4GenJetsNoNu+process.ak8GenJetsNoNu)


process.HLTBeginSequenceCalibration = cms.Sequence(process.hltCalibrationEventsFilter+process.hltGtStage2Digis)


process.HLTFullIterativeTrackingIteration1ForRefPP = cms.Sequence(process.hltFullIter1ClustersRefRemovalForRefPP+process.hltFullIter1MaskedMeasurementTrackerEventForRefPP+process.hltFullIter1PixelQuadrupletsForRefPP+process.hltFullIter1PixelTrackingRegions+process.hltFullIter1PixelClusterCheckForRefPP+process.hltFullIter1PixelHitDoubletsForRefPP+process.hltFullIter1PixelHitQuadrupletsForRefPP+process.hltFullIter1PixelSeedsForRefPP+process.hltFullIter1CkfTrackCandidatesForRefPP+process.hltFullIter1CtfWithMaterialTracksForRefPP+process.hltFullIter1TrackMVAClassifierForRefPP+process.hltFullIter1HighPurityTracksForRefPP)


process.HLTDoLocalPixelSequenceForRefPP = cms.Sequence(process.hltSiPixelDigis+process.hltSiPixelClustersForRefPP+process.hltSiPixelClustersCacheForRefPP+process.hltSiPixelRecHitsForRefPP)


process.HLTFullIterativeTrackingIteration3ForRefPP = cms.Sequence(process.hltFullIter3ClustersRefRemovalForRefPP+process.hltFullIter3MaskedMeasurementTrackerEventForRefPP+process.hltFullIter3PixelTripletsForRefPP+process.hltFullIter3PixelTrackingRegions+process.hltFullIter3PixelClusterCheckForRefPP+process.hltFullIter3PixelHitDoubletsForRefPP+process.hltFullIter3PixelHitTripletsForRefPP+process.hltFullIter3PixelSeedsForRefPP+process.hltFullIter3CkfTrackCandidatesForRefPP+process.hltFullIter3CtfWithMaterialTracksForRefPP+process.hltFullIter3TrackMVAClassifierForRefPP+process.hltFullIter3HighPurityTracksForRefPP)


process.muonME0PseudoDigi = cms.Sequence(process.simMuonME0PseudoDigis+process.simMuonME0PseudoReDigis)


process.HLTIterativeTrackingDoubletRecovery = cms.Sequence(process.hltDoubletRecoveryClustersRefRemoval+process.hltDoubletRecoveryMaskedMeasurementTrackerEvent+process.hltDoubletRecoveryPixelLayerPairs+process.hltDoubletRecoveryPFlowPixelTrackingRegions+process.hltDoubletRecoveryPFlowPixelClusterCheck+process.hltDoubletRecoveryPFlowPixelHitDoublets+process.hltDoubletRecoveryPFlowPixelSeeds+process.hltDoubletRecoveryPFlowCkfTrackCandidates+process.hltDoubletRecoveryPFlowCtfWithMaterialTracks+process.hltDoubletRecoveryPFlowTrackCutClassifier+process.hltDoubletRecoveryPFlowTrackSelectionHighPurity)


process.HLTEndSequence = cms.Sequence(process.hltBoolEnd)


process.L1TDigiToRaw = cms.Sequence(process.caloLayer1Raw+process.caloStage2Raw+process.bmtfStage2Raw+process.omtfStage2Raw+process.gmtStage2Raw+process.gtStage2Raw)


process.HLTDoLocalStripSequence = cms.Sequence(process.hltSiStripExcludedFEDListProducer+process.hltSiStripRawToClustersFacility+process.hltSiStripClusters)


process.HLTDoLocalPixelSequenceAfterSplittingForRefPP = cms.Sequence(process.hltSiPixelClustersAfterSplittingForRefPP+process.hltSiPixelClustersCacheAfterSplittingForRefPP+process.hltSiPixelRecHitsAfterSplittingForRefPP)


process.HLTIterL3OImuonTkCandidateSequence = cms.Sequence(process.hltIterL3OISeedsFromL2Muons+process.hltIterL3OITrackCandidates+process.hltIterL3OIMuCtfWithMaterialTracks+process.hltIterL3OIMuonTrackCutClassifier+process.hltIterL3OIMuonTrackSelectionHighPurity+process.hltL3MuonsIterL3OI)


process.HLTRecopixelvertexingSequence = cms.Sequence(process.HLTRecoPixelTracksSequence+process.hltPixelVertices+process.hltTrimmedPixelVertices)


process.HLTL2muonrecoNocandSequence = cms.Sequence(process.HLTMuonLocalRecoSequence+process.hltL2OfflineMuonSeeds+process.hltL2MuonSeeds+process.hltL2Muons)


process.HLTBeginSequence = cms.Sequence(process.hltTriggerType+process.HLTL1UnpackerSequence+process.HLTBeamSpot)


process.pgen_genonly = cms.Sequence(cms.SequencePlaceholder("randomEngineStateProducer"))


process.HLTRecoPixelVertexingForElectronSequence = cms.Sequence(process.hltPixelLayerTriplets+process.hltPixelTracksElectronsFilter+process.hltPixelTracksElectronsFitter+process.hltPixelTracksTrackingRegionsElectrons+process.hltPixelTracksHitDoubletsElectrons+process.hltPixelTracksHitTripletsElectrons+process.hltPixelTracksElectrons+process.hltPixelVerticesElectrons)


process.HLTIterL3MuonRecoPixelTracksSequence = cms.Sequence(process.hltIterL3MuonPixelTracksFilter+process.hltIterL3MuonPixelTracksFitter+process.hltIterL3MuonPixelTracksTrackingRegions+process.hltIterL3MuonPixelLayerQuadruplets+process.hltIterL3MuonPixelTracksHitDoublets+process.hltIterL3MuonPixelTracksHitQuadruplets+process.hltIterL3MuonPixelTracks)


process.HLTDoLocalStripSequenceFullForRefPP = cms.Sequence(process.hltSiStripExcludedFEDListProducer+process.hltSiStripRawToClustersFacilityFull+process.hltSiStripClustersFullForRefPP+process.hltSiStripMatchedRecHitsFull)


process.recoAllGenJets = cms.Sequence(process.ak4GenJets+process.ak8GenJets)


process.HLTL2muonrecoSequence = cms.Sequence(process.HLTL2muonrecoNocandSequence+process.hltL2MuonCandidates)


process.HLTElePixelMatchSequence = cms.Sequence(process.HLTDoLocalPixelSequence+process.HLTDoLocalStripSequence+process.hltPixelLayerPairs+process.hltPixelLayerTriplets+process.hltEgammaHoverE+process.hltEgammaSuperClustersToPixelMatch+process.hltEleSeedsTrackingRegions+process.hltElePixelHitDoublets+process.hltElePixelHitDoubletsForTriplets+process.hltElePixelHitTriplets+process.hltElePixelSeedsDoublets+process.hltElePixelSeedsTriplets+process.hltElePixelSeedsCombined+process.hltEgammaElectronPixelSeeds+process.hltEgammaPixelMatchVars)


process.recoGenMET = cms.Sequence(process.genMetCalo+process.genMetTrue)


process.HLTIterativeTrackingIteration2ForIterL3Muon = cms.Sequence(process.hltIter2IterL3MuonClustersRefRemoval+process.hltIter2IterL3MuonMaskedMeasurementTrackerEvent+process.hltIter2IterL3MuonPixelLayerTriplets+process.hltIter2IterL3MuonPixelClusterCheck+process.hltIter2IterL3MuonPixelHitDoublets+process.hltIter2IterL3MuonPixelHitTriplets+process.hltIter2IterL3MuonPixelSeeds+process.hltIter2IterL3MuonCkfTrackCandidates+process.hltIter2IterL3MuonCtfWithMaterialTracks+process.hltIter2IterL3MuonTrackCutClassifier+process.hltIter2IterL3MuonTrackSelectionHighPurity)


process.HLTPixelTrackingForElectron = cms.Sequence(process.hltElectronsVertex+process.HLTDoLocalPixelSequence+process.HLTRecoPixelVertexingForElectronSequence)


process.HLTIterativeTrackingIteration0ForIterL3FromL1Muon = cms.Sequence(process.hltIter0IterL3FromL1MuonPixelSeedsFromPixelTracks+process.hltIter0IterL3FromL1MuonCkfTrackCandidates+process.hltIter0IterL3FromL1MuonCtfWithMaterialTracks+process.hltIter0IterL3FromL1MuonTrackCutClassifier+process.hltIter0IterL3FromL1MuonTrackSelectionHighPurity)


process.HLTIterativeTrackingForElectronIter02 = cms.Sequence(process.HLTIterativeTrackingForElectronsIteration0+process.HLTIterativeTrackingForElectronsIteration1+process.hltIter1MergedForElectrons+process.HLTIterativeTrackingForElectronsIteration2+process.hltIter2MergedForElectrons)


process.HLTTrackReconstructionForIsoElectronIter02 = cms.Sequence(process.HLTPixelTrackingForElectron+process.HLTDoLocalStripSequence+process.HLTIterativeTrackingForElectronIter02)


process.HLTFullIterativeTrackingIteration5ForRefPP = cms.Sequence(process.hltFullIter5ClustersRefRemovalForRefPP+process.hltFullIter5MaskedMeasurementTrackerEventForRefPP+process.hltFullIter5PixelTripletsForRefPP+process.hltFullIter5PixelTrackingRegions+process.hltFullIter5PixelClusterCheckForRefPP+process.hltFullIter5PixelHitDoubletsForRefPP+process.hltFullIter5PixelHitTripletsForRefPP+process.hltFullIter5PixelSeedsForRefPP+process.hltFullIter5CkfTrackCandidatesForRefPP+process.hltFullIter5CtfWithMaterialTracksForRefPP+process.hltFullIter5TrackMVAClassifierForRefPP+process.hltFullIter5HighPurityTracksForRefPP)


process.HLTFullIterativeTrackingIteration2ForRefPP = cms.Sequence(process.hltFullIter2ClustersRefRemovalForRefPP+process.hltFullIter2MaskedMeasurementTrackerEventForRefPP+process.hltFullIter2PixelTripletsForRefPP+process.hltFullIter2PixelTrackingRegions+process.hltFullIter2PixelClusterCheckForRefPP+process.hltFullIter2PixelHitDoubletsForRefPP+process.hltFullIter2PixelHitTripletsForRefPP+process.hltFullIter2PixelSeedsForRefPP+process.hltFullIter2CkfTrackCandidatesForRefPP+process.hltFullIter2CtfWithMaterialTracksForRefPP+process.hltFullIter2TrackMVAClassifierForRefPP+process.hltFullIter2HighPurityTracksForRefPP)


process.HLTDoCaloSequencePF = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerSequence+process.HLTDoLocalHcalSequence+process.hltTowerMakerForAll)


process.HLTIterativeTrackingL3MuonIteration2 = cms.Sequence(process.hltIter2L3MuonClustersRefRemoval+process.hltIter2L3MuonMaskedMeasurementTrackerEvent+process.hltIter2L3MuonPixelLayerTriplets+process.hltIter2L3MuonPixelTrackingRegions+process.hltIter2L3MuonPixelClusterCheck+process.hltIter2L3MuonPixelHitDoublets+process.hltIter2L3MuonPixelHitTriplets+process.hltIter2L3MuonPixelSeeds+process.hltIter2L3MuonCkfTrackCandidates+process.hltIter2L3MuonCtfWithMaterialTracks+process.hltIter2L3MuonTrackCutClassifier+process.hltIter2L3MuonTrackSelectionHighPurity)


process.HLTIterativeTrackingIteration0ForIterL3Muon = cms.Sequence(process.hltIter0IterL3MuonPixelSeedsFromPixelTracks+process.hltIter0IterL3MuonCkfTrackCandidates+process.hltIter0IterL3MuonCtfWithMaterialTracks+process.hltIter0IterL3MuonTrackCutClassifier+process.hltIter0IterL3MuonTrackSelectionHighPurity)


process.hiRecoGenJets = cms.Sequence(process.iterativeCone5HiGenJets+process.kt4HiGenJets+process.kt6HiGenJets+process.ak1HiGenJets+process.ak2HiGenJets+process.ak3HiGenJets+process.ak4HiGenJets+process.ak5HiGenJets+process.ak6HiGenJets+process.ak7HiGenJets)


process.HLTAK4CaloJetsPrePFRecoSequence = cms.Sequence(process.HLTDoCaloSequencePF+process.hltAK4CaloJetsPF)


process.HLTIterativeTrackingIteration2 = cms.Sequence(process.hltIter2ClustersRefRemoval+process.hltIter2MaskedMeasurementTrackerEvent+process.hltIter2PixelLayerTriplets+process.hltIter2PFlowPixelTrackingRegions+process.hltIter2PFlowPixelClusterCheck+process.hltIter2PFlowPixelHitDoublets+process.hltIter2PFlowPixelHitTriplets+process.hltIter2PFlowPixelSeeds+process.hltIter2PFlowCkfTrackCandidates+process.hltIter2PFlowCtfWithMaterialTracks+process.hltIter2PFlowTrackCutClassifier+process.hltIter2PFlowTrackSelectionHighPurity)


process.HLTIterativeTrackingIteration1 = cms.Sequence(process.hltIter1ClustersRefRemoval+process.hltIter1MaskedMeasurementTrackerEvent+process.hltIter1PixelLayerQuadruplets+process.hltIter1PFlowPixelTrackingRegions+process.hltIter1PFlowPixelClusterCheck+process.hltIter1PFlowPixelHitDoublets+process.hltIter1PFlowPixelHitQuadruplets+process.hltIter1PixelTracks+process.hltIter1PFLowPixelSeedsFromPixelTracks+process.hltIter1PFlowCkfTrackCandidates+process.hltIter1PFlowCtfWithMaterialTracks+process.hltIter1PFlowTrackCutClassifierPrompt+process.hltIter1PFlowTrackCutClassifierDetached+process.hltIter1PFlowTrackCutClassifierMerged+process.hltIter1PFlowTrackSelectionHighPurity)


process.HLTIterativeTrackingIteration0 = cms.Sequence(process.hltIter0PFLowPixelSeedsFromPixelTracks+process.hltIter0PFlowCkfTrackCandidates+process.hltIter0PFlowCtfWithMaterialTracks+process.hltIter0PFlowTrackCutClassifier+process.hltIter0PFlowTrackSelectionHighPurity)


process.recoAllGenJetsNoMuNoNu = cms.Sequence(process.ak4GenJetsNoMuNoNu+process.ak8GenJetsNoMuNoNu)


process.HLTIterativeTrackingIter02 = cms.Sequence(process.HLTIterativeTrackingIteration0+process.HLTIterativeTrackingIteration1+process.hltIter1Merged+process.HLTIter1TrackAndTauJets4Iter2Sequence+process.HLTIterativeTrackingIteration2+process.hltIter2Merged+process.HLTIterativeTrackingTripletRecovery+process.hltTripletRecoveryMerged+process.HLTIterativeTrackingDoubletRecovery+process.hltMergedTracks)


process.HLTDoFullUnpackingEgammaEcalSequence = cms.Sequence(process.hltEcalDigis+process.hltEcalPreshowerDigis+process.hltEcalUncalibRecHit+process.hltEcalDetIdToBeRecovered+process.hltEcalRecHit+process.hltEcalPreshowerRecHit)


process.HLTEle10WPLooseGsfSequenceForHI = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalSequence+process.HLTPFClusteringForEgamma+process.hltEgammaCandidates+process.hltEGL1SingleEG2Or5FilterForHI+process.hltEG10L1SingleEG2Or5FilterForHI+process.hltEgammaClusterShape+process.hltEle10WPLoose1ClusterShapeFilterForHI+process.HLTDoLocalHcalWithTowerL1EGSeededSequence+process.HLTFastJetForEgamma+process.hltEgammaHoverE+process.hltEle10WPLoose1HEFilterForHI+process.hltEgammaEcalPFClusterIso+process.hltEle10WPLoose1EcalIsoFilterForHI+process.HLTPFHcalClusteringForEgamma+process.hltEgammaHcalPFClusterIso+process.hltEle10WPLoose1HcalIsoFilterForHI+process.HLTElePixelMatchSequence+process.hltEle10WPLoose1PixelMatchFilterForHI+process.hltEle10WPLoose1PMS2FilterForHI+process.HLTGsfElectronSequence+process.hltEle10WPLoose1GsfOneOEMinusOneOPFilterForHI+process.hltEle10WPLoose1GsfDetaFilterForHI+process.hltEle10WPLoose1GsfDphiFilterForHI+process.HLTTrackReconstructionForIsoElectronIter02+process.hltEgammaEleGsfTrackIso+process.hltEle10WPLoose1GsfTrackIsoFilterForHI)


process.DigiToRaw = cms.Sequence(process.L1TDigiToRaw+process.siPixelRawData+process.SiStripDigiToRaw+process.ecalPacker+process.esDigiToRaw+process.hcalRawData+process.cscpacker+process.dtpacker+process.rpcpacker+process.castorRawData+process.rawDataCollector)


process.muonME0Digi = cms.Sequence(process.muonME0RealDigi+process.muonME0PseudoDigi)


process.HLTEle20Ele12CaloIdLTrackIdLIsoVLSequence = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalSequence+process.HLTPFClusteringForEgamma+process.hltEgammaCandidates+process.hltEGL1LowEG15Filter+process.hltEle20Ele12CaloIdLTrackIdLIsoVLEtLeg1Filter+process.hltEle20Ele12CaloIdLTrackIdLIsoVLEtLeg2Filter+process.hltEgammaClusterShape+process.hltEle20Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg1Filter+process.hltEle20Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg2Filter+process.HLTDoLocalHcalWithTowerL1EGSeededSequence+process.HLTFastJetForEgamma+process.hltEgammaHoverE+process.hltEle20Ele12CaloIdLTrackIdLIsoVLHELeg1Filter+process.hltEle20Ele12CaloIdLTrackIdLIsoVLHELeg2Filter+process.hltEgammaEcalPFClusterIso+process.hltEle20Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg1Filter+process.hltEle20Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg2Filter+process.HLTPFHcalClusteringForEgamma+process.hltEgammaHcalPFClusterIso+process.hltEle20Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg1Filter+process.hltEle20Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg2Filter+process.HLTElePixelMatchSequence+process.hltEle20Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg1Filter+process.hltEle20Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg2Filter+process.HLTGsfElectronSequence+process.hltEle20Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg1Filter+process.hltEle20Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg2Filter+process.hltEle20Ele12CaloIdLTrackIdLIsoVLDetaLeg1Filter+process.hltEle20Ele12CaloIdLTrackIdLIsoVLDetaLeg2Filter+process.hltEle20Ele12CaloIdLTrackIdLIsoVLDphiLeg1Filter+process.hltEle20Ele12CaloIdLTrackIdLIsoVLDphiLeg2Filter+process.HLTTrackReconstructionForIsoElectronIter02+process.hltEgammaEleGsfTrackIso+process.hltEle20Ele12CaloIdLTrackIdLIsoVLTrackIsoLeg1Filter+process.hltEle20Ele12CaloIdLTrackIdLIsoVLTrackIsoLeg2Filter)


process.HLTTrackReconstructionForPF = cms.Sequence(process.HLTDoLocalPixelSequence+process.HLTRecopixelvertexingSequence+process.HLTDoLocalStripSequence+process.HLTIterativeTrackingIter02+process.hltPFMuonMerging+process.hltMuonLinks+process.hltMuons)


process.HLTPhoton60SequenceLooseHOverEForHI = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalSequence+process.HLTPFClusteringForEgamma+process.hltEgammaCandidates+process.hltEGL1SingleEG30FilterForHI+process.hltEG60EtFilterLooseHoverEForHI+process.HLTDoLocalHcalWithTowerL1EGSeededSequence+process.HLTFastJetForEgamma+process.hltEgammaHoverE+process.hltEG60HEFilterLooseHoverEForHI)


process.HLTPreAK4PFJetsRecoSequence = cms.Sequence(process.HLTAK4CaloJetsPrePFRecoSequence+process.hltAK4CaloJetsPFEt5)


process.HLTIterL3MuonRecopixelvertexingSequence = cms.Sequence(process.HLTIterL3MuonRecoPixelTracksSequence+process.hltIterL3MuonPixelVertices+process.hltIterL3MuonTrimmedPixelVertices)


process.HLTIterativeTrackingIter02ForIterL3Muon = cms.Sequence(process.HLTIterativeTrackingIteration0ForIterL3Muon+process.HLTIterativeTrackingIteration2ForIterL3Muon+process.hltIter2IterL3MuonMerged)


process.HLTEle40WPLooseGsfSequenceForHI = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalSequence+process.HLTPFClusteringForEgamma+process.hltEgammaCandidates+process.hltEGL1SingleEG21FilterForHI+process.hltEG40L1SingleEG21EtFilterForHI+process.hltEgammaClusterShape+process.hltEle40WPLoose1ClusterShapeFilterForHI+process.HLTDoLocalHcalWithTowerL1EGSeededSequence+process.HLTFastJetForEgamma+process.hltEgammaHoverE+process.hltEle40WPLoose1HEFilterForHI+process.hltEgammaEcalPFClusterIso+process.hltEle40WPLoose1EcalIsoFilterForHI+process.HLTPFHcalClusteringForEgamma+process.hltEgammaHcalPFClusterIso+process.hltEle40WPLoose1HcalIsoFilterForHI+process.HLTElePixelMatchSequence+process.hltEle40WPLoose1PixelMatchFilterForHI+process.hltEle40WPLoose1PMS2FilterForHI+process.HLTGsfElectronSequence+process.hltEle40WPLoose1GsfOneOEMinusOneOPFilterForHI+process.hltEle40WPLoose1GsfDetaFilterForHI+process.hltEle40WPLoose1GsfDphiFilterForHI+process.HLTTrackReconstructionForIsoElectronIter02+process.hltEgammaEleGsfTrackIso+process.hltEle40WPLoose1GsfTrackIsoFilterForHI)


process.HLTBeginSequenceL1Fat = cms.Sequence(process.hltTriggerType+process.hltL1EventNumberL1Fat+process.HLTL1UnpackerSequence+process.HLTBeamSpot)


process.calDigi = cms.Sequence(process.ecalDigiSequence+process.hcalDigiSequence+process.castorDigiSequence)


process.HLTAK8PFJetsCorrectionSequence = cms.Sequence(process.hltFixedGridRhoFastjetAll+process.HLTAK8PFCorrectorProducersSequence+process.hltAK8PFJetsCorrected+process.hltAK8PFJetsLooseIDCorrected+process.hltAK8PFJetsTightIDCorrected)


process.HLTPhoton30SequenceLooseHOverEForHI = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalSequence+process.HLTPFClusteringForEgamma+process.hltEgammaCandidates+process.hltEGL1SingleEG15FilterForHI+process.hltEG30EtFilterLooseHoverEForHI+process.HLTDoLocalHcalWithTowerL1EGSeededSequence+process.HLTFastJetForEgamma+process.hltEgammaHoverE+process.hltEG30HEFilterLooseHoverEForHI)


process.HLTDoCaloSequence = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerSequence+process.HLTDoLocalHcalSequence+process.hltTowerMakerForAll)


process.HLTEle17WPLooseGsfSequenceForHI = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalSequence+process.HLTPFClusteringForEgamma+process.hltEgammaCandidates+process.hltEGL1SingleEGLowETOrFilterForHI+process.hltEG17L1SingleEGLowETOrEtFilterForHI+process.hltEgammaClusterShape+process.hltEle17WPLoose1ClusterShapeFilterForHI+process.HLTDoLocalHcalWithTowerL1EGSeededSequence+process.HLTFastJetForEgamma+process.hltEgammaHoverE+process.hltEle17WPLoose1HEFilterForHI+process.hltEgammaEcalPFClusterIso+process.hltEle17WPLoose1EcalIsoFilterForHI+process.HLTPFHcalClusteringForEgamma+process.hltEgammaHcalPFClusterIso+process.hltEle17WPLoose1HcalIsoFilterForHI+process.HLTElePixelMatchSequence+process.hltEle17WPLoose1PixelMatchFilterForHI+process.hltEle17WPLoose1PMS2FilterForHI+process.HLTGsfElectronSequence+process.hltEle17WPLoose1GsfOneOEMinusOneOPFilterForHI+process.hltEle17WPLoose1GsfDetaFilterForHI+process.hltEle17WPLoose1GsfDphiFilterForHI+process.HLTTrackReconstructionForIsoElectronIter02+process.hltEgammaEleGsfTrackIso+process.hltEle17WPLoose1GsfTrackIsoFilterForHI)


process.HLTAK4PFJetsCorrectionSequence = cms.Sequence(process.hltFixedGridRhoFastjetAll+process.HLTAK4PFCorrectorProducersSequence+process.hltAK4PFJetsCorrected+process.hltAK4PFJetsLooseIDCorrected+process.hltAK4PFJetsTightIDCorrected)


process.SimL1EmulatorCore = cms.Sequence(process.SimL1TCalorimeter+process.SimL1TMuon+process.SimL1TechnicalTriggers+process.SimL1TGlobal)


process.HLTEle20erJetC15WPTightGsfSequence = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalSequence+process.HLTPFClusteringForEgamma+process.hltEgammaCandidates+process.hltEGJetForPPRefFilter+process.hltEGJetForPPRefEtFilter+process.hltEgammaClusterShape+process.hltEle20erJetC15WPTightClusterShapeFilter+process.HLTDoLocalHcalWithTowerL1EGSeededSequence+process.HLTFastJetForEgamma+process.hltEgammaHoverE+process.hltEle20erJetC15WPTightHEFilter+process.hltEgammaEcalPFClusterIso+process.hltEle20erJetC15WPTightEcalIsoFilter+process.HLTPFHcalClusteringForEgamma+process.hltEgammaHcalPFClusterIso+process.hltEle20erJetC15WPTightHcalIsoFilter+process.HLTElePixelMatchSequence+process.hltEle20erJetC15WPTightPixelMatchFilter+process.hltEle20erJetC15WPTightPMS2Filter+process.HLTGsfElectronSequence+process.hltEle20erJetC15WPTightGsfOneOEMinusOneOPFilter+process.hltEle20erJetC15WPTightGsfMissingHitsFilter+process.hltEle20erJetC15WPTightGsfDetaFilter+process.hltEle20erJetC15WPTightGsfDphiFilter+process.HLTTrackReconstructionForIsoElectronIter02+process.hltEgammaEleGsfTrackIso+process.hltEle20erJetC15WPTightGsfTrackIsoFilter)


process.HLTPhoton50SequenceLooseHOverEForHI = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalSequence+process.HLTPFClusteringForEgamma+process.hltEgammaCandidates+process.hltEGL1SingleEG30FilterForHI+process.hltEG50EtFilterLooseHoverEForHI+process.HLTDoLocalHcalWithTowerL1EGSeededSequence+process.HLTFastJetForEgamma+process.hltEgammaHoverE+process.hltEG50HEFilterLooseHoverEForHI)


process.HLTEle20WPLooseGsfSequenceForHI = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalSequence+process.HLTPFClusteringForEgamma+process.hltEgammaCandidates+process.hltEGL1SingleEG15FilterForHI+process.hltEG20L1SingleEG15EtFilterForHI+process.hltEgammaClusterShape+process.hltEle20WPLoose1ClusterShapeFilterForHI+process.HLTDoLocalHcalWithTowerL1EGSeededSequence+process.HLTFastJetForEgamma+process.hltEgammaHoverE+process.hltEle20WPLoose1HEFilterForHI+process.hltEgammaEcalPFClusterIso+process.hltEle20WPLoose1EcalIsoFilterForHI+process.HLTPFHcalClusteringForEgamma+process.hltEgammaHcalPFClusterIso+process.hltEle20WPLoose1HcalIsoFilterForHI+process.HLTElePixelMatchSequence+process.hltEle20WPLoose1PixelMatchFilterForHI+process.hltEle20WPLoose1PMS2FilterForHI+process.HLTGsfElectronSequence+process.hltEle20WPLoose1GsfOneOEMinusOneOPFilterForHI+process.hltEle20WPLoose1GsfDetaFilterForHI+process.hltEle20WPLoose1GsfDphiFilterForHI+process.HLTTrackReconstructionForIsoElectronIter02+process.hltEgammaEleGsfTrackIso+process.hltEle20WPLoose1GsfTrackIsoFilterForHI)


process.HLTEle30WPLooseGsfSequenceForHI = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalSequence+process.HLTPFClusteringForEgamma+process.hltEgammaCandidates+process.hltEGL1SingleEG21FilterForHI+process.hltEG30L1SingleEG21EtFilterForHI+process.hltEgammaClusterShape+process.hltEle30WPLoose1ClusterShapeFilterForHI+process.HLTDoLocalHcalWithTowerL1EGSeededSequence+process.HLTFastJetForEgamma+process.hltEgammaHoverE+process.hltEle30WPLoose1HEFilterForHI+process.hltEgammaEcalPFClusterIso+process.hltEle30WPLoose1EcalIsoFilterForHI+process.HLTPFHcalClusteringForEgamma+process.hltEgammaHcalPFClusterIso+process.hltEle30WPLoose1HcalIsoFilterForHI+process.HLTElePixelMatchSequence+process.hltEle30WPLoose1PixelMatchFilterForHI+process.hltEle30WPLoose1PMS2FilterForHI+process.HLTGsfElectronSequence+process.hltEle30WPLoose1GsfOneOEMinusOneOPFilterForHI+process.hltEle30WPLoose1GsfDetaFilterForHI+process.hltEle30WPLoose1GsfDphiFilterForHI+process.HLTTrackReconstructionForIsoElectronIter02+process.hltEgammaEleGsfTrackIso+process.hltEle30WPLoose1GsfTrackIsoFilterForHI)


process.HLTPhoton40SequenceLooseHOverEForHI = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalSequence+process.HLTPFClusteringForEgamma+process.hltEgammaCandidates+process.hltEGL1SingleEG21FilterForHI+process.hltEG40EtFilterLooseHoverEForHI+process.HLTDoLocalHcalWithTowerL1EGSeededSequence+process.HLTFastJetForEgamma+process.hltEgammaHoverE+process.hltEG40HEFilterLooseHoverEForHI)


process.HLTIterL3IOmuonTkCandidateSequence = cms.Sequence(process.HLTIterL3MuonRecopixelvertexingSequence+process.HLTIterativeTrackingIter02ForIterL3Muon+process.hltL3MuonsIterL3IO)


process.HLTIterativeTrackingL3MuonIter02 = cms.Sequence(process.HLTIterativeTrackingL3MuonIteration0+process.HLTIterativeTrackingL3MuonIteration1+process.hltIter1L3MuonMerged+process.HLTIterativeTrackingL3MuonIteration2+process.hltIter2L3MuonMerged)


process.HLTAK4CaloJetsReconstructionSequence = cms.Sequence(process.HLTDoCaloSequence+process.hltAK4CaloJets+process.hltAK4CaloJetsIDPassed)


process.HLTAK8CaloJetsCorrectionSequence = cms.Sequence(process.hltFixedGridRhoFastjetAllCalo+process.HLTAK8CaloCorrectorProducersSequence+process.hltAK8CaloJetsCorrected+process.hltAK8CaloJetsCorrectedIDPassed)


process.HLTIterativeTrackingIter02ForIterL3FromL1Muon = cms.Sequence(process.HLTIterativeTrackingIteration0ForIterL3FromL1Muon+process.HLTIterativeTrackingIteration2ForIterL3FromL1Muon+process.hltIter2IterL3FromL1MuonMerged)


process.genJetMET = cms.Sequence(process.genJetParticles+process.recoGenJets+process.genMETParticles+process.recoGenMET)


process.HLTEle15Ele8L1VLowCaloIdLTrackIdLIsoVLSequence = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalSequence+process.HLTPFClusteringForEgamma+process.hltEgammaCandidates+process.hltEGL1VLowETSingleAndDoubleEGOrPairFilter+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLEtLeg1Filter+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLEtLeg2Filter+process.hltEgammaClusterShape+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLClusterShapeLeg1Filter+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLClusterShapeLeg2Filter+process.HLTDoLocalHcalWithTowerL1EGSeededSequence+process.HLTFastJetForEgamma+process.hltEgammaHoverE+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLHELeg1Filter+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLHELeg2Filter+process.hltEgammaEcalPFClusterIso+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLEcalIsoLeg1Filter+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLEcalIsoLeg2Filter+process.HLTPFHcalClusteringForEgamma+process.hltEgammaHcalPFClusterIso+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLHcalIsoLeg1Filter+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLHcalIsoLeg2Filter+process.HLTElePixelMatchSequence+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLPixelMatchLeg1Filter+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLPixelMatchLeg2Filter+process.HLTGsfElectronSequence+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg1Filter+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg2Filter+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLDetaLeg1Filter+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLDetaLeg2Filter+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLDphiLeg1Filter+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLDphiLeg2Filter+process.HLTTrackReconstructionForIsoElectronIter02+process.hltEgammaEleGsfTrackIso+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLTrackIsoLeg1Filter+process.hltEle15Ele8L1VLowCaloIdLTrackIdLIsoVLTrackIsoLeg2Filter)


process.doAllDigi = cms.Sequence(process.generatorSmeared+process.calDigi+process.muonDigi)


process.HLTEle15CaloIdLTrackIdLIsoVLJet30Sequence = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalSequence+process.HLTPFClusteringForEgamma+process.hltEgammaCandidates+process.hltEle15CaloIdLTrackIdLIsoVLJet30L1MatchFilter+process.hltEle15CaloIdLTrackIdLIsoVLJet30EtFilter+process.hltEgammaClusterShape+process.hltEle15CaloIdLTrackIdLIsoVLJet30ClusterShapeFilter+process.HLTDoLocalHcalWithTowerL1EGSeededSequence+process.HLTFastJetForEgamma+process.hltEgammaHoverE+process.hltEle15CaloIdLTrackIdLIsoVLJet30HEFilter+process.hltEgammaEcalPFClusterIso+process.hltEle15CaloIdLTrackIdLIsoVLJet30EcalIsoFilter+process.HLTPFHcalClusteringForEgamma+process.hltEgammaHcalPFClusterIso+process.hltEle15CaloIdLTrackIdLIsoVLJet30HcalIsoFilter+process.HLTElePixelMatchSequence+process.hltEle15CaloIdLTrackIdLIsoVLJet30PixelMatchFilter+process.HLTGsfElectronSequence+process.hltEle15CaloIdLTrackIdLIsoVLJet30OneOEMinusOneOPFilter+process.hltEle15CaloIdLTrackIdLIsoVLJet30DetaFilter+process.hltEle15CaloIdLTrackIdLIsoVLJet30DphiFilter+process.HLTTrackReconstructionForIsoElectronIter02+process.hltEgammaEleGsfTrackIso+process.hltEle15CaloIdLTrackIdLIsoVLJet30TrackIsoFilter)


process.pgen = cms.Sequence(cms.SequencePlaceholder("randomEngineStateProducer")+process.VertexSmearing+process.GenSmeared+process.GeneInfo+process.genJetMET)


process.HLTEle15WPLooseGsfSequenceForHI = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalSequence+process.HLTPFClusteringForEgamma+process.hltEgammaCandidates+process.hltEGL1SingleEG15FilterForHI+process.hltEG15L1SingleEG15FilterForHI+process.hltEgammaClusterShape+process.hltEle15WPLoose1ClusterShapeFilterForHI+process.HLTDoLocalHcalWithTowerL1EGSeededSequence+process.HLTFastJetForEgamma+process.hltEgammaHoverE+process.hltEle15WPLoose1HEFilterForHI+process.hltEgammaEcalPFClusterIso+process.hltEle15WPLoose1EcalIsoFilterForHI+process.HLTPFHcalClusteringForEgamma+process.hltEgammaHcalPFClusterIso+process.hltEle15WPLoose1HcalIsoFilterForHI+process.HLTElePixelMatchSequence+process.hltEle15WPLoose1PixelMatchFilterForHI+process.hltEle15WPLoose1PMS2FilterForHI+process.HLTGsfElectronSequence+process.hltEle15WPLoose1GsfOneOEMinusOneOPFilterForHI+process.hltEle15WPLoose1GsfDetaFilterForHI+process.hltEle15WPLoose1GsfDphiFilterForHI+process.HLTTrackReconstructionForIsoElectronIter02+process.hltEgammaEleGsfTrackIso+process.hltEle15WPLoose1GsfTrackIsoFilterForHI)


process.SimL1Emulator = cms.Sequence(process.SimL1EmulatorCore)


process.HLTFullIterativeTrackingForRefPP = cms.Sequence(process.HLTFullIterativeTrackingIteration0ForRefPP+process.HLTFullIterativeTrackingIteration1ForRefPP+process.HLTFullIterativeTrackingIteration2ForRefPP+process.HLTFullIterativeTrackingIteration3ForRefPP+process.HLTFullIterativeTrackingIteration4ForRefPP+process.HLTFullIterativeTrackingIteration5ForRefPP+process.HLTFullIterativeTrackingIteration6ForRefPP+process.HLTFullIterativeTrackingIteration7ForRefPP+process.HLTFullIterativeTrackingIteration8ForRefPP+process.HLTFullIterativeTrackingIteration9ForRefPP+process.HLTFullIterativeTrackingIteration10ForRefPP+process.hltFullIterativeTrackingMergedForRefPP)


process.HLTPhoton20SequenceLooseHOverEForHI = cms.Sequence(process.HLTDoFullUnpackingEgammaEcalSequence+process.HLTPFClusteringForEgamma+process.hltEgammaCandidates+process.hltEGL1SingleEG10FilterForHI+process.hltEG20EtFilterLooseHoverEForHI+process.HLTDoLocalHcalWithTowerL1EGSeededSequence+process.HLTFastJetForEgamma+process.hltEgammaHoverE+process.hltEG20HEFilterLooseHoverEForHI)


process.HLTAK8CaloJetsPrePFRecoSequence = cms.Sequence(process.HLTDoCaloSequencePF+process.hltAK8CaloJetsPF+process.hltAK4CaloJetsPF)


process.pdigi_nogen = cms.Sequence(process.generatorSmeared+cms.SequencePlaceholder("randomEngineStateProducer")+cms.SequencePlaceholder("mix")+process.doAllDigi+process.addPileupInfo+process.genPUProtons)


process.fixGenInfo = cms.Sequence(process.GeneInfo+process.genJetMET)


process.HLTAK4CaloJetsSequence = cms.Sequence(process.HLTAK4CaloJetsReconstructionSequence+process.HLTAK4CaloJetsCorrectionSequence)


process.pdigi_hi_nogen = cms.Sequence(process.pdigi_nogen+process.heavyIon)


process.HLTTrackReconstructionL3MuonIter02 = cms.Sequence(process.HLTPixelTrackingL3Muon+process.HLTDoLocalStripSequence+process.HLTIterativeTrackingL3MuonIter02)


process.HLTPixelClusterSplittingForRefPP = cms.Sequence(process.HLTAK4CaloJetsSequence+process.hltJetsForCoreTracking+process.HLTDoLocalPixelSequenceForRefPP+process.HLTDoLocalStripSequenceForRefPP+process.HLTFullIterativeTrackingIteration0PreSplittingForRefPP+process.HLTDoLocalPixelSequenceAfterSplittingForRefPP+process.HLTDoLocalStripSequenceFullForRefPP)


process.HLTAK8CaloJetsReconstructionSequence = cms.Sequence(process.HLTDoCaloSequence+process.hltAK8CaloJets+process.hltAK8CaloJetsIDPassed)


process.HLTAK8CaloJetsSequence = cms.Sequence(process.HLTAK8CaloJetsReconstructionSequence+process.HLTAK8CaloJetsCorrectionSequence)


process.pdigi_valid_nogen = cms.Sequence(process.pdigi_nogen)


process.HLTPreAK8PFJetsRecoSequence = cms.Sequence(process.HLTAK8CaloJetsPrePFRecoSequence+process.hltAK8CaloJetsPFEt5+process.hltAK4CaloJetsPFEt5)


process.HLTIterL3IOmuonFromL1TkCandidateSequence = cms.Sequence(process.HLTRecopixelvertexingSequenceForIterL3FromL1Muon+process.HLTIterativeTrackingIter02ForIterL3FromL1Muon)


process.HLTIterL3OIAndIOFromL2muonTkCandidateSequence = cms.Sequence(process.HLTIterL3OImuonTkCandidateSequence+process.hltIterL3OIL3MuonsLinksCombination+process.hltIterL3OIL3Muons+process.hltIterL3OIL3MuonCandidates+process.hltL2SelectorForL3IO+process.HLTIterL3IOmuonTkCandidateSequence+process.hltIterL3MuonsFromL2LinksCombination+process.hltIterL3MuonsFromL2)


process.pdigi = cms.Sequence(process.generatorSmeared+process.fixGenInfo+cms.SequencePlaceholder("randomEngineStateProducer")+cms.SequencePlaceholder("mix")+process.doAllDigi+process.addPileupInfo+process.genPUProtons)


process.pdigi_hi = cms.Sequence(process.pdigi+process.heavyIon)


process.HLTIterL3muonTkCandidateSequence = cms.Sequence(process.HLTDoLocalPixelSequence+process.HLTDoLocalStripSequence+process.HLTIterL3OIAndIOFromL2muonTkCandidateSequence+process.hltIterL3MuonL1MuonNoL2Selector+process.HLTIterL3IOmuonFromL1TkCandidateSequence)


process.pdigi_valid = cms.Sequence(process.pdigi)


process.HLTL3muonrecoNocandSequence = cms.Sequence(process.HLTIterL3muonTkCandidateSequence+process.hltIterL3MuonMerged+process.hltIterL3MuonAndMuonFromL1Merged+process.hltL3MuonsIterL3Links+process.hltIterL3Muons)


process.HLTL3muonrecoSequence = cms.Sequence(process.HLTL3muonrecoNocandSequence+process.hltIterL3MuonCandidates)


process.HLTTrackingForBeamSpot = cms.Sequence(process.HLTPreAK4PFJetsRecoSequence+process.HLTL2muonrecoSequence+process.HLTL3muonrecoSequence+process.HLTDoLocalPixelSequence+process.HLTRecopixelvertexingSequence+process.HLTDoLocalStripSequence+process.HLTIterativeTrackingIter02+process.hltPFMuonMerging)


process.HLTAK8PFJetsReconstructionSequence = cms.Sequence(process.HLTL2muonrecoSequence+process.HLTL3muonrecoSequence+process.HLTTrackReconstructionForPF+process.HLTParticleFlowSequence+process.hltAK8PFJets+process.hltAK8PFJetsLooseID+process.hltAK8PFJetsTightID)


process.HLTAK4PFJetsReconstructionSequence = cms.Sequence(process.HLTL2muonrecoSequence+process.HLTL3muonrecoSequence+process.HLTTrackReconstructionForPF+process.HLTParticleFlowSequence+process.hltAK4PFJets+process.hltAK4PFJetsLooseID+process.hltAK4PFJetsTightID)


process.HLTAK8PFJetsSequence = cms.Sequence(process.HLTPreAK8PFJetsRecoSequence+process.HLTAK8PFJetsReconstructionSequence+process.HLTAK8PFJetsCorrectionSequence)


process.HLTAK4PFJetsSequence = cms.Sequence(process.HLTPreAK4PFJetsRecoSequence+process.HLTAK4PFJetsReconstructionSequence+process.HLTAK4PFJetsCorrectionSequence)


process.HLT_HIAK4CaloJet80_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet60+process.hltPreHIAK4CaloJet80+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet80+process.HLTEndSequence)


process.HLT_HIAK4CaloJet60FWD_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet35FWD+process.hltPreHIAK4CaloJet60FWD+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet60FWD+process.HLTEndSequence)


process.HLT_HIZeroBias_part8_v6 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreHIZeroBiaspart8+process.HLTEndSequence)


process.HLT_HIFullTracks_HighPt34_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet32+process.hltPreHIFullTracksHighPt34+process.HLTPixelClusterSplittingForRefPP+process.HLTFullIterativeTrackingForRefPP+process.hltFullOnlinePrimaryVerticesForRefPP+process.hltGoodHighPurityFullTrackCutClassifierForHighPt+process.hltGoodHighPurityFullTracksForHighPt+process.hltFullCandsForHighPtTrigger+process.hltFullTrackHighPt34+process.HLTEndSequence)


process.HLT_HcalCalibration_v5 = cms.Path(process.HLTBeginSequenceCalibration+process.hltPreHcalCalibration+process.hltHcalCalibTypeFilter+process.hltHcalCalibrationRaw+process.HLTEndSequence)


process.HLT_HIHT80_Beamspot_ppRef5TeV_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sHTTForBeamSpotPP5TeV+process.hltPreHIHT80BeamspotppRef5TeV+process.HLTAK4CaloJetsSequence+process.hltHtMht+process.hltHT80+process.HLTTrackingForBeamSpot+process.hltVerticesPF+process.hltVerticesPFSelector+process.hltVerticesPFFilter+process.HLTEndSequence)


process.HLT_HIL3Mu3_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu3+process.hltPreHIL3Mu3+process.hltL1fL1sSingleMu3L1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sSingleMu3L1f0L2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sSingleMu3L1Filtered0)+process.hltL3fL1sSingleMu3L1f0L2f0L3Filtered3+process.HLTEndSequence)


process.HLT_HIL2Mu12_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu7+process.hltPreHIL2Mu12+process.hltL1fL1sSingleMu7L1Filtered0+process.HLTL2muonrecoSequence+process.hltL2fL1sSingleMu7L1f0L2Filtered12+process.HLTEndSequence)


process.HLT_HIDmesonPPTrackingGlobal_Dpt50_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet44+process.hltPreHIDmesonPPTrackingGlobalDpt50+process.HLTPixelClusterSplittingForRefPP+process.HLTFullIterativeTrackingForRefPP+process.hltFullOnlinePrimaryVerticesForRefPP+process.hltFullCandsForRefPP+process.hltFullTrackFilterForDmeson+process.hlttktkVtxForDmesonDpt50+process.hlttktkFilterForDmesonDpt50+process.HLTEndSequence)


process.HLT_HIAK4PFJet30FWD_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet16+process.hltPreHIAK4PFJet30FWD+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet15FWD+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets15FWD+process.hltSingleAK4PFJet30FWD+process.HLTEndSequence)


process.HLT_HIL2Mu5_NHitQ10_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu3OR5+process.hltPreHIL2Mu5NHitQ10+process.hltL1fL1sSingleMu3OR5L1Filtered0+process.HLTL2muonrecoSequence+process.hltL2fL1sSingleMu3OR5L1f0L2NHitQ10L2Filtered5+process.HLTEndSequence)


process.HLT_HIFullTracks_HighPt24_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet24+process.hltPreHIFullTracksHighPt24+process.HLTPixelClusterSplittingForRefPP+process.HLTFullIterativeTrackingForRefPP+process.hltFullOnlinePrimaryVerticesForRefPP+process.hltGoodHighPurityFullTrackCutClassifierForHighPt+process.hltGoodHighPurityFullTracksForHighPt+process.hltFullCandsForHighPtTrigger+process.hltFullTrackHighPt24+process.HLTEndSequence)


process.HLT_HIL1DoubleMu0_HighQ_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDoubleMu0+process.hltPreHIL1DoubleMu0HighQ+process.hltL1fL1sDoubleMu0L1HighQFiltered0+process.HLTEndSequence)


process.HLT_HIDijet28And16_MidEta2p7_Dpt15_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDijet28And16MidEta2p7+process.hltPreHIDijet28And16MidEta2p7Dpt15+process.HLTPixelClusterSplittingForRefPP+process.HLTFullIterativeTrackingForRefPP+process.hltFullOnlinePrimaryVerticesForRefPP+process.hltFullCandsForRefPP+process.hltFullTrackFilterForDmeson+process.hlttktkVtxForDmesonDpt15+process.hlttktkFilterForDmesonDpt15+process.HLTEndSequence)


process.HLT_HISinglePhoton30_Eta1p5ForPPRef_v8 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG15+process.hltPreHISinglePhoton30Eta1p5ForPPRef+process.HLTDoCaloSequence+process.HLTDoHIEcalClusWithCleaningSequence+process.hltHIPhoton30Eta1p5+process.HLTEndSequence)


process.HLT_HIDiPFJetAve15_HFJEC_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreHIDiPFJetAve15HFJEC+process.HLTAK4PFJetsSequence+process.hltDiPFJetAve15ForHFJEC+process.HLTEndSequence)


process.HLT_HIDimuon0_Jpsi_NoVertexing_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDoubleMu0SQOS+process.hltPreHIDimuon0JpsiNoVertexing+process.hltL1sEmuDoubleMu0SQOS+process.hltL1fL1DoubleMu0SQOSL1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sL1DoubleMu0SQOSL2PreFiltered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1DoubleMu0SQOSL1Filtered0)+process.hltDimuon0JpsiL3Filtered+process.HLTEndSequence)


process.HLT_HIPFJetFwd140_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet90Fwd+process.hltPreHIPFJetFwd140+process.HLTAK4CaloJetsSequence+process.hltSingleCaloFwdJet110+process.HLTAK4PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloFwdJets110+process.hltSinglePFFwdJet140+process.HLTEndSequence)


process.HLT_HIEle10_WPLoose_Gsf_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG2Or5+process.hltPreHIEle10WPLooseGsf+process.HLTEle10WPLooseGsfSequenceForHI+process.HLTEndSequence)


process.HLTriggerFinalPath = cms.Path(process.hltGtStage2Digis+process.hltScalersRawToDigi+process.hltFEDSelector+process.hltTriggerSummaryAOD+process.hltTriggerSummaryRAW+process.hltBoolFalse)


process.HLT_HIAK8PFJet140_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet90+process.hltPreHIAK8PFJet140+process.HLTAK8CaloJetsSequence+process.hltSingleCaloJet110AK8+process.HLTAK8PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloJets110AK8+process.hltSinglePFJet140AK8+process.HLTEndSequence)


process.HLT_HIAK4PFJet80_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet60+process.hltPreHIAK4PFJet80+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet50+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets50+process.hltSingleAK4PFJet80+process.HLTEndSequence)


process.HLT_HIMu7p5_L2Mu2_Upsilon_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDoubleMu0SQ+process.hltPreHIMu7p5L2Mu2Upsilon+process.hltL1fL1DoubleMu0SQL1Filtered0+process.HLTL2muonrecoSequence+process.hltL2fSQDoubleMu2L2PreFiltered2+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1DoubleMu0SQL1Filtered0)+process.hltL3fSQMu7p5L2Mu2L3Filtered7p5+process.hltSQMu7p5L2Mu2UpsilonTrackMassFiltered+process.HLTEndSequence)


process.AlCa_HIEcalPi0EBonly_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sAlCaEcalPi0EtaForHI+process.hltPreAlCaHIEcalPi0EBonly+process.HLTDoFullUnpackingEgammaEcalSequence+process.hltSimple3x3Clusters+process.hltAlCaPi0RecHitsFilterEBonlyRegional+process.hltAlCaPi0EBUncalibrator+process.hltAlCaPi0EBRechitsToDigis+process.HLTEndSequence)


process.HLT_HIL2Mu20_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu7+process.hltPreHIL2Mu20+process.hltL1fL1sSingleMu7L1Filtered0+process.HLTL2muonrecoSequence+process.hltL2fL1sSingleMu7L1f0L2Filtered20+process.HLTEndSequence)


process.HLT_HIDiPFJet25_NoCaloMatched_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet8BptxAND+process.hltPreHIDiPFJet25NoCaloMatched+process.HLTAK4PFJetsSequence+process.hltDoublePFJet25+process.HLTEndSequence)


process.HLT_HIL3Mu5_AK4PFJet40_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu3OR5+process.hltPreHIL3Mu5AK4PFJet40+process.hltL1fL1sSingleMu3OR5L1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sSingleMu3OR5L1f0L2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sSingleMu3OR5L1Filtered0)+process.hltL3fL1sSingleMu3OR5L1f0L2f0L3Filtered5+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet15+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets15+process.hltSingleAK4PFJet40+process.HLTEndSequence)


process.HLT_HIAK8PFJetFwd25_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBiasORJet8+process.hltPreHIAK8PFJetFwd25+process.HLTAK8CaloJetsSequence+process.hltSingleCaloFwdJet10AK8+process.HLTAK8PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloFwdJets10AK8+process.hltSinglePFFwdJet25AK8+process.HLTEndSequence)


process.HLT_HIAK4CaloJet15_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet8BptxAND+process.hltPreHIAK4CaloJet15+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet15+process.HLTEndSequence)


process.HLT_HIAK4PFJet80_bTag_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet60+process.hltPreHIAK4PFJet80bTag+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet50+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets50+process.hltSingleAK4PFJet80+process.HLTBtagCSVSequencePFJet80Eta2p4+process.hltBTagPFCSV0p80SingleJet80Eta2p4+process.HLTEndSequence)


process.HLT_HISinglePhoton20_Eta1p5ForPPRef_v8 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG10+process.hltPreHISinglePhoton20Eta1p5ForPPRef+process.HLTDoCaloSequence+process.HLTDoHIEcalClusWithCleaningSequence+process.hltHIPhoton20Eta1p5+process.HLTEndSequence)


process.DST_Physics_v7 = cms.Path(process.HLTBeginSequence+process.hltPreDSTPhysics+process.HLTEndSequence)


process.HLT_HIL3DoubleMu10_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDoubleMu10+process.hltPreHIL3DoubleMu10+process.hltL1fL1sDoubleMu10L1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sDoubleMu10L1f0L2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu10L1Filtered0)+process.hltL3fL1sDoubleMu10L1f0L2f0L3Filtered10+process.HLTEndSequence)


process.HLT_HIZeroBias_part10_v6 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreHIZeroBiaspart10+process.HLTEndSequence)


process.HLT_HIDijet16And12_MidEta2p7_Dpt10_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDijet16And12MidEta2p7+process.hltPreHIDijet16And12MidEta2p7Dpt10+process.HLTPixelClusterSplittingForRefPP+process.HLTFullIterativeTrackingForRefPP+process.hltFullOnlinePrimaryVerticesForRefPP+process.hltFullCandsForRefPP+process.hltFullTrackFilterForDmeson+process.hlttktkVtxForDmesonDpt10+process.hlttktkFilterForDmesonDpt10+process.HLTEndSequence)


process.HLT_HIZeroBias_part2_v6 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreHIZeroBiaspart2+process.HLTEndSequence)


process.HLT_HIAK8PFJetFwd60_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet35Fwd+process.hltPreHIAK8PFJetFwd60+process.HLTAK8CaloJetsSequence+process.hltSingleCaloFwdJet40AK8+process.HLTAK8PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloFwdJets40AK8+process.hltSinglePFFwdJet60AK8+process.HLTEndSequence)


process.HLT_HIEle20_WPLoose_Gsf_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG15+process.hltPreHIEle20WPLooseGsf+process.HLTEle20WPLooseGsfSequenceForHI+process.HLTEndSequence)


process.HLT_HIAK4CaloJet40FWD_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet20FWD+process.hltPreHIAK4CaloJet40FWD+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet40FWD+process.HLTEndSequence)


process.HLT_HIPFJetFwd15_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBiasORJet8+process.hltPreHIPFJetFwd15+process.HLTAK4CaloJetsSequence+process.hltSingleCaloFwdJet5+process.HLTAK4PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloFwdJets5+process.hltSinglePFFwdJet15+process.HLTEndSequence)


process.HLT_HIMu15_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu10LowQ+process.hltPreHIMu15+process.hltL1fL1sMu10lqL1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sMu10lqL1f0L2Filtered10)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sMu10lqL1Filtered0)+process.hltL3fL1sMu10lqL1f0L2f10L3Filtered15+process.HLTEndSequence)


process.HLT_HIZeroBias_part9_v6 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreHIZeroBiaspart9+process.HLTEndSequence)


process.HLT_HIL3Mu3_NHitQ10_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu3+process.hltPreHIL3Mu3NHitQ10+process.hltL1fL1sSingleMu3L1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sSingleMu3L1f0L2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sSingleMu3L1Filtered0)+process.hltL3fL1sSingleMu3L1f0L2f0L3NHitQ10L3Filtered3+process.HLTEndSequence)


process.HLT_HIAK4CaloJet30FWD_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet16+process.hltPreHIAK4CaloJet30FWD+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet30FWD+process.HLTEndSequence)


process.HLT_HIZeroBias_part11_v6 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreHIZeroBiaspart11+process.HLTEndSequence)


process.HLT_HIPhoton30_HoverELoose_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG15+process.hltPreHIPhoton30HoverELoose+process.HLTPhoton30SequenceLooseHOverEForHI+process.HLTEndSequence)


process.HLT_HISinglePhoton40_Eta1p5ForPPRef_v8 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG21+process.hltPreHISinglePhoton40Eta1p5ForPPRef+process.HLTDoCaloSequence+process.HLTDoHIEcalClusWithCleaningSequence+process.hltHIPhoton40Eta1p5+process.HLTEndSequence)


process.HLT_HIDijet20And8_MidEta2p7_Dpt8_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDijet20And8MidEta2p7+process.hltPreHIDijet20And8MidEta2p7Dpt8+process.HLTPixelClusterSplittingForRefPP+process.HLTFullIterativeTrackingForRefPP+process.hltFullOnlinePrimaryVerticesForRefPP+process.hltFullCandsForRefPP+process.hltFullTrackFilterForDmeson+process.hlttktkVtxForDmesonDpt8+process.hlttktkFilterForDmesonDpt8+process.HLTEndSequence)


process.HLT_HIDoublePhoton15_Eta3p1ForPPRef_Mass50to1000_v8 = cms.Path(process.HLTBeginSequence+process.hltL1sLowEG15+process.hltPreHIDoublePhoton15Eta3p1ForPPRefMass50to1000+process.HLTDoCaloSequence+process.HLTDoHIEcalClusWithCleaningSequence+process.hltHIDoublePhoton15Eta3p1+process.hltHIDoublePhoton15Mass501000FilterEta3p1+process.HLTEndSequence)


process.HLT_HIL3Mu7_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu3OR5+process.hltPreHIL3Mu7+process.hltL1fL1sSingleMu3OR5L1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sSingleMu3OR5L1f0L2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sSingleMu3OR5L1Filtered0)+process.hltL3fL1sSingleMu3OR5L1f0L2f0L3Filtered7+process.HLTEndSequence)


process.HLT_HIL1DoubleMu10_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDoubleMu10+process.hltPreHIL1DoubleMu10+process.hltL1fL1sDoubleMu10L1Filtered0+process.HLTEndSequence)


process.HLT_HIL3Mu5_Track1_Jpsi_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu3OR5+process.hltPreHIL3Mu5Track1Jpsi+process.hltL1fMu3OR5TrackFiltered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fMu3OR5TrackL2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fMu3OR5TrackFiltered0)+process.hltL3fLMu3OR5TrackL3Filtered5+process.HLTTrackReconstructionL3MuonIter02+process.hltTracksIter+process.hltMu3OR5Track1MassFilteredjpsi+process.HLTEndSequence)


process.AlCa_HIEcalEtaEBonly_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sAlCaEcalPi0EtaForHI+process.hltPreAlCaHIEcalEtaEBonly+process.HLTDoFullUnpackingEgammaEcalSequence+process.hltSimple3x3Clusters+process.hltAlCaEtaRecHitsFilterEBonlyRegional+process.hltAlCaEtaEBUncalibrator+process.hltAlCaEtaEBRechitsToDigis+process.HLTEndSequence)


process.AlCa_HIRPCMuonNormalisation_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu7to30+process.hltPreAlCaHIRPCMuonNormalisation+process.hltRPCMuonNormaL1Filtered0ForHI+process.HLTMuonLocalRecoSequence+process.HLTEndSequence)


process.HLT_HIMu17_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu10LowQ+process.hltPreHIMu17+process.hltL1fL1sMu10lqL1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sMu10lqL1f0L2Filtered10)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sMu10lqL1Filtered0)+process.hltL3fL1sMu10lqL1f0L2f10L3Filtered17+process.HLTEndSequence)


process.HLT_HIPhoton40_HoverELoose_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG21+process.hltPreHIPhoton40HoverELoose+process.HLTPhoton40SequenceLooseHOverEForHI+process.HLTEndSequence)


process.HLT_HIAK4CaloJet40_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet24+process.hltPreHIAK4CaloJet40+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet40+process.HLTEndSequence)


process.HLT_HIDiPFJet15_FBEta3_NoCaloMatched_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet8BptxAND+process.hltPreHIDiPFJet15FBEta3NoCaloMatched+process.HLTAK4PFJetsSequence+process.hltDoublePFJet15FBEta3+process.HLTEndSequence)


process.HLT_HIZeroBias_part7_v6 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreHIZeroBiaspart7+process.HLTEndSequence)


process.HLT_ZeroBias_Beamspot_v2 = cms.Path(process.HLTBeginSequence+process.hltPreZeroBiasBeamspot+process.hltZeroBiasForBeamSpot+process.HLTTrackingForBeamSpot+process.hltVerticesPF+process.hltVerticesPFSelector+process.hltVerticesPFFilter+process.HLTEndSequence)


process.HLT_HIEle20_eta2p1_WPTight_Gsf_CentralPFJet15_EleCleaned_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sEGJetForPPRef+process.hltPreHIEle20eta2p1WPTightGsfCentralPFJet15EleCleaned+process.HLTEle20erJetC15WPTightGsfSequence+process.HLTAK4CaloJetsSequence+process.hltDoubleCentralCaloJet10+process.HLTAK4PFJetsSequence+process.hltEle20JetCollectionsForLeptonPlusPFJets+process.hltEle20PFJet15EleCleaned+process.HLTEndSequence)


process.HLT_HIMu7p5_Track2_Jpsi_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu5IorSingleMu7+process.hltPreHIMu7p5Track2Jpsi+process.hltL1fMu7p5TrackFiltered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fMu7p5TrackL2Filtered7)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fMu7p5TrackFiltered0)+process.hltL3fLMu7p5TrackL3Filtered7p5+process.HLTTrackReconstructionL3MuonIter02+process.hltTracksIter+process.hltMu7p5Track2JpsiTrackMassFiltered+process.HLTEndSequence)


process.HLT_HISinglePhoton20_Eta3p1ForPPRef_v8 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG10+process.hltPreHISinglePhoton20Eta3p1ForPPRef+process.HLTDoCaloSequence+process.HLTDoHIEcalClusWithCleaningSequence+process.hltHIPhoton20Eta3p1+process.HLTEndSequence)


process.HLT_HISinglePhoton50_Eta3p1ForPPRef_v8 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG30+process.hltPreHISinglePhoton50Eta3p1ForPPRef+process.HLTDoCaloSequence+process.HLTDoHIEcalClusWithCleaningSequence+process.hltHIPhoton50Eta3p1+process.HLTEndSequence)


process.HLT_HIZeroBias_part3_v6 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreHIZeroBiaspart3+process.HLTEndSequence)


process.HLT_HIEle17_WPLoose_Gsf_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEGLowETor+process.hltPreHIEle17WPLooseGsf+process.HLTEle17WPLooseGsfSequenceForHI+process.HLTEndSequence)


process.HLT_HIAK4PFJet60FWD_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet35FWD+process.hltPreHIAK4PFJet60FWD+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet30FWD+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets30FWD+process.hltSingleAK4PFJet60FWD+process.HLTEndSequence)


process.HLT_HIL3Mu12_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu7+process.hltPreHIL3Mu12+process.hltL1fL1sSingleMu7L1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sSingleMu7L1f0L2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sSingleMu7L1Filtered0)+process.hltL3fL1sSingleMu7L1f0L2f0L3Filtered12+process.HLTEndSequence)


process.HLT_HIAK8PFJetFwd80_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet60Fwd+process.hltPreHIAK8PFJetFwd80+process.HLTAK8CaloJetsSequence+process.hltSingleCaloFwdJet50AK8+process.HLTAK8PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloFwdJets50AK8+process.hltSinglePFFwdJet80AK8+process.HLTEndSequence)


process.HLT_HIDiPFJet25_FBEta3_NoCaloMatched_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet8BptxAND+process.hltPreHIDiPFJet25FBEta3NoCaloMatched+process.HLTAK4PFJetsSequence+process.hltDoublePFJet25FBEta3+process.HLTEndSequence)


process.HLT_ZeroBias_v6 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreZeroBias+process.HLTEndSequence)


process.HLT_HIAK4CaloJet60_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet44+process.hltPreHIAK4CaloJet60+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet60+process.HLTEndSequence)


process.HLT_HIL3Mu3_Track1_Jpsi_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu3+process.hltPreHIL3Mu3Track1Jpsi+process.hltL1fMu3TrackFiltered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fMu3TrackL2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fMu3TrackFiltered0)+process.hltL3fLMu3TrackL3Filtered3+process.HLTTrackReconstructionL3MuonIter02+process.hltTracksIter+process.hltMu3Track1MassFilteredjpsi+process.HLTEndSequence)


process.HLT_HIL2DoubleMu0_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDoubleMu0+process.hltPreHIL2DoubleMu0+process.hltL1fL1sDoubleMu0L1Filtered0+process.HLTL2muonrecoSequence+process.hltL2fL1sDoubleMu0L1f0L2Filtered0+process.HLTEndSequence)


process.HLT_HIAK4PFJet120_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet90+process.hltPreHIAK4PFJet120+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet70+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets70+process.hltSingleAK4PFJet120+process.HLTEndSequence)


process.HLT_EcalCalibration_v4 = cms.Path(process.HLTBeginSequenceCalibration+process.hltPreEcalCalibration+process.hltEcalCalibrationRaw+process.HLTEndSequence)


process.HLT_HIEle30_WPLoose_Gsf_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG21+process.hltPreHIEle30WPLooseGsf+process.HLTEle30WPLooseGsfSequenceForHI+process.HLTEndSequence)


process.HLT_HIDmesonPPTrackingGlobal_Dpt8_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet8BptxAND+process.hltPreHIDmesonPPTrackingGlobalDpt8+process.HLTPixelClusterSplittingForRefPP+process.HLTFullIterativeTrackingForRefPP+process.hltFullOnlinePrimaryVerticesForRefPP+process.hltFullCandsForRefPP+process.hltFullTrackFilterForDmeson+process.hlttktkVtxForDmesonDpt8+process.hlttktkFilterForDmesonDpt8+process.HLTEndSequence)


process.HLT_HIPFJet25_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBiasORJet8+process.hltPreHIPFJet25+process.HLTAK4CaloJetsSequence+process.hltSingleCaloJet10+process.HLTAK4PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloJets10+process.hltSinglePFJet25+process.HLTEndSequence)


process.HLT_HIAK4PFJet15_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet8BptxAND+process.hltPreHIAK4PFJet15+process.HLTAK4CaloJetsSequence+process.HLTAK4PFJetsSequence+process.hltSingleAK4PFJet15+process.HLTEndSequence)


process.HLT_ZeroBias_FirstCollisionAfterAbortGap_v5 = cms.Path(process.HLTBeginSequence+process.hltL1sL1ZeroBiasFirstCollisionAfterAbortGap+process.hltPreZeroBiasFirstCollisionAfterAbortGap+process.HLTEndSequence)


process.HLT_HIDmesonPPTrackingGlobal_Dpt40_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet32+process.hltPreHIDmesonPPTrackingGlobalDpt40+process.HLTPixelClusterSplittingForRefPP+process.HLTFullIterativeTrackingForRefPP+process.hltFullOnlinePrimaryVerticesForRefPP+process.hltFullCandsForRefPP+process.hltFullTrackFilterForDmeson+process.hlttktkVtxForDmesonDpt40+process.hlttktkFilterForDmesonDpt40+process.HLTEndSequence)


process.HLT_HIEle20_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sLowEG15+process.hltPreHIEle20Ele12CaloIdLTrackIdLIsoVLDZ+process.HLTEle20Ele12CaloIdLTrackIdLIsoVLSequence+process.hltEle20Ele12CaloIdLTrackIdLIsoVLDZFilter+process.HLTEndSequence)


process.HLT_HIAK4PFJet60_bTag_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet44+process.hltPreHIAK4PFJet60bTag+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet30+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets30+process.hltSingleAK4PFJet60+process.HLTBtagCSVSequencePFJet60Eta2p4+process.hltBTagPFCSV0p80SingleJet60Eta2p4+process.HLTEndSequence)


process.HLT_HIZeroBias_part5_v6 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreHIZeroBiaspart5+process.HLTEndSequence)


process.HLT_HIDimuon0_Upsilon_NoVertexing_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDoubleMu0SQOS+process.hltPreHIDimuon0UpsilonNoVertexing+process.hltL1fL1sL1DoubleMu0SQOSL1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sL1DoubleMu0SQOSL1f0L2PreFiltered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sL1DoubleMu0SQOSL1Filtered0)+process.hltDimuon0UpsilonL1sMassL3Filtered+process.HLTEndSequence)


process.HLT_HISinglePhoton15_Eta3p1ForPPRef_v8 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG5+process.hltPreHISinglePhoton15Eta3p1ForPPRef+process.HLTDoCaloSequence+process.HLTDoHIEcalClusWithCleaningSequence+process.hltHIPhoton15Eta3p1+process.HLTEndSequence)


process.HLT_HIFullTracks_HighPt18_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet16+process.hltPreHIFullTracksHighPt18+process.HLTPixelClusterSplittingForRefPP+process.HLTFullIterativeTrackingForRefPP+process.hltFullOnlinePrimaryVerticesForRefPP+process.hltGoodHighPurityFullTrackCutClassifierForHighPt+process.hltGoodHighPurityFullTracksForHighPt+process.hltFullCandsForHighPtTrigger+process.hltFullTrackHighPt18+process.HLTEndSequence)


process.HLTriggerFirstPath = cms.Path(process.hltDummyConditions+process.hltGetRaw+process.hltBoolFalse)


process.HLT_HIL1UnpairedBunchBptxMinus_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sL1UnpairedBunchBptxMinus+process.hltPreHIL1UnpairedBunchBptxMinus+process.HLTEndSequence)


process.HLT_HIEle15_Ele8_CaloIdL_TrackIdL_IsoVL_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sVLowETSingleAndDoubleEG+process.hltPreHIEle15Ele8CaloIdLTrackIdLIsoVL+process.HLTEle15Ele8L1VLowCaloIdLTrackIdLIsoVLSequence+process.HLTEndSequence)


process.HLT_HIPhoton50_HoverELoose_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG30+process.hltPreHIPhoton50HoverELoose+process.HLTPhoton50SequenceLooseHOverEForHI+process.HLTEndSequence)


process.HLT_HIEle15_CaloIdL_TrackIdL_IsoVL_PFJet30_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG10OR15+process.hltPreHIEle15CaloIdLTrackIdLIsoVLPFJet30+process.HLTEle15CaloIdLTrackIdLIsoVLJet30Sequence+process.HLTAK4PFJetsSequence+process.hltEle15JetCollectionsForLeptonPlusPFJets+process.hltEle15PFJet30EleCleaned+process.HLTEndSequence)


process.HLT_HISinglePhoton60_Eta3p1ForPPRef_v8 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG30+process.hltPreHISinglePhoton60Eta3p1ForPPRef+process.HLTDoCaloSequence+process.HLTDoHIEcalClusWithCleaningSequence+process.hltHIPhoton60Eta3p1+process.HLTEndSequence)


process.AlCa_HIEcalEtaEEonly_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sAlCaEcalPi0EtaForHI+process.hltPreAlCaHIEcalEtaEEonly+process.HLTDoFullUnpackingEgammaEcalSequence+process.hltSimple3x3Clusters+process.hltAlCaEtaRecHitsFilterEEonlyRegional+process.hltAlCaEtaEEUncalibrator+process.hltAlCaEtaEERechitsToDigis+process.HLTEndSequence)


process.HLT_HISinglePhoton50_Eta1p5ForPPRef_v8 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG30+process.hltPreHISinglePhoton50Eta1p5ForPPRef+process.HLTDoCaloSequence+process.HLTDoHIEcalClusWithCleaningSequence+process.hltHIPhoton50Eta1p5+process.HLTEndSequence)


process.HLT_Random_v3 = cms.Path(process.HLTBeginSequenceRandom+process.hltPreRandom+process.HLTEndSequence)


process.HLT_HIL3Mu15_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu7+process.hltPreHIL3Mu15+process.hltL1fL1sSingleMu7L1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sSingleMu7L1f0L2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sSingleMu7L1Filtered0)+process.hltL3fL1sSingleMu7L1f0L2f0L3Filtered15+process.HLTEndSequence)


process.HLT_HIL1DoubleMu0_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDoubleMu0+process.hltPreHIL1DoubleMu0+process.hltL1fL1sDoubleMu0L1Filtered0+process.HLTEndSequence)


process.HLT_HIDmesonPPTrackingGlobal_Dpt15_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet16+process.hltPreHIDmesonPPTrackingGlobalDpt15+process.HLTPixelClusterSplittingForRefPP+process.HLTFullIterativeTrackingForRefPP+process.hltFullOnlinePrimaryVerticesForRefPP+process.hltFullCandsForRefPP+process.hltFullTrackFilterForDmeson+process.hlttktkVtxForDmesonDpt15+process.hlttktkFilterForDmesonDpt15+process.HLTEndSequence)


process.HLT_HIL1UnpairedBunchBptxPlus_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sL1UnpairedBunchBptxPlus+process.hltPreHIL1UnpairedBunchBptxPlus+process.HLTEndSequence)


process.HLT_HIL2DoubleMu10_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDoubleMu10+process.hltPreHIL2DoubleMu10+process.hltL1fL1sDoubleMu10L1Filtered0+process.HLTL2muonrecoSequence+process.hltL2fL1sDoubleMu10L1f0L2Filtered10+process.HLTEndSequence)


process.HLT_HIL1Mu12_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu12+process.hltPreHIL1Mu12+process.hltL1fL1sSingleMu12L1Filtered0+process.HLTEndSequence)


process.HLT_HIAK4PFJet40_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet24+process.hltPreHIAK4PFJet40+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet15+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets15+process.hltSingleAK4PFJet40+process.HLTEndSequence)


process.HLT_HIL2Mu7_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu3OR5+process.hltPreHIL2Mu7+process.hltL1fL1sSingleMu3OR5L1Filtered0+process.HLTL2muonrecoSequence+process.hltL2fL1sSingleMu3OR5L1f0L2Filtered7+process.HLTEndSequence)


process.HLT_HISinglePhoton30_Eta3p1ForPPRef_v8 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG15+process.hltPreHISinglePhoton30Eta3p1ForPPRef+process.HLTDoCaloSequence+process.HLTDoHIEcalClusWithCleaningSequence+process.hltHIPhoton30Eta3p1+process.HLTEndSequence)


process.HLT_HIL1Mu16_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu16+process.hltPreHIL1Mu16+process.hltL1fL1sSingleMu16L1Filtered0+process.HLTEndSequence)


process.HLT_HIAK8PFJet80_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet60+process.hltPreHIAK8PFJet80+process.HLTAK8CaloJetsSequence+process.hltSingleCaloJet50AK8+process.HLTAK8PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloJets50AK8+process.hltSinglePFJet80AK8+process.HLTEndSequence)


process.HLT_HIL3Mu3_Track1_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu3+process.hltPreHIL3Mu3Track1+process.hltL1fMu3TrackFiltered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fMu3TrackL2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fMu3TrackFiltered0)+process.hltL3fLMu3TrackL3Filtered3+process.HLTTrackReconstructionL3MuonIter02+process.hltTracksIter+process.hltMu3Track1MassFiltered0+process.HLTEndSequence)


process.HLT_HIPhoton60_HoverELoose_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG30+process.hltPreHIPhoton60HoverELoose+process.HLTPhoton60SequenceLooseHOverEForHI+process.HLTEndSequence)


process.HLT_HIDimuon0_Jpsi_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDoubleMu0SQOS+process.hltPreHIDimuon0Jpsi+process.hltL1sEmuDoubleMu0SQOS+process.hltL1fL1DoubleMu0SQOSL1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sL1DoubleMu0SQOSL2PreFiltered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1DoubleMu0SQOSL1Filtered0)+process.hltDimuon0JpsiL3Filtered+process.hltDisplacedmumuVtxProducerDimuon0Jpsi+process.hltDisplacedmumuFilterDimuon0Jpsi+process.HLTEndSequence)


process.HLT_HIAK4CaloJet100_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet80+process.hltPreHIAK4CaloJet100+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet100+process.HLTEndSequence)


process.HLT_HIAK8PFJet25_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBiasORJet8+process.hltPreHIAK8PFJet25+process.HLTAK8CaloJetsSequence+process.hltSingleCaloJet5AK8+process.HLTAK8PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloJets5AK8+process.hltSinglePFJet15AK8+process.HLTEndSequence)


process.HLT_HIDmesonPPTrackingGlobal_Dpt60_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet60+process.hltPreHIDmesonPPTrackingGlobalDpt60+process.HLTPixelClusterSplittingForRefPP+process.HLTFullIterativeTrackingForRefPP+process.hltFullOnlinePrimaryVerticesForRefPP+process.hltFullCandsForRefPP+process.hltFullTrackFilterForDmeson+process.hlttktkVtxForDmesonDpt60+process.hlttktkFilterForDmesonDpt60+process.HLTEndSequence)


process.HLT_HIL1NotBptxOR_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sNotBptxOR+process.hltPreHIL1NotBptxOR+process.HLTEndSequence)


process.HLT_HIPhoton20_HoverELoose_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG10+process.hltPreHIPhoton20HoverELoose+process.HLTPhoton20SequenceLooseHOverEForHI+process.HLTEndSequence)


process.HLT_HIEle15_WPLoose_Gsf_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG15+process.hltPreHIEle15WPLooseGsf+process.HLTEle15WPLooseGsfSequenceForHI+process.HLTEndSequence)


process.HLT_HIL3Mu5_AK4PFJet60_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu3OR5+process.hltPreHIL3Mu5AK4PFJet60+process.hltL1fL1sSingleMu3OR5L1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sSingleMu3OR5L1f0L2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sSingleMu3OR5L1Filtered0)+process.hltL3fL1sSingleMu3OR5L1f0L2f0L3Filtered5+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet30+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets30+process.hltSingleAK4PFJet60+process.HLTEndSequence)


process.HLT_HIDmesonPPTrackingGlobal_Dpt30_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet24+process.hltPreHIDmesonPPTrackingGlobalDpt30+process.HLTPixelClusterSplittingForRefPP+process.HLTFullIterativeTrackingForRefPP+process.hltFullOnlinePrimaryVerticesForRefPP+process.hltFullCandsForRefPP+process.hltFullTrackFilterForDmeson+process.hlttktkVtxForDmesonDpt30+process.hlttktkFilterForDmesonDpt30+process.HLTEndSequence)


process.HLT_HIAK8PFJet40_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet24+process.hltPreHIAK8PFJet40+process.HLTAK8CaloJetsSequence+process.hltSingleCaloJet10AK8+process.HLTAK8PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloJets10AK8+process.hltSinglePFJet40AK8+process.HLTEndSequence)


process.HLT_HIL1DoubleMuOpen_SS_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDoubleMuOpenSS+process.hltPreHIL1DoubleMuOpenSS+process.hltL1fL1sDoubleMuOpenSSL1Filtered0+process.HLTEndSequence)


process.HLT_HIDijet20And12_MidEta2p7_Dpt10_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDijet20And12MidEta2p7+process.hltPreHIDijet20And12MidEta2p7Dpt10+process.HLTPixelClusterSplittingForRefPP+process.HLTFullIterativeTrackingForRefPP+process.hltFullOnlinePrimaryVerticesForRefPP+process.hltFullCandsForRefPP+process.hltFullTrackFilterForDmeson+process.hlttktkVtxForDmesonDpt10+process.hlttktkFilterForDmesonDpt10+process.HLTEndSequence)


process.HLT_HIL3DoubleMu0_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDoubleMu0+process.hltPreHIL3DoubleMu0+process.hltL1fL1sDoubleMu0L1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sDoubleMu0L1f0L2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu0L1Filtered0)+process.hltL3fL1sDoubleMu0L1f0L2f0L3Filtered0+process.HLTEndSequence)


process.AlCa_LumiPixels_Random_v4 = cms.Path(process.HLTBeginSequenceRandom+process.hltPixelTrackerHVOn+process.hltPreAlCaLumiPixelsRandom+process.hltFEDSelectorLumiPixels+process.HLTEndSequence)


process.HLT_HIDijet16And8_MidEta2p7_Dpt8_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDijet16And8MidEta2p7+process.hltPreHIDijet16And8MidEta2p7Dpt8+process.HLTPixelClusterSplittingForRefPP+process.HLTFullIterativeTrackingForRefPP+process.hltFullOnlinePrimaryVerticesForRefPP+process.hltFullCandsForRefPP+process.hltFullTrackFilterForDmeson+process.hlttktkVtxForDmesonDpt8+process.hlttktkFilterForDmesonDpt8+process.HLTEndSequence)


process.HLT_HIL1DoubleMuOpen_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDoubleMuOpen+process.hltPreHIL1DoubleMuOpen+process.hltL1fL1sDoubleMuOpenL1Filtered0+process.HLTEndSequence)


process.HLT_HIPFJetFwd25_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBiasORJet8+process.hltPreHIPFJetFwd25+process.HLTAK4CaloJetsSequence+process.hltSingleCaloFwdJet10+process.HLTAK4PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloFwdJets10+process.hltSinglePFFwdJet25+process.HLTEndSequence)


process.HLT_HISinglePhoton10_Eta3p1ForPPRef_v8 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG2Or5+process.hltPreHISinglePhoton10Eta3p1ForPPRef+process.HLTDoCaloSequence+process.HLTDoHIEcalClusWithCleaningSequence+process.hltHIPhoton10Eta3p1+process.HLTEndSequence)


process.HLT_HIDiPFJetAve25_HFJEC_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreHIDiPFJetAve25HFJEC+process.HLTAK4PFJetsSequence+process.hltDiPFJetAve25ForHFJEC+process.HLTEndSequence)


process.HLT_HIZeroBias_part1_v6 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreHIZeroBiaspart1+process.HLTEndSequence)


process.HLT_HIAK4PFJet30_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet16+process.hltPreHIAK4PFJet30+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet15+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets15+process.hltSingleAK4PFJet30+process.HLTEndSequence)


process.HLT_HIDiPFJetAve35_HFJEC_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet8BptxAND+process.hltPreHIDiPFJetAve35HFJEC+process.HLTAK4PFJetsSequence+process.hltDiPFJetAve35ForHFJEC+process.HLTEndSequence)


process.HLT_HISinglePhoton40_Eta3p1ForPPRef_v8 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG21+process.hltPreHISinglePhoton40Eta3p1ForPPRef+process.HLTDoCaloSequence+process.HLTDoHIEcalClusWithCleaningSequence+process.hltHIPhoton40Eta3p1+process.HLTEndSequence)


process.HLT_HISinglePhoton15_Eta1p5ForPPRef_v8 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG5+process.hltPreHISinglePhoton15Eta1p5ForPPRef+process.HLTDoCaloSequence+process.HLTDoHIEcalClusWithCleaningSequence+process.hltHIPhoton15Eta1p5+process.HLTEndSequence)


process.HLT_HISinglePhoton10_Eta1p5ForPPRef_v8 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreHISinglePhoton10Eta1p5ForPPRef+process.HLTDoCaloSequence+process.HLTDoHIEcalClusWithCleaningSequence+process.hltHIPhoton10Eta1p5+process.HLTEndSequence)


process.HLT_HIAK8PFJet15_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBiasORJet8+process.hltPreHIAK8PFJet15+process.HLTAK8CaloJetsSequence+process.hltSingleCaloJet10AK8+process.HLTAK8PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloJets10AK8+process.hltSinglePFJet40AK8+process.HLTEndSequence)


process.HLT_HIL3Mu5_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu3OR5+process.hltPreHIL3Mu5+process.hltL1fL1sSingleMu3OR5L1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sSingleMu3OR5L1f0L2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sSingleMu3OR5L1Filtered0)+process.hltL3fL1sSingleMu3OR5L1f0L2f0L3Filtered5+process.HLTEndSequence)


process.HLT_HIFullTracks_HighPt45_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet44+process.hltPreHIFullTracksHighPt45+process.HLTPixelClusterSplittingForRefPP+process.HLTFullIterativeTrackingForRefPP+process.hltFullOnlinePrimaryVerticesForRefPP+process.hltGoodHighPurityFullTrackCutClassifierForHighPt+process.hltGoodHighPurityFullTracksForHighPt+process.hltFullCandsForHighPtTrigger+process.hltFullTrackHighPt45+process.HLTEndSequence)


process.HLT_HIAK4CaloJet30_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet16+process.hltPreHIAK4CaloJet30+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet30+process.HLTEndSequence)


process.HLT_HIZeroBias_part4_v6 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreHIZeroBiaspart4+process.HLTEndSequence)


process.HLT_HIAK4PFJet30_bTag_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet16+process.hltPreHIAK4PFJet30bTag+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet15+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets15+process.hltSingleAK4PFJet30+process.HLTBtagCSVSequencePFJet30Eta2p4+process.hltBTagPFCSVp080SingleJet30Eta2p4+process.HLTEndSequence)


process.HLT_HIPFJet140_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet90+process.hltPreHIPFJet140+process.HLTAK4CaloJetsSequence+process.hltSingleCaloJet110+process.HLTAK4PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloJets110+process.hltSinglePFJet140+process.HLTEndSequence)


process.HLT_HIAK8PFJetFwd15_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBiasORJet8+process.hltPreHIAK8PFJetFwd15+process.HLTAK8CaloJetsSequence+process.hltSingleCaloFwdJet5AK8+process.HLTAK8PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloFwdJets5AK8+process.hltSinglePFFwdJet15AK8+process.HLTEndSequence)


process.HLT_HIZeroBias_part0_v6 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreHIZeroBiaspart0+process.HLTEndSequence)


process.HLT_HIAK4PFJet100_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet80+process.hltPreHIAK4PFJet100+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet70+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets70+process.hltSingleAK4PFJet100+process.HLTEndSequence)


process.HLT_HIL1DoubleMuOpen_OS_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDoubleMuOpenOS+process.hltPreHIL1DoubleMuOpenOS+process.hltL1fL1sDoubleMuOpenOSL1Filtered0+process.HLTEndSequence)


process.HLT_HIMu7p5_Track2_Upsilon_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu5IorSingleMu7+process.hltPreHIMu7p5Track2Upsilon+process.hltL1fMu7p5TrackFiltered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fMu7p5TrackL2Filtered7)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fMu7p5TrackFiltered0)+process.hltL3fLMu7p5TrackL3Filtered7p5+process.HLTTrackReconstructionL3MuonIter02+process.hltTracksIter+process.hltMu7p5Track2UpsilonTrackMassFiltered+process.HLTEndSequence)


process.HLT_HIAK4PFJet80FWD_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet60FWD+process.hltPreHIAK4PFJet80FWD+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet30FWD+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets30FWD+process.hltSingleAK4PFJet80FWD+process.HLTEndSequence)


process.AlCa_LumiPixels_ZeroBias_v8 = cms.Path(process.HLTBeginSequence+process.hltPixelTrackerHVOn+process.hltL1sZeroBias+process.hltPreAlCaLumiPixelsZeroBias+process.hltFEDSelectorLumiPixels+process.HLTEndSequence)


process.HLT_HIAK4CaloJet80FWD_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet60FWD+process.hltPreHIAK4CaloJet80FWD+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet80FWD+process.HLTEndSequence)


process.HLT_HIAK8PFJetFwd40_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet20FWD+process.hltPreHIAK8PFJetFwd40+process.HLTAK8CaloJetsSequence+process.hltSingleCaloFwdJet10AK8+process.HLTAK8PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloFwdJets10AK8+process.hltSinglePFFwdJet40AK8+process.HLTEndSequence)


process.HLT_Physics_v7 = cms.Path(process.HLTBeginSequenceL1Fat+process.hltPrePhysics+process.HLTEndSequence)


process.HLT_HIL3Mu20_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu7+process.hltPreHIL3Mu20+process.hltL1fL1sSingleMu7L1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sSingleMu7L1f0L2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sSingleMu7L1Filtered0)+process.hltL3fL1sSingleMu7L1f0L2f0L3Filtered20+process.HLTEndSequence)


process.HLT_HIAK8PFJet60_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet44+process.hltPreHIAK8PFJet60+process.HLTAK8CaloJetsSequence+process.hltSingleCaloJet40AK8+process.HLTAK8PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloJets40AK8+process.hltSinglePFJet60AK8+process.HLTEndSequence)


process.HLT_HIMu7p5_L2Mu2_Jpsi_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sDoubleMu0SQ+process.hltPreHIMu7p5L2Mu2Jpsi+process.hltL1fL1DoubleMu0SQL1Filtered0+process.HLTL2muonrecoSequence+process.hltL2fSQDoubleMu2L2PreFiltered2+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1DoubleMu0SQL1Filtered0)+process.hltL3fSQMu7p5L2Mu2L3Filtered7p5+process.hltSQMu7p5L2Mu2JpsiTrackMassFiltered+process.HLTEndSequence)


process.HLT_HIMu12_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu10LowQ+process.hltPreHIMu12+process.hltL1fL1sMu10lqL1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sMu10lqL1f0L2Filtered10)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sMu10lqL1Filtered0)+process.hltL3fL1sMu10lqL1f0L2f10L3Filtered12+process.HLTEndSequence)


process.HLT_HIL3Mu5_AK4PFJet30_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu3OR5+process.hltPreHIL3Mu5AK4PFJet30+process.hltL1fL1sSingleMu3OR5L1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sSingleMu3OR5L1f0L2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sSingleMu3OR5L1Filtered0)+process.hltL3fL1sSingleMu3OR5L1f0L2f0L3Filtered5+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet15+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets15+process.hltSingleAK4PFJet30+process.HLTEndSequence)


process.AlCa_EcalPhiSym_v8 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBiasIorAlwaysTrueIorIsolatedBunch+process.hltPreAlCaEcalPhiSym+process.HLTDoFullUnpackingEgammaEcalSequence+process.hltEcalPhiSymFilter+process.HLTEndSequence)


process.HLT_HIAK4PFJet40FWD_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet20FWD+process.hltPreHIAK4PFJet40FWD+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet15FWD+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets15FWD+process.hltSingleAK4PFJet40FWD+process.HLTEndSequence)


process.HLT_HIAK4PFJet40_bTag_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet24+process.hltPreHIAK4PFJet40bTag+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet15+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets15+process.hltSingleAK4PFJet40+process.HLTBtagCSVSequencePFJet40Eta2p4+process.hltBTagPFCSV0p80SingleJet40Eta2p4+process.HLTEndSequence)


process.HLT_HIAK8PFJetFwd140_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet90Fwd+process.hltPreHIAK8PFJetFwd140+process.HLTAK8CaloJetsSequence+process.hltSingleCaloFwdJet110AK8+process.HLTAK8PFJetsSequence+process.hltPFJetsCorrectedMatchedToCaloFwdJets110AK8+process.hltSinglePFFwdJet140AK8+process.HLTEndSequence)


process.HLT_HIL2Mu15_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu7+process.hltPreHIL2Mu15+process.hltL1fL1sSingleMu7L1Filtered0+process.HLTL2muonrecoSequence+process.hltL2fL1sSingleMu7L1f0L2Filtered15+process.HLTEndSequence)


process.HLT_HISinglePhoton60_Eta1p5ForPPRef_v8 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG30+process.hltPreHISinglePhoton60Eta1p5ForPPRef+process.HLTDoCaloSequence+process.HLTDoHIEcalClusWithCleaningSequence+process.hltHIPhoton60Eta1p5+process.HLTEndSequence)


process.HLT_HIEle40_WPLoose_Gsf_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleEG21+process.hltPreHIEle40WPLooseGsf+process.HLTEle40WPLooseGsfSequenceForHI+process.HLTEndSequence)


process.HLT_HIAK4PFJet60_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet44+process.hltPreHIAK4PFJet60+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet30+process.HLTAK4PFJetsSequence+process.hltAK4PFJetsCorrectedMatchedToCaloJets30+process.hltSingleAK4PFJet60+process.HLTEndSequence)


process.HLT_HIL3Mu5_NHitQ10_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu3OR5+process.hltPreHIL3Mu5NHitQ10+process.hltL1fL1sSingleMu3OR5L1Filtered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fL1sSingleMu3OR5L1f0L2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fL1sSingleMu3OR5L1Filtered0)+process.hltL3fL1sSingleMu3OR5L1f0L2f0L3NHitQ10L3Filtered5+process.HLTEndSequence)


process.HLT_HIL3Mu5_Track1_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu3OR5+process.hltPreHIL3Mu5Track1+process.hltL1fMu3OR5TrackFiltered0+process.HLTL2muonrecoSequence+cms.ignore(process.hltL2fMu3OR5TrackL2Filtered0)+process.HLTL3muonrecoSequence+cms.ignore(process.hltL1fForIterL3L1fMu3OR5TrackFiltered0)+process.hltL3fLMu3OR5TrackL3Filtered5+process.HLTTrackReconstructionL3MuonIter02+process.hltTracksIter+process.hltMu3OR5Track1MassFiltered0+process.HLTEndSequence)


process.HLT_HIAK4CaloJet120_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleJet90+process.hltPreHIAK4CaloJet120+process.HLTAK4CaloJetsSequence+process.hltSingleAK4CaloJet120+process.HLTEndSequence)


process.HLT_HIL2Mu3_NHitQ10_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sSingleMu3+process.hltPreHIL2Mu3NHitQ10+process.hltL1fL1sSingleMu3L1Filtered0+process.HLTL2muonrecoSequence+process.hltL2fL1sSingleMu3L1f0L2NHitQ10L2Filtered3+process.HLTEndSequence)


process.HLT_HIDiPFJet15_NoCaloMatched_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreHIDiPFJet15NoCaloMatched+process.HLTAK4PFJetsSequence+process.hltDoublePFJet15+process.HLTEndSequence)


process.AlCa_HIEcalPi0EEonly_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sAlCaEcalPi0EtaForHI+process.hltPreAlCaHIEcalPi0EEonly+process.HLTDoFullUnpackingEgammaEcalSequence+process.hltSimple3x3Clusters+process.hltAlCaPi0RecHitsFilterEEonlyRegional+process.hltAlCaPi0EEUncalibrator+process.hltAlCaPi0EERechitsToDigis+process.HLTEndSequence)


process.HLT_HIZeroBias_part6_v6 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreHIZeroBiaspart6+process.HLTEndSequence)


process.digitisation_step = cms.Path(process.pdigi)


process.L1simulation_step = cms.Path(process.SimL1Emulator)


process.digi2raw_step = cms.Path(process.DigiToRaw)


process.HLTAnalyzerEndpath = cms.EndPath(process.hltGtStage2Digis+process.hltPreHLTAnalyzerEndpath+process.hltL1TGlobalSummary+process.hltTrigReport)


process.endjob_step = cms.EndPath(process.endOfProcess)


process.RAWSIMoutput_step = cms.EndPath(process.RAWSIMoutput)


process.simCastorDigis = cms.EDAlias(
    mix = cms.VPSet(cms.PSet(
        type = cms.string('CastorDataFramesSorted')
    ))
)

process.simEcalUnsuppressedDigis = cms.EDAlias(
    mix = cms.VPSet(cms.PSet(
        type = cms.string('EBDigiCollection')
    ), 
        cms.PSet(
            type = cms.string('EEDigiCollection')
        ), 
        cms.PSet(
            type = cms.string('ESDigiCollection')
        ))
)

process.simHcalUnsuppressedDigis = cms.EDAlias(
    mix = cms.VPSet(cms.PSet(
        type = cms.string('HBHEDataFramesSorted')
    ), 
        cms.PSet(
            type = cms.string('HFDataFramesSorted')
        ), 
        cms.PSet(
            type = cms.string('HODataFramesSorted')
        ), 
        cms.PSet(
            type = cms.string('ZDCDataFramesSorted')
        ), 
        cms.PSet(
            type = cms.string('QIE10DataFrameHcalDataFrameContainer')
        ), 
        cms.PSet(
            type = cms.string('QIE11DataFrameHcalDataFrameContainer')
        ))
)

process.simSiPixelDigis = cms.EDAlias(
    mix = cms.VPSet(cms.PSet(
        type = cms.string('PixelDigiedmDetSetVector')
    ), 
        cms.PSet(
            type = cms.string('PixelDigiSimLinkedmDetSetVector')
        ))
)

process.simSiStripDigis = cms.EDAlias(
    mix = cms.VPSet(cms.PSet(
        type = cms.string('SiStripDigiedmDetSetVector')
    ), 
        cms.PSet(
            type = cms.string('SiStripRawDigiedmDetSetVector')
        ), 
        cms.PSet(
            type = cms.string('StripDigiSimLinkedmDetSetVector')
        ))
)

process.schedule = cms.Schedule(*[ process.digitisation_step, process.L1simulation_step, process.digi2raw_step, process.HLTriggerFirstPath, process.HLT_ZeroBias_Beamspot_v2, process.HLT_Physics_v7, process.DST_Physics_v7, process.HLT_Random_v3, process.HLT_ZeroBias_v6, process.HLT_HISinglePhoton10_Eta1p5ForPPRef_v8, process.HLT_HISinglePhoton15_Eta1p5ForPPRef_v8, process.HLT_HISinglePhoton20_Eta1p5ForPPRef_v8, process.HLT_HISinglePhoton30_Eta1p5ForPPRef_v8, process.HLT_HISinglePhoton40_Eta1p5ForPPRef_v8, process.HLT_HISinglePhoton50_Eta1p5ForPPRef_v8, process.HLT_HISinglePhoton60_Eta1p5ForPPRef_v8, process.HLT_HISinglePhoton10_Eta3p1ForPPRef_v8, process.HLT_HISinglePhoton15_Eta3p1ForPPRef_v8, process.HLT_HISinglePhoton20_Eta3p1ForPPRef_v8, process.HLT_HISinglePhoton30_Eta3p1ForPPRef_v8, process.HLT_HISinglePhoton40_Eta3p1ForPPRef_v8, process.HLT_HISinglePhoton50_Eta3p1ForPPRef_v8, process.HLT_HISinglePhoton60_Eta3p1ForPPRef_v8, process.HLT_HIL1DoubleMuOpen_v1, process.HLT_HIL1DoubleMuOpen_OS_v1, process.HLT_HIL1DoubleMuOpen_SS_v1, process.HLT_HIL1DoubleMu0_v1, process.HLT_HIL1DoubleMu0_HighQ_v1, process.HLT_HIL1DoubleMu10_v1, process.HLT_HIL2DoubleMu0_v1, process.HLT_HIL2DoubleMu10_v1, process.HLT_HIL3DoubleMu0_v1, process.HLT_HIL3DoubleMu10_v1, process.HLT_HIL1Mu12_v1, process.HLT_HIL1Mu16_v1, process.HLT_HIL2Mu7_v1, process.HLT_HIL2Mu12_v1, process.HLT_HIL2Mu15_v1, process.HLT_HIL2Mu20_v1, process.HLT_HIL3Mu7_v1, process.HLT_HIL3Mu12_v1, process.HLT_HIL3Mu15_v1, process.HLT_HIL3Mu20_v1, process.HLT_HIL3Mu3_v1, process.HLT_HIL2Mu5_NHitQ10_v1, process.HLT_HIL3Mu3_NHitQ10_v1, process.HLT_HIL3Mu3_Track1_v1, process.HLT_HIL3Mu3_Track1_Jpsi_v1, process.HLT_HIL3Mu5_v1, process.HLT_HIL2Mu3_NHitQ10_v1, process.HLT_HIL3Mu5_NHitQ10_v1, process.HLT_HIL3Mu5_Track1_v1, process.HLT_HIL3Mu5_Track1_Jpsi_v1, process.HLT_HIL1UnpairedBunchBptxMinus_v1, process.HLT_HIL1UnpairedBunchBptxPlus_v1, process.HLT_HIL1NotBptxOR_v1, process.HLT_HIDiPFJet25_FBEta3_NoCaloMatched_v1, process.HLT_HIDiPFJet15_FBEta3_NoCaloMatched_v1, process.HLT_HIDiPFJet25_NoCaloMatched_v1, process.HLT_HIDiPFJet15_NoCaloMatched_v1, process.HLT_HIDiPFJetAve35_HFJEC_v1, process.HLT_HIDiPFJetAve25_HFJEC_v1, process.HLT_HIDiPFJetAve15_HFJEC_v1, process.HLT_HIDmesonPPTrackingGlobal_Dpt8_v1, process.HLT_HIDmesonPPTrackingGlobal_Dpt15_v1, process.HLT_HIDmesonPPTrackingGlobal_Dpt30_v1, process.HLT_HIDmesonPPTrackingGlobal_Dpt40_v1, process.HLT_HIDmesonPPTrackingGlobal_Dpt50_v1, process.HLT_HIDmesonPPTrackingGlobal_Dpt60_v1, process.HLT_HIDijet16And8_MidEta2p7_Dpt8_v1, process.HLT_HIDijet20And8_MidEta2p7_Dpt8_v1, process.HLT_HIDijet16And12_MidEta2p7_Dpt10_v1, process.HLT_HIDijet20And12_MidEta2p7_Dpt10_v1, process.HLT_HIDijet28And16_MidEta2p7_Dpt15_v1, process.HLT_HIFullTracks_HighPt18_v1, process.HLT_HIFullTracks_HighPt24_v1, process.HLT_HIFullTracks_HighPt34_v1, process.HLT_HIFullTracks_HighPt45_v1, process.HLT_HIHT80_Beamspot_ppRef5TeV_v1, process.HLT_HIZeroBias_part0_v6, process.HLT_HIZeroBias_part1_v6, process.HLT_HIZeroBias_part2_v6, process.HLT_HIZeroBias_part3_v6, process.HLT_HIZeroBias_part4_v6, process.HLT_HIZeroBias_part5_v6, process.HLT_HIZeroBias_part6_v6, process.HLT_HIZeroBias_part7_v6, process.HLT_HIZeroBias_part8_v6, process.HLT_HIZeroBias_part9_v6, process.HLT_HIZeroBias_part10_v6, process.HLT_HIZeroBias_part11_v6, process.HLT_HIAK4PFJet15_v1, process.HLT_HIAK4PFJet30_v1, process.HLT_HIAK4PFJet40_v1, process.HLT_HIAK4PFJet60_v1, process.HLT_HIAK4PFJet80_v1, process.HLT_HIAK4PFJet100_v1, process.HLT_HIAK4PFJet120_v1, process.HLT_HIAK4PFJet30FWD_v1, process.HLT_HIAK4PFJet40FWD_v1, process.HLT_HIAK4PFJet60FWD_v1, process.HLT_HIAK4PFJet80FWD_v1, process.HLT_HIAK4CaloJet15_v1, process.HLT_HIAK4CaloJet30_v1, process.HLT_HIAK4CaloJet40_v1, process.HLT_HIAK4CaloJet60_v1, process.HLT_HIAK4CaloJet80_v1, process.HLT_HIAK4CaloJet100_v1, process.HLT_HIAK4CaloJet120_v1, process.HLT_HIAK4CaloJet30FWD_v1, process.HLT_HIAK4CaloJet40FWD_v1, process.HLT_HIAK4CaloJet60FWD_v1, process.HLT_HIAK4CaloJet80FWD_v1, process.HLT_HIPhoton20_HoverELoose_v1, process.HLT_HIPhoton30_HoverELoose_v1, process.HLT_HIPhoton40_HoverELoose_v1, process.HLT_HIPhoton50_HoverELoose_v1, process.HLT_HIPhoton60_HoverELoose_v1, process.HLT_HIEle10_WPLoose_Gsf_v1, process.HLT_HIEle15_WPLoose_Gsf_v1, process.HLT_HIEle20_WPLoose_Gsf_v1, process.HLT_HIEle30_WPLoose_Gsf_v1, process.HLT_HIEle40_WPLoose_Gsf_v1, process.HLT_HIEle20_eta2p1_WPTight_Gsf_CentralPFJet15_EleCleaned_v1, process.HLT_HIEle20_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v1, process.HLT_HIDoublePhoton15_Eta3p1ForPPRef_Mass50to1000_v8, process.HLT_HIAK4PFJet30_bTag_v1, process.HLT_HIAK4PFJet40_bTag_v1, process.HLT_HIAK4PFJet60_bTag_v1, process.HLT_HIAK4PFJet80_bTag_v1, process.HLT_HIEle17_WPLoose_Gsf_v1, process.HLT_HIEle15_Ele8_CaloIdL_TrackIdL_IsoVL_v1, process.HLT_HIEle15_CaloIdL_TrackIdL_IsoVL_PFJet30_v1, process.HLT_HIMu17_v1, process.HLT_HIMu15_v1, process.HLT_HIMu12_v1, process.HLT_HIMu7p5_L2Mu2_Jpsi_v1, process.HLT_HIMu7p5_L2Mu2_Upsilon_v1, process.HLT_HIMu7p5_Track2_Jpsi_v1, process.HLT_HIMu7p5_Track2_Upsilon_v1, process.HLT_HIDimuon0_Jpsi_v1, process.HLT_HIDimuon0_Jpsi_NoVertexing_v1, process.HLT_HIDimuon0_Upsilon_NoVertexing_v1, process.HLT_HIPFJet25_v1, process.HLT_HIPFJet140_v1, process.HLT_HIPFJetFwd15_v1, process.HLT_HIPFJetFwd25_v1, process.HLT_HIPFJetFwd140_v1, process.HLT_HIAK8PFJetFwd15_v1, process.HLT_HIAK8PFJetFwd25_v1, process.HLT_HIAK8PFJetFwd40_v1, process.HLT_HIAK8PFJetFwd60_v1, process.HLT_HIAK8PFJetFwd80_v1, process.HLT_HIAK8PFJetFwd140_v1, process.HLT_HIAK8PFJet15_v1, process.HLT_HIAK8PFJet25_v1, process.HLT_HIAK8PFJet40_v1, process.HLT_HIAK8PFJet60_v1, process.HLT_HIAK8PFJet80_v1, process.HLT_HIAK8PFJet140_v1, process.HLT_HIL3Mu5_AK4PFJet30_v1, process.HLT_HIL3Mu5_AK4PFJet40_v1, process.HLT_HIL3Mu5_AK4PFJet60_v1, process.AlCa_HIEcalPi0EBonly_v1, process.AlCa_HIEcalPi0EEonly_v1, process.AlCa_HIEcalEtaEBonly_v1, process.AlCa_HIEcalEtaEEonly_v1, process.HLT_EcalCalibration_v4, process.HLT_HcalCalibration_v5, process.AlCa_EcalPhiSym_v8, process.HLT_ZeroBias_FirstCollisionAfterAbortGap_v5, process.AlCa_HIRPCMuonNormalisation_v1, process.AlCa_LumiPixels_Random_v4, process.AlCa_LumiPixels_ZeroBias_v8, process.HLTriggerFinalPath, process.HLTAnalyzerEndpath, process.endjob_step, process.RAWSIMoutput_step ], tasks=[process.patAlgosToolsTask])

